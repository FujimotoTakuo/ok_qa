> 異なるクライアント間で参照できる変数はありますか？ ありません。 異なるプロセスなので変数の中身（メモリー空間）を直接共通することはできませんので サーバ上のファイルかDBを使って共有することになります。 > それともデータベースを毎回呼び出していても速度的には問題ないでしょうか？ クライアント数や、データサイズによります。 でも、それが気になるなら、　DBへのアクセスのコストよりも、 もしも、ブラウザでリロードするたびに全画面を更新をするという仕組みだとすると、 その全HTMLをサーバー上で毎回生成して、そのフルデータをクライアントに通信で送る というコストのほうを気にされたほうが　よいと思います。 たとえば、AJAXで、ブラウザからは前回の更新時刻を送り出し、 サーバからはそれ以降で更新されたデータのみを戻してもらって、 ブラウザで既に表示済の画面の適所にJavaScriptでインサートするようにすれば かなりデータを削減できますよ。 なお、これの応用で、 AJAXの命令を受けたサーバで、すぐに応答するのではなく、 誰もチャットへの書き込みがないときは　しばらくAJAXの応答をしないで待たせておいて、　 だれかの書き込みをキックにして応答するようにすると あたかもリアルタイムなチャットシステムに見せることができますよ。
知識が無い人がメンテするならファイルでしょう。 DBだとバックアップやレストアが出来る知識が必要になりますが、ファイルならFTPでコピーするだけで済みます。
お礼に書いてあることがよく分かりません。 分かるところだけ見ると、 <?php echo "1"; require (dirname(__FILE__)."/include/******.inc"); echo "2"; で、2が表示されないと言うことは、requireしているものに間違いがあると言うことです。
http://www.acuo.jp/software/xampp_port80_pid4.html 上記の記事を見ると、Apacheをサービスで自動起動するように設定し、その後Windows自体を再起動してしまえば、システムがポート80を占有するよりも前にApacheが80を占有できるっぽいです。 お試しください。
PHP の include は、ファイルの読み込みに失敗してもエラーになりませんので、重要なモノを読み込ませる場合は require を使いましょう。 require に変えてみてエラーが出るようなら、ファイルの読み込みに失敗していると言う事になります。
このコードの情報だけだと、どこでデータの異常がおきているのか、分からないですが、 サーバー上に生成されたzipファイルと、ダウンロードしたzipファイルの ファイルサイズや内容や日付を見比べてみれば、解決のヒントになるかもしれません。 たとえば、PHPで　マルチバイトコードの自動変換を宣言してる場合は readfile()　の結果のバイナリを PHPが勝手に自動変換して壊してしまうことがあります。 この場合は readfile($file);の前に mb_http_output( "pass" ) ; を入れると解決します。 （これは一例ではありますが、バイナリデータを送り出すするときに、結構はまってしまうこと多いです）
１） $file = './Zipfile/test.zip'; ↑ここが、サーバー上に作るzipファイルのファイル名を決めているところ header(sprintf('Content-Disposition: attachment; filename="%s"', date(ymdhis).basename($file))); ↑ ここがダウンロード時の　ローカル側のデフォルトのファイル名を決めているところ ですので、ダウンロードするファイル名には日時がつくけど、 サーバー上に保存したファイルのファイル名に日時がつかないのは、 そのようにプログラムで指定しているから。。。というだけのことです。 ちなみに、前者の$fileに　　date()を連結するようにすると、 後者で　basename($files)の前にdate()を連結されたままだと、 後者（ダウンロード時のデフォルトファイル名）には　二重に日時がついてしまいますので 前者では、 $file = './Zipfile/'.date('ymdhis'). 'test.zip'; とし 後者ではそれからディレクトリ名を外すための　basename($file)　のみをつかうのがよいでしょう。 ２） > 自身でZipファイルの保存先にdateを使用してみましたがエラーが出てしまいます。 そのエラーのエラーメッセージがどうでたのかが、肝心です エラーの原因を調べて、ミスを修正しないかぎりプログラムは動きませんので。
> if( !$fp = flock($fp, FILE_APPEND | LOCK_EX) ){ ここですね。 flock（）の戻り値は、resource handleではなく、ロック成功失敗のtrue or false　です。 なので、$fpに代入するとせっかくfopenで確保していたハンドルを壊してしまいます。 それと、flock()に、　FILE_APPEND　なんて指定できましたっけ？ LOCK_EXだけでいいんじゃないですかね。
１つ目の Call to undefined function zipDirectory() のエラーがでるのは、 if(isset($_POST["download"])){ ～ } のif () 中で、function宣言をしているからですね。 ２つ目のWarningは　出力するzipファイル名を $file = dirname(__FILE__); としているからでしょう。 サンプルにされたサイトでは、 $file = './test.zip'; と記載しておられます。 ちなみに、　if(isset($_POST["download"])){　に　'download'　という文字があるので 気になりましたが、　このサンプルコードは、サーバー上にzipファイルを作るだけで ダウンロードまでしてくれるコードには、なっていないですよ。
本人確認メールを送る時点で相手にクッキー仕込めてるんなら アンカー押したタイミングでクッキーを削除して、本人確認画面を出すようにすれば良いだけなように思えます //外部変数取得 $input_mode = $_GET["id"]; //アンカー押した時の処理 if($input_mode == '1'){ 　//クッキー取得 　$val = $_COOKIE['pre_member_regist']; 　//クッキーが残っていれば 　if($val){ 　　setcookie('pre_member_regist', '', time() - 60);　　//クッキー削除 　　仮登録完了画面 　} } <a href="next.php?id=1">本人確認してください</a>
scandir()は、ディレクトリ内にサブディレクトリがあっても、その下までは潜ってくれません。 よって階層下を全て取り出したいなら、 scandirで取り出したファイルリスト中に　ディレクトリタイプがあれば、さらにそれをscandir()する必要があります。 このとき階層数がいくつあってもよいように、アーカイブに追加する部分のみを関数化して その関数内で、ファイルならアーカイブし、ディレクトリならば自分自身の関数を呼び出すようにしておくのが再帰的処理ですが 添付されたのコードには、そのような再帰的な処理はありませんよ。
echo file_get_contents(); より readfile(); を使った方がいいかと思います。 また、ファイル出力が終わった時点で exit(); を実行して、出力ファイルに余計な改行等が入り込まないようにした方がいいでしょう。 あと、ダウンロードファイルの異常の場合は、動的に生成したファイルでは無く予め用意したファイルをダウンロードさせて異常が発生するかどうか確認し、動的に生成したファイルだけでエラーが異常が発生する場合はファイルの生成ロジックの問題、どちらでも異常が発生する場合はダウンロード処理の問題とエラーポイントの切り分けをしましょう。 また、ファイル生成に問題があると考えられる場合は、ダウンロードしたファイルをテキストエディターで開いてみると、バイナリーデータの前か後ろにエラーメッセージがテキストで紛れ込んでいる場合があるので確認してみましょう。
＞　上記のコードを使わせていただくと ＞　Parse error: syntax error, unexpected 'file' (T_STRING), expecting ',' or ';' in C:\xampphtdocs\upload\upload-file.php on line 78 ＞　と表示されます。 <br>のあとはダブルクオートじゃなくシングルクオートですね。 失礼しました。 echo 'file path : <a href ="' . $file_path . '">' . $file_path . '</a><br>';
＞　ファイルの中身は読み込んでいるので、 ＞　質問は、何故読み込んだファイル内の関数が実行できないか？？？でした！ ＞　もしかしてphpでは　こういう方法で外部関数を実行するのではなかったり？？？ require 関数は外部ファイルを読み込んでプログラムの一部として実行するモノですから、認識は正しいです。 require を実行してもファイルの中身が表示されることはありませんので、moto.php に書かれているプログラムが require では無く、別の関数に書き換わっていたりしませんか？
filesize（）は　実際のファイルサイズをバイト数で返します。10KByteのファイルなら、10240です。 一方、入力フォームでファイルサイズを自己申告させるとなると、 利用者がどうやってサイズを調べて入力しているのかが問題になります。 エクスプローラー上のファイル一覧で見えているサイズは、KBやMBの単位で丸められていますし、 クラスタギャップも含めたディスク上の専有サイズを見せているので、 実サイズとは　値が異なっています。 なので、ファイルのプロパティーでみて、ディスク上のサイズでなく、実際のサイズのほうを 1Byte単位まで正確に自己申告してもらわないと合致しません。 もしくは、php側で　自己申告のサイズにKMGTPの単位があればそれを計算したうえで ある程度の誤差は許すかです。 ただし、クラスタギャップは、ローカル側のファイルシステムやパーティションサイズによって変わるので、サーバー側では予測計算できませんし、 そもそも、そんな大きなサイズ差も許すのなら、わざわざサイズを自己申告させて チェックをすること自体に意味があるのかが疑問になりますが。
WebサーバにApacheを使っているのであれば、mod_rewrite を使って処理するのが普通ですね。
htmlとphpのファイルを分けるかどうかは、個々人の流儀や、目的に応じて決めるものです。一律にどちらが良いと決まっているものではありません。レイアウトとロジックを分離したい場合もあるでしょうし、ロジックによってレイアウトを変化させる場合もあります。 文法は決まっていますが、書き方は自由です。似た関数もありますが、どれを使うかは自由ですし、個別の判断です。書きやすく、読みやすく、直しやすく、というのは永遠のテーマですから、自分なりの流儀を確立しましょう。ただ、特定のライブラリーやフレームワークの利用を前提にしている場合は、それなりの書き方になるので、前提条件の確認は必要です。 メールの送信は http://php.net/manual/ja/function.mail.php 、ファイルのアップロードは http://php.net/manual/ja/features.file-upload.post-method.php ですね。アップロードしたファイルをメールに添付するには、 http://al-lucky.hatenablog.com/entry/2014/10/08/211400 あたりが参考になるでしょう。 ラジオボタン等は「戻る」操作などの場合に、チェック済の状態を保持するのが面倒ですが、"checked"を付加するだけなので、難しいというほどではありません。もっとも、その場合はhtml内にphpコードを書く、またはphpからhtmlを書き出すことになりますね。
if($id==''||$pas==''||$pas=$pas2==''||$nam=='') は誤りでしょう。 if($id=='' || $pas=='' || $pas2=='' || $nam=='') と書いたつもりでしょうが、$pasに $pas2=='' の結果つまりfalseを代入しているので、$pas=md5($pas); は常にd41d8cd98f00b204e9800998ecf8427eになります。 問題とは関係ない部分を削除していって、原因を突き止めるテクニックを身につけましょう。
存在しないディレクトリを書いても意味がありませんね。"ASkuCxyxs…"の例は.htaccessでmod_rewriteを使って、urlっぽく見せておきながら、パラメータとして渡しているのです。正規表現とはまったく関係がありません。てゆーかコードを全文掲載しなくても良いかと？ 本人確認なのですから、ユーザー毎に異なるパラメータを渡して、サーバー側に控えを保存しておき、どのユーザーからのアクセスなのかを照合します。関係ない人が認証メールを受け取ったふりをしてデタラメに詐称するのを防ぐため、一般にパラメータは複雑な値にしますが、urlの形式としてはmod_rewriteなど使わず、単純に、http://～/php/membership_kakutei.php?from=1&key=ASkuCxyxs… でも良いでしょう。 でも、最近は登録時にメールを確認しないのが主流と思います。登録手続が面倒なせいで途中で離脱する可能性があるからです。メールアドレスの価値が低下したこともあるでしょう。
オブジェクト指向なんて飾りです。無駄にメモリを食うだけです。普通にPHPが使えるようになってから、オプションで覚えるくらいで良いでしょう。 もっとも、仕事として使うとなれば、オブジェクト指向でやらねばならない場合もありますが、普通にプログラミングができていれば、オブジェクト指向なんて簡単なものです。単に関数の集合体を作るだけのことです。 むしろ、基本がわかってなくて、オブジェクト指向しかできない方が問題だと思います。ましてフレームワーク依存では、枠組みから出られず、応用も利かなくなって、トラブル時に弱さが露呈します。基本をなおざりにして流行に乗るべきではないと思います。
質問者さんのお考えの通り、PHPはサーバサイドで実行され、JavaScriptはブラウザサイドで実行されるからJavaScriptの変数の内容がPHPで使用できません。 ブラウザからサーバに対してページリクエストが送られると、サーバはPHPのプログラムを実行し、その結果をHTML形式でブラウザに返します。 ブラウザは受け取ったHTMLの解釈を行い、JavaScriptがあればプログラムを実行し、その結果を画面に描画します。 従って、JavaScriptが実行されている時には、既にPHPのプログラムは処理を終了し結果を返してしまっています。 JavaScriptの処理結果に基づいてサーバサイドの処理を変えたいのであれば、JavaScriptの実行結果をパラメータとしてサーバにアクセスしなおすか、Ajaxを使ってサーバでの実行結果を受け取ってDOMを書き換えると言った事が必要になります。
…もちろん含まれますよ…。それがXAMPPです。 ただし、簡単に全部インストールできるのが売りで、それぞれのバージョンを選べません。バージョンにこだわりがあるのなら別々に入れましょう。 バージョン間の違いが分からないがとりあえず勉強でという事なら、XAMPPでかまいません。
チェックやらエスケープは省きます。ここには記載しません。 このままだと多分動かないでしょうが、大まかなことだけカキます。 $hogeが配列でその中身は $hoge[0] → りんご $hoge[1] → みかん とかでしょうから foreach($hoge as $t_dat){ $pdo->query("INSERT INTO ★(hoge) VALUES('$t_dat')"); }
.phpファイルの文字コードがShift_JISかEUC-JPの場合に文字化けが発生してしまうようです。 参考URLと同じ問題ではありませんか？
Pleiades - Eclipse プラグイン日本語化プラグイン Pleiades All in One ダウンロード http://mergedoc.osdn.jp/ ↑「Java、C/C++、PHP、Python」などが開発できる無料の統合開発環境です。 最新のバージョンだと正常にインストールできない場合があるようなので、その場合は1つ前のバージョンをインストールしてみて下さい。 Eclipse を動かすには「JDK(Java Development Kit)」が必要です(これは通常のJRE(Java Runtime Environment)とは別物なので、別途 JDK(Java Development Kit)のインストールが必要です)。 Eclipse の Java 開発環境に関しては下記を参考にして下さい。 Eclipse Java プログラム開発 http://ashtarte.hotcom-web.com/utf8/smt.cgi?r+sara/&bid+00000021&bts+2016/05/04%2022:37:21&#Thread_Begin もし、「C++、C#、Visual Basic」などに興味があるなら「Visual Studio 2015」の「Express、Community」エディションがオススメのようです(「Visual Studio 2015」は「Windows 7」以降が必要のようです)。 特に「C#」は「Visual Basic」に匹敵するほどの人気だそうです((Microsoft が Borland から引き抜いた)オブジェクト指向の天才と呼ばれたプログラマーが「C#」の言語仕様を作っており、それが人気の要因かもしれない)。 第1回 Visual Studio 2015って何ができるの？ http://www.atmarkit.co.jp/ait/articles/1508/07/news031.html http://www.atmarkit.co.jp/ait/articles/1508/07/news031_2.html http://www.atmarkit.co.jp/ait/articles/1508/07/news031_3.html http://www.atmarkit.co.jp/ait/articles/1508/07/news031_4.html Visual Studio Express 2015をインストールする - Programming Style http://www.programing-style.com/visual-studio/visual-studio-express-2015-install/ Visual Studio へのサインイン https://msdn.microsoft.com/ja-jp/library/dn457348.aspx > Visual Studio Express エディションのロックを完全に解除する - 任意のエディションの Visual Studio Express を、30 日の評価期間にとらわれることなく使用できます。 > Visual Studio Community エディションのロックを解除する - 30 日の評価期間の制限がなくなります。 【無償版】Visual Studio の活用法 新登場! Visual Studio Community エディション https://www.microsoft.com/ja-jp/dev/campaign/free-edition.aspx
私は、Perl,PHPの両方を使ってｗｅｂでデータベースを操作したことありますけど、どちらでも可能です。 処理能力としては、どちらも十分早いですが、目的がｗｅｂであれば、利用事例は、PHPのほうが多いので、こっちを選ぶのが正解でしょう。 ただ、プログラマからすれば、Perlのほうが「汎用言語」的な能力は上です。 たとえば、仕事で使うエクセルから作成したＣＳＶファイルが多数あって、それらを使って、計算・加工したいという時、Perlが使えたら楽に処理ができます。
PHPを習得するとサーバ側で動作し、ダイナミックにHTMLを生成するサイトを作れるようになるでしょう。 但し、データベースはPHPとは別物ですので、データベースに関する知識の習得も必要になるでしょう。 また、PHPはWebサイト開発に親和性の高いプログラミング言語ですが、Webサイト以外のプログラムが組めない訳ではありません。
> connect()は別ファイルでデータベースの接続してます。 connect() の中身を憶測して書きますが、 3行目の connect() と、４行目の connect() で、それぞれで 新しく mysqli_connect() しているのであれば、 別のリンクとして扱われませんか？ ３行目の connec() で作成された MySQL リンク ID に対して、 mysqli_insert_id() したらどうでしょうか？ 例えば、 ********************************* $sql = "INSERT INTO img_k (img_name,img_caption,up_datetime) VALUES('".$in_img."','".$in_img_text."',now())"; $link= connect(); mysqli_query($link, $sql) or die(mysql_error()."<br>$sql"); $id = mysqli_insert_id($link);
PHPに関するiniファイルは php.ini です my.ini はMySQL用の設定ファイルです。
このようなコードではどうでしょう？ ▼コード <?php $url = "http://api.ce.nicovideo.jp/liveapi/v1/video.info?__format=json&v=lv262502077"; $json = file_get_contents($url); $data = json_decode($json); $livetags = $data->nicolive_video_response->video_info->livetags; $category = $livetags->category->livetag; $free = isset($livetags->free) ? $livetags->free->livetag : array(); $locked = isset($livetags->locked) ? $livetags->locked->livetag : array(); $tags = array_merge($free,$locked); $tags[] = $category; var_dump($tags); ?> ▼結果 array(11) { [0]=> string(30) "まこと はク ソババ" [1]=> string(39) " 誰に もまことは勝てない" [2]=> string(42) "森義之 も まこじきが大嫌い" [3]=> string(54) "まことって 皆から嫌われてる んだな" [4]=> string(50) "1ヶ月に1 度だけ放送 するまこじき" [5]=> string(30) "まこ とはク ソババ" [6]=> string(47) "み  んなまこじきchから抜けよう" [7]=> string(45) "國場雄大 もまこじ きが大嫌い" [8]=> string(27) "まことはゼニゲ バ" [9]=> string(47) "み んなまこじきch から抜けよう" [10]=> string(17) "一般(その他)" }
× require( dirname( __FILE__ ) . ‘/wp/wp-blog-header.php' ); ○ require( dirname( __FILE__ ) .'/wp/wp-blog-header.php' ); 分かりますか？ dirname() 以降に続く引用符が間違ってます。多分、使ってるエディタかIME何かが勝手に前後を自動対応させて「」みたいな感じで、本来は半角英数字の ' で前後を囲うべき所を ‘' となってしまっているためのエラーです（全角+半角になってる）。 P.S. PHPを自作したり改造するのなら、それ専用の機能が付いている高機能型エディタを使うべきです。色付けしたりとか、事前に構文エラー警告機能が有るヤツとか、それだけで9割型のトラブルは防げます。
何かWP公式プラグイン「JetPack 」の不具合ぽいですね… ＞WP公式フォーラム - https://wordpress.org/support/topic/websocket-connection-to-wsspublic-apiwordpresscompinghubwp-failed-403 恐らくはver.Upに伴う不具合かと思われますが。既に公式が把握して動いていますし、暫くは静観でしょうか。
wp-config-sample.phpはwp-config.phpのサンプルファイルで、WordPressに限らず、こういったsampleのコンフィグファイルがあらかじめ準備してあり、それをコピーして実コンフィグファイルとして扱うソフトウェアは他にもありますが、特にどちらで作成したほうが良いというのはないと思うので、やりやすいほうで作成すれば良いと思います。 ※WordPress公式ドキュメントではwp-config-sample.php を wp-config.php とするような手順になっています。 https://wpdocs.osdn.jp/WordPress_%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB#Detailed_Instructions サンプルのファイルには設定ファイルの記述の仕方などが書いてあったりするので、消さずに残しておき、必要に応じて確認してみる等が良いのではないかと思います。
Cloud9 でも「PHP、サーバサイドのJS、DB関連の学習」は出来るでしょう。 ただ気をつけなきゃいけないのは、クラウドにデータが置かれていて、設定次第で他人とデータが共有できてしまうので、個人情報にあたるデータや外部サービスの認証キーなどを安易に置いてしまうと漏洩する危険があります。
これは典型的な文字コードの問題ですね。PHPなどのプログラム公文には何の問題もありません。 NTTレンタルサーバとの事ですのでサーバ側の設定は事実上、User任意では変更出来ないため、PHPファイルとHTMLファイルの文字コードを何とかして解決するしか方策は無いと思われ…。 恐らくはPHPファイルの改行コードとBOMが引っ掛かってるんではないかと推測。 ・UTF-8, 改行LF, BOM無 ～でPHPを上書き保存し直してみてください。特にBOM有だとよくこの様なゴミが出やすいので。 既に該当ファイルが全てその様になっている場合、サーバ側のキャッシュが残っており最新版のファイル情報が反映されていない可能性もありますので。数時間程度、待ってから確認してみてください。 それでもダメならちょっとお手上げと言うか、実際に弄りながらでないと何とも言えないので…そちら側で直にNNTさんに問い合わせして貰うしかないと思いますが。通常、この手の個別質問にはノーコメントが原則なので…やっぱりもうお手上げかも。
試してないですが、こんな感じでしょうか。 <?php $counter = 1; foreach($rows as $row){ ?> <tr> <td><a href='wxyz.php?id=$row['id']; ?'>結果 ＜?php echo $counter ;?＞</a></td> </tr> <?php $counter++; } ?>
$input_datetime = date( "Y-m-d H:i:s" );
特別新しくは無いですが、決して古いと言う訳でも無いですね。 ご覧になられたサイトは、サーバ上でPHPを動かすことを前提に書かれています。 XAMPPはサーバ上で使用するのではなく、作業用のPCで簡易的に動作させることを目的としたモノなので書かれてないのでしょう。
htmlはハイパーテキストをコーディングする言語です。 phpはハイパーテキストを生成する言語です。 ＷＥＢサイトを閲覧すると、目にするのは最終成果物であるハイパーテキストなので、見る側からすれば違いは分かりません。 ハイパーテキストを作る手段が違うだけです。
これではダメなのでしょうか？ https://wpdocs.osdn.jp/%E6%A4%9C%E7%B4%A2%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AE%E4%BD%9C%E6%88%90
"tec[]"のように配列として受け取るようにしているため、 >$tec=$_POST['tec']; で取り出した上体では、$tecが配列となっています。 たとえば、配列の要素を単純にカンマで結合して文字列として取り出すならば、 以下のような感じにする必要があります。 $tec = implode(",", $_POST['tec'];); PHPの配列の使い方については検索で色々見つかるかと思います。 http://php.net/manual/ja/function.implode.php
phpとして認識されていないんじゃないですか？うっかり始めと終わりの括りを消しちゃったとか？ソース内の細かいミスではないですから、そういう所を見直してみては？
何かしらの言語学ぶのは初めてですか？ 質問内容的に初めてだと思いました。 その割には凄いですね。 エラー出てますから、そのまんまです。 定義されていない関数が呼び出されている。 エラーメッセージはちゃんと読んで理解するようにすると良いですよ。 この関数については以下に詳しく出ています。 http://php.net/manual/ja/function.mysql-connect.php
＞残念ながら変化なし… あ～やっぱり。理屈は間違って無いと思いますが…何分、他人の書いたコードは少々見ただけでは皆目、処理の流れが見当付かないんで。実際に実験して結果を確認しながらで無いとどうにも頭の中だけでは難しいですね。期待に添えず申し訳ありません。 ＞同時にフォームから連絡を取ってみた… なんと！…それならば開発元から返事が来るのを待つのが一番確実でしょうが…1週間以上待っても返信無しなら、上手くメールが届いていないか、或いは開発者自身がもう既に開発に意欲を失ってしまったか…？ P.S. 入力文にHTMLタグが許可される仕様ならば、単純に <br> を手打ちで予め記述して置くのが一番確実かな。タグも問答無用で削除される仕様ならば、禁則事項に引っ掛から無い様な「自分専用の特殊な文字列（例えば %br% みたいな）」を <br> の代わりに「改行記号」として記述し、最終的に表示されるページ内で別途に Javascriptを走らせてもう1回、文章の置換処理を行う様な流れにすれば、ちょっと強引ではあるけど改行自体はさせられるかな？ 開発元から連絡が来なくて、どうにも手詰まりの状態になったら試してみてください。
PHPのプログラムはサーバサイドで実行され、実行結果がHTMLとしてブラウザに送られます。 ブラウザはHTMLを受け取ったら、その内容を画面に表示したりJavaScriptのプログラムを実行し、画面に反映します。 なので、ajaxで通信をしている時は既にサーバサイドでの処理は終わっているので、質問に書かれているようなプログラムは成り立ちません。 ajaxで取得した結果をサーバに送信したいのであれば、ajaxのデータ取得後の処理でajaxを使ってPHPのプログラムにデータを送信するしかありません。
シングルクォートで囲った文字列の場合、変数は展開されません。 echo "<input type=\"text\" name=\"name\" value=\"$name\">"; echo "<input type='text' name='name' value='$name'>"; echo '<input type="text" name="name" value="'.$name.'">'; などの方法があります。
＞　分けるとは、今、1画面を2画面にするということでしょうか？ ＞　一旦サーバに、csv を作成して2画面めでダウンロードさせるということでしょうか。 ダウンロード用のボタンがあるページのHTMLを送出する処理と、CSVを送出処理を1回のHTTPセッションで行う事は不可能です。 ブラウザはHTMLを受け取ったら画面上にレンダリングする処理に移るので、HTMLデータと一緒にCSVデータを送ってもブラウザはHTMLを表示することしかしてくれません。 なので、まずはボタンを表示するHTMLをブラウザに送出しサーバ側の処理は終了、ユーザーがボタンをクリックしたら新たにブラウザからサーバにHTTPリクエストが送られ、それに対してCSVデータをサーバが返す必要があります。 もし、CSVの生成に時間が掛かるため、CSVの生成が終わってからダウンロードボタンを表示したいのであれば、CSVを生成してサーバに保存し、保存し終わった時点でダウンロードボタンのあるHTMLを出力をするしかありません。
>test.jspはログインしていれば、urlを直打ちするとログイン後と文字列がでるので、ログイン状態で取得できないのはそのセッションの問題なのでしょうか。。 はい、その通りです。直打ちするというのは、ブラウザから直接test.jspにアクセスするということだと思いますが、その場合はブラウザから端末に保存されているクッキーが送信されますので、同じブラウザからログインした時のセッションが張られます。test.jspの中身が分からないので想像になりますが、そのセッションの情報からログインしているかどうかをチェックしているものと思われます。なので、たとえログインしていたとしても、ログイン時に保存したクッキー(通常はログインしたブラウザによって管理される）を送らない限り、別の端末からアクセスしてきたとみなされてセッションが張られず、「ログイン前」と出てしまうのです。 >jsのajaxでなら問題なく取得できるので、なぜjsだとできてphpだとできないのでしょうか。 jsはクライアントサイドで動作します。つまり、ブラウザ上でjsが実行されます。jsから別のサーバにアクセスすると、そのサーバのパス,あるいはドメインに紐付いたクッキーがブラウザに保存されていれば、それが送られるのです。よって、test.jspにjsからアクセスすると、ブラウザでログインした時のクッキーが、そのままjs経由で送られますので、セッションが張られて「ログイン後」、とでます。 一方、PHPはサーバサイドで動作します。ブラウザで実行されるわけではありません。require_onceも当然、サーバ側で実行されます。なので、ブラウザに保存されているクッキーは送られません。それ以前に、require_onceではクッキーを送れないと思います。
flock fopen sleep(30) これで３０秒止まります。
XAMPPとは、Webアプリケーション開発に欠かすことのできないソフトウェアとそれ以外にもあると便利なツールを、無料で一括インストールすることができるパッケージのことです。 http://techacademy.jp/magazine/1722
Wordpressは大本の本家反対がGPLライセンスで配布公開されていますので、そこから派生する全てのテーマやプラグインもそれを自動的に継承し、また維持する義務を負います。従って他サイトで配布公開されているテーマは入手した各自が自由に改変可能です。最も著作物の権利は各国法律で微妙に定義や解釈が異なるため、日本国内法律で完全にGPLライセンスが再現されるのかどうかは不明です。が、少なくとも最大限に尊重はされるので、やはり基本的にはGPLライセンスを受け継ぐと考えて行動すべきです。 ＞Wordpressのライセンス - https://wpdocs.osdn.jp/%E3%83%A9%E3%82%A4%E3%82%BB%E3%83%B3%E3%82%B9 少し難しい言い回しになりましたが、法的な解釈を含むため正確に記述しました。簡単に言うと、Wordpress関連のプログラム等は全て自動的にGPLと呼ばれる国際的な決まり事の縛りを受けるため、例え個人が完全に自力で開発したオリジナルなテーマであっても、それを世間に公開し配布した時点で第三者に自由に改変し良いと言う縛りが適用され、その子や孫の製品にも永遠に受け継がれていく～と言う仕組みです。要するに勝手に子テーマを改造して使ってもOK、何の問題も無い。 ただし元になったテーマは必ず明示しなくてはなりません。要は嘘は吐いてはならないって事ですね。隠す事も許されません。必ず改造元になったテーマを、改造後の子テーマにも明記しなければなりません。これもGPLライセンスでの決まり事です。 ＞WPデータベース WPのテーマはあくまでも "表面上の見た目" のみを制御する仕組みですので、文章や画像などのデータ自体は全く関係ありません。テーマは例えるなら服みたいなモノで、その日の気分で色を変えたり厚着にしたり出来ますが、それは外見だけが変更されてるだけで着ている中身の人自身が変化してる訳では無いのと同じ事です。 ただしCSSやHTMLの仕組みの都合上、テーマを変えるとまるで別人どころか人間じゃない別の生物の様に見た目を変える事が可能です。それもWPの売りの1つですね。
参考URLのブログにPHP&MySQLを無料で使えるレンタルサーバがまとめられていますので、参考にされてはどうでしょうか？
PHPの他に、ApacheとMySQLとPerlを1つにまとめてインストールできるようにした物が、XAMPPなので、PHPだけしか使わないのであれば、XAMPPは必要ありません。 つまり、あなたが何をしたいかによって、PHPだけをインストールするのか、XAMPPをインストールするのかが違ってきます。
XAMPPはどこからダウンロードしたんでしょうか？古い書籍の付属CD-ROMなんか使ってませんか？公式サイトから最新版を入れるようにしてください． https://www.apachefriends.org/jp/index.html ここを読めば分かる通り， Apache + MariaDB + PHP + Perl と書いてあります．オプションで要らないものは排除出来ますが，PHPはデフォルトでインストールされます．MariaDBはMySQLの派生で，最近XAMPPがこちらに乗り換えたみたいです．といってもほとんどMySQLと同じように扱えるので特に気にしなくて構いません．
＞　上記で設定した「pg_insertが失敗しました。」が画面に表示されるのみです。 ＞　他に何かエラーメッセージなどを見る方法などあるのでしょうか？ pg_last_error() の結果も一緒に表示するようになっているので、何らかのエラーメッセージが一緒に出るはずですが、そこには何も書かれていないと言う事ですかね。 あとは、Webサーバ（Apache等）のエラーログにもエラーメッセージが出ている可能性があるので、確認してみるといいと思います。
include_once で指定しているパスを修正すればいいだけだと思います。 原因は判りませんが include_path の指定内容が書き換わったんでしょうね。 PHP本体のアップデートとか実施されたと言う事はありませんか？
$aaTX = @fopen("aa.txt", "r+" ); @flock($aaTX,LOCK_EX); $aa = fgets( $aaTX, 10 ); $aa++; rewind( $aaTX ); fputs( $aaTX, $aa ); flock($aaTX,LOCK_UN); fclose( $aaTX );
cron
保存する時にファイル名の所を修正して、自分で「.exe」を付けて保存できませんか。
>>サイトを立ち上げて、SQLiteを言うのを学べば可能ですか？ それだけでは、の知識・経験不足です。 でも、その後、沢山＆長期間勉強していけば、可能になるかも?
ファイル形式が 「アプリケーション(exe)」ではなく、「15-2-VC11-INSTALLER」となってしまっているようなので、まずは、ダウンロード時に「ファイルの種類」で「アプリケーション」を選択して保存することができるか試していただけばと思います。
array_flipという関数がありますが，これは重複要素を削除してしまうので手動でループするしか無さそうです…残念… $dup = []; foreach ($list as $key => $value) {     $dup[$value][] = $key; } $dup = array_filter($dup, function ($items) {     return count($items) > 1; });
ブラウザからアクセスして動作させるのであれば、Apacheの設定で c:\abc にアクセスできるようドキュメントルートを変えるか、エイリアスの設定をするか、バーチャルホストの設定をする事になります。
メニューの「ウィンドウ(W)」→「ビューの表示(V)」→「その他」で 出てくるダイアログの中にないでしょうか？
cURLの非同期処理を楽に書くためのライブラリを作ってみました． （まだほとんどテスト出来てないのでバグがある可能性はあります） https://github.com/mpyw/co http://qiita.com/mpyw/items/44a001101914450257dc 「非同期処理の部分的な直列化」を行うためにはPHP5.5以降から使えるジェネレータがほぼ必須ですが，全部並列に行うだけならPHP5.3から使えます． $results = Co::wait([$curl1, $curl2, $curl3]); これだけですね．既定ではどれか1つが失敗するとCURLExceptionをスローしますが，失敗時にcURLリソースをCURLExceptionに置換する例外安全なモードで使うことも出来ます． 問題はSDKを使っていることですね．SDKが生成するリクエストオブジェクトのようなものから何とかcURLリソースだけを引っ張り出せればどうにでもなるんですが，SDK自体を改造する，あるいは自分で認証なども含めてフルスクラッチする，ぐらいしないと厳しいでしょうか… 全く別のアプローチとして，単一のファイルだけをアップロードするスクリプトをBasic認証かDigest認証あたりをつけて置いておき，自分自身のサーバに対して並列にHTTPリクエストを飛ばして処理させる，という方法もあります．並列化はPHPではなくWebサーバの仕事になるので，こちらであればSDKをそのまま流用できますね．
ＰＨＰの語源は「Personal Homepage Program」です。 ホームページを楽に作るために作られた言語であり、それが発展して現在のような高機能の言語になりました。 ＰＨＰは、ソースコードを記載する言語です。 ソースコードだけでは、それは動作しません。 いわば、自動車免許証があっても、車が無ければ、ドライブできないようなものです。 免許証が自分で記載したＰＨＰのソースコードなどであり、アパッチや、それに追加するphpのDLLなどが車に相当するといえるかもしれません。 ちなみに、自宅用というか、自分用のソフトを作る場合は、ホームページと違って、さしあたり皆に公開する必要もありません。 なので、ＰＨＰは使わずに、Perlとか、C#とか、VB.NETなどの言語を使うのが一般的であり、これらの言語のほうがソフトは作りやすいです。
＞PHPはｗｅｂプログラミングなのですよね？ PHPはウェブサイトを作ることに使われることがほとんどですが、プログラミング言語なのでウェブと関係ない処理も記述することが出来ます。まあ、そういう処理には向いてないので、ウェブ以外で使うことはまずないでしょうけど。 ＞ｗｅｂサイトを作るにはHTMLの知識がないとダメですか？ はい。PHPに限らず、ウェブプログラミングをするにはHTMLの知識が必要です。
latin1だと思います。 https://ja.wikipedia.org/wiki/ISO/IEC_8859-1
========== if(preg_match('/^[1-9][0-9]*$/', $_GET['page']) ){ $page = (int)$_GET['page']; }else{ $page = 1; } $page = 1; ========== if文の中で$pageを設定したにも拘らず、if文が終わった後に $page = 1; で$page変数を「1」にセットし直しています。 これでは何をやっても $page は「1」ですよ。
>>マイクロソフトアクセスへ接続し、テーブルのデータ使う事は可能でしょうか？ 可能ですが、アクセスは個人用データベースですので、SQL Serverを選択したときにくらべて、パフォーマンスが低下しますし、トラブルも発生しやすくなります。
HTMLを書いていると言う事は、クライアントに対して既にデータを返しているのでヘッダーを後から書き換える事が出来ませんし、データを返しているにも関わらずリダイレクトしようとするのは処理として矛盾しているので、プログラムの構造を見直す事をお勧めします。 とりあえず現状で対応するとしたら。php.iniの設定を output_buffering = On にすると解決するでしょう。
基本的には誰でも参加できますが、直接ソースを書き換えられるのは一部の選ばれた人だけです。 多くの人は、バグを発見して報告したり、改修方法を提案したり、新機能を提案すると言った事をしています。 それらの報告や提案を多くの人がテストして結果を持ち寄り、よいものがソースに反映されていきます。
$uni_id = "../../data/" . $row_id['uni_id'] . ".dat"; の間違いとか。
$a = array(); $a[]="dmy"; unset($a[0]); $a[]="foo"; $a[]="bar"; $a[]="baz"; var_dump($a); $b = explode(" ","foo bar baz"); array_unshift($b,"dmy"); unset($b[0]); var_dump($b);
CSVデータで文字列を扱う場合はダブルコーテーションで括るのが一般的です。 ダブルコーテーションで括れば一連の文字列として認識されるので、色についてはカンマで繋いだモノをダブルコーテーションで括れば1カラムの扱いになり、コメントもダブルコーテーションで括っておけば改行が入っていても1カラムの扱いになります。 "山田太郎","男","hoge@example.com","赤,青,緑","あれこれ\nコメント"
MySQL以外にも ・Microsoft SQL Server ・Oracle ・PostgreSQL ・SQLite ・Sybase ・DB2 等々いろんなDBに対応してますよ。 http://jp2.php.net/manual/ja/refs.database.php
PHPと言うよりHTMLでフォームを作るって事ですね。
現在ページのcheckbox の状態を送信するには、postであれ、getであれ、リンクではなく、<form>からのsubmitが必要です。でなければ、ajax送信になります。 <form>には複数のsubmitボタンをおけます。クリックしたsubmitボタンのname:valueだけ送信されてくるので、name で区別して、次ページか前ページかを切り分け可能です。 そして、これまでにcheckが付いたid をhidden でいれておけば、以前のデータを持ち回ることが出来るし、前ページへ戻ったときに、表示範囲のidなら、先にcheckを入れておいて、はずれてたら、持ち回り中止扱いと言うことも出来ます。 あまり細かく検討はしてないけど、判定手順として以下のようなソース。 <?php if(isset($_POST["del"])){ // 削除用を呼び出す $_POST["c"] の配列に削除対象データ exit; } if( isset($_POST["p"]) ){ /* 前回ページ番号を hidden にいれておいて、prev と nextのどちらが送信されてきたかで、今回ページ番号算出 */ $p = intval($_POST["p"]) + ( isset($_POST["next"])?1:(isset($_POST["prev"])?-1:0) ); }else{ $p=1; } // databaseから取り出し　　コード省略 , $max に最大ページ数も取得しておく $lines = $db->fetchAll(); ?> <form action="" method="post" > <table> <?php foreach($lines as $k=> $line): $num = $k+($p-1)*10; ?> <tr><td><input type="checkbox" name="c[<?=$num ?>]" value="<?=$line['id'] ?>" <?php echo (isset($_POST["c"][$num]))?"checked":""; ?> > <?=$num ?></td><td><?=$line['data'] ?></td></tr> <?php endforeach; ?> </table> <?php foreach($_POST[c] as $k=>$val): ?> $n = intval($k); if( $n< ($p-1)*10 or $n>= $p*10 ){ <input type=hidden" name="c[<?=$k ?>]" value="<?=$val ?>"> } <?php endforeach; ?> <input type=hidden" name="p" value="<?=$p ?>"> <?php if($p>1): ?> <submit name="prev" value="前ページ <?=$p-1 ?>"> <?php endif; ?> <?php if($p<$max): ?> <submit name="next" value="次ページ <?=$p+1 ?>"> <?php endif; ?> <submit name="del" value="削除実行"> </form>
ループで回すのが簡単ではないでしょうか？ $file_jpgにはカンマ区切りのURLが入っていると思いますので、 カンマ区切りでURLを取り出し、その数の分だけループしてget/putしてあげればよいかと思います。 -- $urls = explode(",", $file_jpg); #urlを配列として取り出し for ($i=0; $i<count($urls); $i++) { #urlの分だけループ $data = file_get_contents($urls[$i]); file_put_contents("./image/photo_$i.jpg",$data); }
＞　以下のページを見ますと、mbstring.internal_encodingはPHP 5.6で非推奨となり、default_charsetで設定せよ、とあるのですが、いかがでしょうか。 mbstring.internal_encoding の代わりに default_charset を設定したらmb関数の文字コードが設定されると言う意味ではありません。 mbstring.internal_encoding を設定するとmb関数で文字コードを指定しなくても既定値の文字コードだという前提で動いてくれました。 そういった既定値だと勝手に解釈してくれる事を期待したコーディングは止めましょうと言う事で、mb関数を使う時はしっかり文字コードを意識してコーディングし、プログラムが出力する文字の文字コードを default_charset で指定して、クライアントに対し正しい文字コードを伝える事で文字化けしないようにしましょうと言ってるのです。
気にする必要はないですが，あまりに近い数字だとサーバとクライアントで時間がずれていたときに期待した動作にならない可能性があるからです． ちなみに削除するときは1以上の自然数なら何でもいいので，timeから引く必要もなく「1」で十分ですよ．
（１）　仕事として開発をしたいのであれば、どちらにも対応できるよう勉強した方がいいですね。 趣味ならどちらでも。フレームワークを覚えたら開発は楽ですが、制限から外れるようなイレギュラーなプログラムは書けないので、不便な時もあります。 cake以外にもフレームワークはいろいろあるので、いろんなフレームワークを使ってみるのもいいと思います。 （２）　仕事の場合は要件次第でフレームワークが使えないこともあるので、フルスクラッチで作る場合もあります。 ただ、過去に開発したプログラムが資産としてあるので、使い回しできるライブラリーは使っちゃうので完全なフルスクラッチは殆どありません。
こんにちは。 何かライブラリやフレームワークを利用しているか、 どのように実装しているかにもよりますが、ここではオーソドックスにログインのセッション管理にsession_start()関数を使っている場合を例にします。 以下のようなコードで実現可能です。 /* ログアウトリンクを押したときに以下のコードを通過するようにする */ session_start(); // セッション開始(既にこの関数を実行している場合は2重で実行する必要なし) $_SESSION = array();// セッション変数を消す session_destroy();// セッションファイルを消す ～～以下、ログイン画面を表示～～ ご参考になれば幸いです。
Javascriptのライブラリで、ページ遷移せずにPOSTするようなものはありそうだけど。 私が大昔にやった方法は、非表示のIFRAMEにフォームを用意して、IFRAMEの中でPOSTする。タイマーでIFRAMEの更新をチェックして、更新完了が確認できたら次のページに遷移する。といった方法。
PHPファイルとHTMLファイルはWebサーバ側から見れば別物ですが，Webブラウザ側から見ればほとんど同じです．なぜならWebブラウザが受け取るのは，WebサーバでPHP実行によって作られたHTMLであるからです．PHPファイルもHTMLファイルもWebブラウザ側から見れば「HTMLコンテンツ」です． http://qiita.com/mpyw/items/176fb1f6fb75da74339f なので，拡張子がPHPであることに拘わらずに，普通にHTMLファイルからHTMLファイルへのリンクを張るようにかけばいいだけです．…もしかして，今書かれているコードが全体を <?php ?> で大きく覆ってしまい，その中でechoやprintを使ってHTMLを出力するような構成になっているのでしょうか？これは良くないコードの書き方なので，PHPのテンプレートエンジン的な性質を活かした書き方をするようにしましょう． http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11153985376
いきなり$_SESSION['user1_flag']なんてのを条件判定に使われても、 そのuser_flag1というセッションデータをどのタイミングでどんな条件でtrueにセットしているのかを 明示してくれないと、それが正しいのかどうかは私には判断できかねます。 ただ、少なくともセッションデータは、ブラウザ間で共有するデータではないので （他人のブラウザでセットした値を参照することはできないので） 他方のブラウザの情報の入手に$_SESSIONを使おうとしているのであれば、 そのこと自体が、誤りだとは思います。 （実際にセットしている部分が不明なので、あくまでも推測ですが） 闇雲にコーディングするのではなく、きちんとロジックを組み立てたほうがよいですよ。 Web上のチャットを含めてWebアプリというのは サーバーとクライアントとのデータのやりとりのみで クライアントとクライアント間で通信することはできません。 このため、別のクライアントの状態を知るには、必ずサーバーを経由させる必要があります。 また、１つの変数の値を、別のクライアントに引き渡すこともできませんので クライアント間で情報を共有するには、 サーバー上のファイルまたはデータベースを使って情報を共有させる必要があります。 よって、まずはCGI（PHP)へのアクセスのたびに、クライアントごとの そのとき入場中の他のクライアントの情報をサーバー上のファイルに記録する 仕組みをまずは作る必要があります。 （ファイル名に自身のIPアドレスを使うなどして、他のクライアントとファイル名が衝突しないようにする） （入場中のクライアントのIPアドレスはチャットのログデータから取り出せる） そのうえで、チャットの閲覧処理部に 1.もし、サーバー上にクライアントの自分自身のIPアドレスがファイル名になった 上記のファイルがあれば、 そのファイルと、今現在入場中の他のクライアントを比較して 増えていれば、チャイムを鳴らすタグを入れる 2.次回のために、現在入場中のクライアントのファイルを自身のIPアドレスをファイル名にして保存する。 3.どんどんファイルが増えていくので、１日？以上経過したファイルは ワイルドカードで削除する仕組みも入れておく。 を入れればよいでしょう。 なお、もし１対１のチャットに限定するのであれば、もっとシンプルにできます。 チャットのリロードでの閲覧処理部に 入場中が自分だけの状態から２人に変化したタイミングを ログファイルから発見できるようにして そこにチャイムのタグを入れればよいだけなので。
はい，ご認識の通りです．HTMLとして出力されたもののみがHTTPプロトコルのメッセージボディとなります． ただ，1つのPHPファイルにそんな膨大なコードを書いてしまうとメンテナンス性の面で問題があると思います．普通はもっと小分けにして，requireあるいはspl_autoload_registerで読み込むようにするんじゃないかと思います… MVCアーキテクチャについて学んで，マイクロフレームワークSlim3ぐらいから手を付けてみるといいかもしれません．(マイクロフレームワークはCに相当する部分は必須ではありません)
<?php $tests = array( //点数 "鈴木" => array(92,1), "佐藤" => array(74,1), "中村" => array(42,1), "三浦" => array(65,1) ); $result = array(); foreach ($tests as $name => $test) { $result[$name] = array_sum($test); } arsort($result); ?> <table border="2"> <tr> <th>名前</th> <th>合計点数</th> <th>科目1点数</th> <th>科目2点数</th> <th>順位</th> </tr> <?php $rank = 1; foreach($result as $name => $tensu) { ?> <tr> <td><?php echo $name; ?></td> <td><?php echo $tensu; ?></td> <td><?php echo $tests[$name][0]; ?></td> <td><?php echo $tests[$name][1]; ?></td> <td><?php echo $rank; ?></td> <?php $rank++; } ?>
PHP printf フォーマット 精度指定子 とかでしょうか。 意味的には小数点以下1位までという感じです。
if(カラム値,date('Y年n月j日 g時i分', strtotime(カラム値)),"")
エラーログからは、単体でインストールされたApacheが起動しているために、XAMPP のApacheが起動できないように見えます。 まずは単体でインストールされたApacheを停止すれば、XAMPP のApacheも起動できるようになると思います。 停止方法についてはNo1の補足コメントに記載いただいているURLのページ下のほうを参照いただければ良いと思います。 アンインストールについてですが、[コントロール パネル]->[プログラム]->[プログラムのアンインストール]と遷移し、その画面で、インストールされたApacheが表示されていないでしょうか？ 表示されていればそこでアンインストールを実行できると思います。
圧縮するは結構コストがかかり表示するたびにやってたらロードに時間がかかります。 ブログのサムネイル画像の容量なんて微々たるものです。もし足りなくなれば画像だけ別サーバに置けば良いでしょう。
＞　重ねて質問で申し訳ないのですが、if ([スマホ]) {の部分はiPhoneとAndroidなど複数認識させたい場合はどういった記述になりますか？ 簡単に判定するならこんな感じ if (preg_match("/android/i", $_SERVER['HTTP_USER_AGENT']) || preg_match("/iphone/i", $_SERVER['HTTP_USER_AGENT'])) { ・・・ } 但し、欠点はAndroid OSを使っている機器はスマホなのかタブレットなのかPCなのか判別出来ないと言う事と、各端末の標準ブラウザなら問題無いけど別途インストールしたブラウザアプリからアクセスがあった場合は、ユーザーエージェントにOS名が入っていない場合があるので判別出来ません。 本来の目的は画面の小さな端末で見やすいスタイルを適用させたいのでしょうから、ブラウザ側で表示領域の大きさで判別してスタイルシートを分けるのが理想的なので、レスポンシブデザインのCSS切り分け方法を使う方がいいと思いますよ。
PHPの演算子 http://jp2.php.net/manual/ja/language.operators.arithmetic.php 平均点の求め方 echo "平均点" . (array_sum($b) / count($b)) . "\n";
演算子の優先順位の問題ですね。以下のどちらかで解決できます。私は後者のほうが好きですね。 while (($data3 = fgetcsv($fp3, 10000)) && $data3[0] > $number) { while ($data3 = fgetcsv($fp3, 10000) and $data3[0] > $number) { 省略可能な括弧と、不可能な括弧を区別出来るようにしてください。 http://php.net/manual/ja/language.operators.precedence.php
yahoo側がUserAgent等を見て、表示の判別をしているのではないでしょうか？ リクエスト時に一般的なブラウザのUserAgentを設定してリクエストしてみてはいかがでしょうか？
＞　$header = "～@users.phy.lolipop.jp ＞　Content-Type:text/html; ＞　 charset=iso-2022-jp ＞　Content-Transfer-Encoding:7bit"; ＞　で間違いないでしょうか？ Fromアドレスには「From: 」を付けましょう。 あと、メッセージ本文はUTF-8にしているのだからcharsetはUTF-8でなければいけませんね。 UTF-8は7bitエンコーディングじゃないから8bitが正しいんじゃないでしょうか。
> 尚、kabu.phpは下記のようなスクレイピングで作っています。 すいません、ここから先読み落としてました… <?php require_once 'simplehtmldom/simple_html_dom.php'; $fp = fopen('kabu.csv', 'w'); $html = file_get_html('kabu_base.php'); foreach ($html->find('a') as $e) { fputcsv($fp, explode(',', "$e->href,$e->innertext")); } これだけじゃないですかね。
初めてやろうとすると、ページングって考え方がピンと来ませんよね。私の知ってるやり方はこんな感じです。 http://～～～.html　　普通のURL。 http://～～～.html?page=1　⇒1ページ目（内容は普通のURLと同じ） http://～～～.html?page=2　⇒2ページ目 http://～～～.html?page=3　⇒3ページ目 ページ送りのボタンを作り、上の様なパラメータ付きのURLにリンクを飛ばします。 そしてphpでパラメータを判別しパラメータがついてたら、それぞれ表示する内容を変えます。 ページングのプログラムを書くには、 1.1ページに表示する件数を決めておく。 2.ページのURLを取得してパラメータがあるかないか？パラメータがあれば値(page=の後の数字)を切り出す。これが見ているページ。 3.上記の『見ているページ』と『1ページに表示する件数』から、そのページに何番目から何番目まで表示するのかが計算できます。 あとは、出力するだけです。 サンプルコードじゃなくてすみませんが、考え方がピンとくれば簡単ですよ。 余談ですが、パラメータがどこまでも検索エンジンにインデックスされないように、<link rel="prev" ～～/>とかを使って適切に処理しましょう。page=10000とかインデックスされちゃってシャレになりません♪
短く書く手段はありません。 ３つくらいならお書きのやり方が一番です。 たくさんある場合は、「配列の中にあるか？」という関数の否定を使って、 if(! in_array($hensu,array(1,20,30,......))) { のように書くのがいいかと。
まず、$feed に入っているHTMLソースには改行文字が含まれていますので除去しましょう。 ========== $feed = preg_replace("/\r\n/", "", $feed); ========== 改行文字の種類は元データに合わせて調整して下さい。 これをしないと、タグとタグの間に改行文字が入っているので、パターンマッチさせる際にも改行文字の事も考慮する必要があり煩雑になるので不便です。 次に正規表現で取り出したい部分の指定ですが『(.*)』では無く『(.*?)』を使いましょう。 正規表現では、繰り返しを指定すると一番長くなるようマッチさせようとします。 例えば『{<div>(.*)</div>}』という正規表現で『<div>hoge</div><div>fuga</div>』を検索すると『hoge</div><div>fuga』がマッチしてしまいます。 これを『{<div>(.*?)</div>}』という正規表現にすると『hoge』と『fuga』がそれぞれマッチしてくれます。 あと、質問者さんの用途ならpreg_match_allのフラグは PREG_SET_ORDER の方がいいかと思います。 そうすると ========== foreach ($cell as $data) { echo $data[1] . "位　" . $data[2] . "　" . $data[3] ．．．; } ========== といった形で値を取り出せて楽になります。
SQL文に複数行用のplace holder を記述するなら　str_repeat　を使えばいい -- 簡略化記述例、(?,?,?) のところを実際の行カラム数に合わせるとよい $sql = 'insert into `tbl` values (?,?,?)'. str_repeat(count($obj[0])-1 , ', (?,?,?)' ) ; しかし、bind_param に与える引数の方は配列ではなく、該当個数の記述がいるので、一行増えるごとに引数の個数を換えて呼び出すような対応が必要になる。 よって、御記載のように一行ずつinsert していく方がプログラム的には面倒がない。実行時間的にどっちがよいかは不明だけど。 bind関連は、PDOの方が融通が利くんですけどね。
javasriptでプルダウンを変更したらsubmitする処理をしてあげれば良いと思います。 http://tantanu.minibird.jp/forum/topic.php?id=77
お礼欄、読むの遅くなりまして申し訳ない 書いている動きから、どのようなHTMLとなっているかと考えると… 以下のような感じで、ひとつのFORM内に複数の送信ボタンを設置しているのだと想像します。 <form action="hoge" method="get"> みかん <input type="submit" name="id" value="1"> りんご <input type="submit" name="id" value="2"> バナナ <input type="submit" name="id" value="3"> </form> この場合、そのままhidden+submitに書き直すと以下のようになるわけですが… <form action="hoge" method="get"> みかん <input type="hidden" name="id" value="1"> <button type="submit">送信</button> りんご <input type="hidden" name="id" value="2"> <button type="submit">送信</button> バナナ <input type="hidden" name="id" value="3"> <button type="submit">送信</button> </form> たとえばこれだと、重複しているidという項目は後から送られる値に上書きされて最後に書かれたid=3が送られることに。 さらにid=4を追加すれば、当然それが送られることに。 <input type="submit">の場合にはクリックされた値が送られるので、望みの動作になると。 以下のように、複数のFORMに分割すれば、上書きされずに送信されるがこれが目的に合っているかどうかは判らない。 <form action="hoge" method="get"> みかん <input type="hidden" name="id" value="1"> <button type="submit">送信</button> </form> <form action="hoge" method="get"> りんご <input type="hidden" name="id" value="2"> <button type="submit">送信</button> </form> <form action="hoge" method="get"> バナナ <input type="hidden" name="id" value="3"> <button type="submit">送信</button> </form> buttonにnameとvalueを設定してやれば、表示と値を別々に設定できるので目的に叶うと思うが… <button type="submit" name="id" value="1">送信</button> つまりこういう事か print'<button type="submit" name="id" value="'.$rec['id'] .'">送信</button>'; やりたいことが判らないので断言はできないが、なんとなく設計がよくないような気がしなくもない。
＞　print $rec['title'];をどう<a>タグで囲めばいいのでしょうか print '<A href="hoge.php">' . $rec['title'] . '</a>'; もしくは <A href="hoge.php"><?php print $rec['title']; ?></a>
私の主観ですが基礎を何度もやるより 新しいことにチャレンジした方が伸びは良いと思います。 正直、プログラミングは覚える必要というのはあまりなくて、 必要なときに必要なものを調べることができることの方が重要です。 ですので狭い範囲を徹底してやるより、より広い範囲を浅くした方が あーあれはあそこに載ってたな～という思い付きが増えます。 引き出しが増えるという感じですね。
if($rec==false) を if(false) にしたらいいんじゃないですか？
（１）基本的な事が判ってくれば十分作れるでしょうね。 あとはセキュリティ面の勉強をするといいと思います。 IPAのサイトで基本的な解説をしているので参考になるんじゃないでしょうか。 https://www.ipa.go.jp/security/vuln/websecurity.html （２）今のプログラミングはオブジェクト指向で作るのが主流ですから、規模の大小に関わらずクラスを使ったプログラミングの方がいいかもしれません。 機能毎にプログラムを分けて作ると他のサイトを作る時に使い回しがしやすかったり、機能追加なんかの時に影響範囲を限定しやすくなってデバッグが早くなります。
SQL文の書き方の問題ですね。 $sql = "SELECT name FROM testTable WHERE (Id = " . $stringNum . " )"; としているので、MySQLはIdカラムの中身と$stringNumの中身を数値として比較しようとしてしまいます。 文字列として比較させるにはSQL文でも$stringNumの中身を文字列として扱ってやる必要があるので $sql = "SELECT name FROM testTable WHERE (Id = '" . $stringNum . "' )"; とする必要があります。
内部ではメールアドレスは使わず直接、dbにアクセスします。 だから、そのdbのキーを好きなようにすれば良いだけです。
エラーを読むと… ＞Fatal error: Call to a member function bindParam() on a non-object 「オブジェクトではないのに、bindParamなんてメンバ関数を呼んでるよ」というエラーなわけですね。 つーことは、１５行目の$stmtがオブジェクトではないという事。 それじゃ$stmtは何かっつーと、さかのぼって１４行目で $stmt = $db->prepare(～); と代入しているので、prepareで実行した結果が正しくオブジェクトを返していないと考えられます。 それじゃ１４行目のどこに問題があるかっつーと… パッと見、問題がありそうには思えない あるいはSQLの… SELECT * FROM users WHERE name=:name AND password=:pass に問題があるのかも知んないな。 usersってテーブルほんとにあるのかよ、あるいはnameやpasswordってフィールド名が正しいのか？という問題なのかも知れない。 もしそうだとすると、このプログラムコードをいくら眺めていても、誰にも判るわけがない。 とりあえずそんな感じで。
フレームワークを使った開発が多いでしょうから、デバッグしなきゃいけない範囲は狭いですし、適切なエラー処理を最初っから書いておけば問題箇所の特定も容易なのでステップ実行する程の事は無いんじゃないでしょうかね。 それに、PHPは面倒なコンパイルとか考えなくていいので、実行環境を用意してテキストエディターで修正しながらリアルタイムで動かした方が手っ取り早いですね。
ごめんなさい strtotime が抜けてた <?php $datetime = '2015-11-04 07:00:00'; //MySQLから取得した時間 echo date('Y年n月j日 g:i', strtotime($datetime)); ?>
よく見てみると、エラーの中に"webcrow.jp"の文字が… 実サーバー上でテストをするのはやめましょう!!! その上で、エラーを見てみると"@'localhost' (using password: NO)"という記述が… 実際のサーバー上で(using password: NO)なんてことはあり得ない。 中身がわからんが、require('dbconnect.php')内で行っているであろうDB接続に、パスワードを指定していないから接続できていないんじゃないかな？ ○mysql_real_escape_stringを使うのはやめましょう http://php.net/manual/ja/function.mysql-real-escape-string.php ＞この拡張モジュールは PHP 5.5.0 で非推奨になり、PHP 7.0.0 で削除されました。 MySQLi あるいは PDO_MySQL を使うべきです。 ○サーバー上でテストなんてするのはやめましょう XAMPP等のローカルでテストできる環境を構築しましょう https://www.apachefriends.org/jp/index.html ○ mysql_query($sql) or die(mysql_error()); 構築中やテスト中にはエラー情報がとても有用だが、実稼働サーバーではエラーは必ず隠さなければならない。 攻撃者にとってエラー情報はとても有用な情報源だから。 die(mysql_error())なんてのは最もダメなことの一つ。 ○setcookie('email',$_POST['email'],time()+60*60*24*14); setcookie('password',$_POST['password'], time()+60*60*24*14); クッキーにemail(ログインID)やパスワードを保存しちゃダメーーーッ!! クッキーは他人から見られるものと考えるべきで、ログイン情報がダダ漏れ!! ○「次回から自動的にログイン」機能にとてつもない違和感が… $_COOKIE['email']になんらかのログインできないデータが登録された場合、その後二度とログインできなくなるあたりだろうか？(クッキーを削除すればできるようになるが) おそらくその潜在バグの他にも、何かが隠れている予感が… ログアウト処理、退会処理、あるいはパスワードの変更辺りで、高確率でバグが発生しそうな実装だという問題だろうか？ いまいち判らん。
・とにかく手を動かしてつくってみる事。 ・最初から完璧なものをつくろうとしない事。 まずはこの2点だと思います。 --- 因みに初心者・中級者・上級者の定義ですが、 上級者に関しては その言語における上級者なのか 開発者として上級者なのかによって意味合いがかなり異なってくると思います( 一般には開発者として上級者という意味合いかなと思うのでそちらで話を進めます ) (初心者) 一通り構造化プログラミング等の基礎文法、またPHPであればMySQLとの連携を学び終えて、最低限のCRUD(データベースのCreate, Read, Update, Delete)処理等の操作ができる状態でしょうか。 (中級者) このレベルではその言語におけるフレームワークを習得できていれば望ましいと思われます( PHPなら Laravelとか、FuelPHPとか、CakePHPとか )。 また、中級者になると PHPのバージョン間における差異や、他のプログラミング言語と相対化した上での言語仕様の理解が必要になってくるかなあと思います( 他の言語と比べて PHPはどういう点に優れていて、どういう点で劣るのか 等が理解できている 等 )。ので、必然的にPHPだけではなく他の言語の経験も必要になってきます。 (上級者) 上記の「上級者」の仮定で言えば、その言語単体におけるレベルというより 技術体系全体を通した話になってくると思います。 例えば ・保守性を考慮した設計 ・負荷を考慮した設計( 秒間何リクエストまでさばけるか ) ・上記に関連するキャッシュ周りの処理 ・Git, Jenkins, ユニットテストフレームワーク等との連携 等々。 --- ・完成された素晴らしいプログラムをつくるためにやった方が良いなあと思うこと 1. データモデリング、DB設計、プログラム設計、テスト手法 等を理論で学びながらも、理論だけになることなく 実際に手を動かして習得し続けることが大事かなあと思います。 2. 色々な人のコードに触れ、良いものを学ぶ事。 ・チームビルディング・実務での利便性等を考えるのであれば、 3. Git、Github、Slack、Redmine、アジャイル開発、スクラム、テスト駆動開発 等。 ただ、これは正直個人で開発する上では身につきにくいので、実際にそういう手法が採用されているチームに参画して 実際に課題に直面してウンウン悩みながら学んでいくことが習得するための手っ取り早い道のりです。 2, 3 は個人での勉強というよりも 色々な人やチームとのふれあい、コミュニティへの参画によってもたらされるものだと思うので、ある程度基礎をつけたら インターンシップに参加してみるなり ハッカソンや勉強会に参加してみるなりをお勧めします。
form を見れば分かるように 何もpostするデータが無いからです。
簡単な流れとしては、まずメールアドレスを入力してもらいます。 そのメールアドレスとプログラムでランダムな文字列で作ったパスワードをDBに登録します。 その際、DBには仮パスワードである事を示すフラグを付けます。仮パスワードカラムでもいいですし、パスワード変更日時カラムを用意してNULLにしておくと言った手を取る場合もあります。 次に、入力されたメールアドレス宛に仮パスワードを記したメールを送信します。 利用者はログインページにアクセスしメールアドレスと仮パスワードを入力してログインします。 認証後、プログラム側で仮パスワードである事を確認したらパスワード変更ページ遷移させます。 新しいパスワードを入力してもらい、それをDBに保存したら仮パスワードフラグを消す。 と言った流れでしょうかね。 ユーザ情報にパスワード変更日時を残しておくと、前回の変更から○○日経過したのでパスワードを変更して下さいなんてメッセージを表示させる事もできます。
＞ユーザが途中で止めた場合、切断出来ない?? ユーザーが途中でやめるという事が、そもそもできない。 もしかして、これまでローカルプログラムを作ってきた人ですかね？ 私は、ローカルプログラムを作ってきて、Webプログラムを作り始めた時には根本的な考え方の相違が理解しにくくて大変混乱しました。 それと同様の混乱があるように感じたので、もしかしてそうかな？と思ったわけですが。 1)ユーザーがサーバにリクエスト(HTTPリクエスト)します。 2)そのリクエストをトリガーに、サーバサイドプログラム(PHP)が実行されます。 3)サーバサイドプログラムが何らかの処理をして、クライアント(ブラウザ)になんらかの情報(多くの場合にはHTML)を出力します。 4)出力後に終了、サーバサイドプログラムが確保していたリソース(メモリやDB接続等)はすべて解放されます。 だいたいこんな感じですね。 仮に(1)～(3)の途中(ブラウザでは、読み込み中の表示がされているでしょう)で、読み込みを中断(×ボタンを押す等)した場合でも、サーバー上の処理が止まるという事はありません。 送られてきたデータを、クライアント(ブラウザ)が無視するだけですね。 サーバ上のプログラムを、ユーザーが途中で止めるという事は基本的にできません。 ※できるように作り込めばできないことはないが、普通はわざわざそんな事はしない DBへの接続が必要なら、リクエスト毎にDBに接続して、SELECTやINSERT等SQLを発行して、DBから切断して終了。 リンクをクリックされるたび(=リクエストが発行されるたび)に、毎回それを行います。 毎回のうち、どのタイミングでそれを行うかと言えば…まあ、多少はその個々人の癖があるでしょうが、要・不要に関わらず真っ先にDBに接続する、切断はわざわざ行わないでプログラム終了で自動で切断・解放されるに任せるなんて方法でもいいと思いますよ。 ローカルプログラムの流儀で言うと、不要なのにDBに接続するなんて無駄だとか、不要になったのにDBに接続し続けるなんて無駄だという感覚ですが、Webプログラムはむしろ、必要・不必要を判定する方が無駄、わざわざ一旦切断する手間こそ無駄というのが流儀っぽい。 HTTPリクエストを受けて、データを返して終了するまでの、0.0何秒の世界での話なのでというところでしょうか。
こちらの回答を参考にどうぞ↓ http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q13151645108 「OAuth 2.0」「Application only authentication」はかなり用途が限られている印象を受けます。従来の「OAuth 1.1a」方式の方が汎用性では優れています。 ・OAuth 2.0 … ログイン不要のサイトで、全体として情報を取得する場合に使う ・OAuth 1.1a … ログイン必須のサイトで、ユーザとして情報を取得したりツイートしたりする場合に使う 後者は前者にも転用できますが、前者は後者に転用できません。
画像が×になるのは画像ファイルへの相対パスが間違っているのでは？
Warning: require(../dbconnect.php) [function.require]: failed to open stream: No such file or directory in /home/u666462996/public_html/check.php on line 2 dbconnect.phpをどこに置いてるんでしょうか？ 同じフォルダに置いてるなら ./dbconnect.php が正解です
ありがとうございます。失礼しました。。。 pingのngの部分で一致してしまっていますね。。 if(strstr($result, "ng")) { を if(strstr($result, " ng")) { とすればngの時だけメールが飛ぶはずです。 #ngの前に半角スペースを追加。
PDOを使うほうが圧倒的におすすめです。mysqli関数はですね… ・ガチガチにチューニングしたいときに上級者が使う 　（それにしても手続き型ではなくオブジェクト指向を使うと思うが） ・とりあえず非推奨になったmysql関数からぱぱっと移行したいときに使う このどちらかだと思いますが、おそらくその参考書は後者です。『「mysql_」を「mysqli_」に変えただけでPHP5.5対応を謳っている』と叩かれていた書籍には心当たりがあります。私もその叩きに便乗するといっては変ですが同意できるところは大いにあります。 ちょっと古いですがこちらもよかったら参照してください↓ http://qiita.com/mpyw/items/b00b72c5c95aac573b71
CakePHPの標準機能としてテンポラリテーブルの利用は用意されていなかったように思います。stackoverflowで、ほぼおっしゃるような質疑がありましたので参考までに。
$searchwords = "青山　井上"; $searchwords = preg_replace("/　/", " ", $searchwords); $array_searchwords = explode (" ", $searchwords);
PHPだけで「徐々に表示する」という処理を行うことは可能です。有名なPHP製CMSであるWordpressの設定画面もこれを採用していますね。 処理途中で結果を出力 http://so-zou.jp/web-app/tech/programming/php/sample/progress.htm 【補足】 ・php.iniの設定によっては何もしなくてもob_start();された状態になっていますが、最初に while (ob_get_level()) { ob_end_clean(); } としておけば ob_flush() は不要です。 ・@演算子でエラー抑制しなくても上記のようにちゃんとバッファリングネストレベルを把握した上でコーディングすればエラーは絶対に発生しません。バッファリングのことを理解しないで初心者が煩雑に書いたコードが流布された結果でしょう。 ・PHP5.4以降でセーフモードは消滅しました。 ただ、こういうやり方自体がレガシーすぎるのは言うまでもありません。モダンなほとんどのサイトはJavaScriptを併用して非同期処理を行っているはずです。どうせスクロールさせるにはscriptタグの生成が必要ですし、最初から非同期でやればいい話です。 JavaScript(jQuery)からPHPのAPIを利用する http://qiita.com/mpyw/items/62e6e415f86eb30a5ff4
ごめんなさい書きかけで投稿しちゃいました。 $str = 'ああ22 合計金額5000円 あああああああｗでふぁわｗ 数量2 合計金額10000円'; preg_match_all('/([0-9]+)\s合計金額/', $str, $matches); $last_matche = array_shift(array_reverse($matches[1])); echo $last_matche;
むしろ、1行目が挿入されているという事の方が不可解な気が… ちゃんと見てないけど、こういうことかな。 $sql->execute(array('a' => $value[A], 'b' => $value[B], 'c' => $value[C], 'd' => $value[D], 'e' => $value[E])); あるいは『INSERT INTO sample』なのに『select * from test;』としているのがおかしいのか、それともこれは単に書き間違えなのか？ なんでループ内でprepareしてるんだろうとか、なんで無意味に$keyを取得してるんだろうとか、$value[A]とかはちゃんと$value['A']と括った方がいいよねとか、DBに主キーはちゃんと設定しているのだろうかとか、エラーやワーニングは出ていないんだろうかとか、色々とあるけれど、まあそこはいいとして… aとかAとか見てらんねーよ!! テストやサンプルにしても、もうちょっとなんかあるだろう!! 見てらんねーもん作っても、あんま勉強になんかなんねーよ!! という事は、強く言っておこう。 単なる書き間違えかもしんないが、sampleやtestなんて現実的な意味をなさない名前だから、間違っていても気付かない。 aとかAも同様、だから碌に勉強にならない。 プログラムなんて、頭の中で意味をこねくり回すものだからだ。 という事。
「以降」ということはそれ自身も含めて削除ということですよね？ 「RFC3986定義の厳密なHTTP URIの正規表現」をPHP用に最適化 http://qiita.com/mpyw/items/1e422848030fcde0f29a この基本実装例の$regexを使います。これを使えば判定が少し難しい「どこまでをURLと見なすか」という問題に簡単に対処できます。もちろんこれ専用に正規表現を作りなおしてもいいですが、面倒なので「とりあえずURLにマッチさせてそのコールバック関数内で更に詳細な判定を続ける」ということにします。 <?php $regex = ...; $callback = function ($m) { if (strpos($m[0], 'http://www.example.com/blog/tag/') === 0) { return 'http://www.example.com/blog'; } else { return $m[0]; } }; $html = ...; $html = preg_replace_callback($regex, $callback, $html);
str_getcsv($str) で一発。 PHP Manual - str_getcsv http://www.php.net/manual/ja/function.str-getcsv.php
>> 【疑問点3】で回答頂いている内容なのですが、 >> array_unshiftを使用した場合、 >> ... 【疑問点1】で書いている通り、$blankに何が代入されているかによって結果が変化します。改行コードであれば前者のようになり、空文字列・NULL・FALSEが代入されている、あるいはそもそも未定義変数の場合は後者のようになります。未定義変数の場合に関してはE_NOTICEレベルのエラーも発生します。 このファイル自体では何も代入している記述は見当たらりません。元のレンタルサーバにあるファイルは本当にこの記述と完全に等しく、且つ全く同じ実行の仕方をしていましたか？どちらかが違うとしか思えない結果になっています。
普通というか一般的にはテーブルに情報を持つように設計する。 たとえば USERID,PASSWORD,KAIINFLAG みたいな感じ。 データは s1234567,password,1 s1234,password,0 1234567,password,0 d123456,password,0 でUSERIDとPASSWORDで取得してKAIINFLAGの値で制御する。 select USERID, KAIINFLAG from member where USERID='userid' and PASSWORD='password'; ちなみにmysql_queryはもう今から作るなら使わないほうがよいよ。
この方法自体に特に問題はなく、むしろ$_SESSIONではなく$_GETで引き回す場合に発生するオープンリダイレクタ脆弱性にも対処出来ているので良い方法だと思います。 注意すべきは、（質問内容に関わらず）ログイン後に session_regenerate_id(true); を実行しているかどうか、というところですね。php.iniの設定でPHPSESSIDを$_GETでも受け入れるようになっている(非推奨)あるいはXSS脆弱性がある場合にセッションフィクセーション攻撃が成立してしまいます。 http://qiita.com/mpyw/items/7852213f478e8c5a2802
作ったやつに許可とってからな？ まず、どのようなサイトに埋め込むのか どのようなプログラム言語か？ これわからないと答えられんw
＞　あくまで該当エラーメッセージの表示は入力後にしたいのです。 じゃぁこんな感じかな。 ========== <?php $err_message = ''; if ($_POST['key']) == '1') { if (mb_strlen($_POST['name']) === 0 && mb_strlen($_POST['comment']) === 0) { $err_message = '名前・コメントが両方未入力です。'; } else if (isset($_POST['name']) !== TRUE || mb_strlen($_POST['name']) === 0) { $err_message = '名前を入力してください。'; } else if (isset($_POST['comment']) !== TRUE || mb_strlen($_POST['comment']) === 0) { $err_message = 'コメントを入力してください。'; } else if (mb_strlen($_POST['name']) > 20 && mb_strlen($_POST['comment']) > 100) { $err_message = '名前（20文字以内）とコメント（100文字以内）が両方文字数制限を超えています。'; } else if (mb_strlen($_POST['name']) > 20) { $err_message = '名前は20文字以内で入力してください。'; } else if (mb_strlen($_POST['comment']) > 100) { $err_message = 'コメントは100文字以内で入力してください。'; } else if (preg_match('/http/', $_POST['comment']) > '0' ) { $err_message = 'スパム対策により、URL付きのコメントは投稿できません。'; } else { $name = htmlspecialchars($_POST['name']).'&thinsp;<font size="2">さん</font>'; $comment = htmlspecialchars($_POST['comment']); $now = date('m月d日 H時i分'); $post_data = "<strong>名前：</strong>$name&emsp;<strong>コメント：</strong>$comment&emsp;<strong>時間：</strong>$now\n"; $read_data = file_get_contents('bbs.txt'); file_put_contents('bbs.txt',$post_data . $read_data); } } ?> <html> <head> <meta http-equiv="Content-Type" content="text/html" charset="utf-8" /> <title>一言</title> </head> <body> <?php if ($err_message != '') { ?> <p><?php print $err_message; ?></p> <?php } ?> <form action="bbs2.php" method="post"><input type="hidden" name="key" value="1"> 名前：<input size="15" type="text" name="name" value="">&emsp;コメント：<input size="30" type="text" name="comment">&emsp;<input type="submit" value="送信">&nbsp;<input type="reset"> </form> <hr> <?php $lines = file('bbs.txt'); foreach ($lines as $l) { print "</p>" . $l . "</p>\n"; } ?> <hr> </body> </html> ==========
＞　同じエラーが出ています。どこがおかしいのでしょうか？ ダンプしたSQL文やログに出ているエラーメッセージを確認されましたか？ or exit() でエラーが出た際にプログラムを終わらせていますが、これだと画面にPHPが吐いたエラーメッセージが表示されませんが、ログファイルにはエラーメッセージが出ているはずなので確認しましょう。 DBの処理周りをデバッグする際は、ダンプしたSQL文をDBのコマンドラインで実行してみて目的の結果が得られるか確認しましょう。 コマンドラインで実行して目的の結果が得られなければSQL文が悪いですし、目的の結果が得られたらプログラムが悪いと言う事です。 また、本やホームページのコードを参考にする際は説明を細かく読みましょう。 参考にされた知恵袋の回答者は「プリペアド・ステートメント」を使った方法だと書いています。（ダンプしたSQL文は「・・・ like ? 」と言った感じで条件が書かれているはずの部分が ？ になっているはずです） POSTされて来た値をSQL文に組み込む際にそのままの値を使うとSQLインジェクションの原因になるので、対策として値を全てエスケープ処理するかプリペアド・ステートメントを利用するのが正しい処理です。 値を全てエスケープ処理する場合、プログラムの変更・修正等で漏れる危険性があるのでプリペアド・ステートメントを使う方がいいかと思います。 mysqli_query() はプリペアド・ステートメント処理を行わないクエリー実行方法なので、プリペアド・ステートメントを利用した方法に修正しないとクエリーを実行出来ないと思います。 http://php.net/manual/ja/mysqli.prepare.php
2, 3 の質問内容があまりにも初歩的すぎるのに対して 1 は少し難解になってきますがご了承ください。 【2】 $html = ...; return $html; と return ...; は同じです。値を代入してからそれをreturnしても、値自体をreturnしても動作に相違点はありません。好みの問題です。 【3】 シングルクオーテーションとダブルクオーテーションはどちらも文字列リテラルを表します。今回のケースはただの空文字列なので全く同じ意味です。但し特殊文字が入ってくる場合はこの限りではありません。 http://qiita.com/mpyw/items/d61b50d90e84e289e2be 【1】 どちらもパターンにマッチしたものを空文字列に置換しますが、パターンそのものが違っています。 / class=[\'"]([^\'"]+)[\'"]/i 「 class="..."」にマッチする。「...」の部分は「"」以外の文字の1回以上の繰り返しとして表現している。「i」オプションがあるので大文字小文字を区別しない。 /(height|width)="\d*"\s/ 「height="..." 」または「width="..." 」にマッチする。「...」の部分は半角数字の0回以上の繰り返しとして表現している。末尾の半角スペースは改行やタブであってもよい。 （どこで使われているコードなのか存じませんが）正直な感想、書き方に一貫性が無いので書いた人もかなり大雑把なんだろうなぁと思います… http://www.mnet.ne.jp/~nakama/
こちらでそのコードをコピペして ・自分用のトークンをセットしたTwistOAuthオブジェクトを生成 ・filter_inputで受け取る部分を文字列直書きに として最低限修正して動作させてみましたが正常に動作します。原因としては実行しているコンピュータがインターネットに繋がっていない、あるいはそのホスト名がTwitterのブラックリストに登録されている、などの可能性が考えられます。 （未来サーバはブラックリストに入っていたと思います）
>サイトには名前とパスワードを入力していただきログインが出来るような仕組みを作りたいのですがこの場合はどのようにしたら良いのでしょうか。 質問のコードは、自分で書いたものですか？　ならば、データベースアクセスなどは正常に動くのを確認してありますね？　それなら＃１で指摘したif ($_COOKIE['name'] != '') ～のif文をカットすれば動くと思います。 ただ、if (!empty($_POST)) はちょっと……。if( $_SERVER['REQUEST_METHOD'] == 'POST') とかにしたほうがいいのでは。 あと、ログイン情報をセッションに保管した後、更にクッキーにまで保管している理由は？　そもそもクッキーにパスワードを保管するなんて危険なことはしてはダメですよ。そのへんも見なおしたほうがいいのでは。
その本は読んでないのですが、ログイン処理についての説明の部分なのですよね？ 通常、ログイン処理が必要なペーでは、そのページの処理の冒頭でログインされているかどうかをチェックし、されていなければログインページにリダイレクトします。 index.phpにアクセスすると、最初にログインの状態をチェックし、していなければlogin.phpにリダイレクトされているのでしょう。そしてその仕組は、そこに書かれている解説を読めばわかるようになっているのではありませんか。そのためのサンプルですから。
恐らく、20150908rin様が行いたい動作を現状ソースを修正して行うには、簡単に書くと以下のような感じになるかと思います。 <?php $host = "******"; // データベースのホスト名又はIPアドレス $username = '******'; // MySQLのユーザ名 $passwd = '******'; // MySQLのパスワード $dbname = '******'; // データベース名 $params = $_POST; $link = mysqli_connect($host, $username, $passwd, $dbname); // 接続成功した場合 if ($link) { // 文字化け防止 mysqli_set_charset($link, 'utf8'); if(isset($params['goods_name']) && isset($params['price'])){ $insert_query = "INSERT INTO home_center VALUES('{$params['goods_name']}',{$params['price']})"; $insert_result = mysqli_real_query($link, $insert_query); if($insert_result){ echo "SUCCESS!"; }else{ echo "FAILED"; } } $query = 'SELECT goods_name, price FROM home_center ORDER BY price ASC'; // クエリを実行します $result = mysqli_query($link, $query); // 1行ずつ結果を配列で取得します while ($row = mysqli_fetch_array($result)) { $goods_data[] = $row; } // 結果セットを開放します mysqli_free_result($result); // 接続を閉じます mysqli_close($link); // 接続失敗した場合 } else { print 'DB接続失敗'; } ?> <!DOCTYPE html> <html lang="ja"> <head> <meta charset="UTF-8"> <style type="text/css"> table, td, th { border: solid black 1px; line-height: 1.5; } table { width: 250px; } </style> </head> <body> <h1>ホームセンター商品一覧</h1> <form action="/hoge.php" method="POST"> <p> 商品名：<input type="text" name="goods_name" size="20">&emsp;価格：<input type="text" name="price" size="10"> 円<br><input type="submit" value="送信"><input type="reset" value="リセット"></p> </form> <table> <tr> <th>商品名</th> <th>価格</th> </tr> <?php foreach ($goods_data as $value) { ?> <tr> <td><?php print htmlspecialchars($value['goods_name'], ENT_QUOTES, 'UTF-8'); ?></td> <td align=right><?php print htmlspecialchars($value['price'], ENT_QUOTES, 'UTF-8'); ?></td> </tr> <?php } ?> </table> </body> </html> 行った対応としては、以下になります。 ・$_POST変数より、submitボタンで送られてきたパラメータを$param変数に格納。 ・goods_name,price共にパラメータがある場合は、SELECT文でデータを取得する前にINSERT文でデータを追加。 ・INSERTの成功、失敗でSUCCESSとFAILDを表示 後は、html部分のformタグにactionとmethodを追加しています。 ご参考になれば幸いです。
以下のメモリ上でSQLiteのデータベースを一時的に作成するコードにて試してみましたが、再現できません。常にTrueになります。 <?php // 使う情報 $id = 66; $password = 'xyz'; // 接続 $pdo = new \PDO('sqlite::memory:'); // データ準備 $pdo->exec("CREATE TABLE members(id INT, password TEXT)"); $stmt = $pdo->prepare("INSERT INTO members VALUES(?, ?)"); $stmt->execute([$id, password_hash($password, PASSWORD_DEFAULT)]); // データ検証 $stmt = $pdo->prepare("SELECT password FROM members where id = ?"); $stmt->execute([$id]); var_dump(password_verify($password, $stmt->fetchColumn())); 【蛇足】 ・プリペアドステートメント生成時に変数を展開するのは用い方を誤っています。これではSQLインジェクションの対策になりません。$idが「' OR 1=1」など悪意のある文字列でないことが保証出来ている場合のみにしかこの手段を用いてはなりません。 ・FETCH_ASSOCで連想配列で抜き出してきても先頭1カラムしか利用しない場合は最初からFETCH_COLUMNで十分です。そしてこれは更にfetchColumn()という専用のメソッドによって簡略化出来ます。 (詳細) http://qiita.com/mpyw/items/b00b72c5c95aac573b71
・t_recruit_type%5B%5Dが、aかbかそれ以外 ・t_area%5B%5Dが☆か▲かそれ以外 ということですが、これだと組み合わせが３ｘ３の９通りあります。 このとき、パターン１と２のどちらにも該当するときにどちらを優先するかと どちらにも該当しないとき　なんの広告を出すかを決めないと ロジックは作れないですよ。 つまり、 t_area%5B%5D=☆&t_recruit_type%5B%5D=a　　→　[a]　と　[c]のどっちか？ t_area%5B%5D=☆&t_recruit_type%5B%5D=b　　→　[b]　と　[c]のどっちか？ t_area%5B%5D=★&t_recruit_type%5B%5D=a　　→　[a]　と　[d]のどっちか？ t_area%5B%5D=★&t_recruit_type%5B%5D=b　　→　[b]　と　[d]のどっちか？ t_area%5B%5D=▲&t_recruit_type%5B%5D=z →パターン１と２のどちらにも該当しないときは　何を出すか？
実験してみましたけど、できましたよ。 ---<page1.php>--- session_start(); ～上記の画像生成部～ $_SESSION[img'] = $img; exit; ---<page2.php>--- session_start(); header('Content-Type: image/jpeg'); mb_http_output( "pass" ) ;　//php4.2以前用 print $_SESSION['img']; 疑うなら ・test.jpgがオープンできていてるか 　（ファイルの存在チェックなどされていないので、php設定でエラー出力してないとわからないかも） ・session_start(); しているか ・画像出力時は画像用のヘッダを出しているか ・PHP 4.2以前を使っているならバイナリデータを自動コード変換しないよう無効化しているか ・画像生成なのに "<img src=なんちゃら"> のとこに画像のバイナリデータをいれてないか あたりでしょうか
＞TCP/IPというものは、サーバですか？言語ですか？もしくは、それ以外ですか？ それ以外です ＞PHPとは何がちがうのでしょうか？ 共通点は、コンピュータネットワークで使う技術というだけで、 それ以外、全く何もかも違います。 ＞この物体は何なのでしょうか… 物体ではありません。 PHPは、書かれたソースコードなど具体的にコレというものがありますが、物理的なものではなく、ただの手順でしかありません。 データ変換や伝達の手順とインターネットの手順の総称です。 実体がないから分かりにくいでしょう。 勉強するとしても後回しでよいです。 TCP/IPはほんの一部だけ理解すれば普通は事足ります。 実体のある 192.168.1.1とかのローカルＩＰアドレス 210.132.71.10とかのグローバルＩＰアドレス などと、その設定の事だけ覚えれば十分です。
$_FILESはそのスクリプト終了するまでしか存在しません。$_FILES['UseImg']['tmp_name']の位置にあるデータ自体も同様です。スクリプトがimg要素を返して、そのimg要素のsrc属性に指定したphpスクリプトに（画像を表示するために）ブラウザがアクセスしたときにはすでに跡形もありません。そもそも$_FILES['UseImg']['tmp_name']はフルパス（サーバパス）なので、httpスキームになっていません（httpでアクセス出来る場所ではありません）。 $_FILESが有効なうちに表示までしてしまおうと思えば、img要素にdataスキームでバイナリデータを埋め込むしかありませんが、どうせセッション変数に画像データを保持するならセッション変数から表示するスクリプトにした方が手っ取り早いとおもいます（無理にdataスキームを使うこともない）。 提示されたUseImg.phpは（セミコロンの漏れが何箇所かあるので）文法エラーになりますよね（ブラウザから直接UseImg.phpにアクセスし直せば自明です）。下記のように書き替えればちゃんと動くと思います。 <?php session_start(); if (!isset($_SESSION['UseImg'])) { die('abort'); } switch ($_SESSION['UseImg']['type']) { case IMAGETYPE_JPEG: header('content-type: image/jpeg'); break; case IMAGETYPE_PNG: header('content-type: image/png'); break; case IMAGETYPE_GIF: header('content-type: image/gif'); break; } echo $_SESSION['UseImg']['data'];
お礼ありがとうございます。少し補足させていただきたい点がありましたので、再度回答させていただきます。 まず、php5.5でなくてもphp5.3以上にはcryptというhash関数がありますので、こちらを使うのもありです。説明を読んでいただければ分かりますが、password_hashはcryptのラッパーですので、コチラにしっかりソルトをつけて、総当り攻撃の対策にストレッチングをかけてあげるなどすれば求めるセキュリティのレベルによりますがかなり強固なhashになるかと思います。 http://php.net/manual/ja/function.crypt.php また、以下のircmaxell/password_compatはpassword_hash関数の互換となる機能をもったライブラリですので、コチラを使うのもありかなと思います。 https://github.com/ircmaxell/password_compat phpassというhashライブラリを使った事がないので、少し調べただけですが、恐らく他のhash関数と比べて優位差はないかと思いますので、情報のないこちらのライブラリを使う必要は感じないというのが正直な感想です。 ※ライブラリを使う方がよいと言うのは、必要な機能が標準関数などでは実現できず、自作するのと比べれば実績のあるライブラリを使用した方がよいという意味合いだと思いますので、既に用意されている機能を使わずにライブラリを使う必要はないと個人的には思います。 練習頑張ってください。
■ mail.fla mail.flaでは送信用と受信用のLoadVarsが必要なように思います。 最終的にPHPから返って来たデータをtraceする感じにしています。 ---------- // 送信用LoadVarsの設定 LV1 = new LoadVars(); LV1.shimei = shimei; LV1.email = email; LV1.subject = subject; LV1.honbun = honbun; // 受信用のLoadVarsの設定 LV2 = new LoadVars(); LV2.onLoad = function(success) { // 送信成功時に呼ばれるメソッド trace(LV2.message); }; LV1.sendAndLoad("flash_mail.php", LV2, "POST"); ---------- ■ flash_mail.php var_dump()は検証用だと思うので削除して、 Flash側に返す値はkey=valの値でechoする。 ---------- <?php $shimei = $_POST['shimei']; $email = $_POST['email']; $subject = $_POST['subject']; $honbun = $_POST['honbun']; // 送信者へメール $to = $email; $from = "~"; $subject = mb_convert_encoding($subject, "utf-8", "auto"); // utf-8にエンコード $honbun = mb_convert_encoding($honbun, "utf-8", "auto"); mb_internal_encoding("UTF-8"); mb_send_mail($to, $subject, $honbun, $from); echo 'message=test complete!'; ?> ---------- 参考URLは、CGIとFlashの連携ですがそちらと同様の考え方でいけると思います。
＞【<a href="?q=<?php echo $q."?=page=".$i; ?>"><?php echo $i; ?></a>】 この部分についてはパラメータを1つずつ分けたほうが分かりやすいと思います。 既存ままだと生成される文字列は ---------------------------------------------- <a href="?q=test?=page=2">2</a> ---------------------------------------------- という風になってしまう気がします。 パラメータの渡し方とすると、 ---------------------------------------------- <a href="?q=test&page=2">2</a> ---------------------------------------------- が適切だと思うので、 ---------------------------------------------- <a href="?q=<?php echo $q;?>&page=<?php echo$i; ?>"><?php echo $i; ?></a> ---------------------------------------------- という風に書くことで正しくパラメータが渡せるような気がするのですが、いかがでしょうか？
> 最初のユーザAがアクセスしてきてその変数にAの情報を格納します。ほぼどうじにユーザBがアクセスしてきた場合は、そのメソッドを呼んだ際に直前に格納されたAの情報が取れてしまうのでしょうか？ AとBのアクセスは　別のプロセスですので、それぞれでメモリー空間は独立していますので たとえstatic変数であっても、変数を共有することはできません。 よって、否です。 もし、AとBで情報を共有したいなら、プロセスの終了と同時に開放してしまうPHPの変数ではなく、 DBやファイルを使う必要があります。
知識がないなら、学んで下さい。学ぶ過程でわからないことがあれば、いくらでも協力します。学ぼうとぜす、代りにやってもらおうと考えているなら、ここでは誰も協力はしないでしょう。
あー！！すみません。見落としてました（自分でもtypoeし直してるのに）。 >$stmt->bindParam(sprintf(':word%d', $key), $word, PDO::PARAM_STR); bindParam（変数をバインドする）だとexecute()時点の$keyの内容になっていまします。bindValue（値をバインドする）ですね。 $stmt->bindValue(sprintf(':word%d', $key), $word, PDO::PARAM_STR); もしくは（bindParamを使うなら） $stmt->bindParam(sprintf(':word%d', $key), $arr[$key], PDO::PARAM_STR); です。
>> 同時に複数のエントリーを阻止したいのが狙いです。 そもそもこれが目的で $_SESSION を用いるのが間違っている気がします。$_SESSION の値はユーザ側から送信されるクッキーに対応して個別に管理されていますが、ブラウザを変えるだけでクッキーは変更されるので多重エントリーは出来てしまいます。 また「同時進行を防げばエントリーの手間が増える」とお思いなのかもしれないですが、相手人間であるとも限りません。任意のプログラミング言語、たとえばPHPでも「スクレイピング」という手法でエントリーを自動化することも可能です。JavaScriptをふんだんに盛り込めばある程度阻止出来るかもしれませんが、これもSeleniumというJava製のライブラリを併用すれば突破出来てしまいます。
【原因】 XMLは何も無いところに値を置くことが出来ません。これは例えばもし、もとのHTMLの bar の部分が <span>bar</span> であれば正常に残ることを意味します。 【解決策】 DOMDocumentのまま使いましょう。やや不便な面もありますが、スクレイピングに使えることには変わりありません。 PHPネイティブのDOMによるスクレイピング入門 http://qiita.com/mpyw/items/c0312271819baee09132 不便を感じてきたところでGoutteなどのライブラリの導入を検討するのもありです。
>コメントはnonceなしで投稿できるようになっているのでしょうか？ wp-comments-post.php自体にはnonceのチェックはなったと思います。フォームを使わずに他の方法で直接wp-comments-post.phpにPOSTされれば無力です。 というか、明示的に生成／チェックしないと自動ではnonceが使われなかったハズです。そうでなければNonce! Pleaseなどのプラグインが存在するわけがないです。 まぁ >コメントフォームを設置していないにもかかわらず >コメント機能を有効にしている なんて運用は普通はあり得ませんよね。コメント機能を有効にするということは（設置者として）コメントのチェックを行う義務が生じますから。
https://ja.wordpress.org/plugins/users-ultra/ ユーザーコミュニティを作成するプラグインです。使った事はないですが、いろんなSNSと連携可能ですし、結構便利そうです。 とりあえずインストールして試してみてはいかがでしょうか。
アタマで考えようとしないこと。 本で勉強しようとする人は、どこかに「絶対の正解」があってそれだけを覚えようとします。 そんなものはないのです。どんどん言語も進化しますから。 ご存じないかもしれませんが、Javaというものはマイナーな版が上がるごとに、非推奨クラスが次々に出てきてあれをおいかけるだけで大変だという状況でしたよ。 もっともPythonみたいなものは、版数が2なのか3なのかを最初に決めておかないと大変ですけど、PHPはそういうことはありません。 版数が一直線にどんどん上がっていきますので、それを追いかけるだけです。 実際に動かしてみるのが一番です。 何かにげたを預けるのです。 パーフェクトPHPをお持ちなら、それに書いてある通りにやってみてください。 まあ、VirtualBoxなんていう仮想サーバー（無料）をダウンロードし、自分のPCに立ち上げ、centOSというLinuxをインストールし、Apachの起動ができるようにして環境を整えて下さい。 あらたな仮想サーバー用のポートは自動的にできますので、サーバ―機が存在してるのと同じことになります。 ここで、HTML5で入口ページを作り、あとはPHPでページ編集プログラムを組んでいけばいいのです。 廃止されている関数なんて、やってみたらどうなるかすぐに知れます。 やってみたら体が覚えます。 教科書が正しい、それを覚えよう、という感性は捨ててください。 まず、手が動く、というところまでやってください。
そろそろ元の質問からだいぶ離れてきているような気がします。 まだまだ疑問がおありであれば、別の質問を立てることをお勧めします。 私も盆休みが終わるので、今後は回答が難しくなりますし。 > 提示して頂いたサンプルコードを元に自分のDBのパスワードを入れ、 > phpファイルを作り実行しましたが (中略) これで問題ないんでしょうか？ 正しく動いてないでしょう。 サンプルを自分の環境で動くように直して使われようとされているのでしょうが、 直し方が間違っているのかと思います。少なくとも以下のコードは修正の要否を 検討する必要があるかと。 $conn=mysqli_connect('localhost','root','*******') 　⇒ パスワードは修正されたようですが、その他の接続情報は合っていますか？ mysqli_select_db($conn,'userid_db') 　⇒ 接続先のDB名は合っていますか？ $sql="SELECT * FROM userid_tbl;" 　⇒ 接続するテーブル名は合っていますか？ <td><?= $userid['id'] ?></td><td><?= $userid['userName'] ?></td><td><?= $userid['passWd'] ?></td> 　⇒ 接続するテーブルには Id, userName, PassWd という列があるのですか？ 　　 実際に接続するテーブルに存在する列になおさなくてはダメです。 ネット上にあるサンプルは、ステップ・バイ・ステップな初心者向け解説本とは 違って『コピペしてすぐに使えるモノ』ではありません。使いこなすためには サンプルに書かれているコードの内容を理解して、自分の環境に合わせてカスタ マイズする必要があります。 今回紹介したサンプルは解説が詳しく書かれているので、理解しやすいほうですよ。 > 例えば、mysqli_connectとかのページ（http://php.net/manual/ja/mysqli.construct.php) > を見ても、そのままコピーペーストで使えるならいいんですが、 > 応用がきかないので中々使いこなせないです。 先にも書きましたが、サンプルとは「コピペで使えるモノ」ではありません。 例えるなら国語辞典の例文です。国語辞典の例文をコピペしても、小学生の作文 すら書けないでしょう。例文の意味を理解して、応用する能力が必要です。 私が「マニュアルを見てますか？」というのは、マニュアルの『内容』、例えば 関数の機能や、関数の引数、使い方を確認していますか、と言う意味です。内容 をきちんと確認しているのであれば、mysqli_query($sql, $link) などというミスは 質問するまでもなく自力で気づきます。
こんにちわ。 >$deliveryNum = round(usces_get_item_count() / 6); ここで四捨五入(round)しているためかと思います。 四捨五入ではなく、floor関数で小数点以下を切り捨て、 +1すれば意図してようになるかと思います。 $deliveryNum = floor(usces_get_item_count() / 6) + 1;
> HTTPヘッダとは、<head>～</head>間のことではないんでしょうか？ 違います。<head>～</head> は『HTML ヘッダ』です。『HTTP ヘッダ』ではありません。全く別物です。 > mb_language("Japanese"); > mb_internal_encoding("UTF-8"); > と書いてますが、(以下略) 違います。これらはサーバ上で PHP が動作するときに使用する内部エンコードの設定です。 『HTTPヘッダ』や『Content-Type』 は PHP に限らず、Webシステムではどんな言語でも使用する基礎的な HTTP 通信の仕様です。Google 検索すればいくらでも情報が出てきますので、研究されることをお勧めします。
状況がよく分かりません。 > 容量が8GBあるものに対して、転送されたファイルは2GB程しかありません。 というのは分かりますが、 > 容量が軽いものでも転送されませんでした。 容量が軽い物はどうなるのですか？（「どうならない」じゃなくて「どうなる」のかを書いてください） また、phpを介さずにftp.shをコマンドラインもしくはCGIで実行したらどうなりますか？
いろいろとツッコミどころ(潜在的バグ)は存在するものの、そういうところを全部無視しておそらく原因はコレ↓ <form action="" method"post">
＃phpじゃなくてJavaScriptの質問ですよね？ >onclick="location.href = 'http://test2/xoops/modules/profile/List.php';mode.value='Edit';createYearSelected.value='2015';employeeCode.value='999000001';" 逆に何故この記述でList.phpに値が渡されると思ったのでしょうか？location.hrefで指定されているのは'http://test2/xoops/modules/profile/List.php'だけですし、実際ブラウザはそういう動作ですよね。 $_GETで（QueryStringで）渡したいなら onclick="location.href = 'http://test2/xoops/modules/profile/List.php?mode%2evalue=Edit&createYearSelected%2evalue=2015&employeeCode%2evalue=999000001'" ではないんですかねぇ・・・
$parentId = get_the_ID(); $args = 'posts_per_page=-1&post_type=page&orderby=menu_order&post_parent='.$parentId; ここまでが、出力するページの条件を決める部分で、これ以降は、どのように出力するかを決めています。 この書き方だと、出力するページの条件を、post_parentで「$parentIDを親に持つページ」に設定しています。 同様に、孫ページを出力する場合は、子ページでループ処理をさせる中で、さらにループ処理をさせます。 その前に、query_postsは使わない方がいいかもしれません。 処理にものすごく無駄ができるので、パフォーマンス低下の原因になります。 なので、代わりにget_postsを使って、少し書き換えてみます。 <?php $parentId = get_the_ID( $post->ID ); $args = array ( 'posts_per_page' => -1, 'post_type' => 'page', 'orderby' => 'menu_order' ); $parentArgs = $args; $parentArgs += array ( 'post_parent' => $parentId ); $parentPosts = get_posts ( $args ); foreach ( $parentPosts as $valPosts ) { $childID = get_the_ID ( $valPosts->ID ); $valArgs = $args; $valArgs += array ( 'post_parent' => $childID; ); $childPosts = get_posts ( $valArgs ); foreach ( $childPosts as $valPost ) : ?> <div class="child-box"> <a href="<?php the_permalink(); ?>"><img src="<?php echo wp_get_attachment_url( get_post_thumbnail_id() ); ?>" width="190" alt=""></a> <p class="title"><a href="<?php the_permalink(); ?>"><?php the_title(); ?></a></p> <p>価格:<span class="price"><?php $selling_price = get_field('selling_price'); echo $selling_price."円"; ?></span></p> </div> <?php endforeach; } ?> すべての子ページに孫ページが存在して、 ページが取得できない場合を全く想定していない書き方です。 その辺りは適当に加えておいてください。 うまくいかなかったらごめんなさい。
ソースが一行も提示されていないので何がどうなっているのか（どういうメールデータを生成しているのか）推測不可能ですが、下記のようなソースを書かれているんですかね？ http://d.hatena.ne.jp/t_komura/20091101/1257080705 http://tech.aainc.co.jp/archives/3570 正直、utf-8非対応のメーラが少数になってきているので、mb_language('uni'); でmb_send_mailを使う（utf-8のメールにする）方がよほど楽だと思います。 http://ja.wikipedia.org/wiki/ISO-2022-JP iso-2022-jpのメールでiso-2022-jpの範囲外の文字（iso-2022-jp-ms固有の文字）を「確実に処理してもらう方法」はありません。出来る場合もあるという程度でしょう。丸に１などの文字はフォームからPOSTされた時点でエラー文字として弾くか、いわゆる半角カナをmb_convert_kanaで置換するのと同様に自前で(1)などに置換する（確認画面に表示して置換後の内容を確認してもらってから送信する）ことになります。 というか一般的にメールフォームの主目的は閲覧者からサイト管理者への連絡用なのでサイト管理者の固定された環境へ送信できて内容が確認できればいいんですけどね。 他者への送信を組み込むとスパム判定に引っかからないようにとかいろいろなメーラを考慮するとか面倒なことになります。とりあえずは生成したメールデータがRFCに則った形式になっているかどうかしか判断の根拠はありませんが、その場合にはiso-2022-jp-msは使えません。
>状況は非常に切迫しています。 確かに。 何が切迫しているか説明がないくらいですから、パニックなんでしょうね。 >phpはほぼ分かりません。 わかる言語あります？ 分岐や繰り返し処理があるやつで。 >検索結果に応じてサーバーに置いたテキストファイル～以下。 何がしたいのか意味がわからない。 具体例を出す前に、何を作っているのか仕様をまとめてください。 単純に、何らかの言語を使うまでもなく日本語で正確に分析・説明出来ないなら、絶対にプログラムを書くことは出来ません。 仕様も作りたいものもわからないんで、とりあえずタイトルだけ答えます。 はいこれどうぞ。 http://php.net/manual/ja/function.file-get-contents.php 指定したファイルの内容を全て文字列として読み込む。
それぞれの公式サイトでPHP5.5への対応状況を確認して、必要に応じてバージョンアップするしかないでしょう。 公式にPHP5.5対応と謳っていれば、動作は問題ないでしょう。 あとはプラグイン等の互換性のチェックでしょうね。 サードパーティ製のプラグインは、モノによっては新しいバージョンで障害を起すこともあるので、十分注意が必要だと思います。
>> 1) 最新のXAMPPのコントロールパネルのverはV3.2.1で合ってますでしょうか？ 手元にWindows環境がないので確認できませんがPHPのバージョンが「5.5.24」「5.6.8」のいずれかであればきっと最新版のはずです。PHPのバージョンはコマンドプロンプトまたはPowerShellから php -v とすれば確認できるでしょう。あるいはApacheから呼び出されるWeb用のPHPスクリプトとして <?php var_dump(PHP_VERSION); というものを作成してもいいと思います。 (場合によってはこの2つで結果が異なることもあります) >> 2) XAMPPをWindowsのCドライブ以外のドライブにインストールして無事に動いていますが、Cドライブでなくてよかったでしょうか？ 私もWindowsがあったころはDドライブ使ってましたね。 """パスに日本語が含まれない""" 限りは特に問題ないでしょう。日本語が含まれると大問題です。 >> 3) その他何か新しくなったことがありましたら、是非教えて下さい。 PHP5.3の新機能 http://www.php.net/manual/ja/migration53.new-features.php PHP5.4の新機能 http://www.php.net/manual/ja/migration54.new-features.php PHP5.5の新機能 http://www.php.net/manual/ja/migration55.new-features.php PHP5.6の新機能 http://www.php.net/manual/ja/migration56.new-features.php 更にそろそろPHP7.0がリリースされようとしていますね。私はα版ですがMacOSXにインストールして使ってます。（Windowsだと面倒かもしれません） PHP7で変わること http://d.hatena.ne.jp/hnw/20150525 実はFacebookが独自開発した HHVM / Hack では既にPHP7を上回る機能が使えたりしますｗ Hack http://hacklang.org/
こんな感じでどうでしょう ========== <?php $repeat = $_GET['repert']; $fp = fopen("file2.csv", "r"); $count = 1; while ($data = fgetcsv($fp, 10000)) { if ($count == $repeat) { print <<<EOD $data[0]・$data[1]・$data[2]<br> EOD; break; } $count++; } fclose ($fp) ?>
>別途CSVファイルに落とす予定 CSVファイルにするならfputcsvを使うべきです。（echoの引数のように）文字列として得るだけであっても（すでに回答がありますが）テンポラリファイルにfputcsvで書き出してそれをfile_get_contentsした方が確実です。 データの中にカンマがあったらどうするとか自分でやるのは面倒でしょ？
こちらに書きました。 http://qiita.com/ShibuyaKosuke/items/f83f43898920daf01e7b
元のWP_Queryを生成するときの引数の配列で、posts_per_pageの値はどうなっていますか（何も指定していないのではありませんか）。 http://wpdocs.osdn.jp/%E3%82%AF%E3%83%A9%E3%82%B9%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/WP_Query#.E3.82.BF.E3.82.B0.E3.83.91.E3.83.A9.E3.83.A1.E3.83.BC.E3.82.BF -----　引用ここから Use 'posts_per_page'=>-1 to show all posts. Note if the query is in a feed, wordpress overwrites this parameter with the stored 'posts_per_rss' option. To reimpose the limit, try using the 'post_limits' filter, or filter 'pre_option_posts_per_rss' and return -1 -----　引用ここまで
>setcookie("$hospital[$i]", $hospital, time()+60*60*24*7); このsetcookieがブラウザ側にどう送られているか（ブラウザ側で受け取ったHTTPレスポンスヘッダで）確認されていますか？ $hospitalは文字列でしょうか？配列でしょうか？コメントアウトされた部分では配列として扱っていたようですが、少なくとも$hospital = $_GET['iinmei'];の時点では文字列のハズです。 配列でなく文字列に対しても$str[$i]のように書けますが、これは（zero baseで）$i番目の一文字を表すだけです。書けてしまうので文法エラーにはなりませんので要注意です。 なお、Cookieに配列を保存したいのであれば、json_encode／json_decodeやserialize／unserializeを使って「文字列化して格納／取得してから元に戻す」のが手っ取り早いです。 （セット時） setcookie('hospital', json_encode($hospityal_array), time()+60*60*24*7); （取得時） if (isset($_COOKIE['hospital'])) { $hospital_array = json_decode($_COOKIE['hospital']); } else { $hospital_array = array(); }
おそらく書き忘れかと思いますが、エラー内容が書かれてませんので、記載いただいたほうがいいかと思います。
> ユーザの入力→htmlspecialchars→データベース取込 > ユーザの入力→データベース取込→表示の際にhtmlspecialcharsする この両者であれば、後者の「表示の際にhtmlspecialcharsする」が正しいと思います。 そもそも、「無害化」という発想そのものが奇妙であると思います。「HTMLは、タグとして記述される場合以外は<>&などといった特殊記号はエスケープして書くように設計されている」というだけのことですので、どんな場合でもHTML記述時に記号をエスケープするのが基本でしょう。それはデータベースの保存うんぬんは関係なく、手書きでHTMLのコードを書くような場合から常に一貫して考えるべきものなのですから。 また、「データは可能な限りオリジナルの状態を保持する」のがデータ処理の基本であると思います。加工したデータは、もう元には戻せません。こうした点からいっても、「加工済みのデータを保管する」というのは違和感を覚えます。 更には、「データベース保管時に考えるべきは、サニタイズではなく、SQLインジェクション対策である」という点も忘れてはいけません。必要なときに必要な対策をまず考えるべきで、データベース保管時にSQLインジェクション対策の他に（別に後でやってもかまわない）サニタイズまでまとめて処理する、というのはどうなのだろう、という気がします。自分はわかっても、例えば他人に引き継いだりしたとき混乱したり勘違いしたりしないか、という不安があります。 いろいろ考えると、データベースへの保管時は、SQLインジェクション対策のみをしっかりと考え、HTMLを出力するときには、（それがデータベースから取り出したものかどうかは関係なく、すべてのところで常に）htmlspecialchars処理したコードを書く、と考えるのがいいのではないかと思います。
『 != 』 は『 == 』 の否定。rand関数の戻り値が 『1 でないとき』 に真（whileループを実行する） RTFM. http://www.php.net/manual/ja/language.operators.comparison.php
>mb_encode_mimeheader関数を使ってみたりしたのですが どのように使ってみたのでしょうか？ mb_languageより前で実行するならば、第二引数で'iso-2022-jp'を書くのが吉だろうと思います。もちろんmb_languageより後で実行するならば第二引数は不要です（普通はこっちを利用します）。 というか、mb_encode_mimeheaderの結果がutf-8なのかiso-2022-jpなのか（それともまったく別のものか）くらいは確認してください。
どこがどうなっていないから CSS反映されて無いとおっしゃるのか分かりません。 またCSSに何のソースを書いたのですか？ 原因として考えられるのは ・タグの止め忘れ、又はタグが多い ・ソースを書く言語自体が古い ・ブラウザが対応していない ・スタイルを当てたい場所にID・Classなどを書いていない ・ダウンロードしたCSSを使い切れて居ない（タグ名・ID・Class指定を間違っている） 簡単に考えると以上です。 プログラムというものは プログラマーが命令したとおりにしか動きません。 可笑しいのはプログラムではなく自分自信です。 どこが間違っているのか（どこにエラーが出たのか）を 見つけるという作業はシステム構築には重要な箇所になってきます。 PHPのプログラムということは 後々MySplなども使ってくとのだと思いますが CSSぐらいで躓いていては話しになりませんよ？ ソースを書くときには コメントなどをいれ綺麗に整頓して書くと 原因も見つけやすくなります。 私もはじめはエラーばっかり出していましたが どこが原因かを調べていく作業の中で一番学ぶことが出来ました。 また、解決したとき（システムが動いたとき）の達成感はいまでも辞められません。 そういうところに プログラムの楽しさはあるのです。 次からは 1.質問をする前に自分で原因を考え、 2.これが原因だと思ったからどうしたのか 3.それで結果がどうだったのか 4.改善されなかったから、次はどうしたのか 5.それでも駄目だったからどうして欲しいのか この工程を踏んで質問欄に記載をお願いします。 また、上記5項目をただ読むのではなく プログラマなら気づいて欲しいことがあります。 こういう流れでシステムが出来上がっていくということです。 プログラムとは書いたら書いただけ出来るようになります。 エラーを処理した数だけスキルに変わります。 ここで躓いても次こそはと頑張ってください 応援しております。
記載されているソースをそのまま、コピペして動かしてみた所、データの受け渡しに関しては問題なく出来てしまいました。 症状が再現できないので、ズバリな解答ではないので参考までに。 InternetExplorerを利用されているなら、F12 開発者ツールという機能が付いています。 ※FirefoxやChromeにも同様の機能は付いています。 inquiry.html を IE で表示させ、「F12」キーを押して、開発者ツールを表示させます。 「コンソール」というタブを開くとエラーや注意が表示されます。ここで、formの動きに関わりそうなエラーを確認してみて下さい。 formに値を入力し、「確認」ボタンをクリックして、inquiry_check.php に遷移して下さい。 こちらでも、「コンソール」のタブでformやPOSTに関わるエラーや注意を確認してみて下さい。 「ネットワーク」のタブを開いて、URLをダブルクリックすると、ページの詳細が表示できます。 要求本文を見ると、POSTされた値が分かるので、状態の切り分けができると思います。
うむ。WordPressの「タクソノミー」には「カテゴリー」と「タグ」があるが、このうちタグにはそもそも並び替えという概念が存在しない。 なので、カスタム投稿タイプに対してタクソノミーを付与する時に、それがタグタイプのタクソノミーしか場合はCategory Order and Taxonomy Terms Orderプラグインは「Taxonomy Order」というメニューが追加されない。 このプラグインを入れた瞬間から「投稿」に「Taxonomy Order」が表示されるのは投稿には最初からカテゴリーなるカテゴリータイプタクソノミーが設定されているからだ。 なので、該当のカスタム投稿タイプでタクソノミーの並び替えをしたいなら（Category Order and Taxonomy Term Orderプラグインで該当のカスタム投稿タイプのサブメニューにTaxonomy Orderを表示させたいなら）カテゴリータイプのタクソノミーを追加してあげよう。 ちなみにWordPressにおいてタクソノミーがカテゴリータイプかタグタイプかは階層構造をとっているかで決まる。階層構造をとっている（hierarchical=true）のがカテゴリータイプタクソノミーでそうでないものがタグタイプタクソノミーだ。 もちろん階層構造をとれる設定になっているだけであって全部フラットなタームにする事はできるのであまり気にしないでいいと思いますです。
>取得した値にリンクを付けて、再検索をする方法がわかりません。 一般的に「検索」の場合はPOSTではなくGETにします。 ><td><?php print($row['name']); ?></td> printf('<td><a href="table.php?name=%s">%s</a></td>', urlencode($row['name']), htmlspecialchars($row['name'], ENT_QUOTES)); （蛇足） DBのSQL実行は（外部からのデータをSQL文に記述するなら）プレースホルダを使うべきでは？
一度Chrome(DevTool)やFirefox(FireBug)で実際に手で操作して、検索実行時のPOSTリクエストを除いてみることをオススメします。そこでPOSTされている内容を、curlのPOSTFIELDSに入れれば動くかもしれません。
$sql にwhere句を追加することはできますが、先のprepare()の結果には影響しません。 ========== $sql = "select item from items"; $sth1 = $pdo->prepare($sql); $sql .= " where id = :id"; $sth2 = $pdo->prepare($sql); $sth1->execute(array()); $sth2->execute(array(":id" => 1)); $res1 = $sth1->fetchAll(); $res2 = $sth2->fetchAll(); ========== って感じで使うことになるでしょう。
wordpressの管理画面（そのURLから推測するとhttp://localhost/wordpress/wp-login.phpか？）にログインして左のメニューバーから外観→テーマってたどっていってテーマをtwentytwelveに切り替えれば良いのではないかな。 そのWordPressがテーマを今どれ使ってるかっていうのはデータベース（MySQL）に入ってるよ。
addr_search() が何をしているのか判らないので断定が難しいですが、正規表現マッチで取り出したモノを直に $from に入れたら問題無く判定できますね。 // 許可アドレス の所で $from に何が入っているかダンプして確認してみて下さい。 addr_search() のせいで意図しない値が $from に入ってるのかもしれませんよ。
http://stackoverflow.com/questions/530627/getting-a-pdo-query-string-with-bound-parameters-without-executing-it こうするしかないみたい。
mailメソッドの件名や内容に、多バイト文字を入れてはいけません。 mailメソッドを使う場合は、以下のように、自分でエンコードして、何でエンコードしたのか明示しなければなりません。 mb_internal_encoding("UTF-8"); mail( 'xxx@xxx.xxx', mb_encode_mimeheader('日本語(件名)', 'ISO-2022-JP-MS'), mb_convert_encoding('内容', 'ISO-2022-JP-MS'), "Content-Type: text/html; charset=\"ISO-2022-JP\";\n" ); なお、mb_send_mailを使う場合は mb_language('ja'); mb_internal_encoding("UTF-8"); mb_send_mail('xxx@xxx.xxx', '日本語(件名)', '内容'); のように「直前にオマジナイを入れる必要」があり、オマジナイ無しで mb_send_mail('xxx@xxx.xxx', '日本語(件名)', '内容'); のみだと、内容が文字化けします。
どんなエラーが出てますでしょうか？先ずそこが知らない限り、なんとも言えません。 > コマンドラインからPHPを実行した場合は接続できるのですが、 > 同じPHPファイルにブラウザからアクセスした場合はなぜか接続エラーになってしまいます。 ということはApacheでPHPファイルを処理できる状態でなない？と思われます。phpinfoで設定をもう一度確認してみてください。
display_errorsのデフォルトは'1'ですね。 http://www.php.net/manual/ja/errorfunc.configuration.php ini_set( 'display_errors', "1" ); でもダメだったでしょうか？ >設定の上書き禁止設定とかありましたっけ・・・ （どういうサーバ環境なのか提示されていませんが）レンタルサーバならあり得ます。というか今さら5.3.3という時点で「レンタルサーバ側でキチンと対策されている」前提にはなりますけどね。
>JavaScripttophpは似たようなものと思っていますが >実際は違うのでしょうか？ 違います。 JavaScriptは、クライアント（Webブラウザ）の中で動きます。PHPは、サーバーの中で動きます。JavaScriptの場合、サーバーからWebページのデータを受け取って、それをブラウザが表示してからブラウザの中で動きます。PHPは、ブラウザからサーバーにアクセスすると、そのサーバーの中でプログラムが実行され、その結果がブラウザに送られてきて表示されます。つまり、ブラウザに表示された時には、もうPHPのプログラムが実行し終わった後になっています。 >どういう事が可能になるのでしょうか？ たとえば、このサイトはHTMLとJavaScriptでは作れませんね？　フォームから質問を送信すると、その情報をデータベースに登録し、指定のジャンルのページにアクセスしたら、データベースから登録されている質問を検索して整理し表示します。 PHPを使えば、送られたデータをデータベースに登録したり、データベースから検索したり、必要に応じてHTMLをダイナミックに生成したりできます。つまり、ただ用意されているHTMLを表示するだけの静的なWebページならPHPは不要ですが、その時の状況などに応じて表示内容が変わるような動的なWebページは、PHPのようなサーバー側で動くプログラムがないと動きません。 ちなみに、「JavaScriptでもサーバーにアクセスできるのでは？」と思うかもしれませんが、そのアクセスするサーバー側で動いているプログラムはどうするのか？　それは、PHPのようなものが必要になるのです。
QueryStringで引き渡された文字列によって、インラインフレームに表示するURLを変えるという意味ですかねぇ・・・ <?php $url = 'default.php'; // QueryStringがない（もしくは不適切）とき $urls = array('111'=>'a111.php', '222'=>'b222.php"); if (isset($_SERVER['QUERY_STRING'])) { $qs = $_SERVER['QUERY_STRING']; if (array_key_exists($qs, $urls)) { $url = $urls[$qs]; } } ?> <html> （中略） <iframe src="http://yyy.com/<?= $url; ?>"></iframe>
finfo::bufferあるいはfinfo_bufferを使いましょう。 http://www.php.net/manual/ja/function.finfo-buffer.php
へい、走らない。
ページBはページAの処理が終わるまで待ってから処理を開始します。 なので、最終的には 2 が記録として残る。 ここが詳しく説明を書いてくれてますね。 http://unsolublesugar.com/20121103/113321/
前回の質問では「メッセージだけセッションに入れていた」ということなのですよね。名前やメールもセッションに入れていたのならまだ気づきやすかったでしょうに。衝撃的なつくりに感じました…。 それをふまえての今回の問題だと、また作りの問題で不可解な現象が起きている可能性が高いのではないかと思います。 なのでこれも、決め付け・思い込みは排除して事実の確認をしましょう。ヒットするしないというのはPHPで2つの文字列を比較しif文で判断しているのですかね。もしそうなら、ログ形式で日時と記事IDか何かと、文字列Aと文字列Bとその比較結果をファイルに書き込むようにしてみてください。SQLで検索してレコード件数が0なら…みたいなロジックでも同じように、検索時の条件のメールアドレスと検索結果を記録するようにしましょう。 それをすれば、文字列Aと文字列Bが違うと判断されヒットしないのか、もしくはヒットした後ではじく処理ではじきもれているのかなど切り分けが出来るでしょう。 動作確認をしていませんがこんな感じの関数を作って。 function logging($id, $strA, $strB) { 　　$datetime = date("Y/m/d H:i:s T (P)", time()); 　　$client_ip = $_SERVER["REMOTE_ADDR"]; 　　$result = ($strA == $strB); 　　$msg = "[{$datetime}] [{$client_ip}] [${id}] [${strA}] [${strB}] [${result}]\n"; 　　error_log($msg, 3, REQUEST_LOG); }
while(条件式){ //処理 } 質問にあるように、この通りではあります。 ただ、『条件式』と言う言葉が、義務教育で慣れ親しんだ数学の『式』と繋がって、等号や不等号がないと式とはちょっと違いますよね。 条件式ではなく、条件と説明される場合もあったりします。 誤解を招きやすいですよね。 whileにおける括弧内の条件とは、条件にあるものが『True』と評価されたときと言うのが正しいです。 等号や不等号のある式を入れた場合は、その式の条件が満たされる場合はTrueと評価され、満たされなければFalseとなりループ処理は終了します。 条件を満たしている間繰り返すのがwhileと言うのはご存じの通りです。 while(True){ //処理 } このように書くと条件は常にTrueとなるので、無限にループされるということです。 ただ、phpでは変数の型や評価について曖昧なので、意図した結果と異なることもあります。 つまり、Trueと評価されるものと、Trueそのものは違うと言うことです。 この場合、以下のように記述して確認すべきだと思います。 //結果を見やすくするために追加 eho '<pre>'; while(条件){ //型と値を取得する関数 var_dump(条件); //処理 } 条件の変数の型、値が確認できます。 ループに時間がかかったり、終了しない場合であれば、while内でbreakして強制的に処理を終了させるようにしましょう。 この回答からキーワードを使って検索しても答えは出ると思いますが、自分で結果を確認して理解した方が良いです。 $input=trim(fgets(STDIN)); こちらについては、単純にそれぞれの関数のヘルプを見たら良いと思います。 あえて言うなら、STDINよりfgetしたものをtrimして$inputに代入する。 phpはマニュアルにかなり詳しく情報があるので、見てみると良いですよ。
質問者様のコントローラの切り替えでも可能かとは思いますが、 サーバーのバーチャルホストの設定ができるのであれば、 ディレクトリ自体をドメインごとに変えてしまうのがよい気がします。 CakePHPのバージョンが違うかもしれないですが、 ■[CakePHP2.0]複数サブドメインでモデルを共有する http://rzpg.blogspot.jp/2011/11/cakephp20.html イメージ的には↑のサイトのようなイメージです。 そもそもアプリケーションが独立のものかどうかという観点もあるかとは思いますが、 独立ではないにしても、上記サイトのようにうまくモデルを共有するようにして、 イレギュラーなソースコードにしないほうが、（コントローラーを含めてルーティングを制御するとなるとCakePHPのルールにのっとらない形になってしまうと思うので） 保守・メンテナンスの観点からも良いように私としては感じます。
echo $i."\n"; を echo "おはよう\n"; でどうでしょうか？
質問者様のPHP5.6.3ではregister_globalsをONにすること自体できなくなっています。 動作確認したいとなると、PHP5.3以下がインストールされるxamppを利用する必要があるかと思いますが、他の回答者様もご指摘している通り、 register_globalsをONにするのはセキュリティ的に大変好ましくありません。 http://php.net/manual/ja/security.globals.php 可能であれば参考の書籍を新しいものにしていただくのがよいかと・・・
STDINで取って来た値には改行文字も含まれているので、whileの比較条件で文字列比較されてしまっていて無限ループになってるし、$i++も期待通りの動きをしていない。 intにキャストしてやれば期待通りの動きになります。 $i = (int)$input; $a = (int)$input2;
普通は <?php $str = '<?php echo"masao"; ?>'; ?> <form action="" method="post"> <textarea name="img" cols=40 rows=4 readonly> <?php echo htmlspecialchars($str, ENT_QUOTES); ?> </textarea></form> と書きますねぇ。文字列リテラルで書くとしても <form action="" method="post"> <textarea name="img" cols=40 rows=4 readonly> <?php echo htmlspecialchars('<?php echo"masao"; ?>', ENT_QUOTES); ?> </textarea></form> でしょう。
DocumentRootはディレクトリだよ。 hogehoge.comでアクセスされたときどこのディレクトリを読ませるのかの設定。 cakephpの動きを決めるのは app/Config/routes.php だよ。
半角アが、117というのは、Shift_JISの場合です。 utf-8だと、ef bd b1 の3バイトなので、その先頭バイトの239が返ってきています。 $a = "ア"; echo ord($a); ・・・・・・239と表示 echo "\n"; echo ord(mb_convert_encoding($a,"SJIS","UTF-8")); ・・・・・177と表示 echo "\n"; もしくは最初からShift_JISの文字コードでプログラムを書くか。
例えば、 掲示板の機能で 親記事の投稿、子記事(レス)の投稿 親記事の表示、子記事(レス)の表示 があったとするとQAサイトの場合 親記事(質問)の投稿、子記事(回答)の投稿 親記事(質問)の投稿、子記事(回答)の表示 とほとんど同じだよね。 そこに ユーザ管理機能(ログイン等含む)を付ければこのサイトの簡易バージョンくらいにはなるんじゃないかな？ なのでピンポイントの情報を探すのではなく、 一つ一つの作り方を探すのが吉。 それを組み合わせればQAサイトの出来上がり。 今後、どんな機能を作るにしても「○○のサイトの作り方」なんてのはほとんど出てこないから 機能単位で作り方を学びましょう。
関連付けはどれで開きますか？って聞いてきているんだから秀丸を選べばいい。 一覧に無いなら参照から秀丸のexeを探す。どこにインストールしたかはわからないから探してちょ。 ドラッグアンドドロップは関連付けとはまったく関係ない。 秀丸を開いたらそのウィンドウにhttpd.confをドラッグして秀丸のウィンドウにドロップすればいい。そうすりゃ関連付け関係なく開く。
こんにちは。 PHPをお奨めします。理由は、 ・HTMLは静的であり、毎度編集は面倒。 ・WordPressは速度が遅い。MySQL必須(SQLiteでも裏ワザで可能)。 です。 PHPの外部ファイルにヘッダ・フッタ・メニューバーなどを書いて各ページから呼び出してゴニョゴニョ…。とやったり。 投稿画面をSessionStart();とか 4000文字では説明できないので http://ponk.jp/php/basic/ec これとかどうですか？
まず >先頭レコードのアンカーだけが表示されず、ただのテキストになってしまいます。 どういうhtmlソースが返っているかを確認してください。anchor要素とtable要素をまとめて出力しているので抜け落ちる可能性はありません。最初の <a の前に閉じていない二重引用符があったりしてhtmlソースとして解釈出来ない状態になっていたりはしませんか？ 以下はソースを眺めていて気になった点を書きます。 まずネイティブなMySQL関数はすでに非推奨です。今から書くならPDOをお勧めします。 http://php.net/manual/ja/mysqlinfo.api.choosing.php >mysql_set_charset("utf-8"); MySQLには、utf-8という文字セットはありません。utf8です。 >$rowco = mysql_num_rows($result); 行数を得るのはなんのためでしょうか？見たところforで回している中でもレコード番号を使っているのは >echo '<a href="'.$i.'.php?sid='.$row[0].'">'; の部分だけですが、0.phpや1.phpは存在するのですか？普通は同じphpスクリプト名（たとえばview.phpとか）でQueryStringで引き渡すIDだけを変えると思いますが・・・。 もし表示上で「行番号」が必要なら $cnt = 0; while ($row = mysql_fetch_row($result)) { $cnt++; // $rowを使った処理 } で済みます。行数を得てからforで回す意図がわかりません。 なお、そもそもanchorはインライン要素なのでtable（ブロック要素）を内包するのはマズイです。各々のtd要素内の文字列に対してanchor要素を書いてください。 （PDOの例） <?php // table要素の書式 $table = <<<EOD <table width="500" height="120" border="1"> <tr> <td width="500" height="30"><a href="view.php?sid=%s">%s</a></td>'; </tr> <tr> <td width="500" height="30"><a href="view.php?sid=%s">$s&nbsp;&nbsp;&nbsp;%d件</a></td>'; </tr> <tr> <td width="500" height="30"><a href="view.php?sid=%s">%s</a></td>'; </tr> <tr> <td width="500" height="30"><a href="view.php?sid=%s">%s</a></td>'; </tr> </table> EOD; try { $pdo = new PDO("mysql:host=localhost;dbname=dbname;charset=utf8", 'user', 'pass'); $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); if($_POST['radio_btn']==="1"){ $stmt = mysql_query('SELECT * FROM hospytal order by manzokudo desc'); } else { $stmt = mysql_query('SELECT * FROM hospytal order by kuchikomi desc'); } while ($row = $stmt->fetch(PDO::FETCH_OBJ)) { printf($table, $row->id, $row->name, $row->id, $row->rank, $row->cnt, $row->id, $row->address, $row->id, $row->address, $row->id, $row->open); } } catch (PDOException $e) { // tryブロックの終了（例外を捕捉） // 例外処理（適切に書き直してください） die('database error<br />' . $e->getMessage()); }
>試しに >/aaaa/test.txt >とか サーバパス（フルパス）にディレクトリ /aaaa が存在していますか（かつ読み書き権限があることが必須です）。 >../../test.txt >としてもうまくいきませんでした。 phpスクリプトより上の階層の読み書き権限はどうなっていますか？ また「うまくいかない」とはどういう状況でしょうか？どういうエラーメッセージが表示されますか（デバッグ時なのであらゆるエラーを表示する設定にしておくべき）。
まず$geocodeの中身はどうなってるか確かめた？ http://php.net/manual/ja/function.file-get-contents.php fopen wrappersが有効じゃないとURLでは取得できないけど設定はどうなってる？
PHPのincludeのコードを記載したHTMLのファイルの拡張子は何だろうか。 もしそれが.htmlという拡張子であれば、試しにそのファイルの拡張子を.htmlから.phpに変更してみよう。そうするとローカルのxamppでも動くと思うよ。 .htmlという拡張子を処理する時に実は後ろでPHPが動いているという風にWebサーバーを構成する事は可能だ、が、一般的にはしない。 たまたまそのサーバーがそういう構成になっているだけだ。 もしそれが.phpという拡張子であれば、相対パスがおかしいんじゃないだろうか。一つの閉じたWebサイトの中で共通にインクルードされるヘッダー（例えばheader.php）やフッター（例えばfooter.php）をinclude_pathで表されるパス上に置く事はあまり考えにくいじゃろうて。 また、サーバーによってはCGIモードというものでPHPが動く場合もある。その他にも全てのphpを処理する大本phpファイルというものが存在する場合もある。 なので、あなたが書くPHPは、いかなるPHP実行環境でも動作するように書くべきだ。 例えば、includeは include '../common/header.php'; ではなく include dirname(__FILE__) . '../common/header.php'; とする、とか、includeではなくrequire_onceを使う、とか、ちょっと気をつけるだけで汎用性はぐーんとあがる。 詳しい状況が分からないので3パターンほど原因と対応策を示してみた。
テラパッドというソフトを知りませんが、もしかしたらshift-jisと表示されているだけ（自動認識）で、php内にマルチバイトがないようなファイルではないでしょうか？asciiだけで構成していると文字コードが特定できず、デフォルトとして認識するshift-jisと表示しているかもしれません。 マルチバイト文字を入力して保存して、それでもshift-jisがでるようであれば、ソフト側で何かしているかもしれませんね。
セッションは使ってる？ history.backで戻るのはあんまりお勧めできないかな～。 とはいってもブラウザの操作で戻るされれば同じだけど
PHPはサーバサイドで実行されます。 テキストエリアの反転した内容がどこかという情報はPOSTメソッド、GETメソッド共にサーバへ送る事が出来ないので、PHPで処理することはできません。 JavaScriptを使ってブラウザサイドで処理する事になります。
PHPの変数名にカッコは使用できないので「$the_time() 」は無効な変数名です。 $the_time などPHPで有効な変数名に変えましょう。 http://php.net/manual/ja/language.variables.basics.php
$pdf->Output("test.pdf", "F"); Outputメソッドの2番目の引数が出力先の指定になります。 I はインライン出力で、直接ブラウザに返されます。 F はファイル出力で、TCPDFを実行している環境のローカルファイルとして保存されます。 他にも幾つか出力方法があるのでマニュアルを読んで下さい。 http://www.tcpdf.org/doc/code/classTCPDF.html#a3d6dcb62298ec9d42e9125ee2f5b23a1
フルパス（サーバパス）で指定可能です。 http://www.php.net/manual/ja/function.include.php 「pathが正しいのか」「読み込める状態になっているのか」をfile_exists()やis_readable()で確認してください。
やりたいことがいまいちよくわからないのですが、各配列の同じ順番の要素に対して処理を行いたいとすれば以下でどうでしょうか？ $a = array('green', 'red', 'yellow'); $b = array('avocado', 'apple', 'banana'); $hoge = array('100', '150', '80'); $cnt = count($a); for($i=0;$i<$cnt;$i++){ $ai = $a[$i]; $bi = $b[$i]; $hogei = $hoge[$i]; }
>> 上記URLに掲載されているような簡単な方法はさすがにないと思われるのですが、 あります。 http://qiita.com/mpyw/items/e42fa173e5a26220a785 http://qiita.com/mpyw/items/55df438d12ef8e94dbc5 これを読んだうえで、たとえばDateTimeImmutableを使うなら $first = new DateTimeImmutable('the first day of previous month'); $last = new DateTimeImmutable('the last day of previous month');
(1)phpと関係がない話題なので、Ajaxzip2の動作を阻害している要因をチェックしてくださいとしか・・・。onkeyupイベントの設定をどこでどうやっているか（提示されたソースには存在しないので）何とも言えません。 (2)http://allabout.co.jp/gm/gc/23972/ (3)nl2brの前に通しているe()という関数はどういう内容でしょうか（ここで改行コードを削っていませんか）。
＞$smarty.session.test.comment_[$i] [] ではなく、{}を使ってみてはどうでしょうか？ $smarty.session.test.comment_{$i}
Shift_JISを使うとあまりにも大きなハンディキャップを負うことになります。 ・「5C問題」など面倒なエスケープ処理のことを常に考える必要が生まれる ・データベースで「SET NAMES」を使ってしまうとエスケープ漏れが起きる ・「str_replace」「explode」「preg_match」といった利用頻度の高い関数が正しく動作しない PHPファイルを書くならUTF-8一択です。UTF-8ならこれらの問題が一切発生しません。よって、正しい手段は ・ファイル自体はUTF-8で記述 ・出力時にShift_JISに自動変換 ということになります。 <?php ob_start(function($s){return mb_convert_encoding($s,'SJIS-win','UTF-8');}); ?> これを1文字も出力されていない状態で実行すれば、全ての出力がShift_JISに自動変換されます。
正直、timestamp型以外でファイルの更新日を取得できる方法はもうエクステンションを書くしかないと思われる（PEARのライブラリーとか探したところでその後ろでfiletimeを使っているはず）ので、timestamp型を避けたい理由の方をどうにかしようと思う。 まずそもそも論としてPHPのtimestamp型に2038年問題は事実上無いと言って差し支えないだろう。 Linux上では既に64ビット版のPHPで2038年問題は解決している。9999年どころか10000年4月6日だって表現できるようになっている。 CentOS 6.6 x86_64でCentOS標準リポジトリーにあるPHPを使って以下のテストコードを実行してみると良い。西暦2000年1月1日と西暦3000年1月1日と西暦10000年1月1日を全て正しく表現できることが分かるだろう。 問題はWindows上での動作だが、Experimentalながらも64ビット版が公式から提供されている。なんだけど、これは動かない。64ビット版のWindowsと64ビット版のPHPを使っても$time2と$time3がfalseになる（つまりmktimeがfalseを返す）。 じゃあ駄目じゃんと思うだろうけど、それは2038年までには解決するよ！　きっと！　どこか忘れたけど（公式フォーラムだったか？）ちょっと前にこの問題は次のメジャーバージョンで対応しようぜ（つまり今出てるバージョンでは対応しないぜ）という話題が出てたので、次のバージョンが2038年までに出れば解決だ。 関係ないけどテストコードの一番下の行に「?>」が無いのは誤記やミスではない。PHPではファイル最後尾の「?>」は省略する事ができる（というか書かないべきだと私は思っている）。 －－－－テストコード－－－－ <?php $time1 = mktime(0, 0, 0, 1, 1, 2000); $time2 = mktime(0, 0, 0, 1, 1, 3000); $time3 = mktime(0, 0, 0, 1, 1, 10000); var_dump($time1); var_dump($time2); var_dump($time3); echo date('Y-n-j', $time1) . "\n"; echo date('Y-n-j', $time2) . "\n"; echo date('Y-n-j', $time3) . "\n";
update以外でどうかこうと思ってるのかな？ 普通というか一般的には update wp_usermeta set meta_value = meta_value + 1 where umeta_id='150'; これ1本のSQLで処理するんでないかな？ いちいちセレクトするなら、レコードロックしないと同時アクセス時に数値がおかしくなるよ。
ヤフーショッピング在庫更新APIでもって何と比較してるの？
下記の公式インストールをおこなったのでしょうか？ ■さくらインターネット公式　WordPressでブログを始めよう！ https://help.sakura.ad.jp/app/answers/detail/a_id/2290/~/wordpress%E3%81%A7%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E5%A7%8B%E3%82%81%E3%82%88%E3%81%86%EF%BC%81 もし、上記のインストール方法だとすると、 STEP2の5番に書いてあるインストール場所にインストールされていると思います。 ディレクトリへのアクセスは、下記公式ヘルプにあるとおりファイル転送ソフトを利用するのがよいと思います。 ■さくらインターネット公式　ファイル転送ソフトの設定 https://help.sakura.ad.jp/app/answers/detail/a_id/2304 ご参考ください。
一応、API使用詩を読んだ上での質問だったんですね。 APIでは用意されていないんですから、APIだけでは「新着」を実装することはできないです。 一度、手元のDBに保存してそこでソートするなどの工夫が必要でしょう。
日本語におかしなところがあるので、以下のように解釈して回答します。違う点があれば補足してください。 ・CSVファイル中に全てIDは含まれている。 ・データベース中に存在しないIDの場合は新規作成する。 ・データベース中に存在したIDの場合は変更する。 ---------------------------- 「REPLACE INTO」を使えばSQL1文でいけます。 <?php // データベース情報 $dsn = 'mysql:dbname=mydb;host=localhost;charset=utf8'; $username = 'root'; $password = ''; // ファイル名 $filename = 'data.csv'; try { // ファイルを読み込んでCSVとして読み取るモードに設定 $file = new \SplFileObject($filename); $file->setFlags(\SplFileObject::SKIP_EMPTY | \SplFileObject::DROP_NEW_LINE | \SplFileObject::READ_CSV); // データベースに接続して例外スローモードに設定 $pdo = new \PDO($dsn, $username, $password); $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION); // プリペアドステートメントを生成 $stmt = $pdo->prepare('REPLACE INTO table(a, b, c) VALUES(?, ?, ?)'); // 1行ずつ処理 foreach ($file as $row) $stmt->execute($row); } catch (\RuntimeException $e) { // エラー発生時はここにジャンプ echo 'Error: ' . $e->getMessage() . PHP_EOL; }
DBから直接取得するのが早いと思います。 下記をご参考ください。 http://wpdocs.sourceforge.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/wpdb_Class
コントローラなど名前空間の指定のあるところで、 Debugbar::info($object); など、Facadeを利用するためには、 use Debugbar; と、指定しファサードをインポートする必要があるようです。 http://readouble.com/laravel/5/0/dev/ja/facades.html 上記ページの「ファサードのインポート」の部分になるかと思います。
この設計だと A. 中身にキー値をあらかじめ入れてしまう B. 追加の引数として渡す のどちらかしかないですね。するしかないというか、こうするのが最も自然な実装になると思います。無駄とか気にする必要は無く。 蛇足ですが、書いてきたコードを整理するのであればもう少しOOPでまとめあげてもいい感じはしますね。Wordpressのように全てグローバル関数で書こうとするのは悪しき習慣なので倣う必要は無いです。
テキストエディタによるかもしれませんね。 秀丸だと「[A-Z]-([0-9][0-9])」→「¥1」だったような。
＞　$_SERVER['DOCUMENT_ROOT']で得られるルートの値末尾が5.1では”/”だったものが無しに変わったのか？置いているサーバーで働きが異なるのか。それとも文字化けと何か関係している可能性があるのか。 ↓これの影響ですかね 「PHP 5.2.x から PHP 5.3.x への移行」＞「下位互換性のない変更点」 http://php.net/manual/ja/migration53.incompatible.php 『SplFileInfoクラス と他のディレクトリ関連クラスは、 末尾の / を除去するようになりました。 』 ＞　文字化けについて考えられる原因。 php.iniの設定が前のサーバと異なっていると言う事はないでしょうか。
とりあえずはお使いのテーマで投稿一覧を表示している箇所を特定してください。 たとえば、content.phpの22行目には <p class="post-date"><?php the_time('j M, Y'); ?></p> といった記述がありますし、content-standard.phpの24行目には <p class="post-date"><?php the_time('j M, Y'); ?></p> とあります。この形式文字列を置換するだけです。 ＃formatはdate関数と同じです http://php.net/manual/ja/function.date.php
見落としていたのですが、remi-56とはrpmのリポジトリなんですね。 rpmでデフォルト値が変更されている可能性が高い気がします。 rpmを解凍してその中身を精査することもおすすめします。
日本でもっとも人気があるのはCakePHPです。 まずはここから入ってはいかがでしょうか。 規約がしっかりしているし日本語のドキュメントも豊富なので 規約を忠実に守ればそれなりにしっかりと組めると思います。 CodeIgniterは結構簡単で自由にできますが、ある程度組める人じゃないと散らかりそうです。 Zend Frameworkも自由ですが作りが小難しいようでちょっととっつきにくい感じがしましたが、Zendブランドな人気があるみたいです。 laravelは人気トレンド急上昇中ですので見ておくといいかもしれません。 phalcon PHPは速度を重視するのでしたら検討すべきFWですね。 Symfonyは大型案件向きと聞いたことがありますが触ったことはありません。
>自由に画像を貼り付けられるフィールド WYSWYGエディタを組み込めばいいと思います（不要な機能はOFFにしてしまえばいい）。 http://engineer.blog.lancers.jp/2010/11/wisiwyg_best_3/ 私はCKEditor+KCFinderで画像アップロード&貼付けやってます。画像ファイルを別ディレクトリ（表示用）に移し替え（&img要素のsrc属性を書き替え）るだけしかやっていませんがww MySQLに格納するとなると、POSTされたhtmlソースからimg要素のsrc属性を切り出して当該ファイルを読込んで格納+src属性を書き替えということになると思います。 どのWISWIGエディタを使うかでPOSTされるhtmlソースが微妙に違うので、エディタの選定や調査にある程度の手間暇をかけないといけません。
さすがにテキストファイルベースの掲示板なんてしばらく触っていませんね。 少々古い（かもしれない）ので、今のバージョンに対応させないといけないかもしれませんが、下記などはどうですか？ http://www.rocomotion.jp/php/p_board_r.php > 1.データベースを使用しない RDBMSは用意出来ないというだけでSQLiteを使うのはいいんですかね。もしそうならphpBB3がSQLiteで動かせたと思います。完全にオーバースペックだろうとは思いますがww
書き方が不適切でした。 ＞IMGタグに「align="center"」を足すだけ。 IMGタグの上下を「align="center"」を付けたDIVタグで囲うだけ、に訂正します。
「トランザクション」の意味を取り違えていませんか？（COMMITするまで）ROLLBACK可能ではありますが、COMMITしようがROLLBACKしようが無関係なものには何の影響も与えません。レコードをinsertするようなSQL文が待たされたりはしないです。 ＃でないと大量のデータを処理することが出来ません 手順自体はともかく、同一レコードにアクセスする（更新してcommit前のレコードを他で参照しようとする）ような「最低でもレコードロックしないといけない」SQL文で試しましょうって話です。insertのようなロックする必要がないSQL文でいちいちロック（しかもテーブルロック）するようなRDBMSはちょっと考えられません。 というか >odbc_autocommitを使わず、自分で「BEGIN TRANSACTION」の >SQL分を実行してその後Insert等の処理を行うということでしょうか？ 最初の説明では >(4)B端末から「odbc_autocommit」を使用しトランザクション >(5)A端末からTEST_TABLEへInsert 明示的にトランザクションを開始しているように読めましたけど・・ 一般的には ・auto_commitが有効 BEGIN TRANSACTIONがない場合には、SQL文発行ごとにCOMMITするのと同じ（ROLLBACK不可）。 BEGIN TRANSACTIONで明示的にトランザクションを開始したら、COMMIT/ROLLBACKできる。 ・auto_commitが無効 BEGIN TRANSACTIONがない場合でも、SQL文発行でBEGIN TRANSACTIONが自動的に行われる（COMMIT/ROLLBACKできる）。 BEGIN TRANSACTIONで明示的にトランザクションを開始してもいい。 だと思います。
$startや$endがどういう値なのか、show_schedule.phpが返す画像がどういうものなのか、といった部分がわかりません。 とりあえずは、if ($_POST) { var_dump($_POST); } として、どういう値が受け取れているのかを確認してください。
$xpath->evaluate() において複数の要素を取得するのはできないようです。 2つ挙げておられる方法の対応を考えてみました。 ■spanを両方とも表示させたい場合 ***************************************** <?php class SimpleXMLExtended extends SimpleXMLElement { public function addCData($data) { $dom = dom_import_simplexml($this); $dom->appendChild($dom->ownerDocument->createCDATASection($data)); } } $xml = new SimpleXMLExtended('<rss version="2.0"></rss>'); $channel = $xml->addChild('channel'); $channel->addChild('title', 'TEST RSS'); $dom = new DOMDocument; @$dom->loadHTMLFile('http://hoge.com/index.html'); $xpath = new DOMXPath($dom); foreach ($xpath->query('//*[@class="Table100"]') as $node) { $item = $channel->addChild('item'); $cdata = array(); array_push( $cdata, $xpath->evaluate('string(.//*[@class="Name"]/h1)', $node) ); array_push( $cdata, $xpath->evaluate('string(.//*[@class="Price"])', $node) ); for( $i=1; $i <= $xpath->query('//*[@class="maker"]/span')->length; $i++ ) { array_push( $cdata, $xpath->evaluate('string(.//*[@class="maker"]/span['.$i.'])', $node) ); } $item->addChild('description')->addCData(implode('<br>', $cdata)); } header('Content-Type: application/xml; charset=utf-8'); $xml->asXML('php://output'); ***************************************** 1.$cdataの配列を用意 addCDataに渡すデータをこの配列に入れておく。 2.spanの全要素を取得して配列に入れる $xpath->query('//*[@class="maker"]/span')->lengthを使うことで、 span要素の数が取得できますので、要素数分のデータをfor文で取得し、 $cdataの配列に入れる。 3.addCDataの部分で$cdataを渡す。 ■spanの最後の要素のみ出力する ***************************************** $xpath->evaluate('string(.//*[@class="maker"]/span)', $node), ↓ $xpath->evaluate('string(.//*[@class="maker"]/span[last()])', $node), ***************************************** spanの後ろに[last()]をつけることで最後のspan要素を取得することができる。 というような感じで2つの方法の回避策を考えてみました！ 参考になれば幸いです。
＞　こちらについてですが、やはり、アクセスが多い場合はテキストファイルのほうが良いということでしょうか？ ＞　okwaveのように沢山の人が一度に色々な質問ページを見るような場合はテキストファイル管理の方が良い感じでしょうか。 アクセスカウンターの利用方法とコストの問題も絡みます。 DBサーバに十分お金を掛けられるなら、DBでやった方が後々楽なのでDBがいいと判断します。 一方、アクセスカウンターがリアルタイム更新で無く前日のアクセス数が分る程度でいいなら、テキストファイルにアクセスログだけを記録しておき、一日一回まとめて集計して結果だけDBに入れておくといった処理方法も考えられます。 なので、アクセス数、データの利用方法、予算などいろんな条件を加味して最適なものを選ぶといった所ですね。 ＞　ない場合は新たにレコードの追加。 ＞　既に存在する場合はアクセス数のカラムに1足すという感じで ＞　if文で分岐させる感じですが、 ＞　他に良い処理方法はあるでしょうか？ RDBMSの種類によっていろいろ手法があり、「MERGE INTO ・・・」を使ったり「INSERT ・・・ ON DUPLICATE KEY UPDATE ・・・」を使ったりとDBに任せることも可能です。
一般向けの機能ならAPIを提供して使ってもらう方がいいんでしょうけど、更新系の作業なら（APIとしての提供ではなく）保守用のURLにログインさせて作業してもらう方が楽だと思いますので、そういうAPIを実装するかどうかは微妙ですね。 ＃使う方は効率悪くて困るかもしれませんし、プログラムから ＃「ログインして更新する」こともやるかもしれませんけどね 実装するとすれば >在庫更新などの場合は情報をリクエストで送ることで、在庫が更新される？のでしょうか？ それ以外のタイミングで行うことは考えられませんね。受けとったリクエストを精査したら更新クエリを投げてその結果（成否）を返すでしょう。
（当然ですが）同一サーバですよね？Cookieは使えないので、ホスト名が変わる部分だけURLにセッションIDを付加してやるしかないと思います。 http://php.net/manual/ja/session.idpassing.php
>公式マニュアルでは指定したものしか見当たらなかったもので… サンプルソースはそうかもしれませんが、マニュアル自体にちゃんと記述があります。 RTFM. http://pear.php.net/manual/ja/package.database.mdb2.intro-execute.php -----　引用ここから デフォルトでは、すべてのプレースホルダは 文字列として扱われます。しかし、二番目のパラメータとして データ型 の配列を渡すと、 各プレースホルダの型を指定できるようになります。 -----　引用ここまで 第二引数を省略した場合には、文字列型として扱われます。 PDOなどでもそうなっています（bindParamせずに直接executeで配列を渡すケース）。MySQLでは困ることはなかった気がしますが、いつまでも大丈夫だとかすべてのRDBMSで問題ないとか誰も保証出来ません。「キチンと書く」のが基本です。
ググればたいていのコード例は出てくると思いますけど、基本は説明をよく読むことです。 楽天なら、 http://webservice.rakuten.co.jp/api/ichibaitemsearch/ に説明と例がありますね。 コツが必要になるようなクセやワナのあるAPIもあり、トンチンカンなエラーメッセージを出すAPIで苦労したことがありますけど、勘違いしててうまく行かないだけだった、ナゾが解けたら簡単だった、みたいな話かと思います。ここがミソだとかポイントだとか力説するのは、人それぞれのつまづいた経験によるものだったりします。 あるいは、いろんなのを試してるうちに、こういうパラメータが必要なはず、この機能の場合はここが変わるはず、みたいな見当がつくようになるってことじゃないでしょうか。たいていは１つできたら他のも似たようなものですから、そのパターンが読めて応用が効くようになれば、それがコツなんでしょう。
「NULL除去」ではなくというよりも「NULLバイト除去」が正しいですね。C言語においてはどちらもほとんど同じものを指しますが、PHPの場合は全くの別物です。 さて、本題に入りますが、まず検索していただきたいのはこちらのキーワードです: 「サニタイズ言うな」 https://www.google.co.jp/webhp?#safe=off&q=%E3%82%B5%E3%83%8B%E3%82%BF%E3%82%A4%E3%82%BA%E8%A8%80%E3%81%86%E3%81%AA 人によってはhtmlspecialchars関数の処理を「sanitize」と呼ぶこともありますし、この呼称は何を指しているのかが分かりにくいので使うべきではないです。私だったら以下のように書くと思います。(ついでにクロージャのキャッシュを利かせます) function strip_nullbytes(&$arg) { ....static $func; ....if (!$func) { ........$func = function (&$val) { ............if (is_string($val)) { ................$val = str_replace("\0", '', $val); ............} ........}; ....} ....if (is_array($arg)) { ........array_walk_recursive($arg, $func); ....} else { ........$func($arg); ....} ....return $arg; } また、「とりあえずNULLバイトを除去しておけば大丈夫？」という曖昧な目的でこの処理を行っている点も問題です。きっと「NULLバイト攻撃」対策ということで採用されたのだと思いますが、実はPHP5以降のほとんどの関数はバイナリセーフです。つまりNULLバイトを含んでいても正しく処理できるということです。 【バイナリセーフでない関数・言語構造】 ・ereg_replace(非推奨) ・eregi(非推奨) ・eregi_replace(非推奨) ・split(非推奨) ・spliti(非推奨) ・include(ファイル名が対象) ・include_once(ファイル名が対象) ・require(ファイル名が対象) ・require_once(ファイル名が対象) ・fopen(ファイル名が対象) ・file_get_contents(ファイル名が対象) ・readfile(ファイル名が対象) ・basename(ファイル名が対象) リストアップしてみると分かると思いますが、NULLバイトを正しく処理出来ない関数は以下の2つのタイプに限られます。 ・PCRE正規表現関数が実装される前に使われていたPOSIX正規表現関数 ・ファイル名をもとにファイルを操作する関数 前者は使わなければいいだけですし、気にすべきは後者だけです。「ユーザ入力をファイル名に対してそのまま使うのは危険」とだけ覚えておきましょう。それ以外のシーンでは一切気にする必要がありません。
$rss_text = preg_replace('/[\x00-\x1f]/', '', $rss_text); を $rss_text = preg_replace('/[\x00-\x1f]/', ' ', $rss_text); にしてみて下さい。 多分、本来改行かスペースが必要な部分の改行を取り除いてしまい、XMLのルールに合わない記述に変えてしまっている事が原因だと思います。
＞　キャッシュを残すコードを入れるのか、戻るボタンのコードで対応できるのかだけでも、ヒントが欲しいです。 戻るボタンの動作を作り込むしか無いでしょう。 ブラウザが保持するキャッシュはHTTPで取得してきた時の素のモノなので、ユーザーが入力した内容やJavaScriptで動的に変更した状態は含まれません。
ファイルを分割した方がいいのでは？ $url = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : ''; $file = 'template/' . $url . '.tpl'; if (file_exists($file)) { inlude($file); }
var_dump($_ENV) とでもして確認すれば自明ですが、xampp5.6.3をデフォルトのまま使っているならば$_ENVは（配列として変数は存在していますが）要素数は 0 のハズです。 ∴ undefined index（該当する添え字の要素が存在しない）になります。 php.iniで、variables_order="GPCS" となっているハズですから、variables_order="EGPCS" に書き替えて、Apacheのリスタートさせてください。 （蛇足） >if (preg_match("/Windows/", $_ENV["OS"])) preg_matchじゃなくて、strposを使うべき。マニュアルにもそう書いてます。 http://php.net/manual/ja/function.preg-match.php >ある文字列が他の文字列内に含まれているかどうかを調べるためだけに >preg_match() を使うのは避けた方が良いでしょう。 >strpos() か strstr() 関数を 使う方が速くなります。
社内向けのページなど「ユーザ環境が限定できる」のであれば、 リファラを使うというアイディアもあります。 http://ameblo.jp/linking/entry-10954227995.html 基本的に ・フレームページから開かれた場合は、そのURLがリファラに入る ・「別タブで開く」などをした場合は、リファラが空になる ことから判別します。 ただし、このリファラは、ユーザのブラウザ設定やネットワーク 経路上の機器によって、消失してしまうことが多々あり『フレーム ページから開いたのにリファラが空になる』というトラブルがよく 発生します。 使用しているブラウザやネットワークの把握が可能なできる社内 向けのページならともかく、インターネット公開して不特定の ユーザが使うページでは使いにくいですね。
>一部のWordPressサイトでは、上記のファンクションを通しても >1つもRSS情報を取得することが出来ず、 WordpressのバージョンによってRSSが変更されているハズですので、まずはその「一部のWordPressサイト」のRSSがどういう内容になっているか確認してください。
default_charsetは何になっていますか？もしスクリプト（というかPOSTしてくるhtml）の文字セットと異なっていれば、htmlspecialcharsの第3引数で正しい文字セットを指定してください。htmlspecialcharsは文字セットが誤っていると空白を返しますので・・・ http://php.net/manual/ja/function.htmlspecialchars.php 当然ですが、html（フォーム）をEUC-JPで作るなら、phpスクリプトもEUC-JPにしてhtmlspecialcharsの第3引数でもeuc-jpを指定してください。 ＃ただ今どきeuc-jpを使うメリットはありませんけどね。今のwebでは ＃utf-8一択です（utf-8前提のものがあまりに多い）。
TwitterAPI側がそのような仕様を備えていない以上、真っ当な方法では実現できません。 【A】 あらかじめ考えられるフレーズを辞書として用意しておき、ストリーミングに接続する要求があったときにそれに関連するフレーズを全て取り出し、「+OR+」で結合してTrackパラメータとする。 【B】 Twitter社と有料で契約して「GET statuses/firehose」を使えるようにし、全てのツイートを正規表現の処理にかけてチェックする。但し契約にもコンピュータへの投資へも膨大なお金が必要。個人では実現不可能。そもそも処理速度的にPHPが用いられることはないと思われる。
>foreach ($ecs as $val) { >$result = $val; >} > >print_r($result); これだと最後に取得したデータしか出てきませんよね？ $result[] = $val; じゃないんですか（print_rした配列が二次元になっていない時点で気付くべき）。 というか、fetchAll()したものをわざわざ別の配列に格納し直す意図がわかりません。直接 $ecs = $wbl->fetchAll(); print_r($ecs); でも同じですよね。 あるいは foreach ($ecs as $val) { print_r($val); } のつもりだったのか・・・
お使いのWordpressのRSSのURLはご存知ですよね？ RSSを表示する以上「静的HPに組み込む」のは無理です。最低でもRSS表示部分は「動的」になります。ページ全体もしくはインラインフレームで『RSSリーダ』を動作させる必要があります。普通はphpで組み込むでしょう。「php RSSリーダ」ででも検索すればたくさん出てきますが、玉石混淆ですのであまり古いもの（MagpieRSSを使っているとか）には手を出さない方が吉ですww どうしても静的なhtmlファイルでないといけない（サーバ側でスクリプトが動かせないなど）事情があれば、JavaScript版のRSSリーダもあったとは思います。「JavaScript RSSリーダ」で検索してください。 ＃JavaScriptのRSSリーダはカテゴリ違いになりますので ＃あとはJavaScriptカテゴリでどうぞ。
データベースから取得しているのに、こういう並びの配列になっているのが不思議です。 >このキーである「index」「login」「stock」「option」の >順番が取得するデータによって入れ替わってしまいます。 添え字が決まっているのですから順番で困るというのもヘンだと思うんですが、どうしてもということなら配列を組み替えてしまえばいいのでは？ （例） <?php $data = array(); $data['date'] = array('2015/02/01', '2015/02/02', 'total'); $data['option'] = array(2, 1, 3); $data['login'] = array(6, 6, 12); $data['stock'] = array(3, 4, 7); $data['index'] = array(2, 4, 6); echo '<pre>'; var_dump($data); echo '</pre><hr>'; $arr = array(); foreach ($data['date'] as $key=>$val) { $arr['date'][] = $val; $arr['index'][] = $data['index'][$key]; $arr['login'][] = $data['login'][$key]; $arr['option'][] = $data['option'][$key]; $arr['stock'][] = $data['stock'][$key]; } echo '<pre>'; var_dump($arr); echo '</pre><hr>'; 個人的には、行ごとに添え字：値になっている配列の方が使いやすいと思いますけどね（fetchAll()で読み込んだ状態）。 $arr = array(); foreach ($data['date'] as $key=>$val) { $arr[] = array('date'=>$val, 'index'=>$data['index'][$key], 'login'=>$data['login'][$key], 'stock'=>$data['stock'][$key], 'option'=>$data['option'][$key]); }
できない。 ダウンロード後、完了したってのが拾えないので。 保存って押したときに非同期で件数のみ取得して、表示してから出力のphpにsubmitすれば件数の表示が出来るかな。 タイミング無視すればいつでも表示できると思うけど、保存した後ってのは難しい。
JS $("#result").load("test.php", { "param":"AAA" }); // POST method PHP $_POST["param"] こんな感じです。
phpスクリプトでどうこうする以前に、処理するデータの内容がはっきりしていないとどうしようもありません。とりあえずはその「携帯から送られたメール」がどういう構成になっているかをチェックしてください。 メールBOXから（POP3などで）ダウンロードした生の状態でcontent-typeがどうなっているかどういうパートに分割されているかを確認するのが先です。
array_randを使うのが何よりも簡単です。 PHP Manual - array_rand http://www.php.net/manual/ja/function.array-rand.php foreach (array_rand($hairetu, 5) as $i) { echo $hairetu[$i]; }
PHPでもやってやれないことはありません。私としては大変そうだなという感じがするだけですよ。 1ページに収める、というのは http://5am.jp/jquery/jquery_ui_tabs/ のような感じで、上記のURLはタブですが、タブのボタンが、 1ページ目には2ページ目を表示するタブ（ボタン） ２ページ目には1ページ目と３ページ目を表示するタブ（ボタン） ： ： があるというようなイメージです。
ボタンを複数配置するなら、どのボタンを押されたのかを引き渡さないといけません。 表示するときの処理 $arr = array( array('no'=>'1', 'img'=>'1.jpg', 'thumb'=>'1S.jpg'), array('no'=>'2', 'img'=>'2.jpg', 'thumb'=>'2S.jpg'), array('no'=>'3', 'img'=>'3.jpg', 'thumb'=>'3S.jpg'), ); foreach ($arr as $item) { $no = $item['no']; $img = $item['img']; $thumb = $item['thumb']; printf('<button type="button" onclick="window.open('img.php?%s','main');" name="name%s" value="%s"><img src="%s" width="150" height="110"></button>', $no, $no, $img, $thumb); $_SESSION[$no] = $item['img']; } これで、 <button type="button" onclick="window.open('img.php?1','main');" name="name1" value="1.jpg"><img src="1S.jpg" width="150" height="110"></button> <button type="button" onclick="window.open('img.php?2','main');" name="name2" value="2.jpg"><img src="2S.jpg" width="150" height="110"></button> <button type="button" onclick="window.open('img.php?3','main');" name="name3" value="3.jpg"><img src="3S.jpg" width="150" height="110"></button> のようなhtmlが返せます。で、onclickで呼び出されるスクリプトは img.php <?php session_start(); $no = $_SERVER['QUERY_STRING]; $img = $_SESSION[$no]; printf('<img src="%s" />', $img); のようにすればいいんじゃないかと。 ＃まぁ普通はjQuery（lightbox）でやりますけどね。 ＃なぜこんな面倒なことをするのかが謎ですww
なぜ「MySQLでエラーが出る」と思ったのかが謎です。エラーメッセージの英語くらいは読んでください。このレベルの英語が（辞書を片手でも）読めないなら、プログラミングは出来ません。 おそらくphp5.2.xxで実行していませんか？ RTFM. http://php.net/manual/ja/function.json-encode.php json_encodeに第二引数（オプション）が追加されたのは、php5.3.0以降です。 というか、5.3系すらサポートが切れたというのに、5.2系というのは・・・。早急にバージョンアップをするか（サーバ側でサポートされないなら）サーバの変更を検討すべきです。 なお、ネイティブなMySQL関数は既に非推奨です。PDOで書き直してください。php5.3.6以降ならcharset指定もDSNで行えます。 http://php.net/manual/ja/mysqlinfo.api.choosing.php http://php.net/manual/ja/ref.pdo-mysql.connection.php PDOならwhilweでループを使わなくてもfetchAll()で一括取得できますしね。
単純な文法ミス。エラーメッセージを読んで気付かないとおかしいレベルです。 >$search_word=urlencode('+); //#検索ワード1か検索ワード2 +でつなぐとand検索、+-でつなぐと検索除外 文字列リテラルを括っている単引用符が閉じられていない（httpsの前の ' までが文字列リテラルと判断されるので、そのあとのhttps～がunexpectedエラーになっていると推測）。
$str=""; while (・・・) { $str.=・・・; } $body = <<<EOM なんたら {$str} かんたら EOM; でよくない？
Excelの仕様としてPDFの埋め込みが出来ないので、画像変換せずに埋め込むのは無理だと思います。
<input type="hidden" name="category" value="1"> <input type="hidden" name="category" value="2"> 同じnameで2つinputタグがあるのが問題でしょう。
ちゃんとマニュアルを読んでください。phpスクリプトの開始は、<?php です。 RTFM. http://www.php.net/manual/ja/language.basic-syntax.phptags.php （例） <html> <head> <title>年齢確認</title> </head> <body> 該当する年齢を選んでください。 <br> <hr> <form method="post" action="radio_uke.php"> <?php for ($i = 1; $i < 11; $i++) { print '<input type="radio" name="r" value="' . $i . '">' . $i . PHP_EOL; } ?> <input type="submit" value="送信"> </form> </body> </html>
>while ($row = $st->fetch()) { このループの内側で >$st = $pdo->prepare("SELECT * FROM change WHERE change_id=$change_id"); $stを書き替えてはいけません。また、プレースホルダの使い方もヘンです。添え字ナシで配列を渡すなら疑問符プレースホルダを書いておけないといけません。 /メンバーテーブル(members)から交代データ取得 $st = $pdo->prepare("SELECT * FROM members WHERE game_id=?"); $st->execute(array($game_id)); while ($row = $st->fetch()) { $change_id = $row['change_id']; //change_idを元に交代テーブル(change)からデータ取得 $su = $pdo->prepare("SELECT * FROM change WHERE change_id=?"); $su->execute(array($change_id)); $row = $su->fetch(); $change_time = $row['change_time']; $change_time_at = $row['change_time_at']; // テーブル定義に　change_reason　というカラムがないけど・・・ $change_reason = htmlspecialchars($row['change_reason']); print $change_time; player_inquiry($row['player_in']); ?> <input type="text" style="width:25px;ime-mode:inactive;" maxlength="2" name="change_time">分／AT<input type="text" style="width:25px;ime-mode:inactive;" maxlength="2" name="change_time">分<br> ＯＵＴ<input type="text" style="width:120px;" name="last_name" value="<?= $last_name; ?>"><input type="text" style="width:120px;" name="first_name" value="<?= $first_name; ?>"><br> <?php player_inquiry($row['player_out']); ?> ＩＮ<input type="text" style="width:120px;" name="last_name" value="<?= $last_name; ?>"> <input type="text" style="width:120px;" name="first_name" value="<?= $first_name; ?>"> <?php } ?> なお、デバッグ中はエラーモードを適切に設定してください。例外を生成するようにしてtry～catch構文で括るのがいいと思います。PDOのデフォルトはSILENTですので・・・ http://www.php.net/manual/ja/pdo.error-handling.php
$buff = array(20,30,31); foreach ($_POST['hoge'] as $key => $val) { if (in_array($key, $buff)) { // 見つかったときの処理 } }
ごく普通にループさせます。 foreach (range('a', 'z') as $alpha) { fclose(fopen("{$alpha}01.txt", 'w')); } なお、同時アクセスを考慮してファイルロックを行う場合は foreach (range('a', 'z') as $alpha) { $fp = fopen("{$alpha}01.txt", 'a'); flock($fp, LOCK_EX); ftruncate($fp, 0); flock($fp, LOCK_UN); fclose($fp); } と書きましょう。 ちなみにfcloseは書く人が多いので "何となく" 書いていますが、書かなくても勝手にメモリ解放されるので必ずしも必要ではありません。C言語の場合は書かない場合「プログラム終了時」に解放される仕様となっているので書く方が望ましいのですが、PHPの場合は変数のガベージコレクションと同時にリソースのガベージコレクションも行われるので不要です。
どのように保存したいのでしょうか？ 単に書き出すだけなら <form action="" method="POST"> <input type="radio" name="test" value="1">1 <input type="radio" name="test" value="2">2 <input type="submit"> </form> <?php $test = filter_input(INPUT_POST, 'test'); if (isset($test)) { // 入力値を表示 echo $test; // テキストとしてファイルに書き出す file_put_contents('out.dat', $test); } でも保存は出来ます。 でも普通は「あとでどういう形で利用するのか」に合わせて書き出します（それによって書き出し方が変わる）。
$number= ($_POST["number"]!="") ? $_POST["number"] : NULL; でどうなります？
PHPは変数に対する再代入が可能な手続き型言語です。手続きの煩雑さを嫌うのであれば、Scala/Haskellなどの関数型言語の学習をおすすめします。このような言語には「変数: var(variable)」とは違い、再代入不可能な「値: val(value)」という概念があります。なお近年関数型言語に注目がどんどん集まってきているので、(案件があるかどうかは別として)個人的にはPHPよりも学習価値があると思います。 既にある回答に関しての意見↓ 「命名に意味を持たせる/スコープを細かく分割する」 → PHPを利用するのであれば最も賢明な選択だと思います。私もこれを支持します。 「定数を利用する」 → PHPの定数にはスコープが存在しないので、この用途での使用には向かないと思います。
PHP Manual - 配列 http://www.php.net/manual/ja/language.types.array.php unset($array[0]); で消せます。var_dumpの出力を見る限り要素はキー「0」に対応する1個しかないのでこれやっちゃうと空になりますが。 …それとも、こういうことでしょうか？ array(1) { array(3) { ["xxx"]=> string(5) "xxxxx" ["xxxxx"]=> string(3) "xxx" ["xxx"]=> string(4) "xxxx" } } もしこうしたいというのであれば、そもそもPHPの配列のことを理解できていません。先ほど提示したマニュアルを最初からじっくり読んでください。
＞* * * * * コマンド & sleep 30 ; コマンド という記述の意味がわかっているのであれば、応用できるはずです。 sleep 30 コマンド というシェルスクリプトを作り、下記の2行を設定します。 * * * * * コマンド * * * * * 上記スクリプト ＞定期実行させるPHPプログラムの目的は、定期的にアンドロイドPCから送られてくるデータを処理してサーバー上でテキストファイルに書き込ませるものです。 受信時にファイルに書けば良いのでは？
$_SERVER['PHP_AUTH_USER']はphpがモジュール動作でないと有効になりませんが、お使いのサーバのphpがCGI動作ってことはありませんか？phpinfo()で確認してください。
C#はSHA256を計算しているのにPHPはHMAC-SHA256を計算しているのですから，異なるのは当然です。 HMACはハッシュ関数を使ってメッセージ認証コードを作成するための方法です。 PHPでハッシュを計算するのであれば，hash関数を利用します。 ref) http://php.net/manual/ja/function.hash.php # MD5とSHA1は専用関数がありますが，現時点においてこれらのハッシュ関数の使用は推奨されません。 もし，C#で実はHMAC-SHA256が欲しいのであれば，HMACSHA256クラスを利用します。 ref) http://msdn.microsoft.com/ja-jp/library/system.security.cryptography.hmacsha256.aspx
$elementのvar_dumpが示されたとおりだとしたら、 >array(1) { >["000000005a6bd4e800000000d42c592e"]=> >array(2) { >["obj"]=> の部分が考慮されてないように思えます。nodeValueを持っているオブジェクトこの配列の一要素です。たとえ要素数が 1 であっても直接アクセスが出来ませんし、ましてこのデータだと要素数 1 の配列の下のい配列に2つの要素があります（そのひとつひとつがnodeValueプロパティを保持している）。
関数↓ function parse_hierarchy($text, $indent = 0) { 　static $format = '/^\t{%1$d}(?:$(*SKIP)(*FAIL)|(.+?)(?=^\t{%1$d}(?:[^\t]|$)|\z))/ms'; 　$callback = function ($block) use ($indent) { 　　list($a, $b) = explode("\n", $block, 2) + [1 => '']; 　　return ($b = parse_hierarchy($b, $indent + 1)) ? [$a, $b] : [$a]; 　}; 　return preg_match_all(sprintf($format, $indent), $text, $m) ? array_map($callback, $m[1]) : []; } 実行結果サンプル↓ http://ideone.com/OQQdIy
正規表現だとこんな感じ <?PHP $str="SETING TIME: 00:00:32.421"; $pattern="/(?<=SETING TIME: )\d{2}:\d{2}:\d{2}\.\d{3}/"; if(preg_match($pattern,$str,$match)){ print $match[0]; }
（追記） short_open_tag が無効になっていないかチェックしてください（というか、先頭を <?php に書き替えてみればわかるかと）。 まぁ、そのときは（画面は真っ白でも）ブラウザでhtmlソースを確認すれば「phpスクリプトがそのまま返っている」のですぐにわかると思いますけどねww
while の内側で、$arr[] = $aaa; としておいてwhileを抜けてから $arr を使うのではダメなんですか（それを採れない理由は何でしょうか）。
xdiffってのは、PEARではなくPECLのようですが。 レンタルサーバでPECLの追加はできないでしょう。
lolipopと同系列のhetemlのサポートページですが、 http://heteml.jp/support/faq/408.html?ref=faq .htaccessへの記述は 【AddHandler php5.4-script .html】 で問題ありません。 Firefoxなどの一部ブラウザは、キャッシュの関係で .htaccessをFTPで上書きアップロードしても 内容が反映されない事があります。 よって、【AddHandler php5.4-script .html】を .htaccessに記述してFTPでアップロード後、 一旦ブラウザを閉じて、再度ブラウザを開いて 動作確認を行ってみてはいかがでしょうか。
もうすこし単純なモデルでやってみれば？ //AAA.PHP <?php session_start(); $_SESSION["hoge"]="hogehoge"; $_SESSION["fuga"]="fugafuga"; ?> <a href="BBB.php">BBB</a> //BBB.PHP <?php session_cache_limiter('private, must-revalidate'); session_start(); unset($_SESSION["hoge"]); // ※ include "header.php"; ?> //header.php <?PHP var_dump($_SESSION); ?> ※の行をコメントアウトしたり、生かしたりすれば AAA.phpからBBB.phpに移動する際にきちんと消えるかどうかが 確認できると思いますが
http://php.net/manual/ja/function.win32-ps-stat-mem.php メモリの容量や残容量をウオッチして、足りなくなりそうになったら処理を実行しないロジックを追加
そりゃ、includeすれば文字化けしますよね。（表示するだけなら）file_get_contentsなどで読み込んでmb_convert_encodingしてから出力すればいいです。 <?php echo mb_convert_encoding(file_get_contents('http://******.com/hps/*****.cgi?cmd=s&sc=***'), 'utf-8', 'cp932'); ?> でもフォーム要素のPOST先とかはそのままですから、結局まともには動きませんよ。 UTF-8にすることが出来ないなら「SJISの（CGIの）ページはSJISのままにする」しかないです。 ＃個人的にはPerlでも（ライブラリなど面倒ですが） ＃UTF-8に書き直すべきだとは思うのですけどね >何年後かに使えなくなるとかありますでしょうか。 それはないです。 web系のプログラム言語と相性が悪い（phpのマニュアルでは「使ってはいけない文字セット」として明示）のはたしかですが、静的なhtmlページでは問題ないですし、Perlでも「枯れた」ソースであれば大丈夫です（変更・追加とかするときに文字列リテラルの記述などで注意が必要ですけど、弄らなければ無問題）。
そもそもスパムを全角英数字で防ごうという発想が誤っています。この方法ではいたちごっこになってしまいます。 今から対策として導入するなら「reCAPTCHA」がおすすめです。歪んだ文字を入力する「CAPTCHA」の後継で、面倒な入力が不要になっています。 http://japan.cnet.com/news/service/35057402/ http://qiita.com/koliainwiki/items/544fe01d8c964c1b99a0
flashmail.phpは途中にvar_dumpがあるのでheaderでの画面遷移は行われませんよね。どうせなら、var_dump($message); じゃなくて var_dump($_POST); にして『想定しているとおりのデータ』を受け取っているかチェックしてください。個人的には $arr = array(); foreach ($_POST as $key=>$val) { $arr[] = $key . ' => ' . $val; } file_put_contents(date('YmdHis') . '.log', implode(PHP_EOL, $arr)); のようにログファイルを作成した方がいいと思います。送信後に画面遷移させている部分のデバッグも必要でしょ？ mb_convert_encodingは必要ですかね（utf-8以外でPOSTされる可能性があるのでしょうか）。またmb_languageが何になっているかは確認しておいてください（'ja'なのか'uni'なのかで生成されるメールデータが違うので）。 閑話休題 >$from = "～"; "～" というのは省略しただけで、実際には当該サーバで運用しているメールアドレスを記載していますよね？また送信先がFromと同じ（当該サーバで運用しているメールアドレス）でも届きませんか？ 基本的にメールフォームは宛先固定の運用がメインです（つまりサイトへの連絡用ですね）。「他サーバへの送信」は送信元サーバの信頼性に依存してしまいます。レンタルサーバや自宅サーバレベルだと難儀します。特にレンタルサーバだとブラックリストに載っているのが常態になってしまっているケースも多いです。（PEAR::Mailとかphpmailerなどのライブラリを使って）ISPのSMTPを経由させるなどしないと確実に到達する保証はありません。 なお、入力されたメールアドレスにメールを送るというのはよほどしっかりと運用できる体制がなければやってはいけません。このメールフォームを悪用されたときに対処できますか？もしこのメールフォームをレンタルサーバに設置して（悪用されて）善意の第三者にスパムが送信されたら、サーバごと（場合によっては近隣のIPアドレスブロックを巻き込んで）ブラックリスト入りします。
$tree = array(); foreach ($tourist_spot as $spot) { 　$current = &$tree; 　foreach (array_slice($spot, 0, -1) as $segment) { 　　if (!isset($current[$segment])) { 　　　$current[$segment] = array(); 　　} 　　$current = &$current[$segment]; 　} 　$current = current(array_slice($spot, -1)); } unset($current); var_dump($tree);
>メールアドレスは下記のようなものとなっていて、発信者名にカンマが含まれています。 「メールアドレス」には、そもそも発信者名は含みません（メールアドレスは「A**@japan.jp」です）。単にメーラをそう設定しているだけの話ではないのですか？ どうしてもdisplay-name（≠メールアドレス）でカンマ区切りの文字列を使いたいのであれば（真っ当なMUAがそうするように）二重引用符で括るべきです。 "From: \"Abe, Shinzo\" <A**@japan.jp>" もしくは 'From: "Abe, Shinzo" <A**@japan.jp>' で指定してみてください。
LoadModuleの設定を忘れているのでは？
No.1の回答への補足にある、 ↓コレを print $_post["a"]; ↓コレに print $_POST["a"]; -------------------------------------------- ▼okuri1.html <html> <head> <meta charset="utf-8"> <title>phpの学習</title> </head> <body> <form method="post" action="uke1.php"> <input type="text" name="a"> <br> <input type="submit" value="送信"> </form> </body> </html> -------------------------------------------- ▼uke1.php <html> <head> <meta charset="utf-8"> <title>phpの学習</title> </head> <body> <?php print $_POST["a"]; ?> </body> </html> -------------------------------------------- 一応文字コードの指定もきちんとしたほうが良いと思います。 ファイルを保存する際のエンコードの種類も合わせてください。 あと、Notice: Undefined～のエラーは、王道なので一旦ググってみることを オススメします。
echo $row->find('a')->href; だとどうなりますか？ 【備考】 Simple HTML DOM Parser は内部でかなり効率の悪いことを行っているのであまりお勧めできません… http://qiita.com/mpyw/items/c0312271819baee09132 ライブラリに頼らずにやるんだったら $html = '<a href="http://yahoo.co.jp">yahoo</a>'; $dom = new DOMDocument; @$dom->loadHTML($html); $xpath = new DOMXPath($dom); echo $xpath->evaluate('string(//a/@href)'); でいけますね。
php.iniを変更した後、xamppのapacheは再起動しましたか？
質問1について抜けてました。 具体的な例はどんなものでしょうか? 例えば $a='abc' ; func($a) ; 　# $aの内容(文字列)がfuncに渡される → func('abc') の意味 func("$a") ; 　# $aの内容('abc')を展開した文字列が渡される → func('abc') の意味 なら、同じ意味になりますが $a=123 ; func($a) ; 　# $aの内容(数値)がfuncに渡される → func(123) の意味 func("$a") ; 　# $aの内容(123)を文字列に変換し、それを展開した文字列が渡される → func('123') の意味 　だと、異なる意味になります。 また func('PHP_VERSION') ; 　では、PHP_VERSION という文字列ですが、 func(PHP_VERSION) ; 　では、 定義済み定数 PHP_VERSION の内容(例えば 5.4.0 とか)になります。 http://php.net/manual/ja/reserved.constants.php 囲む、囲まないは、目的や関数の仕様に合せてください。
TestController内にindexメソッドは作成しましたか？ CakePHPはデフォルトでは以下のようにURLに対応するコントローラのメソッドを呼び出します。 http://[CakePHP root]/コントローラクラス/メソッド つまり、http://[CakePHP root]/Test/hogeと書けば、TestControllerクラスのhogeメソッドが呼び出されます。ここでhogeを省略した場合、indexメソッドが呼び出されます。 メソッドの箇所を省略して、NotFoundになっているということはindexメソッドが記述されていない可能性が高いです。 また、コントローラの処理が終了すると、Viewが画面に返されます。 ViewもまたURLに対応していて、http://[CakePHP root]/Test/hogeの場合、View/Test/hoge.ctpが画面に返されます。作成していない場合こちらも作成しましょう。 なお余談ですが、CakePHPを始めたい場合は、リンク先のページよりドットインストールの方がはるかにわかりやすいのでそちらをお勧めします。 ドットインストール CakePHP入門 http://dotinstall.com/lessons/basic_cakephp
さくらのレンタルサーバのphpはCGIモードなので$_SERVER['PHP_AUTH_USER']が取得出来ません（∴ さくらに限定の話でもありませんが・・・）。 検索したら下記のような情報は出てきました（未検証です）。 http://reviews.f-tools.net/Server/Sakura-Basic-Error.html
基本的にはどちらも一緒。 PHPのプログラムはマルチプロセスで実行されるので、サーバへのアクセス1件につき1つのプロセスが動いています。 プログラムファイルが1つであっても、別々のプロセスとしてメモリにロードされ実行されるので、基本的には負荷に差は発生しません。
index.phpの11行目に原因があるので、その部分から原因を調べて対処すればいいと思います。 仕事で使っているならバックアップはありますよね？ それなら最後にバックアップしたものからDBも含めて元に戻して下さい。
>色数が256色使っている 新しい色をパレットに追加しようとすれば色数制限に引っかかりますよね（パレットに空きがない）。 マニュアルのNoteのようにgif読込み → png出力 → 出力したpngを読込してあとはpngにしてしまうしかないのでは（256色超えるならどのみちgifで書き込めないし）。 http://php.net/manual/ja/function.imagecolorallocate.php
「php 無名関数」とかで調べれば JavaScriptと大して変わらないことが分かると思いますが。 PHP: 無名関数 - Manual http://php.net/manual/ja/functions.anonymous.php <?php $algos = [ 　"md5" => function ($input) {return "func md5:$input";}, 　"base64enc" => function ($input) {return "func base64enc:$input";}, 　"originalHashA" => function ($input) {return "func originalHashA:$input";}, 　"originalHashB" => function ($input) {return "func originalHashB:$input";} ]; $result = $algos["originalHashA"]("XXX"); echo "$result \n";
こんな感じ？（一部省略） //元データ create table team(teamcode int(4) unsigned zerofill not null unique,teamname varchar(20)); insert into team values(1,'team1'),(2,'team2'),(3,'team3'),(4,'team4'),(5,'team5'); create table member(membercode int(4) unsigned zerofill not null unique,teamcode int(4) unsigned zerofill,membername varchar(20)); insert into member values(1001,1,'member1'),(1002,2,'member2'),(1003,3,'member3'),(1004,2,'member4'); //検索 select t1.teamcode,t1.teamname,count(t2.membercode) as gaitou from team as t1 left join member as t2 on t1.teamcode=t2.teamcode group by t1.teamcode
WebブラウザがやっているようなJavaScriptの実行処理をPHPでシミュレートする目的に対して、最近は「Selenium WebDriver」がよく使われているようです。 http://docs.seleniumhq.org/docs/03_webdriver.jsp
残念ですが、PHP 標準には目的に沿う機能がありません。 自分で関数を作るしかないと思います。
エラーになっているoffset番号はチェックが入っていないチェックボックスの番号じゃありませんか？ チェックボックスはチェックが入っていない時、name・value共にPOSTされてきませんので、エラーになっているのでしょう。 何が入ってくるか判らないので、以下のようにforeachで展開するといいのではないでしょうか。 if(isset($_POST['n'])){ foreach ($_POST['n'] as $imgValue) { $img_src = htmlspecialchars($imgValue, ENT_QUOTES); $img = '<img src="'.$img_src.'">'; $html .= $img; } }
再現できません↓ http://ideone.com/NaKWBz ソースコードを提示してください。
＞なぜか、2014/10/26が二つ出現してしまいます。 原因はぱっと思いつかないですが こんな風にしてみてはどうですか？ <?PHP $startDay = "2014/10/8"; $endDay = "2014/11/26"; foreach(range(strtotime($startDay),strtotime($endDay),86400) as $val){ $keyDate[]=date("Y/m/j",$val); } print_r($keyDate); ?>
各要素がfilterメソッドを所持しているようなので更なる絞込みは容易です。 $client = new Goutte\Client; $crawler = $client->request('GET', 'http://example.com'); $crawler->filter('ul#test>li')->each(function ($e) { 　var_dump(array( 　　$e->filter('a')->attr('href'), 　　$e->filter('img')->attr('src'), 　　trim($e->filter('h4')->text()), 　　trim($e->filter('p')->text()), 　)); }); ちなみにこの程度のシンプルなスクレイピングであればPHPの標準クラスだけでも容易に実現出来ます。コード量も大差無いです。 $dom = new \DOMDocument; @$dom->loadHTMLFile('http://example.com'); $xpath = new \DOMXPath($dom); foreach ($xpath->query('//ul[@id="test"]/li') as $e) { 　var_dump(array( 　　$xpath->evaluate('string(.//a/@href)', $e), 　　$xpath->evaluate('string(.//img/@src)', $e), 　　$xpath->evaluate('normalize-space(.//h4)', $e), 　　$xpath->evaluate('normalize-space(.//p)', $e), 　)); } 備考: http://qiita.com/mpyw/items/c0312271819baee09132
「<?PHP ?> の外はそのまま」というのがPHPの仕様です。 <?php if (isset($error)) { ?> エラーです <?php } ?> は <?php if (isset($error)) { echo 'エラーです' } ?> と同じです。 {と}の間に大量のHTMLを書く時等は、echoとかでいちいち出力させるより楽です。 このあたりの説明は、PHPの学習書とかを読めば載っています。 http://php.net/manual/ja/language.basic-syntax.phpmode.php マニュアルにも載っています。 たしかにちょっと違和感のある書き方ですが、正しい書き方です。 また、if等には {} 以外の記述方法があります http://php.net/manual/ja/control-structures.alternative-syntax.php こちらの方が違和感は少ないのではないでしょうか。 以上より ・そもそもどんな構造なのか →前述の通り。 ・どう書き直すのが良いか(整形ツール等々あれば) → 書き直す必要は無い。あえて直すなら 別の構文を使う。 ・なんでこの記述をするのか(メリット/デメリットはないのか) → メリット: 大量にechoとかを並べなくて済む 文字列の書き方に悩まないで済む 　　src="image.jpg" と書こうとすると、 \"とするとか、'で囲うとかを考える必要があるが、HTMLならそのまま書ける。 デメリット: 慣れないと違和感がある 多用すると、PHPとそうで無い部分との切り分けがわかりづらい。
様々な方法がありますが、銀の弾丸はありません。ログイン管理にはCookie、アクセスカウンタにはIPアドレスを用いるのが最も一般的だと思います。 【Cookie】(キャッシュを利用するETagトラッキングも同様) [利点] ・ユーザを信用するのであれば最も一般的な方法である。 [欠点] ・ユーザに意図的に削除されると不正カウントが可能になってしまう。 ・複数のブラウザからのアクセスを別のものと見なしてしまう。 ・スクリプトからのアクセスに対しては無力である。 【Canvas Fingerprint】 [利点] ・ユーザが削除することは不可能である。 [欠点] ・モバイルブラウザやTorブラウザでは正常に機能しない。 ・複数のブラウザからのアクセスを別のものと見なしてしまう。 ・スクリプトからのアクセスに対しては無力である。 ・ユーザに不信感を与えやすい。 【IP Address】 [利点] ・複数のブラウザからのアクセスも同じものであると判断出来る。 ・不正カウントを試みるスクリプトに対しても、ある程度の対抗策となる。 [欠点] ・IPアドレス再取得に必要な時間以上の頻度でくる不正カウントを防ぐことは出来ない。 ・同じIPアドレスを利用している複数のユーザを同一視してしまう。
>＃以下のラベルを取得したいのですが 出来ません。そもそもブラウザがサーバに送信していませんので、サーバ側で取得することは不可能です。 ブラウザは#の左側をサーバに要求し、返ってきたhtmlソースに#以降に該当する部分があるかどうかチェックしてページ内を移動させます。
>上記のスクリプトを単純にphpで表示したい なぜ「phpで表示したい」のでしょうか？一定以上の長さのhtmlソースはphpを抜けてから直接書く方が見易いですし引用符のエスケープ間違いも起こりません。なんらかの条件で出力する・しないを切り分けるようなケースでも、いったんphpを抜けて書くべきです。 if (条件) { ?> <form name="aaa" method="post" action="bbb.php"> <select name="ccc" onChange="document.forms['aaa'].submit()" > <option value="111">111</option> <option value="222">222</option> </select> </form> <?php } 途中にphpの変数を展開したい部分があるなら、<?= 変数名; ?> とでもして埋め込めばいいでしょう。
>フォントは、自パソコンの中に存在しています。 ローカルPCのApache+phpで試しているということですね？ >$font = "c:\windows\fonts\msgothic.ttc"; これは転記ミスでしょうか？$font = 'c:\windows\fonts\msgothic.ttc'; もしくは $font = "c:\\windows\\fonts\\msgothic.ttc"; となっているハズですよね。 >$color = imagecolorallocate($im, 0, 0, 0); 黒いキャンバスに黒い絵の具で描画するんでしょうか？ $color = imagecolorallocate($im, 255, 255, 255); で試しましたが、ちゃんと表示されましたよ。アングルが30あるし開始位置・サイズがアレなので全体が収まりませんけど（表示を確認するだけなら、imagettftext($im ,60, 0, 100, 100, $color, $font, $jstr); くらいが適切かと）。
Javaはサーバサードのプログラムは起動しっぱなしなのでstatic変数で保持できますが、PHPはインタプリタなのでアクセスが有る度にプログラムが起動され、処理が終わるとプログラムが終了するので保持ができませんね。（逆にメモリの解放漏れって事は起きないというメリットもありますが） DBからの値をキャッシュする方法としては、memcachedとかRedisを使って値を保持させる方法が多いですかね。 私が担当した案件でもmemcachedを使ってキャッシュさせるというのは何度もやってます。 ローカルファイルで持つという方法も有りますが、サーバ台数が増えた時各サーバでキャッシュ内容に差異が出たりすると面倒ですが、memcachedを使ってデータを一元管理すれば管理も楽です。 ＞　そもそもPHPは小規模しか扱わない かなり大規模なサービスでもPHPは普通に使いますよ。
IPなんて固定で運用していないと変わっちゃうからね。 都度変えるのはナンセンス。 確実にそのIPからしかアクセスしないっていうのであれば、それも設定しておけばいいと思うけど。 ディレクトリ構造、phpファイル名は関係ない。 その管理ページでログインしているかどうかを見るのがふつう。 セッションで管理することが多いかな？ んで、もし外部からアクセスされては困るものに関しては公開ディレクトリより上に配置してphpで読み込んで表示する。 IDとパスワードはそりゃ難解のにするか、リトライの回数を制限しないとだめだよね。
twitteroauthだとJSONを取得できなかったときの原因追及が困難なので、よければ代わりにTwistOAuthを使ってください。twitteroauthを意識した設計になっていて、学習コストは低く、且つそれよりも豊富な機能と高い信頼性を実現しています。作者自分で言うのもアレですが事実上の上位互換です。 TwistOAuth https://github.com/mpyw/TwistOAuth 【サンプル】 PHPバージョン5.4以降を想定しています。array_mapが分かりにくかったら普通にforeachで書いてもらっても構いません。 <?php require 'TwistOAuth.php'; // ここにキーを設定 $ck = ''; $cs = ''; $ot = ''; $os = ''; // 今回はHTMLではなくプレーンテキストとして簡易表示 header('Content-Type: text/plain; charset=utf-8'); try { 　$to = new TwistOAuth($ck, $cs, $ot, $os); 　print_r(array_map( 　　function ($status) { 　　　// 公式リツイートの場合は元ツイートに置換 　　　if (isset($status->retweeted_status)) { 　　　　$status = $status->retweeted_status;　 　　　} 　　　// ステータスオブジェクトをもとに整形して表示したい文字列を生成 　　　// ツイート本文だけはあらかじめエスケープされているので 　　　// テキストとして表示する場合は逆にアンエスケープが必要 　　　return sprintf('%s(@%s): %s', 　　　　$status->user->name, 　　　　$status->user->screen_name, 　　　　htmlspecialchars_decode($status->text, ENT_NOQUOTES) 　　　); 　　}, 　　$to->get('statuses/user_timeline', ['count' => 10]) 　)); } catch (TwistException $e) { 　echo 'エラー:' . $e->getMessage(); }
・/hoge/test.txt ・/hoge/hoge1/test.txt ・/hoge/hoge2/test.txt という3ファイルがあった時、 /hoge/hoge1/./test.txt という表記ならば、/hoge/hoge1/test.txtを指します。 /hoge/hoge2/../test.txt ならば、/hoge/test.txtを指します。
https://www.express.nec.co.jp/linux/distributions/knowledge/system/crond.html OSによってちょっと違うかもしれないけど？
PHP5.6以降 $parts = array_map(function ($array) { return array_filter($array, 'ctype_alpha', ARRAY_FILTER_USE_KEY); }, $arrays); var_dump($parts): PHP5.3以降 $parts = array_map(function ($array) { foreach ($array as $key => $value) { if (!ctype_alpha($key)) { unset($array[$key]); } } return $array; }, $arrays); var_dump($parts): バージョン制約無し $parts = array(); foreach ($arrays as $i => $array) { $parts[$i] = array(); foreach ($array as $key => $value) { if (ctype_alpha($key)) { $parts[$i][$key] = $value; } } } var_dump($parts):
PDOできちんとやる限りクォーテーションが影響することはありません。 直接関係ないかもしれませんが１点気になったのは ＞$stmt -> bindParam(':text ',$text,PDO::PARAM_STR); の「:text」の後ろの空白です、もしいらなければとってください そのうえで print $text; で本当に$textに正しい値がはいっているか確認してみてください $textへの代入方法が間違っていて投入されていない可能性が高い気がします
>if(!isset($sessionId)){ これおかしいです。呼び出し側で sessionCheck($_SESSION['id']) とかしているんでしょうか？issetがfalseになるようなケースだと、Notice: Undefined index: id になってしまうハズです。∴ 古いバージョンでしか動きませんよ。 >trueが返ってきた場合、ページ内のコンテンツを表示するような関数にしています。 trueが返らなかったときにはどうしているんですか？おそらくはsessionCheck側でrequireしたあと戻ってこないので「何もしていない」と思います。 呼び出し側でtrueが返らなかったらログインフォームをrequire（してexit）するべきじゃないですかね。内容表示のようなメインロジックをifブロック内に書くのも（インデントが下がるのも）ちょっとイヤじゃないですか？ 現状だと単なるprocedure=サブルーチンであって、functionにしている意味がないです。 （現状） if (sessionCheck() === 'true') { //　内容表示 } （変更） if (!sessionCheck()) { require_once("../login_request.php"); exit; } //　内容表示 最初に書いた件と合わせて、functionは function sessionCheck() { return isset($_SESSION['id']); } だけですね。これだけなら if (!isset($_SESSION[(id'])) { require_once("../login_request.php"); exit; } //　内容表示 の方が手っ取り早いですが、このあとfunction側にいろいろ追加するんでしょうかねぇ・・・
コーディングミスについては既に指摘があるので… ・htmlspecialcharsに関しては(Smartyなどのテンプレートエンジンを使わない限り)非常に使用頻度が高く、尚且つ「あらかじめエスケープしておく」というのは対策方法として誤っているため、関数「h」のように名称の短い関数として定義しておくことをおすすめします。何度も「HTML::escape」とか「$html->escape」とか書くのはかなり面倒だと思います。 ・filter_inputに関しては、この書き方だと受け取っていないものが未定義のままになってしまうため、実際に送られてくるかどうかは別として、正しいリクエストなら受け取る予定であるキーをあらかじめサーバ側で決めておく必要があります。また、filter_inputは万能ではなく、配列形式のパラメータを処理するのが不得意です。(フレームワーク等を使わない限り)自前でそれなりのコードを書かなければなりません。以下のふたつの関数はクラスメソッドにしておくのもいいと思います。 filter_input_simple http://qiita.com/mpyw/items/5a7242269f51dfabc973 filter_input_array_recursive http://qiita.com/mpyw/items/c39b9ee695a5c2e74627 これらの関数を使って配列構造のバリデーションが終わった後は、1つずつif文を書くなりforeachを使うなりお好きにどうぞ。 フレームワークの使用例を読んでみるのも勉強になるかもしれません。 Symfony - 第2章 - フォームのバリデーション http://symfony.com/legacy/doc/forms/1_2/ja/02-Form-Validation 「こんな風に使えたら便利だな」とか考えながら自分で似たインターフェースを持つクラスを作っていくといろいろ捗ると思います。
【foreach ($abc as $i => $v) $new[$i % $max][] = $v;】 $i % $max は剰余を計算するので、$maxが7であるとすると、以下のような順序でループします。 0 % 7 → 0 1 % 7 → 1 2 % 7 → 2 3 % 7 → 3 4 % 7 → 4 5 % 7 → 5 6 % 7 → 6 0 % 7 → 0 1 % 7 → 1 2 % 7 → 2 ... 「もしくは、...という割り振り方でも大丈夫です」ということでしたので、実装しやすいこちらを選びました。 -------------------------------------------- 【$new = array_map(function ($vl) { return implode(', ', $vl); }, $new);】 こちらは2次元配列の中に作成された1次元配列を、「, 」で結合しているだけです。 array( 　array('A', 'H'), 　array('B', 'I'), 　array('C'), 　array('D'), 　array('E'), 　array('F'), 　array('G'), ) これが array( 　'A, H', 　'B, I', 　'C', 　'D', 　'E', 　'F', 　'G', ) こうなります。 function ($vl) { return implode(', ', $vl); } という無名関数を内側の各配列に対して適用し、returnされてきた文字列を新しい配列にセットしていく感じです。キーはそのまま使用されます。まあ分かりにくかったら [A] $new = array(); $max = count($abc); foreach ($abc as $i => $v) $new[$i % $max][] = $v; foreach ($new as &$v) $v = implode(', ', $v); unset($v); もしくは [B] $new = array(); $max = count($abc); foreach ($abc as $i => $v) $new[$i % $max][] = $v; foreach ($new as $i => $v) $new[$i] = implode(', ', $v); と書くのもナシでは無いです。ただ [A]…「外側でunsetしないと次に$vという変数に代入したときに$newが破壊される」 [B]…「PHPのforeachの実装を理解していないと、現在回している配列自体を書き換えたときの挙動が理解しにくい」 という欠点があります。 -------------------------------------------- 【その他】 まずはマニュアルで気になった関数の使い方を読んでみてください。 [配列関数] http://php.net/manual/ja/ref.array.php メリットがよく分からなければ、以下の記事を読んでみるといいと思います。 [PHPでできる関数型プログラミング] http://my-rest.icca.jp/blog/2011/01/477/ http://my-rest.icca.jp/blog/2011/01/506/ http://my-rest.icca.jp/blog/2011/02/524/ PHPは関数型言語寄りの記述があまり得意ではないので、狂ったみたいにこの書き方に拘る必要はもちろん無いと思います。あくまで「ここは関数型っぽく書いた方がきれいに書ける！」と感じたら採用すればいい程度です。 以下はカレンダーの２次元配列を作成する例ですが、圧倒的に関数型の方がきれいに書ける一例です。 [最もシンプルなカレンダー生成ロジック] http://qiita.com/mpyw/items/0a475bc4891a3a2940e8 ちなみに今回の問題をRubyで解決するならば以下のように書けますね。Rubyはあんまり詳しくないのでもっといい書き方とかあるかもしれませんが、これだけでも十分綺麗に書けてるとは思います。 abc = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'] new = abc 　.each_with_index 　.group_by{|v, k| k % 7} 　.values 　.map{|v| v.map(&:first)}
php.iniのpost_max_sizeを設定するとか httpd.confのLimitRequestBodyを設定してみては？ それにしても40Kくらいで引っかかることはないと思いますが
まず、データ取得を表示するページのデータだけにするということなら javascriptでの対象外データの非表示切り替えでは、合致しないことになります。 セッションだと、これまでの閲覧履歴はわかりますが、URL固定のGETだと 先頭ページ｜前のページ｜ページ番号指定｜次のページ｜最終ページ といったリンクで表示する対象ページを切り替えることができません。 よって、簡単なのは 対象のページ番号をPOSTのhiddenデータにしてしまうことでしょう。 ただ、どのページも固定のURLにしてしまうと、 対象ページのURLをブックマークしても意味がないですし、 ブラウザの既読管理を使った、リンクの色分けが出来なかったり ２ページ目以降が検索エンジンの対象にもならないなど、厄介なこと多いので、 GETデータに表示対象のページ番号にしたURLにするのが　普通じゃないですかね。 （業務用Webアプリで、既読管理もブックマークもSEOも必要なくて 　逆にブックマークされないように固定URLにしたい　ということかもしれませんが）
>できれば記事IDは乱数を格納してプライマリーキーに指定することで >重複しないようにして付与できたらいいなと思っていますが、やはり >A_Iの方が良いのでしょうか？ 自分で生成すると新規作成時の重複チェックが必要になりますからねぇ。それが面倒でなければ、substr(md5(microtime()),0,8) とかでも実用にはなると思います。
まぁなんとも言えませんが rss テーブルのプライマリーキー（もしくは何らユニークキー）が 競合を起こしていたりしませんか？
提示されているクエリ文を毎回（このスクリプトで）投げているわけではありませんよね（別スクリプトかphpMyAdminで「1回だけ」実行しただけですよね）。 >しかし同じURLでブラウザをリロードしたところ、 >二度目は表示されません。 ちょっと「あり得ない」現象ですね。三度目以降はどうなりますか？ また、$dbhの生成直後に $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); としておいて、処理２全体をtryで括って最後に } catch(PDOException $e) { die($e->getMessage(); } で例外を捕捉したら何か表示されますか？（PDOのデフォルトのエラーモードはPDO::ERRMODE_SILENTなのでエラーが発生しても何も表示されません）。
単に U オプションが足りないだけでは？ http://www.php.net/manual/ja/reference.pcre.pattern.modifiers.php それでも提示されたように$tagArrayに入れたいとなると多少は工夫することになりますかね。 preg_match_all('/\[FA[\w\W]*\]/sU', $tag, $tmp, PREG_SET_ORDER); foreach ($tmp as $val) { $tagArray[] = $val[0]; }
あぁ、変数名に - を使ってしまってましたね（汗 ついでにPOSTチェックも書き替えて <?php $file_a = 'txt/a0001.txt'; $file_b = 'txt/b0001.txt'; if (isset($_POST['button_save'])) { file_put_contents($file_a, $_POST['textBox_contents_a']); file_put_contents($file_b, $_POST['textBox_contents_b']); } $text_a = file_get_contents($file_a); $text_b = file_get_contents($file_b); ?> <form action="" method="post"> <textarea name="textBox_contents_a" cols="40" rows="2"><?= htmlspecialchars($text_a, ENT_QUOTES); ?></textarea> <br /> <textarea name="textBox_contents_b" cols="40" rows="2"><?= htmlspecialchars($text_b, ENT_QUOTES); ?></textarea> <br /> <input type="submit" name="button_save" value="保存"> </form>
「include」や「file_get_contents」で読み込んで、HTMLに埋め込むことは可能です。 includeの場合は、 ----- <html> <head> <?php include("jsfile"); ?> .... ----- って感じでHTML内のJSを記述したいところでincludeすればOKです。 file_get_contentsの場合は ----- <?php $js = ; ?> <html> <head> <?php echo file_get_contents("jsfile"); ?> .... ----- って感じでHTML内のJSを記述したいところでfile_get_contentsするか、事前に変数にJSを読み込んでおいてechoすればOKです。 メリットは特に無いと思います。 デメリットは、毎回クライアントに対してJSが送信されることです。 JSを別ファイルにしてscriptタグで読み込ませるようにしておけば、ブラウザがキャッシュしてくれるのでデータ転送量、読み込み時間が短くなります。
anchor要素だと（QueryStringで渡すにしてもpathinfoで渡すにしても）間違ってログアウト後のTOPページをBookmarkされてしまうと、そのBookmarkでTOPに戻ろうとするとログアウトしてしまうけどそれはいいんですかね。 anchor要素でやるならlogout.phpのようなログアウト専用のスクリプトにリンクして、そちらでセッション情報を破棄してからLocationヘッダでtoppageへ遷移させる方が素直だと思います。 logput.php <?php session_start(); if (isset($_COOKIE[session_name()])) { setcookie(session_name(), '', time()-42000, '/'); } $_SESSION = array(); session_destroy(); header('Location: http://example.com/toppage.php');
＞htmlspecialcharsでサニタイジングすれば良いのでしょうか？ そうですね 場合によってはhtmlspecialchars()に加えて trim()してあげたり、nl2br()で改行を<br>に変えてあげてもよいかと。
PHPの基礎本を何冊かお読みになられているということですが、 もし既読でなければ、「気づけばプロ並み PHP」(谷藤賢一著、リックテレコム) という本が、MySQLと組み合わせるという条件に合致していると思います。 セキュリティ関連との組み合わせであれば、 「PHPサイバーテロの技法 攻撃と防御の実際」（GIJOE著、ソシム） という本もあります。
>と言うことは下記のような感じになるのでしょうか？ >これでもチェックされないです。 ><input type="checkbox" name="team_id[]" value="<?php echo "{$checked['team_id'][1]}" ?>"/>名古屋 htmlでチェックをさせておきたいときはどのように表示したいかを考えてみて。 <input type="checkbox" name="xxx" value="1" checked>でしょ？ それをphpから出力しようとしたら ><input type="checkbox" name="team_id[]" value="5"<?php echo $checked['team_id'][5] ?>/>磐田 になるんじゃないの？ $checkedの配列には" checked"が入ってるんだから。
ドキュメントの誤りのようですね。 英語版はフィールド分引数を持たせるように書いています。 http://book.cakephp.org/2.0/en/models/retrieving-your-data.html
app/View/Layouts/default.ctpが呼ばれていると思うんだけどそこの <title> <?php echo $cakeDescription ?>: <?php echo $title_for_layout; ?> </title> を <title> <?php echo $title_for_layout; ?> </title> こうじゃない？ んで $cakeDescription = __d('cake_dev', 'CakePHP: the rapid development php framework'); を消すとエラーになるのは ctpのどこかで$cakeDescriptionが使われているからじゃないかな。 わからないんだったら$cakeDescription='';ってしておけばいいよ。 $cakeDescriptionはただ説明用に入っているだけだよ。無理に使うことは無い。
感じからすると、テンポラリに最新3件を抽出して、itemをtruncateし、 テンポラリを戻すのが一番早くて確実だとは思います
文字列をDBに入れる場合は文字列をシングルコーテーション ' で囲まなければいけません。
案２だとアクセスがあってはじめて画像を生成するので、当然ながら生成に掛かる時間分だけレスポンスが遅れます。 また、毎回画像処理を行うのでCPUやメモリ等のリソースを喰う事になります。 アクセス頻度が少ないのであれば問題ありませんが、アクセス頻度が多ければそれだけ沢山のリソースを用意しておく必要がありサーバーのコストが増えますし、処理待ちが発生すればそれだけ応答が遅くなっていきます。 案１のメリットは応答時間が短くなる事とサーバーリソースが少なくて済む事。 デメリットはディスク容量が多く必要になること。 案２のメリットはディスク容量が少なくて済む事。 デメリットは応答時間が長くなる事とアクセス頻度が多い場合サーバーリソースが沢山必要な事。 ディスク容量を増やす費用と、CPUやメモリを増やす費用のどちらが安いかを考えた場合、通常は案１を採用することになります。
>「ブラウザから渡されたファイル名は汚染リスクがある」と書いてあったのですが、 >この意味は、「ブラウザから渡されたファイル名をそのまま使用してはいけない」 >ということだけでしょうか？ はい。 >書きかえるファイル名は何でも良い？ はい。重複さえしなければいいです。データの（バイナリの）ハッシュ値を使えば「中身が同じ画像なら同じファイル名」になるので無駄がなくなる（ことが期待できる）というのはありますが、二次的な話です。バイナリでなくmicrotime()やアップロードユーザ名+追番などのハッシュ値を使うこともありますしね。 >上記のように、推測されやすいファイル名でも問題ない？ 問題ないです。隠すことが主目的ではありませんので。 本当に隠蔽したいなら、httpでアクセスできない場所（DocumentRootより上の階層とか、.htaccessでアクセス不能にしたディレクトリ）に置いて、phpスクリプト経由でしかアクセスできなくします。httpでアクセス可能な場所に置くのであれば、アクセスされることは想定すべきです。
json_encodeに通すだけです。 json_encode http://www.php.net/manual/ja/function.json-encode.php こっちも参考にどうぞ↓ JavaScript(jQuery)からPHPのAPIを利用する http://qiita.com/mpyw/items/62e6e415f86eb30a5ff4
…あー、でも >> phpで会員制サイトの制作を勉強中です。 会員制サイトだったらセッションフィクセーション攻撃対策のため、ログイン直後の session_regenerate_id(true); の実行は必須であり、このタイミングで再度必ずCookieが送信されますね。だったら session_set_cookie_params(...); session_start(); session_regenerate_id(true); の順番でログインするページにだけ書いておけば問題ないと思います。
HTMLを取ってきて、<input>に含まれるトークンなどの情報を抽出して、<form>のaction属性で指定されている先に送る…という単純な動作であれば PHPネイティブのDOMによるスクレイピング入門 http://qiita.com/mpyw/items/c0312271819baee09132 こちらで紹介している方法で実現できます。内部でJavaScriptを使った認証が動いている場合、PHPでHTMLソースを取得しただけではどうしようもないので ・Selenium(さまざまな言語に対応) ・PhantomJS(JavaScript専用) といったWebブラウザのエミュレータを使いましょう。
$_SERVER['DOCUMENT_ROOT'] は、php実行開始時に自動設定されます。 書き換えたいなら 最初の実行時に以下を $_SERVER['DOCUMENT_ROOT'] = $_SERVER['DOCUMENT_ROOT'] . '/piyo'; 参考にしたサイトの情報の読みが浅そうです。たぶん$_SERVER['DOCUMENT_ROOT']は使わずに、document_root 用の変数を独自設定してその変数を使うようにしてるだけなのでしょう。
$a = array_map(function ($obj) { return $obj->a; }, $item);
「mail関数やmb_send_mail関数を使って送る」ときに、第5引数はどうなっていますか？ 第4引数でメールヘッダのFromを指定しないとき同様、第5引数でエンベロープのmailfromを指定しなければmailfromは「デフォルトのアカウント」になってしまいます（そのアカウントでSPFがチェックされる）。 なので mb_send_mail($to, $subject, $message, 'From: info@example.com' , '-f info@example.com'); のように、第5引数の -f オプションでも当該サーバで運用しているドメインのメールアドレスをキチンと指定すれば、そのメールアカウントのドメインで生成されるハズです。 ＃というか、今数パターン試して確認しました（汗
そのままgoogleで検索すれば一番最初に対処法出てくるよ。 というか英文を訳せばそのままの意味なんだけど。 一意になるカラムがないからグリッドのチェックボックス、編集、コピーや削除が使えないよ。
isset()を使えばいいと思います
>$array = >array("146-0082", "東京都大田区", "田中さん"), >array("120-0015", "東京都足立区", "山田さん"), >); となっております。 いや、syntax errorになるソースで提示されても困ります・・・ 私が書いたとおり $array = array( array("146-0082", "東京都大田区", "田中さん"), array("120-0015", "東京都足立区", "山田さん"), ); という意味でいいということですよね。 この配列（insertする内容だけで構成）が生成できているなら疑問符プレースホルダを使って $stmt = $dbh->prepare('insert into table (number, address, name) values (?, ?, ?)'); foreach ($array as $data) { $stmt->execute($data); } とも書けますね。 なお、PDOのエラーモードは適切に設定されていますでしょうか？デフォルトはPDO::ERRMODE_SILENTなので何かエラーがあってもわかりません（エラーになる記述なのに「何故か動かない」と悩む方を見かけますので）。 http://www.php.net/manual/ja/pdo.error-handling.php
あなたの言う「エディター」とは具体的に何ですか？質問をする際にはそういう基本的なことは必ず書くようにしましょう。 ※もしかしたらこの回答で解決してしまうかもしれませんが、それでもできればこの回答の補足かお礼にも書いてくださいね。 あなたの挙げた3文字のUTF8での文字コードは 究：E7A9B6 岩：E5B2A9 ど：E381A9 です。で、コピーライト記号はA9です。つまりA9が含まれている文字は文字化けするのではないかと思います。 なのでその調子だと「ラ緩革塩穏恩温」あたりも化けるのではないかと思います。 じゃぁ対策はというと、エディタが何なのかわからないのでなんとも言えませんが、もしかしたらそのエディタのバグなのかもしれません。もしかしたらバグではなく使い方が悪いのかもしれません。もしかしたらエディタで開く前にすでに文字コードが破壊されているのかもしれません。そのどれなのかは分かりません。 が、おそらくはそのどれかでしょう。 エディタが何なのか分からないので、推測の推測の推測になってしまいますが、エディタのバグのせいならエディタを変えることで解決するでしょう。その前に壊れているのなら、プログラムが間違っているから壊れているのです。プログラムをを見直し、どの時点で文字コードが壊れているのか特定しましょう。
>果物の名前を4回繰り返す この 4回 というのは要素数とは無関係でしょ？foreach は繰り返す回数が「要素数」なのが便利だから（全部の要素を網羅してくれるから）使う。 そうでないなら普通に for や while （カウンタをインクリメントして所定の条件まで）を使うべき。 >繰り返しはforeachのみで実現したいと考えています。 自分で要素数を 4 にした配列を（array_fillとかで）あらかじめ作れば出来ることは出来る。が、そんなものに何の意味もありません。 // 意味のないソース $loops = array_fill(1,4,'tmp'); // 添え字が 1,2,3,4 の配列を生成 $fruits = array("りんご", "ばなな", "ぶどう", "みかん"); foreach ($loops as $key=>$loop) { if (($key == 1) || ($key == 3)) { echo "食べてください"; echo "<br />"; }; foreach ($fruits as $value) { echo $value; echo "<br />"; } print "<hr />"; // 終端をわかりやすくするために追加 } もしかして外側のLoop（4回処理）と内側のループ（フルーツ名の各要素を処理）の二重ループが必要だということが理解出来ていないんでしょうか？
配布zip内同梱のPHPファイル、"guestbook.php" の314行目の… if($name == ""){$in_check_ok = FALSE; $msg[2] = "お名前が入力されていないようです。";} ～を以下の様に if($name == ""){ $name = "名無しさん"; } ～と言う風に書き直せば、これで名前欄未入力時のdefault名になります。 P.S. PHPファイルの編集＆再保存には文字コードと改行コードに注意。PHPは基本、「UTF-8、BOM無し、改行LF」で作業しないと実行時にエラーになります。
ループが止まらないのは比較じゃなくて代入になっているからです。 if (($i = 1) || ($i = 3)) { ↓ if (($i == 1) || ($i == 3)) { あと </br> じゃなくて <br> です。HTMLではなくXHTMLで書くにしても <br /> が正しいです。
PHPとJavaScriptの役割をしっかり分けて考えてください。 【PHP】 ・サーバー側で動く ・PHPファイルにリクエストがあると、コードを実行して、出力されたHTMLをブラウザに返す ・リクエストごとに変数の値などは初期化される（状態を保持しない） ・一度HTMLを受信し終えると、（Ajaxを使ってバックグラウンドでやりとりしない限り）更新ボタンを押すまで新たにPHPを実行することは出来ない 【JavaScript】 ・ブラウザ側で動く ・更新ボタンを押したり画面遷移しない限り、変数の内容は保持される ・ユーザがブラウザで表示している間はいつでもコードを実行することが出来る 基本的にPHPとJavaScriptで連携するんだったら「JavaScriptのコードを出力する」のではなく「JSONを出力する」方法の方が一般的であり、使い勝手もいいと思います。 JavaScript(jQuery)からPHPのAPIを利用する http://qiita.com/mpyw/items/62e6e415f86eb30a5ff4
そういうサイトは実際には全て特定の1つのphpファイルに処理を投げているだけです。「php .htaccess ルーティング」とかで調べてみるといろいろ見つかるんじゃないかと思います。 .htaccessファイルでルーティング設定 http://qiita.com/shuntaro_tamura/items/28aeade180ea30a19d63 フレームワークを使えば話が早いですが、触ったことが無ければ少し抵抗があるかもしれません。そういう人にもおすすめ出来る、ほとんどルーティングしか担当しないマイクロフレームワークが「Slim」です。Composerを使って簡単にインストールできます。もしComposerを導入していないのであれば是非導入を検討してください、最近はこれがあるのが当たり前…という風潮になりつつあります。 Composer https://getcomposer.org/ PHPマイクロフレームワークSlimを使ってTinyURLを作ってみた http://d.hatena.ne.jp/amari3/20140329/1396101865
>> 上記に更に値があるか分からない配列（$arr3,$arr4）を比較したいときどのように記述すればよいでしょうか？ 「値があるか分からない」というのはどういう状況でしょうか？ 変数が定義されていない → E_NOTICEを発生させないようにissetでチェックすべきです。NULLとの比較は不適切です。…というよりも、そもそも「定義されていない」という状況に陥るようなコーディングが不適切と言えるかもしれません。 関連: http://qiita.com/mpyw/items/2f9955db1c02eeef43ea 空配列として存在している → isset($var) としていた代わりに !$var とすれば空判定が出来ます。 >> $array_list = implode(",",$array_list); >> と半ば強引に配列に追加したのですが、var_dump($array_list)したところ、 >> Array,Arrayとなってしまいました。 配列から文字列への変換をすれば「Array」になるのは当然です。更にPHP5.4以降であればここでもE_NOTICEが発生しているはずであり、平然とエラーを起こすコードを書いていることになりますね… というかこれってimplodeじゃなくてarray_intersectをやろうとしたんじゃないんですかね？ >> 4パターンを書くこともできるかと思いますがスマートではないような気がしまして・・・。 書くとすればこんな感じでしょうか。そもそも「$arr1」「$arr2」のように、配列を使わずに連番の変数を使っている時点でスマートではない気がしますが… $array_list[] = $arr1; $array_list[] = $arr2; if (isset($arr3)) {$array_list[] = $arr3;} if (isset($arr4)) {$array_list[] = $arr4;} $intersects = call_user_func_array('array_intersects', $array_list); 但し、$array_listに2つ以上の配列が入っていないとE_WARNINGが発生して失敗するので注意してください。
書かれている内容だけからすると、 $a = array( "郵便番号", "東京都", "大田区", "氏名" ); $b = array( $a[0], $a[1].$a[2], $a[3] ); で十分と思います。何をしたいかによっては、array_slice() を使うのかもしれません。
動くようにするなら SELECT code,name,team_name,price,position,gazou FROM mst_player_market WHERE code IN (SELECT code FROM team WHERE team_id IN (1)) and code IN (SELECT code FROM mst_player_market where name = '玉田') ですね。
>> 私はPHP担当ではなく、部署の事情で知識がないまま今残業させられています。終電がなくなってしまいそうです。。 テンプレみたいな○○○○企業… お気の毒なので <?php header('Content-Type: text/plain; charset=utf-8'); $data = explode(',', file_get_contents('data.txt')); echo isset($data[1]) ? $data[1] : '';
開発環境はWindows テストサーバはLinuxやFreeBSDなど。 また普通動作検証は ・ローカルサーバ(デベロッパーサーバ) ・ステージングサーバ となって最後に本番サーバ 少なくともステージング環境は本番サーバとかなり似た環境を構築します。 そのためLinuxやFreeBSDなどのサーバを利用します。 開発段階のローカルサーバレベルだとXAMPPや仮想環境でLinuxやFreeBSDなどをいれて構築する。 無料でのVMware playerの利用は非商用に限る。商用だとVMware Player Plusを 予算を出してくれない場所も考慮するとVirtualBoxの方を利用する方が賢い。 (自分の現場だとデベロッパーサーバに何を使っているかは完全にその人の好み。ただしPHPのバージョンは基本的にそろえている。PHPはマイナーバージョンの違いだけでも挙動が違う場所があったりしてめんどくさい事があるから) サポートや独自の実装もある商用の Red Hat Enterprise Linuxが有名。 それに、LinuxのライセンスのGPLはいろいろ制約があるので自由度の面を考慮すると BSDライセンスのFreeBSDの方が自由に使える。 企業のシステムだとJavaに変わってASP.NET(C#)もよく利用される。そうなるとサーバは必然的にWindowsになる。 だいたい大型のWebシステムだと Java>ASP.NET(C#)>>[越えられない壁]>>PHP。 >WindowsにXAMPPやEclipseをインストールするところから解説している書籍が多いなという印象です。 そりゃね。Linuxをインストールから環境構築だけで本数冊規模になるからとりあえずPHPの開発環境を数ページで終わらせて本題に入るにはWindows環境でXAMPP+Eclipse(PDT)がバカでもすぐにできるから。
$table = preg_match('@<table>.*?</table>@is', $text, $m) ? $m[0] : null;
return date('Y-m-01', strtotime('+1 month', strtotime(date('Y-m-01')))); って感じですかね。 strtotimeの昔からあるバグ（仕様）が原因です。 10月31日の1ヵ月後は11月31日と計算してしまいます。（月を加算しているだけ） 11月31日は存在しない日付なので、11月30日の次の日という基準で結果が求められて12月1日と返してきます。 2月とかも面倒くさい事になるので、慣れた人は今月1日の1ヵ月後という計算をさせます。
入力したものをどうやって受け取るのでしょうか（form要素のmethod属性は何ですか？） >ifを使えばいいのかsubstrを使えばいいのかissetを使えばいいのか分かりません。 全部使うと思いますけどww POSTされるのだとしたら（input要素のname属性値が各々"seizou_number"と"shohin_number"なら） $str1 = filter_input(INPUT_POST, 'seizou_number'); $str2 = filter_input(INPUT_POST, 'shohin_number'); if ((isset($str1))and(isset($str2))and(substr($str1,0,2) === substr($str2,0,2))) { //　入力OK } else { //　入力NG } といった感じではないですかね
http://blog.syuhari.jp/archives/17 http://php.net/manual/ja/function.array-merge.php array_margeの名称を短くしたもの。 機能は同じ 例1 array_merge() の例 を参照して動きをみてみて。
>結果はおろか、エラーも何も表示されませんでした。 PDOのエラーモードはどうされていますか？デフォルトはPDO::ERRMODE_SILENTです。 http://www.php.net/manual/ja/pdo.error-handling.php PDO::ERRMODE_EXCEPTIONにしたければ、コンストラクタのoptionで指定するか、setAttributeで設定しないといけません。 ちょっと見た限りではSQL文がヘンです $stmt=$db->prepare('SELECT 【住所】, COUNT(*) as CNT FROM 【顧客情報】 WHERE search like :search GROUP BY 【住所】 LIMIT :limit , 20'); ではないですかねぇ。 （蛇足） $search = '%'.$_GET['search'].'%'; の部分も $search = '%' . addcslashes($GET['search'], '\\_%') . '%' であるべき（likeで意味をもつ文字はエスケープする）。
update は予約語です。update を `update` と記述すれば動作するはずです。
＞ファイル名に半角スペースを使うことにはどんなリスクがありますか？ リスクはありません。 コマンドで、ファイル名を指定する際に ' ' で囲うなどするだけです。
select 商品名, count(商品名) as 購入総数 from ○○テーブル group by 商品名
いまいちきちんと理解していませんが、 単純にテーブルAのカラムAにテーブルBのカラムDをリレーションして表示するだけでは？ SELECT * FROM テーブルA INNER JOIN テーブルB ON カラムA=カラムD 的な？
function array_rand_each_group(array $arrays,$column){ 　$res = []; 　shuffle($arrays); 　foreach($arrays as $array){ 　　$res[$array[$column]] = $array; 　} 　return $res; } $arrays = [ 　['id' => 5, 'name' => '佐藤', 'age' => 5], 　['id' => 5, 'name' => '伊藤', 'age' => 7], 　['id' => 5, 'name' => '鈴木', 'age' => 12], 　['id' => 8, 'name' => '山田', 'age' => 17], 　['id' => 8, 'name' => '奈良', 'age' => 2], ]; print_r(array_rand_each_group($arrays,'id'));
C:/xampp/htdocs/study.localhost　フォルダは作成しましたか？ そのフォルダに　index.php　または　index.html　ファイルを置きましたか？
例外が発生しているような感じがしますね。 ～セルに値を入れる処理～ 以降を以下のように書き換えてみてください。 try { $writer = PHPExcel_IOFactory::createWriter($book, 'csv'); header('Content-Type: application/x-csv'); header('Content-Disposition: attachment;filename="sample.csv"'); header('Cache-Control: max-age=0'); $writer->save('php://output'); } catch (Exception $e) { header('Content-Type: text/plain; charset=utf-8'); var_dump($e); } そもそもデバッグ環境では全てのエラーを表示すべきなんですけどねぇ… http://qiita.com/mpyw/items/2f9955db1c02eeef43ea#%E5%85%A8%E3%81%A6%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E3%82%92%E8%A1%A8%E7%A4%BA
Windowsですよね？OSバージョンとか書いた方がいいですよ コントロールパネルの管理ツールから、サービスでhttpdが動いていませんか？ もし動いていたら停止ししてみてください もしくは、コマンドプロンプトから httpd -k stop で停止できるかもしれません
正直、プログラミングスクールは料金がかかる割に対価が少ないような印象を受けるので、個人的にはあまりおすすめできません。それよりはGoogleを主体的に利用して学習していく方法のほうが無料で済むのでありがたいと思います。 多分APIに対してとっかかりにくいのは、API以前にネットワーク通信技術の背景が分かっていないからだと思います。ヒントとなるように順を追って掲載していきますので、よかったら参考にしてください。 まず、「プロトコル」「OSI参照モデル」「TCP/IP」を順に検索してみてください。 【要点: 用語整理】 ・プロトコルは通信のための取り決め ・OSI参照モデルはプロトコルを理論的に階層化したもの ・TCP/IPはOSI参照モデルを一部採用しながら現実に実装したもの TCP/IPのWikipediaのページを開いてみてください。 http://ja.wikipedia.org/wiki/%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%8D%E3%83%83%E3%83%88%E3%83%BB%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB%E3%83%BB%E3%82%B9%E3%82%A4%E3%83%BC%E3%83%88 1. リンク この部分はハードウェア屋さんの仕事なので、プログラマが直接触れることは少ないです。 2. インターネット IPの意味だけ把握していればOKです。単純に「インターネット上の住所」という程度で構いません。 3. トランスポート ※重要 通信相手のIPを指定して実際に通信を行う層です。「実際にどうやって通信しているか」を掘り下げる最下の層はここで構いません。これ以上深いところに掘り下げるとハードウェアが関連してくるので、こことこれより上の層を理解していれば十分です。「TCP」と「UDP」が非常によく使われます。UDPは音声通話など「多少欠損してもいいから速度第一」という目的、TCPは正確性を追求するときに使われます。大部分の通信はTCPで行われているのが現状です。 4. アプリケーション ※重要 TCPやUDPを使えば、相手にテキストデータ・画像データ・映像データなど、どんなデータでも送信することが可能です。しかし、「ここまではファイル名などの情報」「ここからは実際のデータ」といった線引きが為されている必要があるのは言うまでもないでしょう。それを行うのがこの層です。「HTTP」や「FTP」などが有名です。 実際にTCPを使っていく前に、1点補足しておきます。ルータなどのハードウェア機器に関して「ポート」などの名前を聞いたことはあると思いますが、これは内外を繋ぐ出入口のことを指します。出入り口はトランスポート層のプロトコルごとに65536個ずつ割り振られています。つまり、「TCPポートで0～65535」「UDPポートで0～65535」というように存在しているということです。実際に番号を指定しないと通信を行うことが出来ません。また、既に使用されているポートは別のアプリからは使うことが出来ません。 【要点: TCP通信の実現に必要なもの(UDP通信でも同様)】 ・IPアドレス(またはホスト名)の指定 ・ポート番号の指定 なお、よく使われるポートはアプリケーション層のプロトコルごとに慣用的に決められています。ポートの指定を省略したときはこれがデフォルトとして使われることが多いです。 HTTP → 80 HTTPS → 443 さて、実際にTCPを使ってみましょう。試しに以下のページを取得してみます。 A very simple webpage http://csb.stanford.edu/class/public/pages/sykes_webdesign/05_simple.html コンソールからtenletコマンドを用いれば、簡単にTCP通信を行うことが出来ます。 ※ WindowsVista以降ではデフォルトでは使えないので注意してください http://so-zou.jp/software/tech/network/tool/telnet/ 1. 「telnet」でtelnetクライアントを起動。 2. 「open csb.stanford.edu 80」でTCP接続。 3. 「GET /class/public/pages/sykes_webdesign/05_simple.html HTTP/1.0」と入力して改行。 4. 「Host: csb.stanford.edu」と入力して改行。 5. 何も入力していない状態で改行。 すると、コンソールにダーッとHTMLソースが流れ込んでくると思います。でも、それより前に何やらメタ情報のようなものもついていますよね？これは「レスポンスヘッダー」と呼ばれるものです。逆にあなたが最初にステップ3,4,5で送信したものは「リクエストヘッダー」と呼ばれます。詳しくは以下のリンク先にまとめられているので是非読んでください。 HTTP入門 http://www.tohoho-web.com/ex/http.htm Webブラウザは日頃何をやっているかというと、先ほどの通信を行い、「レスポンスヘッダー」の情報を裏で解釈しつつ、「レスポンスボディ」のHTMLをもとに画面にテキストや画像を表示しているだけのことです。 --------------------------------------------- ～閑話休題～ PHPはさまざまなレベルでの通信に対応しています。 [TCPを直接叩く低レベル通信] <?php $fp = stream_socket_client('tcp://www.example.com:80'); fwrite($fp, implode("\r\n", [ 　"GET / HTTP/1.0", 　"Host: example.com", 　"", 　"" ])); $resopnse = stream_get_contents($fp); ※ レスポンスヘッダが含まれます。ヘッダとボディを分割したいときは以下のコードを使ってください。 list($header, $body) = explode("\r\n\r\n", $response, 2); ※ fgetsでループする人もいますがstream_get_contentsで十分です。 ※ 文字列として得たい場合はstream_get_contents、そのまま出力するときはfpassthruを使ってください。 ※ stream_socket_clientの代わりにfsockopenを使うことも出来ます。 [HTTPを利用する高レベル通信 (file_get_contents編)] <?php $resopnse = file_get_contents('http://www.example.com:80/'); ※ レスポンスヘッダは含まれません。その代わり、レスポンスヘッダの配列は $http_response_header としてその場に定義されます。 ※ 文字列として得たい場合はfile_get_contents、そのまま出力するときはreadfileを使ってください。 [HTTPを利用する高レベル通信 (fopen編)] <?php $fp= fopen('http://www.example.com:80/', 'r'); $resopnse = stream_get_contents($fp); ※ レスポンスヘッダは含まれません。その代わり、レスポンスヘッダの配列は $http_response_header としてその場に定義されます。 ※ 文字列として得たい場合はstream_get_contents、そのまま出力するときはfpassthruを使ってください。 [HTTPを利用する高レベル通信 (cURL編)] <?php $ch = curl_init(); curl_setopt_array($ch, [ 　CURLOPT_URL => 'http://www.example.com:80/', 　CURLOPT_RETURNTRANSFER => true, ]); $resopnse = curl_exec($ch); ※ レスポンスヘッダは含まれません。レスポンスヘッダを取得するにはちょっとした工夫が必要ですが、ここでは省略します。 --------------------------------------------- さて、ここまでちゃんと理解できていればAPIの理解ももはやすんなりと出来る状態だと思います。次の説明に行きたいのですが…残り文字数が少ないので回答を分けることにします。
「形態素解析ライブラリ」もしくは「形態素解析API」の利用が必須です。前者は「MeCab」、後者はYahoo!JAPANの「日本語形態素解析」が有名です。 …が、前者はインストール、後者は登録の手間がかかるので、手軽に試したいなら http://140note.hitonobetsu.com/apipage/mp のようなところで利用させてもらってもいいんじゃないでしょうか。 【サンプル】(全角スペースでインデント) <?php function convert_into_katakana($sentence) { 　$ch = curl_init(); 　curl_setopt_array($ch, [ 　　CURLOPT_URL => 'http://api.hitonobetsu.com/mp/analysis?str=' . urlencode($sentence), 　　CURLOPT_RETURNTRANSFER => true, 　]); 　return implode(array_map( 　　function ($item) { 　　　return isset($item->reading) ? $item->reading : ''; 　　}, 　　(array)json_decode(curl_exec($ch)) 　)); } var_dump(convert_into_katakana('質問サイトで回答する')); なお、JavaScriptで実装する場合もほぼ同様ですが、クロスドメイン制約云々で面倒だったらJSONPを利用するのが手っ取り早いと思います。
まず、使用しているライブラリは何でしょうか？TwistOAuthに「OAuthRequest」というメソッドは存在しないので、おそらくtwitteroauthを使用されているんだと思いますが、例外をTwistExceptionとしてキャッチするのはもちろんTwistOAuthの独自仕様です。twitteroauthはそもそも例外処理に対応していません。例外処理を行いたいのであれば、一貫してTwistOAuthを使用してください。 Examples/Details/FAQなどはこちらで↓ https://github.com/mpyw/TwistOAuth 【例】(全角スペースでインデントしています) <?php // ライブラリをロード require 'TwistOAuth.php'; // レスポンスはテキストで返す header('Content-Type: text/plain; charset=utf-8'); // インスタンスを生成 $to = new TwistOAuth(...省略...); // 検索を実行し、statusesをforeachにかける try { 　foreach ($to->get('search/tweets', ['q' => 'foo'])->statuses as $status) { 　　// リツイート済は除外 　　if ($status->favorited) { 　　　continue; 　　} 　　// リツイートを実行 　　try { 　　　// リツイート後に得られた自分のツイートのステータスIDを表示 　　　echo 'Retweeted: ' . $to->post('statuses/retweet/' . $status->id_str)->id_str . PHP_EOL; 　　} catch (TwistException $e) { 　　　// リツイート失敗時はエラーメッセージを表示 　　　echo $e->getMessage() . PHP_EOL; 　　} 　} } catch (TwistException $e) { 　// 検索失敗時はエラーメッセージを表示 　echo $e->getMessage() . PHP_EOL; }
・VPSであれば自分の意思でgitやcomposerをインストール出来ます。 ・共用サーバであれば基本的にあらかじめインストールされている場合にしか使用できません。ただ、composerに関しては「composer.phar」という単一のファイルを叩くだけなので、共用サーバでも使用出来るかもしれません。 HerokuのようなSasSだとデフォルトでgitやcomposerが使えるのでお勧めです。SSLも無料で最初から使えるようになってます。PHPバージョンも5.5と申し分ないです。 ただ、ファイル転送方法に癖があり、一般的なFTP転送ソフトのようなものを一切用いません。あくまでgitのリモートリポジトリにpushすることでデプロイする仕組みになっています。GitHubにpushする感覚で使うといいと思います。 蛇足ですが、無料共有サーバは管理者のセキュリティに関しての配慮が足りないことが多いのでおすすめしません。某サービスはデフォルトでは同じドメイン間でセッションが共有されてしまうという脆弱性を放置していたりしますね…
普通はコントローラからビューに値を渡すときはsetを使うのでしょう。 ただ、editのときは、初期値としてDBの値を出したいというのと、 バリデーションや確認画面と同じ処理にしたいので、そのようなリクエストに突っ込むやり方をしているのでしょう。 自分としては不自然な感じしかしないのですが。 formヘルパーを使えばそんな書き方しなくても済むはずです。
1回Webサーバの役割について考えてみるといいと思います。 「公開ディレクトリ内にファイルを置いて、それに対応するパスでアクセスすると、そのファイルの内容をブラウザに返す」 という処理を何の疑問も無く普段眺めていると思いますが、何もプログラムを動かさずにこんなことが実現できるわけがありません。Webサーバのプログラム、具体的にはApacheやnginxといったものが動いているはずです。 PHPの動作形態には「Webサーバモジュール」「FastCGI」「CGI」といったものがありますが、ここでは初心者に最も身近なWebサーバモジュールについて触れます。「mod_php」と呼ばれることがあります。PHPを独立したプログラムとして動かすのではなく、サーバの機能の一部として実行するということです。XAMPPを利用しているのであれば「Apache + mod_php」という構成になるはずです。 以下、どのようにしてリクエストに対してレスポンスが返されるのか考えてみましょう。 -------------------------------------------- 【クライアント側の事前準備】 1. Webブラウザを起動する。 【サーバ側の事前準備】 1. Apacheを起動する。 2. ApacheがHTTP通信用に80番ポートを監視する。HTTP通信はポートを明示しない場合80番を使用するため。 【アクセス】 ～クライアント側～ 1. 「http://example.com/foo/bar.php」というURLがWebブラウザに入力される。 2. 「example.com」のIPアドレスをDNSサーバに問い合わせる。ここでは「93.184.216.119」を得たとする。 3. 「93.184.216.119」の80番ポートに対して「/foo/bar.php」というパスでHTTPリクエストを送る。 ～サーバ側～ 4. 監視している80番ポートへのリクエストを検知する。 5. 同時に複数のリクエストを捌けるように、事前に起動しておいた親プロセス自身はレスポンスを返す処理をせずに、分岐(fork)した子プロセスに処理を丸投げする。引き続き親は監視処理を行い、子が6以降の処理を担う。 6. 「/foo/bar.php」という文字列を解析し、「公開ディレクトリ/foo/bar.php」へのアクセスであると決定する。この文字列自体にそういう意味があるのではなく、Apacheがあくまでそうしているというだけのことである。 7. 「公開ディレクトリはディレクトリ(当たり前)」→「fooはディレクトリ」→「bar.phpはファイル」というようにファイルを検知するまでパスを辿っていく。もしこのファイルが見つからない場合は404NotFoundを返し、アクセスが禁止されている場合は403Forbiddenを返す。 8. 「.php」を見てPHPファイルであると判断し、mod_phpとしてソースコードの読み取り/処理の実行/レスポンスの生成といった一連の作業を行う。これもあくまでApacheの事前の設定に基づいて行っているだけのことである。 9. 生成したレスポンスをクライアント側に返す。 10. 役目を終えた子プロセスが死ぬ。 ～クライアント側～ 11. レスポンスを読み取る。 12. レスポンスに含まれるHTMLをWebブラウザが解析し、人間が分かりやすいように表示する。 ※ クライアント側のポートは開いているものが自動選択されるようです。 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1121251946 -------------------------------------------- さて強調して書きましたが、パスはあくまでApacheで動かす場合にのみ意味があるものです。世の中にはApache以外で動くWebサイトもたくさんあります。「php_cli」(コマンドラインで動作するPHP)が「Apache + mod_php」の代わりをすることだって出来ちゃいます。 HTTPリスエストをそのまま返すPHPサーバ http://www.1x1.jp/blog/2007/07/php_http_echo_server.html >> ?以降のserch_query=[検索キーワード]やv=[動画の識別コード]は$_GETの取得だということは分かるのですが、 $_GETのような変数が存在するのはおそらくPHPぐらいですが、他の言語にも似たような仕組みはあるでしょうね。 >> ?直前のresultsやwatchは何を表しているのでしょうか？ 既に述べたように、実際にこのようなファイルが存在していなくても、この部分を読み取ってそれに応じた処理を行うことだって出来るんです。「resultsというディレクトリやファイルを探しに行く」というのはあくまでApacheの動作です。自分が作るプログラム自身がApacheの代わりにだってなれるんです。 ちなみにPHPに関して… >> 「公開ディレクトリはディレクトリ(当たり前)」→「fooはディレクトリ」→「bar.phpはファイル」というようにファイルを検知するまでパスを辿っていく。 と書いたことには意味があり、途中でファイルが見つかったときには $_SERVER['PATH_INFO'] という情報が定義されます。それほど使われることは無いですが。 http://php.net/manual/ja/reserved.variables.server.php http://qiita.com/mpyw/items/7852213f478e8c5a2802#1-6 >> また、URLをresultsやwatchまで記述してページを読み込んでみたところ、TOPページに飛ばされました。 不正なリクエストと見なされて飛ばされているだけでしょうね。ただここで気を付けてほしいのは、「何が」不正と判断しているかです。もしApache+mod_phpで動いていると仮定すれば以下のような動作になります。 ・ファイルが存在しないとき Apacheデフォルトの404NotFoundのページが返される。 ・ファイルが存在するが、読み取り権限が無いとき Apacheデフォルトの403Forbidenのページが返される。 ・ファイルが存在してmod_phpで実行するが、ソースコード内でパラメータが不正と判断されたとき PHPによって生成されたエラーページが返される。 >> また、最近のWEBページはほとんどがURLにファイルの拡張子がないように見受けられますが、ファイルの拡張子というのは隠した方が良いのでしょうか？ 【自分の書いたプログラム自信がサーバとして動いている場合】 ・そもそもファイル拡張子の概念がありません。Javaやnode.jsはこちらに属します。 【Apacheで動いている場合】 ・拡張子の無いファイルをPHPとして実行させることが設定次第で可能です。但しあまりこのような手段は採られません。 ・リクエストがあったとき、パスやクエリストリング(?以降)を事前に設定したルールによって書き換えることが出来ます。そして全てをクエリストリングにまとめ、特定の1ファイル(フレームワークではフロントコントローラと呼ばれる)に飛ばすことが出来ます。非常によく用いられている手法です。
＞onclick="<?php updateMemo('.$sid.'); そもそもの考え方が間違っています。 htmlで出力されている時点でonclickの中身は「結果」なので なにをしても結果は変わりません。 どうしてもやりたいならonclickでajaxを通して 更新用プログラムにsidを渡してやることです （もしくは普通にgetでページ遷移する）
試したわけではないですが、参考URLにそれらしき回答がありそうです。確認してみてください。 （違ったらすみません）
#2です、ちなみにこんな感じ $pdo = new PDO($dsn,$user,$password); $sql = "select * from test where 1"; $res1 = $pdo->query( $sql); $res2 = $pdo->query('SELECT FOUND_ROWS()'); $res3 = $pdo->query($sql." ORDER BY id LIMIT 5"); $sql = "select count(*) as count from test where 1"; $res4 = $pdo->query( $sql); print $res1->rowCount()."<br>"; //行数をひろう場合 print $res2->fetchColumn()."<br>"; //直前のSELECTで拾った行数をひろう場合 print $res3->rowCount()."<br>"; //LIMITで減った行数をひろう場合 print $res4->fetch(PDO::FETCH_ASSOC)["count"]; //きちんとCOUNT()する場合
最初のページのURLには 「?page=数字」というクエリストリングがないために、 $_REQUEST['page']と書くと Notice: Undefined indexというエラーが出ます。 $page = $_REQUEST['page']; を $page = isset($_REQUEST['page']) ? $_REQUEST['page'] : ""; と置き換えればエラーは消えます。 三項演算子を使っています。 A ? B : C と書いたとき、AがtrueならB, falseならCという処理となります。 isset関数で配列インデックスが定義済かどうか確認し、 定義済みならその値を、未定義なら空文字""を$pageに代入しています。 詳しくは下記を参照ください。 http://qiita.com/mpyw/items/2f9955db1c02eeef43ea#1-2
それはメールの内容を異なる物にしたいと言うことなので、メールはそれぞれ内容を変えて複数回送る必要があります。 ＞その場合、100件くらいならsleepさせずにループで100回送信しても問題ないのでしょうか？ 100件はメール件数としては少ないので大丈夫です。
http://wpdocs.sourceforge.jp/ギャラリーショートコードの使い方 基本的に「ある投稿に添付された画像すべてのギャラリーを生成する」 というショートコードで、メディアの画像すべてから 自動的にギャラリーを生成するというものでは無いです 別に画像を大量に添付した投稿を作ってそのIDを指定するか もしくは当該のギャラリーページの投稿に ギャラリーに画像を添付するか、というかたちになると思います
' ' の中では、$i は変数じゃなくて単なる文字です。 $_POST["name_$i"] または $_POST['name_'.$i] としてください。 また、$_POST で受け取った文字列をそのまま echo や print してはいけません。 脆弱性になります。htmlspecialchars() を適切な引数を付けて処理した結果を print してください。 print htmlspecialchars($_POST["name_$i"], ENT_QUOTES);
tp_relative_timeを使っているところを探してそっちを書き替える方がいいとは思いますが、あえて関数側を書き替えるなら if (!function_exists('tp_relative_time')) { function tp_relative_time($a) { return date('j F Y', strtotime($a)); } } だけにしてしまえばいいんじゃないかと。
文字コードがなんだかわからんけど、適切なヘッダを出力すればいいんじゃないかな？ 例えばUTF-8だったら header('Content-type: text/plain; charset=utf-8'); 文字コードは適切なのにしてね
phpからメディアデータ扱うなら、常識的にはffmpeg phpラッパーでしょう。 http://codezine.jp/article/detail/5173 記事掲載は動画変換ですが、オーディオ系の機能も豊富ですよ。 オーディオフィルタでいうと、adelay と amerge あたりで実現できると思います。 https://www.ffmpeg.org/ffmpeg-filters.html#toc-Audio-Filters
まとめ記事↓ http://qiita.com/mpyw/items/7852213f478e8c5a2802 >> ログインフォーム画面で、session_start()し、ログインの認証が成功したらsession_regenerate_idで新しいセッションを発行⇒ログインが必要な画面でセッションの有無を確認 そんな感じです。ログインが必要な画面なのに未ログイン状態またはログインしていてはいけない画面なのにログイン状態のときなどはheader+exitで処理します。 >> セッションハイジャック対策にsession_regenerate_idをするようですが、これは全てのページで毎回行ったほうが良いのでしょうか？ 全てのページで行うには負荷がかかりすぎるので、ログイン成功直後だけで十分です。ただ、もちろん第1引数はtrueにしてください。 >> セッションIDの受け渡しはcookieに保存する方法とURLに含む方法があり、セッションハイジャック対策について記述しているサイトではcookieが推奨されている雰囲気ですが、PHPマニュアル(http://php.net/manual/ja/session.idpassing.php)では信頼性がないとあります。どちらを使うのが良いのでしょうか？ Cookie1択です。URLで渡す方法にはさまざまな危険が付きまといます。まとめ記事中で説明しているので探してください。 >> セッションの有無のチェックはsession_start()を記述するだけでサーバーが行ってくれるのでしょうか？$SESSIONにセッションIDを保存してissetで調べるといった記述が必要なのでしょうか？ issetを使います。例えばログイン成功後にユーザIDを格納しておくのであれば if (!isset($_SESSION['user_id'])) { ...ログイン画面へのリダイレクト... } のような処理を行います。 >> メールアドレスとパスワードでのログイン認証を実装したいのですが、 その場合、マイページでユーザー情報を表示したい際、ログイン時に入力したメールアドレスを$SESSION[email]に格納し、マイページのphpプログラムにて、$SESSION[email]に格納されたメールアドレスを検索条件にしてSELECTで他の情報を取得したら良いのでしょうか？メールアドレスを$SESSION変数で受け渡しするのはセキュリティ上危険でしょうか？（危険であれば内部管理用のユーザーIDを$SESSIONに格納してデータを取得しようと思います。） "平文パスワード" 以外ならどんな情報でもセッションに格納してしまって問題ありません。SELECTで該当するメールアドレスに対応するパスワードハッシュを引き出してきてpassword_verify関数でチェックするという認証方法になると思います。以前の質問も参照してください。 http://okwave.jp/qa/q8777622.html
#1です。 お礼コメント拝見いたしました。 XoopsもWordPressも基本的にはCMSと言われるようなもので、 どちらもサイトを動的に更新したり管理できるシステムです。 WordPressはブログサイト向きで、Xoopsはもっといろいろなことができます。 Xoopsは、各ユーザがID、Passwordによってログインし、 各ユーザにメッセージボックスのようなものがあり、ユーザは各々メッセージの送受信ができます。 また、掲示板のようなフォーラムを作成する機能もあり、複数名でのやり取りもできたはずです。 それらの公開・非公開などもユーザー毎に設定する権限でコントロールすることもできます。 Xoops向けに様々な開発者が作成したモジュールというアプリのようなものを追加すると、 サイトに新たな機能を追加していくことができます。 モジュールを使えば、スケジュールの共有や、写真の共有、動画の共有などもできるようになります。 (以前にXoopsを使っていたことはありますが、最近使っていないので正直なところ、 最新Verの事情はよく知りませんのでご了承願います。) ただし、導入から設定やデザインの変更などをしようとすると、色々と調べることが必要かもしれません。
>'header' => implode("\n",$headers), HTTPヘッダの改行はCRLF（"\r\n"）では？
＞解決する為にはどういった方法で1つ1つ原因を突き止めていけば宜しいでしょうか 切り分けとしては４つ (1)アップロードの障害 (2)アップロードデータをRDBへインタフェースする際の問題 (3)RDBへのINSERTの問題 (4)RDB自身のパフォーマンスの問題 (1)については、ファイルのアップロード後にMySQLの更新をかけていると思うのですが 単純に「MySQLの更新」をしないテストをすればいいでしょう。 単にアップロードを大小さまざまなシチュエーションでテストすれば アップロード時の問題はつきとめることができます (2)アップロードしたデータをなんらかの変換をかけた上で RDBに投入していると思いますが、その変換効率がわるければ当然 処理時間がかかります。こればっかりはフローをよく練るしかありません。 処理的にはアップロードした状態のデータをWEB上において、 それを変換して結果をWEB上にアウトプットする時間を計測するフローでしょうか (3)インサート処理がどのくらい負荷がかかっているかはphpMyAdminなどの ツールで状況を確認できるでしょう。 サーバーをまるまる１台借りるサービスなら別ですが、共有してつかうサービスなら 過負荷をかけているようだと、運営から上限キャップを掛けられている可能性はあります (4)テーブルにオーバーヘッドが発生していたり、テーブルが肥大化していたり 検索項目であるにも関わらずインデックスが効いてなかったり、 RDB自体の問題で低速化は起こりえます。 RDBの基本にたちかえって、効率的なデータの持ち方を学習しなおす必要があるかもしれません
以下の「初心者がやりがちなミス」にたくさん該当しているので確認してください。mysql_queryを使っている時点でアウトです。 http://qiita.com/mpyw/items/b00b72c5c95aac573b71 PDOを使う際は $stmt = $pdo->prepare('SELECT * FROM table1 LEFT OUTER JOIN table2 ON table1.name=table2.name WHERE turn<?'); $stmt->bindValue(1, filter_input(INPUT_POST, 'name属性名'), PDO::PARAM_INT); $stmt->execute(); $rows = $stmt->fetchAll(PDO::FETCH_ASSOC); といった感じでどうぞ。PDO::PARAM_INTでバインドするのがポイントです。これを指定しないと文字列になってしまい、比較がおかしくなります。
No1の方の回答の通りクリックしたリンクのvalue値を変更するだけならクライアント側で十分なのでjsを使いましょう。 もしくは、ｊQueryを使いましょう。下記のreturn false;が何かは後に説明します。 print "<a href=\"\" onclick=\"this.innerHTML ='X';return false;\">"; ---- 次に、記述されたPHPで実現する方法ですがいろいろ間違っています。 まずは、aタグのonclickで関数呼び出しのあとにreturn false;を追加しましょう。 print "<a href='' onclick=\"changeX('".$key."');return false;\">"; return falseをつけないと、onclickが実行されたあとにhrefへ指定された先へジャンプしてしまいます。 今、hrefは空になっているので自分自身へジャンプします。その際、hiddenの値はPOSTされません。 正確にいうとsubmi()でPOSTされた後、href先へジャンプするので、POST後の画面が表示されません。 わかりづらい場合は、hrefにyahooなどを設定して動かしてみましょう。 さらに、変数でname指定する場合、getElementsByNameを使いましょう。 print "document.getElementsByName(v).item(0).value= 'X';"; 最後に、空文字を判定する場合はemptyを使いましょう。 クリックしたリンクと同じnameの値にXが入り、他のnameには空文字が入ります。 issetは空文字をtrueと判定するので想定通りにする場合は、emptyeが適当です。 PHPを勉強中とのことで、issetとemptyとis_nullははまりどころなので要チェックです。 蛇足ながら、html全てをprintするのではなく必要箇所のみPHPで埋め込むようにしましょう。
>> password_hashを使用するのが今のところ最善なのでしょうか？ はい。 >> ユーザーが入力したパスワードをハッシュ化して >> 該当レコードのハッシュ化されて保存されたパスワードと >> 同じであれば認証が成功するという認識で正しいでしょうか？ はい。但し、もう一度password_hash関数にかけてしまうと検証に失敗します。 md5やsha1といったものと異なり、この関数で生成されるものには「初期化ベクトル」というものが絡みます。初期化ベクトルは毎回ランダムに設定されるので、生成されるハッシュも異なります。これにより、レインボーテーブル( http://ja.wikipedia.org/wiki/%E3%83%AC%E3%82%A4%E3%83%B3%E3%83%9C%E3%83%BC%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB ) に対して強力な対策が実現出来ているわけです。 ただこれだと「どうやって認証すればいいの？」という疑問が沸いてくると思います。心配無用、初期化ベクトルはちゃんと生成したハッシュの一部に含まれています(「$」区切り)。「初期化ベクトルってバレていいの？」という疑問もあると思いますが、不可逆なハッシュアルゴリズムを用いているので、特に問題はありません。 「初期化ベクトルを記録されたものに固定してハッシュ化→比較」という処理はpassword_verify関数が行ってくれるので、これを利用しましょう。
>> 「is_ref」フラグが立ってしまうと、&で代入した変数だけでなく他にも影響してしまうということなのでしょうかね…。 $copy = $array; で行われる処理は、内部的には以下のようになっているはずです。 (※コピーオンライトについては説明を簡単にするために無視することにします) 1. $arrayは is_ref=0 なので、$copy に対してコピーを行う。これは配列であるので子要素にコピー処理が続く。 2. $array[0] はis_ref=0 なので、$copy[0] に対してコピーを行う。 3. $array[1] はis_ref=1 なので、$copy[1] に対してエイリアスの作成を行う。（※$arrayのis_refには左右されない） 4. $array[2] はis_ref=0 なので、$copy[2] に対してコピーを行う。 $copy = &$array; 参考までにこちらについても… 1. $arrayは is_ref=1 なので、$copy に対してエイリアスの作成を行う。 以上です。 >> ただ、その結果何がどう異なるのかはよく分かりませんが 以下の2つの結果は変わりません。 $a = new stdClass; $a->foo = 'bar'; $b = $a; $b->foo = 'baz'; var_dump($a); $a = new stdClass; $a->foo = 'bar'; $b = &$a; $b->foo = 'baz'; var_dump($a); 以下の2つの結果は変わります。 $a = new stdClass; $a->foo = 'bar'; $b = $a; $b = null; var_dump($a); $a = new stdClass; $a->foo = 'bar'; $b = &$a; $b = null; var_dump($a);
>4重foreachになりました 何か問題がありますか？ 添え字が既知ならforeachで回したりはしませんから「添え字がわからない」のですよね。他に方法がない以上は仕方ないです。
if($nickname=='' || $email='' || $goiken=''){ ↓ if($nickname=='' || $email=='' || $goiken==''){
>> 例えば、下記では初期化を実施する必要があるでしょうか？ >> $hoge = array("foo", "bar"); これ自体が初期化処理ですね。新しい配列を変数に設定していますから。「空配列の代入」が初期化を意味しているのではありません。何らかの初期値を与えることが初期化を意味します。これを初期化しない書き方にするならば以下のようになります。 $hoge[] = "foo"; $hoge[] = "bar"; >> 配列の初期化を実施するのはどんな時でしょうか？ それがないと誤った結果を返してしまったり、NoticeやWarningを発生してしまうケースが存在するときです。これが無いのであれば初期化の必要はありません。迷ったら初期化しておく方がいいと思います。 【必要】 while, foreach ループは1回も実行されないケースがあるため、初期化が必要です。 // file関数のcsvバージョン function file_csv($filename) { 　if (!$fp = fopen($filename, 'r')) { 　　return false; 　} 　$rows = array(); 　while ($row = fgetcsv($fp)) { 　　$rows[] = $row; 　} 　return $rows; } 【不必要】 doループはかならず1回実行されるため必要ありません。 // 例外スタックからメッセージだけを取り出してきてキューの順番に並べ替え function exception_to_array($e) { 　do { 　　$arr[] = $e->getMessage(); 　} while ($e = $e->getPrevious()); 　return array_reverse($arr); } 【不必要】 最初の例も、issetによるチェックを行うのであれば初期化は必要ありません。(あんまりこんな書き方しませんが) // file関数のcsvバージョン function file_csv($filename) { 　if (!$fp = fopen($filename, 'r')) { 　　return false; 　} 　while ($row = fgetcsv($fp)) { 　　$rows[] = $row; 　} 　return isset($rows) ? $rows : array(); } 【不必要】 複数階層に渡る初期化はその都度issetで調べなければならないため結構面倒なことになりそうです。このケースでは積極的に省略していってもいいと思います。以下のケースではstatic宣言を使用しているため static $list; とした時点で$listにNULLが代入されてしまっていますが、 static $list = array(); としておいても構いません。但しNULLに対して配列要素を追加しようとした場合でもエラーは発生せずに適切に処理されるので特に問題はありません。 // create_functionのメモリリーク問題を解決する関数 // (現在ではクロージャが使えるため、まず使われることは無い) function create_lamba($args, $code) { 　static $list; 　if (!isset($list[$args][$code])) { 　　$list[$args][$code] = create_function($args, $code); 　} 　return $list[$args][$code]; } >> また、配列の初期化を行う方法は、下記以外にもあるのでしょうか？ PHP5.4以降では array() の代わりに [] が使えます。
そのテンプレート全体がどうなっているか分からないのでget_postsでもいいかも知れないが、代わりにWP_Queryを使うと使い勝手が良くなろう。 <?php $q = new WP_Query(array('cat' => 1, 'posts_per_page' => 1)); ?> WP_Queryの引数はposts_per_archive_pageあたりを調べても参考になろう。 で、これで$qにはカテゴリIDが1の全投稿が入るわけだが、後は普通に$q->have_posts()で投稿があるかどうかが判定できる。 以上のことから質問のソースを書き換えると ～～～～snippetここから～～～～ <?php $q = new WP_Query(array('cat' => 1, 'posts_per_page' => 1)); ?> <?php if($q->have_posts()): ?> <h2 class="entry-title">カテゴリ1の投稿一覧</h2> <div class="container"> <?php while($q->have_posts()): $q->the_post(); ?> <ul class="hogehoge"> <li> <a href="<?php the_permalink(); ?>" ><img src="<?php echo catch_that_image(); ?>" /></a> </li> <li> <a href="<?php the_permalink();?>"><b><?php the_title(); ?></b></a><br /> <a href="<?php the_permalink();?>"><?php echo mb_substr(get_the_excerpt(), 0, 80); ?>…</a> </li> </ul> <?php endwhile; ?> </div><!-- /container --> <?php else; ?> ○○に関する記事は現在ありまへん。 <?php endif; ?> ～～～～snippetここまで～～～～ 上のコードは想像で書いたので実際に動かしてはないのでその辺はあれこれ試してみて欲しい。 まず、WP_Queryで$qの中に投稿を詰め込む。前述の通り$q->have_posts()が投稿有無の判断基準になるので if($q->have_posts()): // ある else: // ない endif: が一番大きなくくりになる。で、「ある」の方は今度はwhileで$q->have_posts()がfalseになるまでくるくるまわす。while開始直後に$q->the_post()を呼ぶ事でそこからendwhileの中までは通常のthe_title()などで$q内の現在の投稿にアクセスする事ができる。「ない」は普通に「ねーよ」というのを書けばいい。 直接は関係ないがHTMLの話。一応１投稿に対して１ulタグにしたかったのかなと思ってサンプルコードはこうしたが、明らかに意図が違う２つのliタグが入っているulタグよりかはdlタグを用いた方が良いのではないかな。それか<div>とかで１投稿に対する見せ方をレイアウトするか。 後、get_the_excerpt()の後ろのてんてんてんって要るかね？ 80文字で切るも含めてこのあたりの制御はWP Multibyte Patchに任せたほうがいいような気もする。
「測定」って何のことかと悩んだんですが、アクセスログを取りたいってことですね。 で、htmlメールなのでhtmlの生成時にログを取るんじゃなくて実際に表示させたタイミングにしたいと。 ＃もっと普通に説明していただけると有り難いんですが・・・ img要素に埋め込めばそのURLへのアクセスは発生しますが、それをどうやって保存・解析しますか？Apacheのログで確認するんならいいですが、そうでなければhtml生成時に <img src="http://example.com/log.php?ユニーク値 width="1" height="1"> のようにして、log.phpで$_SERVER['QUERY_STRING']を元に処理するしかないと思います。 なお、htmlメールにphpソースを埋め込んでも意味はないので、phpで生成するときはgetCVID();を使いますが実際にhtmlメールに載るのは「その値」になります（この値しか受け取れないので当然ですね）。htmlメールを開いたユーザが（他の方法で）判別出来るなら、こんなことはしなくていいんだしww
setMaruBatuの中でどっちがsetしたか持っておいて function setMaruBatu($x,$y,$k){ if($this->turn === $k) return 'dame'; $this->turn = $k; if($this->board[$x][$y] == 0){ $this->board[$x][$y] = $k; } } // マルのひと $mb->setMaruBatu(0,0,1); // この時点でturnは1 // 本来はバツのひとだけどマルのひとがまた呼んでみる // turn(1)===1が真になりreturn 'dame'でそれ以降は実行されない $mb->setMaruBatu(0,1,1); // バツの人が呼ぶと // turn(1) ===0で偽となり配列へのセットが実装される $mb->setMaruBatu(0,1,2); で、turnには2が入る このくりかえし～
これから勉強するならせっかくだからpdoを使った接続で学んだほうがいいよ。 というかmysql_connectは使わない用がいいよ。もうずっと非推奨 で、まえの回答にあったcountってのはSQLだよ。 whileの前で$count = 0; whileの中で$count++; while出たら echo $count で、取得した数になるけど？
twitteroauth.phpの内部で curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); の記述があるかどうか確認してください。ない場合は追加してください。
>「2012-3-8 12:00:00」として利用したいです ということは「文字列として取得する」ということでいいんですよね。date_formatを使います。 select date_format(列名, '%Y-%c-%e %T') from xxxx http://dev.mysql.com/doc/refman/5.1/ja/date-and-time-functions.html もちろん、取得後にphpスクリプトで、date('Y-n-j H:i:s', strtotime(取得した文字列)) としてもいいです。 http://php.net/manual/ja/function.date.php
「内部的に」持っているでしょうね。システムによっては「メールアドレスの変更」も可能にしたいということはあるでしょうから。 それこそ新規登録でデータベースのユーザテーブルにレコードを追加した時点で、auto_increment（シノニム）で付番された値でかまわないでしょう（重複しないことがデータベース側で保証されている）。システム内で見分けられればいいだけなので。わざわざ乱数を使うこともありません。
RBD(MySQL)を使っているのですからCOUNT()を利用すれば一発では？ あとはMySQLにどのようにデータを持たせるかきめるだけです。 PHP＋MySQLでWEBアプリをつくる方法については 本屋や図書館にいけばたくさん参考書がでてます
SSL対応のプロキシじゃないのが原因ではないでしょうか。 以下のようなリストがあれば、「HTTPS」を選択する必要があります。 http://www.freeproxylists.net/ja/ 【宣伝】 TwistOAuth https://github.com/mpyw/TwistOAuth HardBotter https://github.com/mpyw/HardBotter
文字通りに捉えた場合でも，ALTER TABLE文をPDO::exec等で実行できるため，可能ではあります。 ただ，データに合わせてALTER TABLE DROP COLUMNのようなことをするなら， RDBMS側にTriggerを定義した方がよい気もしますが……。
(1) 書き込み時に一番上から追加していけば、表示するときは特に何も操作せずにそのまま出せばいいんじゃ？ 書き込み時に一番下に追加しているのを変えられないなら、取得時は配列に読み込んで逆にすればいいかも？ (2) 埋め込むって、その表示部分のみを埋め込みたいならphpが動く方法をとらないといけないけど1番さんの回答で拡張子を変える必要は無いよ。 同じく1番さんの回答でiframeで表示する方法なら難しいことしなくてもそのままurlを指定すればよいだけ。
>今回はとにかく２テーブルで作ってみたいです。 了解。ただし今後いろいろ機能追加しようとすると、どんどん辛くなってきますよ。覚悟。 HAVING COUNT(*) = N の部分は、「kidの個数」が入ればよいので、 count($_POST['kid']) で取得できます。 その他どんな関数があるのか目を通しておくとよいです。 http://jp2.php.net/manual/ja/ref.array.php kidが1個しかない場合でも動きますが、本来は WHERE kid = X だけにして、 fid毎にまとめるGROUP BY ～や、集計するHAVING COUNT～は不要です。 余力があれば1個の時を分岐させてみて下さい。
＞PHPで他のサイトを読み込んで、 これは普通にできますよね？ ＞javascriptを実行した結果を PHPのサーバー側処理でjavascriptを走らせるのはかなり難しいですね なんらかの理由でjavascriptをかます必要があるのであれば クライアントでphpの結果を受け取り、javascript実行後 sumitするかajaxで再度phpに投げる処理が必要になると思います
えーっと >> $key = "治療"; >> $options = array('q'=>$key,'count'=>'1','lang'=>'ja'); >> $url = 'https://api.twitter.com/1.1/search/tweets.json?exclude_replies=true'; >> $json = $twObj->OAuthRequest($url,'GET',$options); >> $jset = json_decode($json, true); これはよく http://qiita.com/rana_kualu/items/357a031c0453a3538ad3 みたいな感じでダメだと言われる不恰好な書き方なので以下のように書きましょう。include_entitiesもデフォルトでtrueなので書く必要性ゼロです。 <?php // ライブラリの読み込み require 'twitteroauth.php'; // TwitterOAuthオブジェクトの生成 $to = new TwitterOAuth('***', '***', '***', '***'); // パラメータの設定 $params = array('q'=>'治療','count'=>'1','lang'=>'ja'); // データを取得、これは自動でjson_decodeされる // 但し第2引数にtrueを渡していないので // 連想配列ではなくオブジェクトとしてデコードされる $result = $to->get('search/tweets', $params); // エラーチェックは是非書いておきましょう if (!isset($result->statuses)) { 　// ここでは簡易的にテキストだけ出してdieしていますが、実際にWebサービスとして 　// 公開する際はちゃんとエラー時にもHTMLを出力したほうがいいです 　die(isset($result->errors[0]->message) ? $result->errors[0]->message : '不明なエラー'); } // 絞り込む $statuses = array_filter($result->statuses, function ($status) { 　return 　　strpos($status->user->name, '病院') && 　　strpos($status->text, '治療') 　; }); // テスト表示してみる foreach ($statuses as $status) { 　echo htmlspecialchars($status->text, ENT_QUOTES, 'UTF-8', false) . '<br>' . PHP_EOL; }
>> $a[0][0] = 'b'; こういう静的ではない文はメソッドの中以外に書けません。あと、メソッドの中でprintして外側でもechoしているところが謎です。あと終了タグも要りません。以下のように書きましょう。 <?php class A{ private $a = array(array('b')); function printA(){ print $this->a[0][0]; } } $x = new A; $x->printA(); ちなみにPHP5.4以降で書くんだったらこうしますね。 <?php class A{ private $a = [['b']]; function printA(){ print $this->a[0][0]; } } (new A)->printA();
可能性はいくつかありますが一番多いのはUTF8のBOM BOMなしで保存してもだめでしょうか？
以下で詳しく説明しています。issetを使って解決する人が多いのですが、記述が冗長になりやすいため、個人的にはfilter_input関数を使う方が短く、且つ美しくまとまってお勧めです。 http://qiita.com/mpyw/items/2f9955db1c02eeef43ea
$_SERVER["REQUEST_URI"]
file_get_contentsで読んでexplodeするくらいなら最初からfileで読んだ方がとは思いますが、そもそも「CSVデータ」をいう前提ならfgetcsv()で読むかstr_getcsv() でパースするのが妥当。で、出力も当然fputcsvで書き出すべき。 <?php $file = file('list.csv', FILE_IGNORE_NEW_LINES); $svkey = ''; $output = array(); $fp = fopen('tmp.csv', 'w'); foreach ($file as $line) { $line = mb_convert_encoding($line, 'utf-8', 'cp932'); $data = str_getcsv($line); if (count($data) < 3) { continue; } $key = $data[0]; $data = $data[2] . ':' . $data[1]; if ($key <> $svkey) { // KeyBreak if ($svkey <> '') { array_unshift($output, $svkey); fputcsv($fp, $output); } $output = array(); } $svkey = $key; $output[] = $data; } if (count($output) > 0) { array_unshift($output, $svkey); fputcsv($fp, $output); } fclose($fp); // デバッグ用表示 print nl2br(htmlspecialchars(file_get_contents('tmp.csv')));
mysqlを利用したページングであれば SQL文でLIMITを利用してページ当たりのデータ数を調整すればいいでしょう。 必要な情報は以下があれば過不足ないでしょう ・カレントページ(1ページ目から数える) =$currentPage ・１ページ当たりのデータ数 =$perPage ・全データ数 =$totalItems (場合によってはメニューに表示する上限数もあってもよいかも) 現在のページを表示するなら SELECT * FROM db LIMIT ($currentPage -1)*$perPage,$perPage; でよいでしょう。 ceil($totalItems/$perPage)だけページ数が発生するので 各ページのメニューをつくってgetでデータ渡ししてやればよいでしょう 面倒であればなにか適当なページャーを利用してみてください （PEARなどにも用意されています。）
もしかしたらUTF8のBOMが影響しているかもしれないので ファイルを保存する際にBOMなしを選択してみてください （エディタの機能なのでご利用の環境にあわせてください） たとえば、こんな感じでエラーが発生しているかどうか確認するのもよいでしょう <?PHP ini_set("display_errors",1); error_reporting(-1); header("Location: http:うんたらかんたら");
>fetchには沢山の種類があるので、 マニュアルには「fetchの引数による取得する内容の違いをvar_dumpで確認した例」が載っています。見比べれば理解できるハズです。 RTFM. http://php.net/manual/ja/pdostatement.fetch.php >データ変数B（$varB）に該当カラムの値を代入する場合に >どれを使ったらよいか分かりませんでした。 上記マニュアルの例でわかりますが、変数に直接代入するfetchはありません。危険だからです（extractが基本的に「使ってはいけない」のと同じですね） fetchの引数がPDO::FETCH_ASSOCもしくはPDO::FETCH_BOTHであれば「列名」が添え字に使えます。 $row = $sth->fetch(); $varB = $row['columnB']; です。
HTMLの見た目（アウトプット）だけで、採用しているフレームワークなど判断できません。 例に挙げているフレームワークはいずれもサーバーサードプログラムですから。 求人などが出ていれば、求められる技能などから推測することはできますが、アウトプットから判断することは不可能です。というのも、それが分かっちゃうと…フレームワーク個別の脆弱性などが発見されたりすると、攻撃の対象になったりもしますからね。
>一般的なアメブロなどのブログシステムでは、そのような変数は >URLについていないかと思います。 Wordpressあたりでは RewriteEngine On RewriteBase /wordpress/ RewriteRule ^index\.php$ - [L] RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule . /wordpress/index.php [L] とやって、全部index.phpに渡して、あとはwordpress/index.phpが適宜処理します。example.com/aaa でアクセスすると、wordpress/index.php で$_SERVER['REQUEST_URI'] で　"/aaa" が受け取れます。 それ以外にもrewriteするときにQueryStringに変換する（example.com/aaa を example.com/index.php?user=aaa にする）ケースもあります。なのでアクセスしているURLと内部的な値の受け渡しは必ずしも一致しません。 >あらかじめユーザーごとのフォルダにuser_id.txtのようなファイルを用意し、 >そこに書かれているidを読み込んでいるのでしょうか？ えっと・・・。質問者さんがすでに書かれているように「データベースを使う」方が一般的です。わざわざテキストファイルを使う意味はありません。データベースで一元管理します。 >管理画面からユーザーが記事を投稿した時に、$user_idをファイルに >埋め込んだ動的なphpファイルを生成して保存しているのでしょうか？ 記事テーブルにデータを追加するだけです。 まずはWordpressあたりを動かして「各々のテーブルの設計がどうなっているのか」「どういう動きになっているのか」を学ぶといいと思います。
少し古いドキュメントですが、一読をおすすめします。 安全なSQLの呼び出し方 - 情報処理推進機構 http://www.ipa.go.jp/files/000017320.pdf MySQLの場合はデータベースへの接続方法によっては、 DBMSへ引き渡す前に変数とクエリが結合されてしまうようです。（動的プレースホルダ） そして残念なことに、この接続方法がデフォルトになっているようです。 そして、上記のドキュメントには、次のように記述されています。 ---------------------------------------------------------------------------------- 静的プレースホルダは、SQLを準備する段階でSQL文の構文が確定し、あとからSQL構文が変化することがないため、SQLインジェクションの脆弱性が生じません。 それに対して、動的プレースホルダは、バインド処理を実現するライブラリの実装に問題があると、SQL構文が変化する可能性があり、SQLインジェクションの脆弱性が生じる可能性を否定できません。
>var_dump($global); fetchの戻り値は$valueに代入されていますけど・・・
xamppは、「Apache,php,MySQL」を一括インストールするためのものです。なので個別にインストールしたときとは状態が違います。質問者さんは、あくまでも『xamppをインストールした』だけです。 逆に一括のアンインストールと個別のアンインストールが混在してしまう方がわかりにくいと思います。そもそも個別にインストールするものとは「多少初期設定などが違うもの」になっているわけですしね。
素直にこう書いちゃダメなんですか？ date('Ymd', strtotime('-1 day', strtotime( 'last day of -2 month' )))
接続は $db = new PDO('mysql:host=localhost;dbname='.$dbname,$user,$password); または $db = new PDO("mysql:host=localhost;dbname=$dbname",$user,$password); でDB名を変数に出来ると思います。 接続処理を別ファイルにすることは問題ありません。
ザクッとしか見ていませんが、おそらく他人へのイヤガラセに利用されているということかも知れません。 誰か悪意の人物Xが居たとして、ターゲットAに嫌がらせをしようとしたとします。 Xは自分のメールアドレスがバレるような方法で、メールボムを送る程のバカではないと仮定します。 ※メールボムをしようと考える時点でバカだという事は置いておく そんなときに、たまたま発見した問い合わせフォームに、ターゲットAのメールアドレスを入力して送信。 ターゲットAの元には、大量の身に覚えのない『【※※※※】お申込みありがとうございます』が到着するという事に。 巻き添えで、質問者様のところにも『【Webサイトからのメール】』が届いているという感じがします。 巻き添えと言えば巻き添えですが、キツイ言い方をすれば自業自得。 むしろ被害者側からすると、不適切なメールフォームを公開してXに加担している迷惑行為者であるとすら言える…。 まあ、勝手にストーリーを創作していると言われればそれまでの、ただの推測・想像・妄想ですが。 なんとなく、送信後Locationで遷移させていないので、F5を押すだけで簡単に大量のいやがらせメールが送信できるために利用されている、という気がしなくもない。 ＞現実的に考えて、1分のうちに、何十通もメールフォームを通して送信することはできないと思います。 もし、再読み込み(F5)で再送信されるようなプログラムなら、1分のうちに何十通もなんて極めて簡単。 ※Location遷移部分は直接関係ないから省略しただけという可能性も充分にあるけれど… 対策として考えられるのは 1)ログを取り、同一のメールアドレスには、一日5件までなどの上限を設ける。 ※正規の問い合わせで、訂正、追記など、複数件連続する可能性があるので5～10件程度は許容する方が良い 2)同じくログを取って、同一のIPアドレスからの送信は、1日10件までなどの上限を設ける。 ※1)と機能的には重複するが、これを設けることで1000人に対しての一日5件といった、薄く広い嫌がらせなどへの利用を防ぐ ※1)と機能が重複することもあり、なんとなく1)の上限の倍ぐらいの制限の方が良いような気がする(個人的意見) 3)ログを利用して、万一いやがらせがあった場合には、送信者のIPアドレスが判るようにしておく。 ※メール本文にIPアドレスを書いているとさらに有効、送信前に『以下の内容で問い合わせします』と確認画面を加えて、その中にIPアドレスやホスト情報が書かれていればいやがらせの抑止効果が期待できる。 4)IPアドレス(範囲)でブラックリスト、ホワイトリスト機能を作る ※もし海外からの問い合わせは不可とできるなら、IP偽装がいくらか困難になるのだが…それは職種やメールフォームの目的から検討しなければならない。 5)メールアドレスでブラックリスト機能を作る ※万一いやがらせに利用された事が判明した場合に、いやがらせを継続させないための機能 6)再読み込み対策を入れていないなら最優先で実装 7)CAPTCHAを導入する ※簡易的なものでも実用上問題はない。それなりのものを導入すれば「フォームを介さずに送信への対策」あるいは「再読み込み対策」の一助となる。個人的には本格的なものは(ユーザーとして使う場合には)面倒過ぎるので嫌い。 とりあえず、ザクッと思いつくところでこんな感じです。
まず、ご質問の内容はPHPではなく、JavaScriptの分野になります。 ご質問の内容についてですが、次のように修正してみてください。 ●JavaScript部分（confirmの確認の結果を返しています） function showData(){ return confirm("表示しますか") } ●ボタン部分（onClickにイコールと、return 関数名、のようにします） <input type = "submit" name ="Display" onClick="return showData();" value="表示"> ボタンでは、クリックしたときにshowData関数が呼ばれます。 showData関数では、confirmの結果、OKが押されていればtrueを、キャンセルが押されていればfalseをボタンに返します。 そうすると、OKのときには送信ボタンとして機能し、キャンセルのときには送信しないようになります。
「下記と同等機能」という意味がわかりません。呼び出し側で&を付与することはないので array_walk($ary,"userfunc",&$hoge); ではなく array_walk($ary,"userfunc",$hoge); と書いて function userfunc($val, $key, &$arg) { と受けるのでは？ それともarray_walkが終わって時点でもuserfuncで処理した最終結果の値を使いたいということですかね。そうなるとuserfunc側でglobal宣言するか（引数としては渡さない）処理した結果を別のglobal変数に代入してそれを使うしかないです。array_walkの定義として出来ないものは出来ません。 http://www.php.net/manual/ja/function.array-walk.php array_walk($ary,"userfunc"); function userfunc($val, $key) { global $hoge; （蛇足） 「PHP5.4で」というのはもっとわかりませんね。この記述が可能なバージョンがあるということでしょうか。
vi と呼ばれるテキストエディタを起動するコマンドを実行したのですね。 vi の起動には成功していますが、vi の操作方法は、かなり特殊ですので、以下のページを読んで、操作方法をマスターしましょう。 http://net-newbie.com/linux/commands/vi.html
せめてエラーのないソースを提示すべきでは？エラーを潰すくらいは自分でやらないと何一つ身に付きませんよ。 ＃「習得する気がない」ならそれでもいいですけどね。 （例） $a = range(1, 50); $b = array(1, 4, 8, 10, 14, 20, 21); foreach ($a as $val) { if (in_array($val, $b)) { printf("数字%dはAとBで一致しています<br>", $val); } else { printf("数字%dは不一致です<br>", $val); } } でも、普通は（このケースで）rangeは使いませんね。こう書くのが一般的でしょう。 $arr = array(1, 4, 8, 10, 14, 20, 21); for ($i = 1; $i <= 50; $i++) { if (in_array($i, $arr)) { printf("数字%dはAとBで一致しています<br>", $i); } else { printf("数字%dは不一致です<br>", $i); } }
MySQLはどのAPIで扱うか決めていますか？ http://php.net/manual/ja/mysqlinfo.api.choosing.php データベースへ登録とかも行うんですよね。また合致するレコードの有無が調べられないと、登録した会員のログイン処理も書けません。今回の処理が書けないと何も出来ないハズですが、どうするおつもりだったのでしょうか。 データベースの取扱いの基礎の基礎ですから、マニュアルを熟読するのが先じゃないかと思います。 （PDOの例） $errmsg = ''; try { $pdo = new PDO("mysql:host=localhost;dbname=test;charset=utf8", 'root', ''); $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION); $stmt = $pdo->prepare('select * from table_name where email = ?'); $stmt->execute(array($email)); if ($stmt->fetch() !== false) { $errmsg = '登録済みのメールアドレスです'; } // try-end } catch (PDOException $e) { $errmsg = $e->getMessage(); }
色を変えるだけなら合致したときだけクラスを設定するのが妥当ですね こんな感じ？ <style> table{border-collapse:collapse;} td{border:solid 1px #000000;text-align:center;} .red{background-Color:#ff0000;} </style> <?PHP $a=range(1,10); $b=array(1,4,8); print "<table>\n"; for($i=0;$i<count($a);$i++){ print "<tr>\n"; $class=(in_array($a[$i],$b))?" class=\"red\"":""; print "<td{$class}>\n"; print $a[$i]; print "</td>\n"; print "</tr>\n"; } print "</table>\n"; ?>
action属性の値を「phpで」変更することは出来ません。代替方法として （１）クライアント（ブラウザ）側の処理なので、JavaScriptで行う （２）受けとったphpスクリプト側で処理を分ける（includeするファイルを変えるなどでも可）。 のどちらかを選択することになります。 なお、例示されているhtmlは文法的にあまりに酷いです（まともに動きません）。いくら「例」でももうちょっとキチンとしたhtmlを提示してください。このhtmlではJavaScriptでの処理を例示しようにも書きようがありません。
テンプレートはphpスクリプトにincludeで読込んでいるんですよね（readfileなら何もやりようがないので）。 $_SERVER['SCRIPT_NAME'] をチェックすればいいのでは？ <?php if ($_SERVER['SCRIPT_NAME'] === '/index.php') { print '<link rel="stylesheet" type="text/css" href="css/index.css">' . PHP_EOL; } ?>
ちゃんとなりますが。 【ソース】 <?php $html = "www.sample.com/hoge"; $html = str_replace("www.sample.com/hoge", "hoge.hogeoge.net", $html); echo $html; 【結果】 I:\WebApp\php>php.exe test.php hoge.hogeoge.net I:\WebApp\php> $htmlの中身に対象文字列がないだけでは？
> 初期値が取得できたときはその初期値と一致した配列の値を表示する、、、 > 初期値が取得できなかった場合は配列の決まった値を初期表示する、というようなことがしたいのです つまり$start_time[$j]の値が取得できない場合ということですよね？ それなら$start_time[$j]が取得できなかった場合のコードを書けば済むだけだと思いますが。 例えばPHPは緩いですから、取得できなかったら意図的に$start_time[$j]を作り上げてしまえば、後のコードも変更する必要ありませんよね。
ほかの言語の経験があって変換予測のところまで取得できているのなら、あと一歩だと思うんですけどね。 ちなみに私はPHPは初心者でjson_decodeはいつか試したいとは思っていたのですが、今日まで使ったことがありませんでした。この質問を見てはじめて触りました。それでもすぐに成功しましたよ。 ヒントをいくつか。 まず、 []でくくられているのが配列、 {}でくくられているのがオブジェクトまたは連想配列。 です。 これが入れ子になっていて、最深で5次元の構造になっています 配列の一次元目の 0番目に、入力したキーワード 1番目に、変換予測が入った配列 2番目に、nodesなどが入った配列 3番目は、空 が入っています。ここまではいいですかね。 で、配列は数字の添字でアクセスします。 オブジェクトまたは連想配列はキーでアクセスします。 …ここまでを踏まえると、nodesの最初のオブジェクトのaliasである「computers」にアクセスするには 「$data[2][0]["nodes"][0]["alias"]」とすればいいのです。 AmazonのサジェストAPIを知らないので、nodesが複数入るのかどうかわからないのですが、常にサンプルのとおり1つしか入らないのだとすると 「$data[2][0]["nodes"][★]["alias"]」で★の部分をループにすればいいだけです。 例えばこんな感じで。 foreach ($data[2][0]["nodes"] as $n){ 　　print "<li>" . $n["alias"] . "：" . $n["name"]; } JSONの入れ子の階層がどうなっているのか、認識できればすぐに分かるようになるのではないかと思いますよ。
PHPでデータベースに接続するときのまとめ http://qiita.com/mpyw/items/b00b72c5c95aac573b71 No.2さんが仰るのは、上記で紹介している「PDO::ATTR_PERSISTENT」のことですね。このオプションはぜひ有効化しましょう。
こんにちは。 一つ一つクリアしていけばいいと思います。 まず // 配列の値 $time = array・・・・ $minute = array・・・ となっているのに forの中では$time_array[$a]を参照しているのは質問の際の転記ミスですか？ 次に$start_time[$j]とありますが$jは何をしている変数でしょうか？ 実際、画面上にechoしてみて自分が想定する値が表示されていますか？ ループの中でecho $time_array[$a]とecho $start_time[$j]を表示して比較状況を見てみてください。 次に<select>の間に生成したoptionを表示しようとしていますがこの生成されたHTMLが想定通りか確認してください。 $dayが2014年9月1日の1だったとした場合 <select name="start_time1"> <option value="0">0</option> ・ ・ ・ <option value="23">23</option> </select> となっていますでしょうか。 >POSTした値がまともに渡されていません >POST先でDB処理を想定しているのですがdate型だとすべて[00:00:00]になってしまいます。 まともに渡されていないだと何が起きてるかわかりません。 送信されていないのか送信された内容が取得できていないのか送信されて取得もできているけど想定した値ではないのか切り分けてください。 冒頭にも述べましたが一つずつクリアしていくのが近道だと思います。
Cakeはブラウザに設定されている言語設定によって言語を切り替える仕組みになってます。 Consoleで起動した場合は言語設定が読み取れないのでデフォルトで表示されているのだと思います。 日本でしか（または日本人しか）使わないのであれば言語設定を強制したら良いかと。 Configure::write('Config.language', 'jpn'); を書いたら日本語で固定されます。 bootstrapに書けば全てのアクセスに対して固定されます。 コンソールだけ強制したいならコンソール側のconstructor辺りにでも書いたら良いような気がします。 ただし、コンソールアプリは日本語が表示できないアプリだと文字化けするのでご注意を。
以前にも貼ったと思いますがもう一度w http://qiita.com/mpyw/items/b00b72c5c95aac573b71#3-1 5.3.5より古いバージョンを使っていること自体にもう問題があるといっても過言ではないですね。最新リビジョンの5.3.29に更新すべきです。というよりも根本的にマイナーバージョンで見て、5.3系のサポートは切れているので使うべきではありません。5.4以降を使いましょう。5.6または5.5がおすすめです。 ここからは記事の内容と重複しますが一応… ・「SET NAMES」「SET CHARACTER SET」を使ってもデフォルトの「latin1→UTF-8」のケースではエスケープ漏れが発生することはありません。ngyukiさんが心配されていますが問題ありません。但し、ソースからビルドしている場合で、コンパイルオプションにてデフォルトの文字セットを「cp932(Shift_JIS)」に変更している場合は脆弱性となります。 ・「SET NAMES」はMySQLに送る文字列にのみ作用しますが、「SET CHARACTER SET」は送る文字列に加え送られてくる文字列にも作用します。処理が重めになるので使わない方がいいです。
接続時にエラーになっていたりはしないんですよね？ $link = mysqli_connect($sv, $user, $pass,$dbname) or die('接続エラー'); 日本語を扱うなら、mysqli_set_charsetが必須です。 http://www.php.net/manual/ja/mysqli.set-charset.php あと、データベースに挿入するデータを「エスケープする」という発想はないんですか？ http://www.php.net/manual/ja/mysqli.real-escape-string.php $query = sprintf("INSERT INTO data1 (txt,ip,ua) VALUES('%s','%s','%s')", mysqli_real_escape_string($txt), mysqli_real_escape_string($ip), mysqli_real_escape_string($ua)); というか、MySQLiの手続き型ってMySQL関数からの「応急処理的な」書き替えなら仕方ないですが、本来ならオブジェクト型で書く方が楽だと思いますけどね。で、どうせならPDOにしてしまってもいいんじゃないかと思いますけど（MySQLiでないと困ることってそれほどないでしょ）。
> $query = "SELECT * FROM $editpagename ORDER BY id DESC LIMIT 0 , 50"; $query = "SELECT * FROM " . $editpagename . " ORDER BY id DESC LIMIT 0 , 50";
サーバパス（フルパス）で指定すれば（読み込み権限さえあれば）どの場所でも可能。当然、VirtualHostで割り当てたディレクトリより上の階層くらいは何の問題もない。 ＃include_pathに /usr/local/php とかもあるわけだしww >あるディレクトリをドメインのように利用する 正確にはVirtualHostで、そのホスト名でのアクセスに対してのDocumentRootを設定するだけ。
>読み込みはわかり解決しましたが > >書込方法に変更があったかどうか >よくわかりませんでした。 MySQL使うのに、読み込みと書き込みでやり方に違いはない。SQL文が違うだけ（select/update/insert/delete）。あとは接続しているデータベースユーザに権限があるかどうかの問題。 というか、php4の頃ならネイティブなMySQL関数だと思うが、それ（MySQl関数）はすでに非推奨。 http://www.php.net/manual/ja/mysqlinfo.api.choosing.php PDOで書き直すべき。MySQLが4.0だったのか4.1だったのか書かれていないが、元が4.0ならクライアント（phpスクリプト）の文字セットの通知（以前は set names のSQLを投げていたけど、今はmysql_set_charsetとか、PDOならDSNで指定する）も必須。相当に見直さないといけないハズ。
ちなみに、最初に error_reporting(-1); ini_set('display_errors', 'On'); を実行しておくと全てのエラーが表示されるようになります。ご提示のソースコードにはエラーを引き起こす要因が3種類含まれています。2つに関しては以下を読まれれば分かると思います。 PHP Manual - 配列ですべきこととしてはならないこと http://php.net/manual/ja/language.types.array.php#language.types.array.donts Qiita - $_GET, $_POSTなどを受け取る際の処理 http://qiita.com/mpyw/items/2f9955db1c02eeef43ea もう1つ問題なのは、session_is_registered関数を使用していることです。 PHP Manual - session_is_registered http://php.net/manual/ja/function.session-is-registered.php この関数はPHP5.3の時点で非推奨です。PHP5.4以降では使用することすら出来ません。isset構文を使って調べましょう。なお、PHP5.3系のサポートももう切れていおり、認められる最も古いバージョンはPHP5.4系です。古いバージョンでは言語自体に脆弱性が発見されても修正が行われない等の問題点があります。「サポートの切れたWindowsXPを使っている」ぐらいの危機感を持ってください。
>１ファイルずつ開いて検索を繰り返すのが普通なのでしょうか？ そういう意味ではgrepという機能がありますよ。秀丸に限らずほとんどのエディタで使用できます。関数の定義元を探す際や、関数が使われている箇所すべてを探すときにgrepをよく使います。 特定のフォルダ以下のすべてのファイルを検索対象に処理できます。結果は多くのエディタで新しいタブでヒットした一覧が表示され、該当の行でタグジャンプの機能を発動すると対象ファイルが開きます。 秀丸でのgrepの使い方やタグジャンプの発動の仕方は秀丸のヘルプを見てみてください。
すでに回答がありますが・・・ 一般的には、substr(sha1(microtime()), 0, 15) 程度でじゅうぶん実用になります。まず重複することはありませんが、絶対ではありません。∴ ミッションクリティカルな場合にはDBなどで管理すべきです。
>メール本文の姓と名にスペースを入れたい 普通のメール（text/plain）であれば、asciiの空白でもマルチバイト文字（いわゆる全角）の空白でも何も気にする必要はありません。 $mailbody .= $kastname . ' ' . $firstname . "\r\n"; でかまいません。 当然、htmlメール（text/html）であれば、当然htmlの文法に従ってください（まぁ、わざわざphpスクリプトでhtmlメールを組み立てることもないとは思いますが・・・）。 なお、メール本文でなくメールヘッダに入れるときは、（本文の場合と同様に）結合して作った文字列をmb_encode_mimeheader を通すことになります。 http://www.php.net/manual/ja/function.mb-encode-mimeheader.php
正規表現にする必然性がないのでは？ $arr = array(); if (substr($str, 0, 12) === 'fetchAllWith') { $arr = explode('And', substr($str, 12)); }
setcookie("TestCookie", $value, time()+3600, "/"); のようにパスをルートで設定を追加してみては。
phpをインストールするときに有効にしていますか（デフォルトでは無効です）。 http://php.net/manual/ja/mbstring.installation.php
>環境変数「PATH」さえ通れば、問題が解決するのではないか まぁそうだと思います。おそらく単にPATHの値がきちんと設定できていないだけではないかと思います。とりあえず最低限まず、「PATH」が通っているのか確認しましょうよ。 で、なぜ自分で確認しないのでしょうか？ PATHを表示させる方法が分からないのですかね。 「echo getenv('PATH');」でも 「phpinfo();」でも何でもいいですよ。 いうまでもないことですけど、問題が起きているのはWeb上なので、 Webサーバーにtest.phpなどを配置して確認してくださいね。 話はそれからです。 で、PATHが意図せぬおかしな値になっているのではないかと思います。そのPATHの値を見れば何をミスったのかが分かる可能性が高いと思います。 たぶん既存のPATHに追加するつもりで間違えて、上書きするような記述をしたとかそういう話だと思います。
１．PC1でページを作って同じPCでページを閲覧する段階からWebサーバが必要になります。 ２．外部からのアクセスが遮断された状態ならセキュリティー対策は必要ないと考えていいでしょう。 もし問題が発生するとしたら内部犯による犯行です。
隠蔽されていることから逆に考えてしまえば、そもそもシングルトンを使う必要がないということですね。シングルトンは内部状態を持ち、テストが書きにくいため、特にフレームワークを導入していて自動テストを理想とするような開発では嫌われる傾向にあります。無理して使う必要はないでしょう。
そもそも第1引数が"H*"の時のpack関数が何をするかは分かってるかい？ 仮に$BBBに"0123456789abcdef"が入っていたら、 $AAA = pack("H*", $BBB); の結果、$AAAは、0x01、0x23、0x45、0x67、0x89、0xab、0xcd、0xefという8バイトの文字列になる。 つまり、H*なpackの第二引数は16進数をASCII文字で表現したもので、とりうる値が半角の0から9またはaからfでかつ偶数個である文字列じゃないといけない。 当然yとか出てきたら困る。円マークも然り。 $BBBには何が入っているのか（動作）、何が入っているべき（仕様）なのかもう一度練り直したがいいんじゃないかな。私はどら焼きは断然練り餡派だ。
ちゃんと返ってきますが。 <?php $text = "日本 中国 オランダ　ロシア"; $result = preg_split("/[\s　]+/", $text); var_dump($result);
この記述では読み直すごとにランダムで1枚出るようにしかなりませんね。 ご自分で実装されるよりもjQueryのプラグインを探したほうがいいと思いますよ。 http://alphasis.info/2011/08/jquery-cycle-random/
質問をざっと拝見して、頭に浮かんだことをいくつか。 ・レンタルサーバーを選択する、というのは今の時代、ありえない気がします。なぜクラウドを使わないのか？という疑問ですね。万が一、人気が出てアクセスが急増したときどうするのか。クラウドならスケールアップ／ダウンがとても簡単です。 ・CMSというより、SNSの設計という段階で普通はMVCフレームワークが出てくると思うのですが、そのあたりはどう考えているのでしょう。 他にもいろいろ疑問点はありますが、個人的な意見で無責任にいわせてもらうなら、「四の五のいわずにとっとと作ってしまえ」ということですね。 とりあえず、ひと通り動くもの（アクセスしてエラーが出ないレベル）を作って、友人知人でいいので使ってもらう。で、実際に使ってもらえば、「あれがダメだ」「これがダメだ」という苦情やツッコミがどんどん出てきます。それを片っ端から対処していくのです。もちろん、プログラムが暴走するようなレベルのものは公開してはいけませんが、自分で作ってひと通り動かして「大丈夫」と思ったら、とにかく他人に使ってもらうことを考えたほうがいいと思います。 セキュリティについてなどは、最初から万全なわけがありません。何か穴を見つけたらすぐに塞ぐ、をひたすら繰り返すしかありません。これは日々、ひたすら勉強あるのみです。１冊や２冊の本を読んだくらいで鉄壁のシステムなんて作れるわけがありませんし。 そうやって、公開してから半年一年とひたすらトラブルに対応し続ければ、それなりのノウハウも蓄積されていくはずです。そうなったところで一般に公開し、本格的に広めていけばいいでしょう。くれぐれも、最初から完璧に作ろうとか、作れるとか考えてはいけません。「自分が最初に作れるのは、穴だらけのひどいシステムなんだ」と割りきり、それをどんどん改良していくんです。 昔と違い、今は誰でも自分で作って公開することが可能な世の中になっているんですから。「山ほど知識があるが何も作らない」人間より、「わずかな知識でも何かを作る」人間のほうが得るものはきっと多いはずですよ。
シングルコーテーションの箇所をダブルコーテーションで書けばよいと思います。 for ($i = 1; $i <= 5; $i++) { if($hoge["test_$i"]){ } } ダブルコーテーションの内の変数は展開されるからです。 $i = 1; echo 'test_$i'; //=>test_$iが出力 echo "test_$i"; //=>test_1が出力 もしくは、文字列を結合したものもキーに使えます。 for ($i = 1; $i <= 5; $i++) { if($hoge['test_' . $i]){ } }
＞※$_POST['test' + $i] ＞これでも取れませんでした 文字列の連結ですから・・・ $_POST['test' . $i] ですね ちなみに今回の例だと ＞<select name="test<?php echo $data?>"> の個所を <select name="test[<?php echo $data?>]"> としておけば <?php foreach($_POST['test'] as $key=>$test){ echo $key."→".$test."<br>\n"; } ?> で受けられます
すでに的確なツッコミがありますが（汗 ソースをSJISで書いているならば（本来sjisはphpでは使ってはいけない文字セットですが、それは置いといて） >mysql_query("set names sjis"); でなく、 mysql_set_charset('sjis'); とすべきだし、実行するタイミングは「MySQLに繋いだ直後」に行うべきです。提示されたソースでは >$result = mysql_query($sql,$con); >mysql_query("set names sjis"); update文の実行後に set names が実行されていますので、update文に対して何の効果も与えていません。 なお「SJISを使う」メリットは何もありませんので、UTF-8で書くことをお勧めします（MySQLでは文字セット名が「utf8」なので注意）。
PHP本体のバージョンが古い場合、アップデートしたほうが良さそうです。調べてみたところ、どうも本体のバグっぽいので…
一意どうのこうのというより、認証制限をかけたいということでしょう。 ログインする際にセッション管理してください。 ページ表示が行われるリクエストが行われる度にセッション情報からログイン認証を 行った上でページを表示してください。 http://php.net/manual/ja/session.examples.basic.php
うーん。database.phpを設置したにも関わらず 「CakePHP is NOT able to connect to the database.」 が出るんならやっぱりdatabase.phpの設置ミスか中身のミスかなぁ。 MySQLの待ち受けやポート開放、ならびにPHPにmysql接続機能が入っているかは phpMyAdminが出来ていることから問題ないと思われる。 > cakephpがmini_bbsへの読み書きが本当にできるようになっているかどうかを > 確認する方法を教えていただければ幸いです。 それは普通にphpMyAdminでcakephpユーザでログインしてみればいいです。 少なくとも読み込めるならばログイン後のデータベースツリー一覧に出てきます。 書き込みできるかは実際にCREATE TABLEとかしてみないと駄目かも。 閑話休題。 今ちらっとぐぐってみたらPHPにpdoエクステンションが無い状態もこのエラーが表示されるらしいかも？ こちら（「Mac PHP PDO」とかでぐぐるとか）でも情報を集めてみるといいかも。 この辺の説明しとくと、PHPにはMySQLに接続するために主に3つの手段がある。 mysqlエクステンションとmysqliエクステンションとpdo_mysqlドライバーだ。 このうち、phpMyAdminはmysqlエクステンションを用いるので、 上でphpMyAdminで繋げられてるから接続は問題ないはずという根拠は崩れる事になる。 mysqlエクステンションが入っててpdoエクステンションとpdo_mysqlドライバーが入ってないという可能性があるからだ。
>入力した場所からフォーカスが外れたとき呼ぶようにしています onblurで呼び出せるのはJavaScriptの関数だけです。phpの関数はブラウザに返しているソースには含まれていませんので、JavaScriptから利用することは出来ません。サーバサイドとクライアントサイドの違いを理解してください。 parseFloatとかあるのでJavaScriptの関数かと思ったのですが、文字列連結などはphpの演算子が混じっているしexplodeはあるし・・・。JavaScriptならJavaScriptで完結させてください。
>while ($row = $stt->fetch()) { >print($row['password']); >} このループを抜けたとき、$row は false です（読むレコードがなくなってから抜けるので）。せめて if ($row = $stt->fetch()) { if($row['password'] == $_POST['password']) { header('Location: ログイン完了画面のページ'); exit; } } print('入力内容が間違っています。'); としてください。 本来は $stt = $db->prepare('SELECT password FROM `information` WHERE (email=:email')and(password = :password)); $stt->bindValue(':email', $_POST['email']); $stt->bindValue(':password', $_POST['password']); $stt->execute(); if ($row = $stt->fetch()) { header('Location: ログイン完了画面のページ'); exit; } print('入力内容が間違っています。'); とするのが一般的だと思います。 というかパスワードをそのまま格納するのはやめましょう。ハッシュを取るとか復号不可の暗号化をするとか（あまりセンシティブなものでなければsha1でもいい）。
whileのところを <?php $day = 1; while ($day < 32){ ?> <td><input type="text" readonly value="<?php echo $day ?>" style="width:20px;"></td> <td><select name="<?php echo $day ?>[start_time]" > <option value="0" > 0</option> <option value="1" > 1</option> </select> : <select name="<?php echo $day ?>[start_minute]"> <option value="00" >00</option> <option value="30" >30</option> </select> </td> <td><select name="<?php echo $day ?>[end_time]" > <option value="0" >0</option> <option value="1" >1</option> </select> :<select name="<?php echo $day ?>[end_minute]"> <option value="00" >00</option> <option value="30" >30</option> </select> </td> <td><input type="text" name = "<?php echo $day ?>[nyuryoku1]" value="" style=width:150px></td> <td><input type="text" name = "<?php echo $day ?>[nyuryoku2]" value="" style=width:150px></td> <td><input type="text" name = "<?php echo $day ?>[nyuryoku3]" value="" style=width:150px></td> </td> </tr> <?php $day++; } ?> のようにname = "<?php echo $day ?>[nyuryoku3]"のような形にします。 角かっこ[]でくくります。 すると$_POSTは以下のように取れます。 Array ( [touroku] => 登録更新 [1] => Array ( [start_time] => 0 [start_minute] => 00 [end_time] => 0 [end_minute] => 00 [nyuryoku1] => [nyuryoku2] => [nyuryoku3] => ) [2] => Array ( [start_time] => 0 [start_minute] => 00 [end_time] => 0 [end_minute] => 00 [nyuryoku1] => [nyuryoku2] => [nyuryoku3] => ) 　： 　：
何かエラーメッセージ的なものはないのですか？ 文法は間違っていないようです。 commitしていないのでrollbackされているかもしれません。 それと、 ＞ラストレコードのカラムを更新すること 違います。全てのレコードが変更されてしまいます。 where photo = $upfilename のようなものが要ります。
>abc.csvファイルが空になって、上書きされてません。 配列の使い方が間違っているかも。 ああ、fputcsv()も1行単位なのか。 サンプルから2次元配列で一気に書き込めるものだと思ってた。 あと、同じabc.csvファイルを書き換えるのであれば、読み書きを分けないといけないですね。 で、最初のfopenは読み込みなので、オプションは"r"にします。 <?php header("Content-Type: text/html; charset=UTF-8"); $linenum = $_POST['num']; $list = fopen("abc.csv", "r"); $i = 0; //行指定が0始まりの場合1始まりの場合は $i = 1;にする $csv = array(); //CSVファイルを1行ずつ全部読み込み while ($line= fgetcsv($list, 1000,",")) { //指定行であれば値を変更する if($i == $linenum) { $line[4] += 1; } //読み込んだ行を配列に保存 array_push($csv,$line); $i++ ｝ fclose($list); //CSVファイルを保存 $list = fopen("abc.csv", "w"); foreach ($csv as $line) { fputcsv($list, $line); } fclose($list); ?> こんなもんでどうでしょう？ 詳しい人なら一発でしょうが、普段はC++、C#しか使わないので・・・。 2次元配列の使い方間違ってたらすみません。
>キーワードの数分いただいた方法をループ処理しようとしましたが それは間違っています。キーワードはいくつあろうがループは一回です。正規表現の「|」を使えばいいだけですよ。orです。ご存知ありませんか？ preg_replaceでも同じなんですけどね。もしかするとpreg_replaceのときもキーワードの数だけループしてたんですか？それは無駄ですよ。 PHP: 選択肢 - Manua http://jp2.php.net/manual/ja/regexp.reference.alternation.php また、もしもキーワードに正規表現のメタ文字が含まれる場合には、その文字をエスケープする必要はあるでしょうけど、そこは大丈夫ですかね。 PHP: メタ文字 - Manual http://jp2.php.net/manual/ja/regexp.reference.meta.php
すでに回答がありますが「phpからjavascriptを実行」は出来ませんね。 ブラウザ側のhtmlソース（静的なものかphpなどで動的に生成しものかは問わない）で動作するJavaScriptがAjax的に（非同期に）サーバに問い合わせてその結果でhtmlソースを書き替えることになります。 で、そのAjaxでの問い合わせに対してサーバからデータを返す部分をphpで作ることになります。おそらくはjson形式にして返すのがJavaScriptで扱うのに楽だと思われますので、そのあたりも学んでみてください。
$tweet['text']=preg_replace("/(http:\/\/t.co\/[a-zA-Z0-9]{10})/", "<a href=\"\\0\"　target=\"_blank\">\\0</a>", $tweet['text']); target の前の空白がマルチバイト文字（いわゆる全角）になっています。そのためtarget属性が（ブラウザに）正しく認識されていません。 $tweet['text']=preg_replace("/(http:\/\/t.co\/[a-zA-Z0-9]{10})/", "<a href=\"\\0\" target=\"_blank\">\\0</a>", $tweet['text']);
三項演算子です。 PHPBook - 三項演算子 http://www.phpbook.jp/tutorial/if/index8.html isset($get_meta[0]) ? $get_meta[0] : null この式は、$get_meta[0] が定義されていて且つ null でないならば $get_meta[0] を、未定義または null でれば null を表すことになります。 なお、もしスーパーグローバル変数に対してこれを適用するのであれば、filter_input関数を使う方がオススメです。記述がシンプルになるだけでなく、意図せず配列をセットされるリスクも防げます。 Qiita - $_GET, $_POSTなどを受け取る際の処理 http://qiita.com/mpyw/items/2f9955db1c02eeef43ea △ isset($_POST['data']) ? $_POST['data'] : null ○ filter_input(INPUT_POST, 'data')
たぶん空白入りの値が POST されているのだと思いますが。 fputcsv する前に、 $val = array_map('trim', $val); で、すべての要素に、trim を適用すれば良いように思います。
FORUM形式でよければphpBBとか如何でしょう。設定が簡単とは言い難いですが、機能的には不足ないと思います。 ＃要MySQLなので、レンタルサーバの選択には注意（有料無料問わず）。
500エラーになるのは、レンタルサーバ側で「.htaccessにその記述を許可していない」可能性が高いです。サーバによってはinclude_pathの設定がコンパネで可能だったりしますが（なので、.htaccessでの記述を不許可にしている）そういうことはありませんか？いずれにしてもサーバ管理者に問い合わせた方が早いです。 まさか行末に改行がないなんてオチはありませんよね（.htaccessは最後の業の行末がEOFだと動作しないのがデフォです）。
POSTされてきたデータをinputタグのvalue属性に書き出せばいいのです。 <input type="text" name="hoge" value="<?php echo $hoge; ?>">
返信が遅くなり、申し訳ありませんでした。 IEでは上手くいって、Chromeでは上手くいきませんか・・・。 逆なら何となく納得できそうですけど。 一応私の方でも簡単にフォームを作って、ご提示いただいているソースに対して postして戻るボタンで戻った場合に、正常に入力データは残っていることは確認できました。 （ IEとChrome両方を試しました。 ） 多分関係ないと思いますが、ご提示いただいているJavaScriptが干渉してしまっているとか？ 一応削除してみてください。 あと、メタ情報に <meta content="86400" http-equiv="Expires" /> を記述するくらいしか、すみませんが思いつきません。
共有サーバであれば同サーバを使っている全ユーザーに影響する可能性があるので 知識のないサポセンだと確認がたらいまわし。 ライブラリをダウンロードして、自信の領域にアップロードしてインクルードパスを通して インクルード
そのURLは所有者が存在するので例示として使ってはいけない 使ってよいのはexample.com preg_match("/^https?:\/\/example\.com\/([a-z0-9_\-]+)\/$/i",$url,$match); $match[1]がユーザーID サブディレクトリがあるなら＄は不要 aaaaaaaaaaaaaaaaaaaaaaaahttpになっていても通るから eden3616さんの回答は不完全 -は特殊文字だから Ogre7077さんの回答は若干間違い 各回答は example9comでも通るから間違い
class Combin { protected $result; protected $datas; protected $num; function __construct($datas) { $this->datas = $datas; } function select($num) { $this->result = array(); $this->num = $num; $this->recursive(array(), 0); return $this->result; } function recursive($buff, $index) { if (count($buff) == $this->num) { $this->result[] = implode('-', $buff); return; } for($i = $index; $i < count($this->datas); $i++) { foreach($this->datas[$i] as $v) { $this->recursive(array_merge($buff, (array)$v), $i+1); } } } } $arr_lst = array( array('aaa','bbb') ,array('AAA','BBB') ,array('111','222') ); $obj = new Combin($arr_lst); print_r($obj->select(1)); print_r($obj->select(2)); print_r($obj->select(3));
まずは $html = file_get_contents($url); を $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $html = curl_exec($ch); に変えるところからどうぞ。これだけでかなり速くなると思います。これで速度が足りなければ fopen で1行ずつ読み込んでいくことも検討しましょう。なお、提示された関数中の文字コードの羅列順序が不適切です（私もググって出てきたってことで以前はこれ使ってましたが、誤りです）。以下に正しい順番に直したサンプルを掲載しておきます。 function getPageTitle($url) { 　　static $regex = '@<title>([^<]++)</title>@i'; 　　static $order = 'ASCII,JIS,UTF-8,CP51932,SJIS-win'; 　　static $ch; 　　if (!$ch) { 　　　　$ch = curl_init(); 　　　　curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); 　　} 　　curl_setopt($ch, CURLOPT_URL, $url); 　　$html = mb_convert_encoding(curl_exec($ch), 'UTF-8', $order); 　　return preg_match($regex, $html, $m) ? $m[1] : ''; } また、そもそも遅い原因が「この関数の実行を繰り返している」ということであれば、今はオーダー表現で表せば O(n) 時間かかっていることになりますが、回線が許す限り O(1) の実行時間にする方法があります。これに該当する場合はその点の補足をお願いします。
phpとは何の関係もない質問だと思いますが・・・ >jqueryを使う際、cssのリンクが含まれている jQueryというかjQueryを使う「何らかのJavaScript」ですよね。それはどういうものでしょうか？で、そのCSSにはどういうものが記述されているのでしょうか？普通は自分自身が扱う要素に対する記述しかしていないので、テンプレートのCSSと干渉しません。テンプレートのCSSと干渉するようなら、静的なHTMLに組み込んでも干渉することになります。
$filenameをshift_jisに変換したらできる気がします。
基本的に業務で行う場合は全部アクセサを設けています。 どんな時でも、メンバ変数をpublic宣言することはしません。 クラス設計として良しとされない方法論は取りません。 大したアクセス数を望めないもの(主にプライベートなもの)はマジックメソッドで処理してます。 それでも、値の設定を行う場合などに特定の条件下でないとセットされないなどの、 制御を必要とする場合はアクセサを個別に実装します。 メンバ変数をpublicにして直接アクセスしようとする実装方法は、単に正しい設計を 無視しためんどくさがり屋か、チームや他社との共同開発経験が浅かったり、 利用側に好き勝手された経験が少ない人だと思います。 多分。 メンバ変数の直接操作におけるメリットは、『生産性は最も高い』でしょう。 その分、その人しかいじれない怖いソースになると思いますが。
具体的に、どういうデータをどういうデータに加工したいか例示した方が より適切な回答を得られるかと
find('first',　のとき、降順設定しないと、取得する先頭１行目は最小値だけど、そこは設定してますか？ ちゃんと最大値を得るようになっていたとして、あとは、cakePHPよりは、MySQL innodb の問題じゃないかな。 http://dev.mysql.com/doc/refman/5.1/ja/innodb-locking-reads.html innodb のtransaction は、defaultは REPEATABLE READ で、select 文でのデータ取得時は、他者に読み書き可能なので、これを防ぐには、先に発行される select文に for update が必要です。これで、他者の読み書きをブロックします。 Modelの findメソッドでは、それを追加するすべはないので（接続先データベースによって対応の違う物は実装されていない） よって、 Model->query(string $sql ,array $placedata) メソッドで直接SQL文を渡して実行することになります。 プレースホルダーも使えるので、pdoでのプレースホルダー指定方法に則って作成するとよいです。 SQL例 SELECT max( number ) as number FROM exsample_models where classification=? and commoncode=? FOR UPDATE;
>しかし、ここでのnumberというフィールドだけきちんと定義されません。 そういうSQL文を書いているからです。 >$stt = $db->prepare('SELECT name, email, password FROM `users` WHERE number = :number'); $row['number']でなく$_GET['number']（同じ内容）を使うか、SQL文を $stt = $db->prepare('SELECT * FROM `users` WHERE number = :number'); としてください。普通は取得する列名を書き出すのも面倒なので select * from ～ としますねぇ（あとで項目が増えても大丈夫だし）。
loadメソッドって、どのクラスのメソッドを利用しようとしてるんでしょう？ エラーが出ている文がどういう記述なのか、それぞれのクラスとメソッドをどのように呼び出してるのかさっぱりわからないので、大方、大文字小文字の間違いで、クラス認識されてない可能性が高そうとしかいえない。 とりあえず、CakeSession の staticメソッドを使えば、ほぼどこからでも、現在の$_SESSION に読み書きできますよ。check,read,writeのいずれかのメソッドを一番最初に呼び出した時点で、session_start() も実行されます（まだどこからもstartしていない場合）。 セッションの基本設定は、通常 core.phpで済んでるはずだから、コントローラーに制御が移ったころには、何時session_start()しても大丈夫なはずなので。 <? /* コントローラーのactionメソッド内、またはview用 ctp ファイル内、モデルメソッド内、その他初期コントローラー呼び出し以降に実行される部分ならいずれでも動作する。 */ $vk = 'hogekey'; $vv = ''; if( CakeSession::check($vk) ){ $vv = CakeSession::read($vk); }else{ $vv = 'hogehoge'; CakeSession::write($vk,$vv); }
105行目 echo '<span>入会日</span>：'.$in_enter.; // 行末のドットいらない。 まともなエディタ使ってりゃ、気づかないはずないんだけど。 https://ja.netbeans.org/ http://www.jetbrains.com/phpstorm/
ご提示のプログラムに、肝心のjavascriptによるアップロード部分がか書かれていませんが、 AJaxによるファイルアップロードは予想以上に大変です。 HTML5対応ブラウザであれば、FormDataオブジェクトが使えるので比較的簡単に送信できます。 http://molaovo.hatenablog.jp/entry/20130111/1357913239 しかしIE8以下のような「旧タイプ」ブラウザは内部でiFrameなどを生成して送信する仕組みを作り込まなければいけません。Flashを使う場合もあります。 クロスブラウザ判定などもあるので、普通はjQueryによるファイルアップロード用プラグインを使います。サーバサイドはそのまま使用できますし、アップロード後の画像表示も自由です。 ttp://webchoko-tips.com/2014/01/jquery-fileupload-summary/
チェックボックスのnameをどうしているかによりますね そもそもチェックボックスはチェックしなければデータが飛ばないので 普通にnameをつけていればissetでチェックすればセットされていないという 分岐にひっかかるでしょう また「hogehoge[]」的なカッコをつけたnameで拡張していれば isset($_REQUEST["hogehoge"])すると同時に is_array($_REQUEST["hogehoge"])もチェックする必要があります その上で、foreachすればいいでしょう 例示のものでいうと ＞if (isset($_POST['required'])) { ＞foreach ($_POST['required'] as $v) { となっているのは if (isset($_POST['required']) and is_array($_POST['required'])) { foreach ($_POST['required'] as $v) { とするか if (isset($_POST['required'])) { foreach (is_array($_POST['required'])?$_POST['required']:array($_POST['required']) as $v) { のようにしておくと汎用性があがります requiredが配列だと確定しているのであれば、手を抜いて if (isset($_POST['required'])) { foreach ((array) $_POST['required'] as $v) { という書き方でも通用します
<input type="submit" value="送信"＞ の最後の閉じカッコが全角になっているせいです。 ※XHTML1.0の場合はimgやbrの閉じスラッシュが必要ですが、HTML4.01は不要です。
フレームワークは、オブジェクト指向を理解した上でないと解析は難しいと思いますよ。 まずは簡単なクラスなどを自分で作ってみたりするのがいいのでは。 フレームワークになると規模が大きすぎて理解に苦しむと思います。 オブジェクト指向をある程度理解したら、PEARとかのライブラリを見るくらいで丁度いいかもしれません。
コントロールパネル→プログラムのアンインストール そこの一覧にインストールしたApacheがあるのでしたら、アンインストールしてください。
他のアパッチが立ち上がってないか確認する。 index.htmlの内容を書き換えて反映されるか確認する。 index.htmlをコピーしてtest.htmlを作成しアクセスしてみる。 index.htmlをindex.phpにしてアクセスしてみる。 など確認してみてください
fputcsvで書き込む。区切りに"\t"を指定してもいいし、標準のカンマのままでもいいです。文字列中にカンマや引用符があってもfgetcsvで読み込めば問題なく再現されます。 http://php.net/manual/ja/function.fputcsv.php http://php.net/manual/ja/function.fgetcsv.php どうしても「今の形式」でやるなら「str_replaceで改行を削除」だけではマズイので $str = str_replace(array("\r", "\n"), "", nl2br(htmlsopecialchars($str, ENT_QUOTES))); としてから書き込むしかありません（表示するときはhtmlspecialcharsを通せないので要注意）。
こちらが参考になると思いますよ。 http://www.notice.co.jp/archives/3262
個人的にはCookBookは入門としては向いてないと思います。 説明が理解し辛いと感じましたので。 本から入るのが分かりやすいかもしれません。 本を立ち読みできる本屋は近くにありませんか？ 実際立ち読みして分かりやすいそうだと感じたら買ってみるのが吉です。 cakephpの大枠が理解できたら自分が作りたいのを作りながら勉強するのが良いかもしれませんね。
http://qiita.com/akisssa/items/342d742c6ce9cd30b050 に PHPでは原則的に未定義の変数の値を取得しようとしたときに Notice が発生して NULL 扱いになるが、参照渡しのデフォルト値の場合だけ例外的にNoticeを発生せずにNULLとして初期化される。 と書いてある。 上記のページに「強引な解決方法」が書いてあるけど、ページ読んで意味や方法が判らない場合は諦めるべし。
register.phpとconfirm.phpの違いがわからない・・・。この二つのスクリプトはどういう使い分けなんですか？ >できればあまりこの形は変えたくありません…。 >action部分をconfirm.phpに変えると、入力値が空だったりするエラー時に >confirm.phpに飛ばないようにする方法が分かりません。 普通「確認画面」は入力内容を表示して、確認ボタン（と入力画面に戻るボタン）だけにします。 ＃locationで遷移させずにregister.phpの中で表示・確認・登録まで ＃やってしまうことの方が多いかな。 最低でもregister.phpで入力が「全部問題なかったら」confirm.phpに遷移すべきです（入力がありさえすれば遷移するというのはダメです）。で、（locationで遷移したらPOSTデータは消えるので）遷移する前にセッション変数にでも入れておいてconfirm.phpでセッション変数から表示すればいいと思います。
各環境のPHPのバージョンは？(この機能5.4からのサポート) http://php.net/manual/en/language.types.array.php#example-102 > As of PHP 5.4 it is possible to array dereference the result of a function or method call directly. Before it was only possible using a temporary variable.
前のページにリダイレクトすれば良いだけでは。
>> ログイン処理をしたあとにもう1つのCookieを送信させるような感じにするのが正しいのでしょうか？ ログイン処理直後です。session_regenerate_idの直前または直後でいいと思います。 >> 変わりに書くということでしょうか？ そういうことになりますね。関数自体は別の場所に記述して、それを呼び出すようにするといいと思います。 (備考) 2つのCookieを使用することに関しては賛否両論あると思いますが、session_startの仕様にかなりクセがあり、こうするのは私はやむを得ないと考えています。たまにセッションの中に有効期限を確保したがる人がいますが、セッションを開始してからセッションの有効期限を変更しようとすると問題が生じるんですよね… IE8でセッションがブツブツ切れる現象について http://blog.ishitoya.info/entry/20090828/1251448876
xdebug自体はよくわからないんですが freebsdで運用しているならportsにdevel/php-xdebugがあるようなので portinstallできませんか？
＞chmod("index.php",606);としても、 chmod("index.php",0606);
100人分やるということは同じプログラムを単に呼び出すだけではできませんよね おそらくユーザーIDを利用して更新したりするのでしょう wgetあたりでidを指定して更新プログラムをよぶならこんな形式になるでしょう #wget ページ/modify.php?uid=xxx なので、cronで複数のwgetを順に呼び出してやるのが妥当です。 他の方の指摘もあるようにそれをまとめて auto_wget.shにまとめて #!/bin/sh wget ページ/modify.php?uid=xxx wget ページ/modify.php?uid=yyy wget ページ/modify.php?uid=zzz という羅列したデータで処理してもいいですし（pathや出力結果は工夫して） サーバーの負荷が耐えられると判断できるなら それぞれをバックグラウンドで並行処理してもいいでしょう
cake1系は買っても無意味なのでやめときましょう。 手順書のような本は存じ上げませんが、結局ドキュメントを読むことになるので、一通り規約など目を通しておいたら良いかと思います。
フォームで送信する際に <input name="a[0]", value="test"> <input name="a[1]", value="test"> って書いたりすると思いますが、同様にcookieに対して setcookie('a[0]', 'test'); setcookie('a[1]', 'test'); とすることも可能です。形を問わず値の個数分だけCookieの発行されたことになります。配列の要素1つ1つに有効期限などが設定されるということですね。 なお、$_GET, $_POST, $_COOKIE, $_REQUEST の値は信用してはいけません。ユーザー側が自由に改竄することが出来るからです。 ・そもそも送信されずに未定義かもしれない ・配列だと思った場所が文字列になってるかもしれない ・文字列だと思った場所が配列になっるかもしれない ・型は正しいけど、想定していないような値かもしれない いろいろなケースが考えられます。これらに対して正しく対処する必要があります。 ・未定義や型の違いだけ対処出来ればいい → filter_input関数を使う Qiita - $_GET, $_POSTなどを受け取る際の処理 http://qiita.com/mpyw/items/2f9955db1c02eeef43ea ・改竄されたら困る → $_SESSION を使う Qiita - リクエストパラメータ・セッションに関するまとめ http://qiita.com/mpyw/items/7852213f478e8c5a2802 …というか、Cookieの発行個数で悩んでいるのであれば間違いなく $_SESSION を使うべきであると言えるでしょうね。 $_SESSION の利用に必要なのはユーザーを識別する「PHPSESSID」という自動発行されるCookie1つだけで、あとは全部サーバー側に情報が保存されます。
サブクエリなどもあるので、先頭がSELECTかどうかだけを判定するだけではさすがに不十分すぎます。オススメの方法としては、MySQLを捨ててSQLiteを使うことです。SQLiteであればユーザーごとにファイルを生成することができ、個別のデータベース空間を与えることが出来ます。この状態であれば何されても特に問題はありません。（重いSQL実行によるサーバー負荷とかは注意） PHPでデータベースに接続するときのまとめ http://qiita.com/mpyw/items/b00b72c5c95aac573b71 ・mysql_query関数は問答無用でやめましょう… ・ユーザーが実行不能なSQLを投げてくることも想定し、「PDO::ERRMODE_EXCEPTION」を有効にしておき、例外を捕まえられるようにしましょう。
$dbh がどういうオブジェクトなのか書かれていないので、どのAPIなのか（どういうプロパティ・メソッドがあるのか）わかりません。なので「どの手法でもできるやり方」で・・・ ループの前にprintしようとすると悩みます。1件目の表示をする直前に行えばいいんじゃないですかね。 $count = 0; foreach ($dbh->query($sql) as $row) { 　　if ($count++ === 0) { // ++を後置しているので、比較は加算前の値で 　　　　print "条件の合うレコードがあったら表示させたいヘッダ部分。"; 　　} 　　$row の内容を表示する } ループを抜けたあとで、対象データが1件もなかったときに何かを表示したいケースにも対応できます（ $count === 0 でチェック）。 （蛇足） >$sql = 'SELECT * FROM game WHERE scorer LIKE '.$scorer; SQL文がヘンですけど・・・。likeなのに%もないし、そもそもプレースホルダを使わないんでしょうかねぇ・・・。
拡張子が「.html」などであっても、ブログ運営においてデータベースはほとんどのケースで使われています。URLは見かけ上の存在でしかない場合があります。以下に例を示します。 【例】 (URLエンコードは省略しています) 1. 以下のようなURLでユーザがアクセスしてくる http://blog.example.com/programming/PHPはじめました！.html 2. サーバー側でリクエストURLが書き換えられる http://example.com/blog.php?category=programming&title=PHPはじめました！ WebサーバーソフトウェアにApacheを利用しているのであれば、.htaccessというファイルに設定を記述することでこのような機能を実現することが出来ます。URLがきれいになるメリットががあります。 では、データベースを使う場合と、XMLファイル等に保存する場合を比較してみます。 【データベース】 ・セキュリティ的に強固。 ・複雑な検索の実装が比較的容易で、実行速度も申し分ない程度に可能。 ・後から仕様変更などの融通が利く。 ・単純なことしかしない場合の性能は劣る。ただ、キャッシュをうまく使えばこの限りではない。 【XMLファイル】 ・ファイルを設置する階層、アクセス権限などに注意しないと脆弱性となり得る。 ・検索機能の実装が困難。 ・仕様変更に弱い。 ・単純なことしかしない場合の性能は抜群。 何でもかんでもリレーショナルデータベースに頼りすぎるのはよくない、とよく言われますが、個人で小規模なブログを運営するだけであれば戸惑いなくそれを採用すべきであると言えるでしょう。小規模であればパフォーマンス面の心配はほとんど不要です。 PHPからデータベースを利用するサンプルを探すと、古い情報がよく出てきます。こういうものはセキュリティ的に問題があったりするので使わないようにしましょう。 ・「mysql_query」などの関数 → 現在は非推奨。絶対に使ってはいけない。 ・「mysqli_query」などの関数 → 使ってもOK。但し、後述するオブジェクト指向で書くやり方に比べれば古典的な方法になり、コードが汚くなりやすいため、あまりおすすめは出来ない。ただ、オブジェクト指向が全く分かっていない初心者でもとりあえず動くものは作れるというメリットはある。 ・「mysqli」クラス → 推奨される。上記のオブジェクト指向型。設定次第で例外を扱えるようになる。 ・「PDO」クラス → 最も推奨される。mysqliクラスよりも構成がシンプル。これを覚えるだけでMySQL以外のSQLiteなどの他のデータベースの操作も習得したことになり、汎用性に優れる。設定次第で例外を扱えるようになる。 MySQL入門 http://www.ipa.go.jp/files/000018731.pdf PDO http://www.php.net/manual/ja/book.pdo.php PDOの利用 http://www.phpbook.jp/tutorial/pdo/ PHPオブジェクト指向入門 http://qiita.com/mpyw/items/41230bec5c02142ae691 PHPでデータベースに接続するときのまとめ http://qiita.com/mpyw/items/b00b72c5c95aac573b71
controller側のコードがおかしいのではないでしょうか。 可能であればcontroller側のコードを貼り付けてみてください。
phpinfo()でmysqlやmysqliがきちんと組み込まれているか確認してください また、過去の書き込みを見る限り config.inc.phpのパーミッションを644にするとなおったという 指摘もあるようです。
いいえ、不要ですです。トランザクションは使えば使うほどパフォーマンスが悪くなるので、使用は最低限に抑えましょう。 （蛇足） >> if (!$ret) { >> throw new Exception('INSERT 失敗'); >> } executeの返り値をチェックして自分で例外を投げるのは二度手間です。PDO::ERRMODE_EXCEPTIONを有効にしましょう。 【推奨される書き方(もしトランザクションを使うのであれば)】 try { 　 　$dsn = 'mysql:dbname=〇〇〇;host=〇〇〇;charset=utf8'; 　$user = 'user'; 　$pwd = 'pwd'; 　$options = array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION); 　 　$pdo = new PDO($dsn, $user, $pwd, $options); 　$pdo->beginTransaction(); 　try { 　　 　　$sql = 'INSERT into table (test1, test2, test3) VALUES (:a, :b, :c)'; 　　$st= $pdo->prepare($sql); 　　$st->execute(compact('a', 'b', 'c')); 　　$pdo->commit(); 　　 　} catch (PDOException $e) { 　　 　　$pdo->rollBack(); 　　throw $e; 　　 　} } catch (PDOException $e) { 　 　echo 'Error: ' . $e->getMessage(); 　 }
ANo.1の方とほぼ同意見です。 ＃質問者さんは気に入らないようですが、理解できていないのは質問者さんだけ ＃だろうと思います（多少なりともソースを書く人間なら意味がわかること）。 >サーバーで受けて、金額を計算して、クライアントに >返すソースって下記の文が基本ですか。 レベルが違い過ぎます。提示されたソースを何度読んでも「金額を計算してクライアントに返す」ことは出来ないと推測されます。最低限 http://www.phpbook.jp/tutorial/ http://www.phpbook.jp/appli/ http://dotinstall.com/lessons/basic_php_beginner http://dotinstall.com/lessons/basic_php_advanced を全部読み終えてからの話になります。 そもそも「金額を計算」といいつつ、formから何がPOSTされるのか（内包するinput要素が何なのか）すら提示されていません。数量は当然ですが、単価を引っ張ってくるための品番はPOSTされるんですよね？それを元に単価を取得するためにはデータベースを使う？CSVなどのテキストファイル？ 何一つ仕様が決まっていないのに「どうすればいいか」なんて回答出来ません。ソースを書く前に「設計」という作業をしてください。 >計算表に罫線を入れる場合は、どうすればいいのでしょうか。 そういうhtmlソースを組み立ててブラウザに返すことになります。まずはhtmlソースが思い浮かばなければ、それを（phpで）動的に生成することは出来ません。htmlをちゃんと学んでください。webアプリである以上、htmlやcssを覚えないでプログラミングは出来ません。 逆に「htmlがわかっている」ならば「そういうソースになるようにphpで書いていくだけ」です。
以下のリンクに全てまとめてあります。 Qiita - PHPでデータベースに接続するときのまとめ http://qiita.com/mpyw/items/b00b72c5c95aac573b71 【失敗したときにどうなるか】 PDO::ERRMODE_EXCEPTIONが有効 → PDOExceptionがスローされる PDO::ERRMODE_EXCEPTIONが無効 → executeの返り値がFALSEになる 返り値を毎回チェックするのは億劫なので、connectDb()の中でこのオプションを有効にしておくことを推奨します。 また、片方だけ失敗したら困る場合には「トランザクション処理」を行います。PDOExceptionをスローするように設定してある場合、Try～Catchを２重に設けて、内側でロールバックを実行する必要があります。（このあたりも記事に全部書いてるので読んでください。）
protectedやprivateにはメソッド経由でしかアクセス出来ません。 「title配列」が何を指しているのかよく分からないので「data配列の中のtitle」と仮定します。 $obj->getTableMetaData()->getTableName() 備考: http://phpunit.sourcearchive.com/documentation/3.3.16/classPHPUnit__Extensions__Database__DataSet__DefaultTable.html http://phpunit.sourcearchive.com/documentation/3.3.16/classPHPUnit__Extensions__Database__DataSet__DefaultTableMetaData.html
今回のような単純な２次元配列であればarray_mapをつかって行列を入れ替えることができます。 <pre> <?PHP $a=array( "hidden_name"=>array("test.jpg","test.jpg","test.jpg","test.jpg","test.jpg") ,"number"=>array("8","4","14","14","15") ,"comment"=>array("test1","test2","test3","test4","test5") ); $b = array_map(null, $a["hidden_name"], $a["number"], $a["comment"]); print_r($b); foreach($b as $c){ print implode(",",$c)."\n"; } ?> </pre>
>ファイル名の拡張子を、.PHPで保存してプレビーで見ましたが >駄目です。ｅのボタンを押して見ましたが、はやり駄目でした。 「eのボタン」って何ですか？ http経由でアクセスしていますよね？サーバ（phpが動作する）にアップロードしてアクセスしているか、ローカルにxamppなどでApache+phpが動作する環境を作ってhttp://localhost/・・でアクセスしているかのどちらかでないとダメです。phpは「サーバサイドスクリプト」なので、サーバで動作します。クライアントからサーバに（httpで）アクセスする仕組みがないと動きません。
もちろん基本的なセキュリティ対策は当然として、問題ありません。 毎回取得すると分かり切っているようなユーザの基本的な情報、例えばidの他、name,メールアドレス(よく使用するなら),ロール(権限の種類)や所属,ログイン成功時のIP、その他POST送信時のトークン、Referrerとして現在のURLなどを入れたりします。 質問者さまの場合、idやname、dir は適当だと思いますが、記事の方は持ち回るにはデータが大きい割に使用するかどうかも分からないのでセッションに入れるには不適切かと。 こちらはこれまで通り、必要な場面でDBから取得すればよいのではないでしょうか。 また「ユーザ情報をセッションに格納するのはログイン成功時のみ」に限るので、用済みになるパスワードは暗号化されているかどうかにかかわらず不要なので保持することはありません。
>172にシンタックスエラーがあると表示されます。 >172行目がfile_put_contents($name_file,$name_log); 1行前の 　　　　//ファイルへ保存 // の左側にマルチバイト文字（いわゆる全角）の空白が入っています。 // も左側はコメントでも文字列リテラルでもないのでマルチバイト文字は厳禁です。 そもそもasciiの空白とマルチバイト文字の空白が見分けられるエディタを使うべき。
＞なのでこの方法だとデータにない月、日のみ選択され検索される可能性もあります。 なるほど・・・ そういうことであれば、ajaxをつかって、年、月、日のどれかが選ばれた時点で 裏で問い合わせをして、ヒット件数を表示するというのがベターだと思います ajaxについては少し学習が必要ですが、慣れればさほど苦にはならないはずです
＞　サバーソフトということは、そのアパッチを現代使っているwebサーバーに組み込むってことですよね。 ＞　私はサーバーをレンタルしているんですが、その場合、ｐｈｐは出来ないってことでしょうか？ レンタルしているサーバにWebサーバとの機能が有るのであれば、アパッチが入っている可能性が高いと思います。 Webサーバソフトはアパッチ以外にも数種類存在しますが、アパッチのシェアは高いので高確率でアパッチが使用されていると思います。 PHPが利用できるかどうかは、サーバにPHPがインストールされているかどうかで決まります。 サーバの機能一覧等を確認するかサポートに問い合わせてPHPが利用可能か確認しましょう。 利用可能であれば、PHP言語で書いたプログラムをサーバにアップロードすれば動くと思います。
マルチバイト文字をhtmlspecialcharsでエスケープするときは クォートのタイプや、文字コードまで渡してやるとトラブルが減ります。 また、postで送られてくる生データあくまでもエンコードされたデータでしかないので それをphp側で最大限解釈しているものです。 生データを確認する場合はこんな感じで行います <form method="post"> <input type="text" name="hoge" value="<?php print htmlspecialchars('<p><a href="./">TOPに戻る</a>',ENT_QUOTES,'UTF-8'); ?>"> <input type="submit" value="送信"> </form> <?php if(isset($_POST)){ $rawpostdata = file_get_contents('php://input'); print $rawpostdata; } ?>
空だったときに何をしたいんですか？ このprint()文の情報はでていいのでしょうか？ 仮に出るとすると、<a>要素が空の文字で出ることになりますが、いいのでしょうか？ > print( $_GET["dis"][2] == "blood" ) ? '<td><a href="http://○○.com/">'.$row['blood_type'] . > '型</a></td>' : '' ; 三項演算子使ってるし、$row['bood_type']についても三項演算子使えば済むのでは。 print( $_GET["dis"][2] == "blood" ) ? '<td><a href="http://○○.com/">'. ($row['blood_type'] == '' ? $row['blood_type'] . '型' : '') . '</a></td>' : ''; こんな風にごちゃごちゃなるくらいなら、1つ1つロジックで処理した方がいいと思いますが。 if ($_GET["dis"]["2] != "blood") { 　return; } $htmlTag = '<td><a href="http://○○.com/">%s</a></td>'; echo sprintf($htmlTag, ($row['blood_type'] != '' ? $row['blood_type'] . '型' : '')); みたいな。
