すいません。思い込みでちゃんとコードを見てませんでした。お恥ずかしい。 (0..2).each do |i| ～ end ですね。
こんにちは。 test.rbの中身、下記のようにしてみてください。 #!/usr/bin/ruby puts "hello" で、ruby test.rb と。
bashを使っているなら、 その前で、vi ~/.bash_profile を行っているようなので、source ~/.zshrc でなく source ~/.bash_profile を行ってください。 zshを使っているなら、vi ~/.zshrc で編集してから、source ~/.zshrc を実行してください。 これを書いた人は、最初 zsh を使う前提で書いていたのを途中で bash を使う前提に方針変更して（あるいはその逆）、その際の修正漏れでしょう。 そもそも ~/.bash_profile でなく、~/.bashrc の方が良いと思います。他の部分は見てませんが、他にも改善すべき記述があるかも。 コマンドを実行する際には、このコマンドがどういう意味を持っているのかを理解してから進めましょう。
自分が分かってないだけならごめんなさい、 特異クラス、Mage、Stringの順番ですよね？ Mageモジュールの方が浅いですよね？
とりあえず_flgカラムに一票ですかね。 どうしてもpublicedとかは条件判定用メソッドに使うイメージが強いですね。
HTTPというステートレスなプロトコルでログイン状態かどうかを判断するための 情報は一般にCookieでやり取りされます。 Railsなどのサーバはブラウザから送られてきたCookieを見てログインしているか どうかを判断します。 ブラウザはタブをまたいでCookieを共有するのが一般的なので、サーバ側でこれを 制御するのは「原理的に」不可能です。 せいぜいクライアントを使用するユーザに必ずログアウトするように指導するぐらい しか手はありません。 これはRailsに限った話ではなく、PHPでも何でも同じです。
不勉強ですみまっせん。WINDOWS環境ではrubyがワイルドカードを処理してしまうんでしたね。 ＞'a*' 'b*' ＞でよいのかと思いましたが、それではだめなようです。 直接rubyの引数にする場合はrubyマニュアルに書いてある通り、上記でよいのですがね。 ruby hoge.rb 'a*' 'b*' を実行してみると分かると思います。 ダブルクォートとシングルクォートを同時に使用するとうまくいかないようなので、以下のようにrubyに渡す際、シングルクォートだけ使えばうまくいくのではないでしょうか？ ＝＝＝ SET A=a* b* CALL :LOOP %a% GOTO :EOF :LOOP IF "%~1%"=="" GOTO LOOPEND ruby hoge.rb '%~1' SHIFT GOTO LOOP :LOOPEND GOTO :EOF ＝＝＝
> Rubyのトップページからzip版をダウンロードして「7Zip」で解凍し、 Rubyのトップページと言えるのは https://www.ruby-lang.org/ja/ だけですが、そこにはZIPファイル等ありませんよ。何か変なサイトを見ているのでは？ トップページから、ダウンロードをクリックして、「Windows版Rubyバイナリ」のところにある ActiveScriptRuby もしくは RubyInstaller のインストーラーを使ってください。 それ以外の方法でWindowsにRubyをインストールしようとする人がいるとは思いませんでした。
hello_world.rb と保存しているファイル名を hello_trema.rb へと変更して trema run hello_trema.rb と実行するか、 または、 hello_world.rb と保存しているファイル名をそのままにして trema run hello_world.rb と実行することで、表示されないでしょうか。
「Selenium::WebDriver::Firefox::Binary.path=」 に firefox portableのPATHを通すような形ではどうでしょうか？
fugaがクラスメソッドではなく、インスタンスメソッドとして定義されているのでその辺りで動かなくなっている感じですね。 Object#extendメソッドを使ったり幾つか回答がありますが、最小限の変更でやるなら下のようにnewメソッドでインスタンス作成をやる形で１箇所修正をかけるだけでいけそうですね。 class Hoge def fuga 1 end end class Hoge if self.new.fuga == 1 def piyo puts "foobarbaz" end end end # Hoge.new.piyo # これで実行確認。うまく動きました
Cloud9はよく分かりませんが、記載いただいた事象が発生している間に、 $ rails server -b $IP -p $PORT を別で実行したままの状態ではないでしょうか？ もしそうであれば片方を停止する必要があります。
質問文では rails s -p /PORT -b /IP となっていますが、リンク先を見る限り各パラメータは$PORT、$IPが正しいようですがそこは問題ありませんか？ また、 echo $IP および echo $PORT と打ってみて各値が確認できるか試してみてください。
私はあまり詳しくありませんが・・・ >>こういったサイトを作るには、やはりRubyを知っておくと良いのでしょうか？ Ruby on Railsが登場したころ、Javaで初心者が作ったら、１ヶ月かかるようなサイトでも、３０分で作れる、高速開発が可能となる言語というかフレームワークだと話題になりました。 私は、勉強用のサイトを開発したり、お仕事でRuby on Rails開発を行なったことあります。 そのときの業務開発では、なかなか思ったような動作をさせるためには、調べることが多く、必要な情報は全て海外サイトからしか得られない状況でしたから、「高速開発」は可能になりませんでした・・・。 その経験からすれば、Ruby言語とか、フレームワークの勉強になるので「知っておくと良い」とはいえますが、「高速のＷｅｂ開発をする」という目的であれば、なんとも言えません。 ただ、Ruby言語と、Ruby on Railsのフレームワークをしっかり勉強して詳しくなれば、速い開発が可能になると思います。 >>オススメの本とかありますでしょうか？ 私がRuby on Railsでの開発を行なってから、しばらく時間が経過しているので、バージョンが上がっていると思います。 ですので、お勧めという本は私にはありません。
Atom自体はプログラムを書くツールで、プログラムを実行するツールでは無いので論点が少しずれていますね。 あなたの、実行環境の情報、具体的には OSはWindows,Mac,Linuxかを指定して、質問し直していただけると幸いです あえて、エスパー予想で回答しておくと Windowsでrubyだけ勉強したい場合はruby installerがオススメかなと思います https://www.ruby-lang.org/ja/documentation/installation/#rubyinstaller windows環境でRuby on RailsでWebサイト作りたいというサイズまで行くとwindowsだと色々問題が起きるので、VirtualBoxなどの上にLinux環境を構築して、そこにinstallすることをオススメします。
まず、ブラウザ側からブラウザを閉じた時にサーバへ「閉じますよ」という通知を送らなければサーバサイドでブラウザが閉じられたかどうか判別できませんので、ブラウザの改造が必要になります。
SQLで書くのなら、NOT EXISTSを使えば1つにできそうなのですが、　 RailsのActiveRecordでは無理なようです。 Arelで可能なようですが、かなり分かりにくいコードになってしまうようです。 分かりやすさと速さから見て、No.2のコードが良さそうです。（ちゃんと動きますよね） 興味がありましたら、上のキーワードで検索してみてください。 ActiveRecordは検索結果をRuby変数に変換する時にでデータ量が多いと遅くなります。 今回の場合はデータ量が少ないと思いますので、速度にはあまり影響しないと思います。
Atomとかどうでしょうか？ https://atom.io/ 日本語化のプラグインもあるようです。 http://syonx.hatenablog.com/entry/2015/04/06/233111
こういう時は最終的に出力されたHTMLを確認しましょう。 ・単純に id="course_id" がそのページ内の別のところにもあったりしませんか？ ・scriptタグは意図した通りに出力されていますか？ ・selectタグは意図した通りに出力されていますか？ ・jQueryが読み込まれてからそのscriptは実行されていますか？
こんにちわ。 参考URLにActiveDirectoryで認証する方法が記載されておりました。 こちらで試してはどうでしょうか？ -------------------------------------------- net_ldap = Net::LDAP.new( :host => host, :port => port, :auth => { :method => :simple, :username => "#{user}@#{domain}", :password => pass } ) --------------------------------------------
関連付けについてですが、Rubyのインストーラーでインストールする時に.rbに関連付けるオプションがあるようですので、それを使うのが一番簡単だと思います。 自力で関連付けをするWindows標準の方法としては、XPかVista以降かで少し違いがあるのですが、Vista以降の場合、 １．.rbファイルを右クリックしてファイルのプロパティを出す ２．全般タブ→プログラムの横にある「変更」ボタン ３．どのプログラムを使用しますか？と出るので、 　　ａ．Rubyがあればそれを選択 　　ｂ．なければ、一番下までスクロールして「その他のオプション」 ４．リストが更新されるので 　　ａ．Rubyがあればそれを選択 　　ｂ．なければ、一番下までスクロールして「このＰＣで別のアプリを探す」 ５．ファイルダイアログが出るので、ruby.exeを探して選択 で、多分いけると思います。 ただ、この方法で関連付けした場合、hello_world.rbをクリックしても黒窓が一瞬出て終了してしまうと思われます。 この動作が望ましくない場合もあると思います。 （手軽な対策としては、スクリプト側で一番最後にgetcとか適当に入力を取る方法があります。） で、一番柔軟なのがレジストリを直接編集して関連付けを設定する方法なのですが…。 軽く探してみたのですが、イマイチわかりやすそうな解説ページがありませんでした…。 直接解説してさしあげたいところなのですが、ちょっとテストまでしてる時間がないので、すいませんが私からは割愛させて頂きます。('Д`；)モウシワケナイ （さすがにこれを解説するには、自分でちゃんと上手くいくか確認しないとマズイですので…）
「Windows Vim」で検索すると分かると思います。 まず、ご自分のパソコンのWindowsが「32bit」か「64bit」か調べてください。 あとは、 http://www.kaoriya.net/software/vim/ から、ダウンロードできますし、 http://www.atmarkit.co.jp/ait/articles/1008/17/news097.html や http://qiita.com/hide/items/735bb2fc954b17bf410f などを見てみてください。
gemの名前typoしていますね。 device -> devise このレベルは自力で解決を目指しましょうか。 といいつつ、また困ったことがありましたら答えるつもりですけどね。 http://ruby-rails.hatenadiary.com/entry/20140801/1406907000 https://github.com/plataformatec/devise
業務でrails漬けになって４、５年経ちますが 他社でも自社でも圧倒的にdeviceで他を使っている人は見かけませんね カスタマイズの手が込んでくると、deviceは設計のパッチワーク感がたくさん見つかるので好かんのですが 知見の溜まり方が全然違うので、device一択でしょうね。 またdeviceで困ったことがありましたらここで聞いていただければ良いと思います。
列ではなく、「1行目だけ取り出したい」のですね。 ただ単に次でOKです。 file = File.open("a.csv","r") puts file.gets() file.close()
＞1.Rubyではその様な問題がなく動作するのは、何故でしょうか？ Rubyだと、戻り値は、ローカル変数のアドレスでは無いからです。 Cだと、mallocしたエリアのアドレスに相当します。 ＞2.また、メソッド内で宣言したオブジェクト(上記[1,2,3])の寿命はいつまでなのでしょうか？ オブジェクトの寿命は、変数のスコープとは無関係です。そのオブジェクトのへの参照が０個になると寿命が尽きます。メモリエリアが回収されるのは寿命が尽きた後のガベージコレクションの時です。 a=[1,2,3] #=> 参照が1個 b=a #=> 参照が2個 a=3 #=> 参照が1個 b="A" #=> 参照が0個 →この段階でオブジェクト[1,2,3]の寿命が尽きる 「寿命」という言葉の定義によっては、参照が0個になった後のガベージコレクションの時点という人もいるかもしれません。
文章の検索方法ですが、実際には *SQL文を作ってデータベースに問い合わせをする *全文検索エンジンに問い合わせる 上のいずれかになると思います。 今の状態だと、Webサイトの作製法自体を教える必要がありそうですが プログラム言語の知識以外に、サーバーの構築・運用やWebフレームワークの使い方等伝えるべき分量が半端ないので、そのあたりはスキップして、検索部分だけ、簡単に説明だけします。 検索機能などを実装している、Webサイトだと、実際の文章のデータなどは、すべてデータベースに格納されているが普通なので、SQLというデータベースへの問い合わせ言語を使って、データベースに問い合わせて返ってきた結果を、Webページに表示します。 例えば、商品一覧(products)の商品説明(content)か商品名(title)に「美白」が含まれているものを探してくる場合は、次の様なSQLを送って、結果を返してもらいます。 SELECT id,title,content FROM products WHERE title LIKE '%美白%' OR content LIKE '%美白%'; ただ、SQLのLIKE文で検索を行う場合、データベースのデータを全部なめて探すのは負荷のかかる作業なので、数十万件という多くの商品のあるシステムの場合は、全文検索エンジンというシステムを使って、あらかじめ、単語毎に検索結果をまとめておいて、そこに対して検索をかけるのが一般的ですね。 代表的な全文検索エンジンは、やはりSolrでしょうか。 http://ja.wikipedia.org/wiki/Apache_Solr 個人的にはSQL文の検索で動くシステムを作って、その後、切り替えるべきならSolrに切り替えていくといいと思います。
＞質問１： ２行目は「マジックコメント」と言う。 「coding:utf-8」は、ソースコード上の「非ASCII文字」のエンコードがUTF-8であることを指定する。 つまり、ソースコード（プログラムのテキスト）の漢字がutf-8で書かれている事を指定する。 プログラムが扱う非ASCII文字のエンコードは関係ない。 例えば、ソースコード上に str = "漢字" と書かれていた場合、このマジックコメントが無いと、エラーになる（当然、ソースファイルはUTF-8で保存すること） 「mode:ruby」は、完全に「おまじない」で、rubyで動かすソースにはこう書く。 「うっかりPythonにソースコードを食わせちゃった時に、Pythonがエラーで止まって実行しない」って意味があったりなかったりするが「そういうもんだ」と思っておこう。 ＞質問２： kconvをrequireすると String#iseuc String#isjis String#issjis String#isutf8 String#kconv String#toeuc String#tojis String#tolocale String#tosjis String#toutf16 String#toutf32 String#toutf8 のメソッドが使えるようになる。 mojiをrequireすると Moji.type Moji.type? Moji.zen_to_han Moji.upcase Moji.kata_to_hira などの関数が使えるようになる。 ＞質問３： ５行目は、rubyの入出力が（と言うか、記述したプログラムの入出力が）utf-8で行なう事を強制している。 コンソールのロケールに関する環境変数がきちんと整っているなら不要。 逆に言うと、コンソールのロケールに関する環境変数を無視して、コンソールのエンコードと異なるエンコードで入出力する際には指定が必要。
default_externalのエンコーディングがUS-ASCIIになっているからですね。 hello.txtの文字コードがutf-8だとすると、 export LANG=ja_JP.utf-8 ./test.rb と、環境変数LANGをセットしてスクリプトを起動するか、 スクリプトの冒頭で、 Encoding.default_external = "utf-8" と書くか。
手元の開発中のコードを下敷きにして 以下の様に書いたら普通に動いたのですが そちらのブラウザは何だったのでしょうか？ こちらは、FirefoxとChromeの最新版で動作確認を行いました。 $("#question_title").on("keyup",function(){ $("#question_category_id").val($(this).val()) });
gemはgemファイルからインストールできるので https://rubygems.org/ などでインストールしたいgemとそれに依存するgemをすべてダウンロードしていれればいいと思います。 例：rails-4.2.1.gemをダウンロードしておいた場合 gem install rails-4.2.1.gem 開発環境で動いているGemfile.lockを見れば必要なバージョンはわかると思います。
＞ puts $_ if $_ =~ /キーワード/ と同じ内容にしたいのなら、 puts $_ if $_ =~ /#{key}/ です。 ＞ puts $_ if $_ =~ /"#{key}"/ だと、 puts $_ if $_ =~ /"キーワード"/ と同じです。
＞　Rubyは端末にインストールしてあるので、Windows上で動いております。 ＞　PHP、Apacheはサーバーなので、CentOS上で動いてます。 ＞　端末のWindows（IE）からサーバーのIPでメインのPHPを見に行ってます。 であれば、MifareのリーダーにアクセスするIE用のプラグインを用意して、カードをかざしたら読み取ったIDをWebページのフォームに入力し送信する仕組みを作る事になるでしょう。 IE用のプラグインを用意できない場合は、利用者にコマンドラインでIDを確認して入力して貰う事になってしまうので、現実的ではないですよね。
jQueryを用いてパッと実装するならこうします。 テキストフィールドはfruitsuTextというIDを振っているとします。 jQueryは別途読み込んでください。 $(function() { $('#fruitsuText').on('change', function() { $('#fruitsu').val($(this).val()); }); });
http://js.studio-kingdom.com/jqueryui/widgets/datepicker の「日本語化」の部分が参考になるかもしれません。
自分の前例ですが・・・ ・Rubyレシピブック（リファレンスブック的に使用）　 ・RailsにおけるアジャイルWebアプリケーション開発（Webアプリケーションを作りたいなら） とかですかねー
このあたりでしょうか。 http://magazine.rubyist.net/?0011-CGIProgrammingForRubyBeginners ＞この連載は Ruby も CGI も知らないけれど、CGI プログラムを作ってみたいという人を対象に、Ruby プログラミングの基礎とともに CGI プログラミングを解説します。 ＞筆者としては CGI プログラムを作ってみたいけど、どうやって作ったら良いか分からないという人に読んでもらいたいと思っています。
＞64bitのPCで32bitのRubyは使えないでしょうか？ 64bitのWindowsでも特別な理由の無い限り、Rubyは普通は32bit版を使うと思います。 32bitと64bitでライブラリの互換性が無いので、64bit版だと今回のようにあれが使えないこれが使えないとか言う状況になります。 あと数年はそういう状況が続くのではないかと思います。 64bitWindowsでも、IEもMSOfficeも普通は32bit版を使いますよ。
ファイルの復号　decrypt.rb のほうですが、 require 'openssl' が抜けています。 # encoding: cp932 の次の行へ require 'openssl' を追加してください。
Net::HTTPクラスのインスタンスメソッドでheaderを送れます。 http://docs.ruby-lang.org/ja/2.0.0/class/Net=3a=3aHTTP.html 例えば、 get(path, header = nil, dest =nil)で headerを {'User-Agent' => 'xxxxx', 'Referer' => 'http://www.example.com/referer'} で可能なようです。
＞無事正常に出力されましたが、この書き方であってますでしょうか。 良いと思います。 エンコーディング変換の別の方法は、あらかじめ、 STDOUT.set_encoding("CP932") としておけば、あとは単に puts すれば自動的に変換してくれたりもします。 また、出力先が、ファイルやパイプで無くコマンドプロンプトのコンソール表示の場合は、 ユニコードのままで、よしなに表示してくれます。 ＞変換できなかった文字は「-」で、「？」で出力されました。 特定の文字だけおかしいなら、その文字を tr しておけばいいと思います。 それ以外の変換不能文字が今後出てて来るかもしれないので、 :replace=> は無指定もしくは"〓"(下駄記号)のように明らかに変換不能とわかる方がいいです。
テキストエディットから、現在のコードを確認するのはちょっと大変です。 他のテキストエディタを使って開いてみてはどうでしょうか? 例えば mi http://www.mimikaki.net/ などが定番で、これだと、自動判定もテキストエディットより優秀だし、失敗しても手動で変更できます。 文字コードが確認できたら、それが期待するものなのか、違うものなのかを確認します。 期待するものなら、テキストエディットで自動判別できないだけです。 期待と違うものなら、 File.open("test.txt","w") で、出力文字コードを指定するようにます。 http://docs.ruby-lang.org/ja/1.9.3/class/IO.html 例: 期待する文字コード: UTF-8 text.txtの文字コード: UTF-8 　なら、テキストエディットで自動判定できないだけ。 期待する文字コード: UTF-8 text.txtの文字コード: EUC-JP 　なら、UTF-8で出力するように File.open("test.txt","w:utf-8") 等と指定する
こんにちは > `gsub!': incompatible encoding regexp match (UTF-8 regexp with Shift_JIS string) (Encoding::CompatibilityError) contentの文字はShift_JISなのに、gsubの引数はUTF-8なので一致していないというエラーです。なので、一致させてあげましょう。 content = io.read.encode('utf-8') # contentの文字エンコードをUTF-8に変換
正確にいうと attr_reader を使うことで「ゲッターのついたインスタンス変数が定義できる」だな. で, 例えば attr_reader :x とした場合, このインスタンス変数 @x の値を得るためのゲッターの名前はなにになると思う?
rbファイルを順に起動するスクリプトを作成し、そのスクリプトをタスクスケジューラに登録すれば 良いでしょう。 但し、以下の条件が成立することが前提です。 １．rbファイルは、同じフォルダ内に格納されている。 ２．そのフォルダ内のrbスクリプトは、全て、定時起動の対象である。 ３．そのフォルダ内のrbスクリプトは、全て、起動時に同じパラメータを指定すればよい。（又はパラメータは不要） 上記の条件が成立しない場合は、そのrbファイルのみ、イレギュラー処理が必要になります。
No1.です。 EDINETらしいことは分かったので、「公告閲覧」で出てきたページの例を書いていきます。 ソースコードをEDINET.htmlでファイルとして保存している場合は以下のプログラムで表の中身を取り出せます。 表が2つあったので、二番目の表とするより <DIV class="result"> の直下の表として取り出しています。また、テキスト部分に\tなどやたらあるのでそれを取り除いています。 require 'nokogiri' doc = Nokogiri::HTML(IO.read("EDINET.html")) div_result=doc.xpath('//div[@class="result"]') table=div_result.xpath('table') rows=table.xpath('tr') results=rows[1..-1].collect{|row| columns=row.xpath('td') columns.collect{|c| c.text.delete("\t\r\n")} } p results
HTMLの内容を解析して、必要な箇所を抜き出すなら、HTMLパーサーを使うのがいいと、私も思います。 それは別の話として。 とりあえずは、理由をはっきりさせましょう。 ○期待する動作 ・1行ずつ確認する ・特定の文字列があったら、表示開始状態にする ・特定の文字列があったら、表示終了状態にする ・表示開始状態～表示終了状態だったら、現在の行を保存する ・表示終了状態だったらループを終了する。 ということのようです。 説明のある「現状」から考えると ・保存が開始できているので「特定の文字列があったら、表示開始状態にする」は正しくできているようだ ・終了しない、ということは 　・終了状態にできていない 　・現在の行が長いので、必要以上に保存されているように見える 　・保存するべきでは無い行も保存されている あたりが考えられます。 ここで、デバッガを使ったり、途中経過を出力させるようにしたりして、上のような現象が発生していないか、を確認していきます。例えば file.each_line do |line2| の後に STDERR.printf(":%s:%s\n",flag,line2) とでもすれば、フラグと1ine2の内容が出力されます。 要所要所に確認用の命令を入れて、期待通りになっているかを確認して、原因を掴みましょう。 で気付いたのですが、 break if flag == false で抜けるのは file.each_line do |line2| のループです。その外側に f.each_line do |file| があります。 ということは ファイルから1行読む(file) ↓ 適当に改行入れて分割 ↓ 分割した1行ずつ処理(line2) ↓ ファイルから1行読む(file) ↓ 適当に改行入れて分割 ↓ 分割した1行ずつ処理(line2) このとき、flag==failでも、最初の行はtextに追加される ということではないでしょうか
どのようにして\nを挿入したのか、不明ですが、エディタを使用して行った前提で回答です。 改行コードを埋め込む場合は、\nを挿入したい位置で、Enterキーを押下してください。 それで、見かけ上、2行になれば、そこに改行コードが埋めこまれたことになります。 尚、通常は\nの文字そのものは、\とnの2文字にすぎません。 ruby のスクリプトでそれを"\n"のようにダブルクオートでくくった場合、それをrubyが改行コードとして扱う という特別の約束があります。 ですので、エディタで行なう場合は、実際の改行コードを埋め込まないといけません。
No.4の御礼に書かれたエラーをみて思いついたことがあり試してみたところ、同じエラーを発生させることができました。 もしかして、Windowsのユーザー名に日本語を使用していらっしゃいますか？ Windowsの一時作業用フォルダは、環境変数TEMPまたはTMPで指定されています。 こちらのデフォルトは、%USERPROFILE%\AppData\Local\Tempでした。 %USERPROFILE%の部分が、C:\Users\○○に置き換えられます。 そこで環境変数TEMPまたはTMPの値を、C:\山田太郎\Tempに変更してAptanaを起動させてみたところエラーが再現されました。 おそらくAptana StudioかRuby(Ruby Insutaler版）のどこかでパスに日本語（の特定の文字？）が含まれると正常にパスが認識できないのではないかと推測します。 テスト用に C:\Test\Temp フォルダを作成して、環境変数TEMPとTMPをこちらのパスに書き換えて試してみてください。
ＯＳ不明の為、linux前提で回答します。 /home/edinet/E05267/S1001YX6/index.html このデータの改行がrubyできちんと認識されていないように見えます。 （htmlなのでブラウザでは改行されているように見えるかと思います。） cat -n /home/edinet/E05267/S1001YX6/index.html として、行番号付きで表示したとき、きちんと表示されるでしょうか。 例えば、index.htmlが１行で記述されていたなどということはないでしょうか。 提示されたスクリプトは、index.htmlが（rubyから見て）きちんと改行されていることが前提です。
#3です。 提示されたhtmlで試験しましたが、正常に動作します。 （提示されたhtmlの後ろに適当なデータを付加しました） 以下実行結果です。 ------------------------ ロ　保有目的が純投資目的以外の目的である投資株式の保有区分、銘柄、株式数、貸借対照表計上額及び保有目的前事業年度特定投資株式銘柄 株式数(株) 貸借対照表計上額(千円) 保有目的 日産自動車株式会社仕入先との取引関係強化のため 　(2)&nbsp;【監査報酬の内容等】 ------------------------- 考えられるのは、 【監査報酬の内容等】の行の次に、余分な行があるのではなく、 【監査報酬の内容等】と同じ行に余分なデータがあるということです。 そのことを確認するために、以下のスクリプトを実行してください。 ---------------------------------- text = "" data = "/home/edinet/E30682/S1002C62/index.html" flag = nil no = 0 IO.foreach(data) do |line2| no += 1 case line2 when /保有目的が純投資目的以外の目的である投資株式の保有区分/ flag = true when /保有目的が純投資目的である投資株式|監査報酬の内容等/ flag = false end text << line2.chomp if flag != nil printf("取得行=%d\n",no) if flag != nil printf("取得終了行=%d\n",no) if flag == false break if flag == false end text.gsub!(/<\/td>/,"\t") text.gsub!(/<\/tr>/,"\n") text.gsub!(/<[^>]+>/,"") print text ---------------------------------- 結果は、 取得行=... 取得行=... 取得行=... 取得終了行=・・・ のように表示されるはずです。 もし、このようになって、余分なデータがあるなら、 それは、「監査報酬の内容等」と同じ行に余分なデータがあることになります。 そし、そうならない場合は、正規表現のマッチが正しくない（考えにくいですが・・） ことになります。 こちらの実行環境は以下の通りです。 windows7 ruby 1.9.3p374 (2013-01-15) [i386-mingw32] 文字コード：WINDOWS-31J(スクリプトの文字コード、index.htmlの文字コード) スクリプトの先頭に # coding:WINDOWS-31J を記述しています。 次回、補足される場合は、念の為 実行環境、及び文字コードも含めてご提示ください。 文字コードは、スクリプトを記述している文字コード、データの文字コード、 スクリプトで指定しているcodingの文字コードを提示ください。
D:\>irb DL is deprecated, please use Fiddle irb(main):001:0> a="ああ" => "ああ" irb(main):002:0> と、何の問題もありませんが、どういう現象でしょうか？ irb --noreadline ではどうでしょうか？
＞個人的にそれぞれのデメリットは そいう基準で選択するのではなく、 ・そのクラスのオブジェクトの属性のようなものであればインスタンス変数だし、 ・特定の操作のパラメーターなら引数 でしょう
インスタンス変数にする必要はありません。 まず、ブロック引数は、ブロックローカルな変数です。 そうでない、ブロック内で初めて出てくる変数もブロックローカル変数です(※)。 従って、これらはブロック終了後では参照できません。 ブロック終了後も参照したい場合は、ブロック開始前に変数を宣言する必要があります。 ブロック引数はどうしようも無いので、別途変数を宣言します。 ※のルールはちょっとわかりにくいのですが、いろいろ経緯があってそうなっているようです。 def find_required_day(max_day) today = Time.now.day day = nil today_equal_required_day = nil (1..max_day).each do |i| day = i today_equal_required_day = day == 3 break if today_equal_required_day end return required_day = today_equal_required_day ? day : today end なお、ブロック引数が常にブロックローカルだというのはRuby1.9からの仕様なので、Ruby1.8までを対象とした古い書籍やサイトを見るときは注意してください。
メソッド定義(def～)は、実行文なので、def～を実行する必要があります。 #1 はdefの実行前なので、未定義です。 ケース2で定義しているcalは、Testクラスのインスタントメソッドなので、 呼び出すとすれば、Test.new.cal(3) ですね。 class Test def self.cal(num) 1 + num end #3 p cal(3) end だと、calはTestクラスのクラスメソッドなので、クラス定義の中ではcal(3)で呼び出せます。 クラス定義の外で呼び出すには、Test.cal(3) 。 入門書の読み込みが足りないのでは無いかと思います。
#1の方の指摘通りです。 def fact(n) return 1 if n == 0 n * fact(n - 1) p n end でn=3の場合のfactの戻り値は 明示的にreturn文で戻り値を指定していないため、 p nの評価結果になります。p n の評価結果は3なので戻り値は3になります。 factの内容を以下のように変えてください。 あなたの望んだ結果が得られるでしょう。 def fact(n) return 1 if n == 0 seki = n * fact(n - 1) p n return seki end
ん? たとえば http://magazine.rubyist.net/?0041-200Special-kwarg とか http://techracho.bpsinc.jp/baba/2013_02_25/6545 くらいは見つかるんだが?
define　－＞　定義する です。
あと、このプログラム、なんか変ですよ? File.open(fpath).each ここのeachって変ですよね。 f.each_line do |line| line.gsub!(/前事業年度特定投資株式/,"前事業年度") ここでの 変数lineに入っているのは、「ファイルから読み込んだ文字列」です。 ファイルの内容をメモリ上にコピーしたものです。 これを変更しても、元のファイルは変更されません。 また、一行読み込む度に次の行の内容になるので、gsubした結果はどこにも残りません。
こんにちは Eオプションは外部エンコード形式（および内部エンコード形式）を指定します。 ご質問に書かれたプログラムでいうと、ARGV[0]で指定したファイルはこのエンコード形式で書かれているよと指定するオプションです。このオプションがない場合はOSや環境から判断したデフォルトのエンコード形式が指定されます。 おそらく質問者様の環境でのデフォルトの外部エンコード形式がUTF-8では無いのではないかと思います。 この場合、プログラムのif文において正規表現はUTF-8を想定しているのに変数lineが示す文字列はデフォルトエンコード形式で読み込まれているので、一致せずにエラーになります。 対応方法としては、 １．ARGV[0]で読み込むファイルのエンコード形式をデフォルトの形式にする。 デフォルトの外部エンコード形式は以下で確認できます。 p Encoding.default_external ２．Eオプションの代わりにプログラム中で外部エンコード形式をUTF-8に設定しなおします。プログラムの最初で以下を記述します。 Encoding.default_external = 'utf-8'
>>さくっとインストールする方法はないでしょうか？ たぶん、ありません。サーバや使っているソフトについて時間をかけて勉強して理解するしかないでしょう。 「プログラミング言語習得に王道なし」といいますけど、同じようなものだと思います。
> どうしてaの値が２０に変更されているのか > 11:if a = b 比較の場合は、==じゃなかったかな？ if a == b
to_i は数値オブジェクトに変換したものを返すメソッドです。そのオブジェクト自身を変更することはありません。 > ad = ARGV[0].to_i では ARGV[0] の値そのものではなく ARGV[0] を数値オブジェクトにした値が ad に入ります。 一方、 > 03:ad　=　ARGV[0] > 04:ad.to_i では ad に ARGV[0] の値が入り、続けてその値を数値オブジェクトに変換したものを生成しています。しかし、せっかく変換した値をどこにも代入していないため、その値は破棄されます。 上記の形を生かすならば、04 行を ad = ad.to_i としましょう。 なお、 > irbで同じことをやってみると、２行目のad.to_iで数値オブジェクトに変換される とのことですが、変換された結果をただ表示しただけで上記の通り変換した値を保持していないので > 再びadの変数内を参照すると文字列としてオブジェクトが格納されていました ということになります。
こんにちは 私の環境(2.0.0)でも同じ結果になりました。 pメソッドで表示される文字数がある指定文字数を超えないと改行してくれない様ですね。 マニュアルによると指定文字数は79文字で、ご質問記載のp vの文字数は76文字なので、もとの文字に4文字を追加するか puts PP.pp(v, '', width = 75) の様に指定文字数を少なく設定すると改行してくれる様になります。
プログラムが断片的でよくわかりません。 「保有」という文字が含まれる行から、「EOF」という文字が含まれる行の前の行まで を取り出すとすると、 text = "" flag = nil IO.foreach(fpath) do |line| case line when /保有/ flag = true when /EOF/ flag = false end text << line if flag end puts text
gsubで数字の後に「株」を付けているので全部に付きます。 特定の所だけに付けたいのなら、その特定の所をピンポイントで選択する正規表現を書いて、subで置換してください。
>Ｂ列（項目）に記載されてるコード（100、200）をＡ列に表示させる関数はありますでしょうか？ 次の数式で良いと思います。 A3=IF(AND(OR(ISTEXT(B1),B1="",B3<100),B3<>""),MAX(B$2:B2),"") A3セルを下へ必要数コピーしてください。 但し、B列（項目）の3桁数字は昇順に並んでいる必要があります。 B列の100未満の数値の並び順は浮動でも問題ありません。
(xml|rss) と書けばいいです。scan で使う場合は、(?:xml|rss) です。 その前の部分の正規表現がかなりへんてこです。記号は全部 \ を前置する必要があると思っているのですか？それは間違いです。
Entry.order(:updated_at).last でできるはずです。 レコードが多くなって遅くなってきたら、updated_atにインデックスを設定してみてください。
こんにちは > continue 2; 処理を中断して、一番内側のループの一つ外側のループの条件判定に戻るという意味ですよね。 phpのcontinueに該当するのは、rubyではnextになりますが、一番内側のループの条件判定にしか戻れません。 参考URLにマニュアルのリンクは貼っておきますのでご確認下さい。
＞:in `block in <main>': undefined local variable or method `try' for main:Object (NameError) タイプミスじゃないですか？ ミスが見つかるまでもう一度よく見直しましょう。 前回の質問の回答にに書いたかもしれませんが、 もっとやさしいプログラムを書くことから始めた方が良いように思います。
両方眺めてみて感覚的に合いそうな方をやられてはいかがでしょうか。 No.1のa0u283mitgさんの回答はこの記事かな http://news.mynavi.jp/news/2014/08/26/106/ 私自身は、日本語のテキスト処理もあったのでRubyにしたのですが、最近ではどうなのでしょうか？ まあPythonにする理由が無いのでRubyを使い続けています。速度が遅い以外（Pythonも多分同程度）は特に不満はなく、主に数値計算や巨大サイズのテキスト処理、データベースなどに活用しています。と言ってもプログラムでお金をもらっているわけではないので、日曜プログラマに近いのかな。主に仕事の効率化に使っています。 完全な日曜プログラマとしては、HaskellやPrologなどです。関数型もおもしろいですよ。
こんな感じで class MySTDOUT < IO def initialize(file) @f = File.open(file,"w") super(1,"w") end def close @f.close super end def write(str) @f.write(str) super end end $stdout=MySTDOUT.new("1234.txt") p [1,2,3,4,5] puts "This is a pen."
＞google.rb:35:in `rescue in try': undefined method `縲if' for main:Object (NoMet hodError) 私の回答をコピペして空白が全角のままではありませんか？ 全角空白と半角空白の区別が付くエディタを使いましょう。
私自身は異なるバージョンを共存させたことは無いのですが、 gemの機能としては異なるバージョンを共存できる仕様になっているはずです。 ただし、gemで作成されたrailsなどのコマンドでの実行ファイルは1つのバージョンしかインストールできないのですが、大きな問題にはならないと思います。
Nokogiri なら、 #!/usr/bin/ruby # coding: utf-8 require 'open-uri' require 'nokogiri' url = 'http://oshiete.goo.ne.jp/' doc = Nokogiri.parse open(url).read doc.search('img/@src').each do |src| puts src.text end 出力: http://u.xgoo.jp/cmm001/img/sn/sn_50_w.gif http://u.xgoo.jp/cmm001/img/logo/goo.gif /images/common/new.gif ... http://oshiete.xgoo.jp/images/common/powered_by_okwave.jpg?f685b8e http://cmm001.goo.ne.jp/cmm/img/wui/info_ed002/159784/140320_h150_40.jpg http://log000.goo.ne.jp/VL/Trace?c=151&tp=1&noscript=1&e=1&p=os_top が得られます。 教えて! goo のトップページの img 要素の src 属性を列挙します。 XPath の指定で、'img/@src' と、属性を指定することがポイントです。
RubyInstallerを使ったんですかね。最初のは大文字小文字の間違い。 ＞Building native extensions. This could take a while... まず、解決方法から先に書くと、 案1：32bit用Rubyを使う。Windowsが64bitであっても、特に理由がない限りこちらがおすすめです。それだけで解決。 案2:Devkitをインストールする。方法は、ダウンロードページの下の方にある、 For use with Ruby 2.0 (x64 – 64bits only) をダウンロードして、どこかのフォルダに解凍（解凍した後も使うので、それなりのフォルダ名に)。 コマンドプロンプトでそのフォルダに移動し、dk.rb init と dk.rb install を実行する。 なぜダメだったというと、gemはすべてRubyで書かれているわけじゃなくて、ものによってCで書かれている部分もあります。メジャーな物はWindows用バイナリがgemリポジトリに入っているのでそれがインストールされますが、Windows用バイナリが用意されていないgemについては自分でCからコンパイルしないといけません。それをするツールがDevkitです。 最近は、多くのgemでWindows32bit用バイナリが用意されていることが増えたので、Devkitをインストールしなくても大抵はそのままインストールできます。今回は、Mechanizeで使うgemの中に、Windows64bit用バイナリが用意されていなかったというのが原因です。 ということで、当面は32bitRubyを使うのがおすすめです。 ・すべてRubyで書かれているgem・・・・・そのままでインストール可能 ・Ruby＋Windows用バイナリのgem・・・・そのままでインストール可能 ・Ruby＋Cソースのgem・・・・Devkitが必要
だいぶできたようですね。 こちらもMacでOSX10.9ですので、ほぼ同じです。 少し気になる点を、 t.integer :Zip_Code と整数型になっていますが、0から始まる郵便番号もありますので、 t.stringをした方が良いように思います。 それと、Zip_Codeにインデックスを設定しておく方が検索が速くなります。 インデックスはmigrationでadd_indexで後から設定できます。 実際にやってみて気がついたのですが、 同じ郵便番号で違う住所が結構有るのです。郵便番号から一意に住所が決められないのです。それと No.2の回答欄にもあるように、 札幌市中央区大通西（１～１９丁目） のようにそのままでは使えない住所があります。 住所録を作成するために使うのだと思うので、 住所録本体(例えばaddress_book)をscaffoldなどで作成します。 当方で作成した住所録は、レコードを新規作成するときに(new)郵便番号だけを入れるフォームにし、ボタンを押すと、住所入力用フォームに飛ぶようにしています。新規作成が二段階になっています。この住所新規作成用のフォームには氏名、住所（郵便番号からリレーションで自動入力）、それと郵便番号から検索された住所（同一郵便番号で複数の住所があったときに参考になるように）を表示するようににしています。 先にも書きましたが、郵便番号から直接住所を特定できないことがあるための対策です。
>ツールからアクセスしようと試みましたが外部からはアクセスできませんでした。 そんなことはありません。私は普段、PostgreSQLについてくるAdminIIIでHerokuのデータベースサーバ（amazonaws.com）にアクセスし、メンテナンスしています。 データベースアクセスのための情報が正しく設定されていないか、あるいはファイアウォールなどでアクセスが制限されているなどといったことはないでしょうか。
Enumerable#mapを使います。 -------------------- a = [2,4,6] b = 2 c = a.map{|x| x/b} p c -------------------- 実行結果は [1, 2, 3] となります。 直接　配列 a を更新したい場合は、 a.map!{|x| x/b} とします。
こんにちは > 「長さは8文字以上で、英数記号全てを含まなければならない」 Railsはわかりませんが以下の正規表現で如何でしょうか？ /(?=.{8,})(?=.*\d+.*)(?=.*[a-zA-Z]+.*).*[!@#$%]+.*/ VALID_PASSWORD_REGEXに"8文字以上"の条件をいれる必要がなければ /(?=.*\d+.*)(?=.*[a-zA-Z]+.*).*[!@#$%]+.*/ "記号"の部分は使用する記号を適宜追加してみてください。
Rails3までしか使ったことないんですが……。 ちょっと具体的な実装の仕方がよくわからなかったので見当違いかも知れませんが。JSON形式データをURLにつけて送信しているということですけど、それはURIエンコードしたものですか。例えばですが、{:foo=>'hoge'}.to_queryとかしたものをつけてます？　ひょっとしてそのままJSONデータをURLにつけてる、ってことないでしょうか。
テストしてませんが、 n=0 Dir.glob("/Photo01/*/*.jpg").each do |file| File.rename(file, "/Photo02/%03d.jpg" % (n+=1)) end
nohupを使うとターミナルを終了してもプログラムを動いたままにできます。 nohup rails s &
いろいろ書き方がありますが if %w[h o g e].include?(hoge) if ["h", "o", "g", "e"].include?(hoge) if "hoge".include?(hoge) あたりでどうでしょうか。最後のはhogeが一文字でないと少し違いますが。
このあたりを参考にされてはどうでしょうか http://blog.goo.ne.jp/isc_subleader/e/66e284e6f367b84e668252f67ee1792a それと、apt-getでインストールしたrubyが残っていたらトラブルの原因になります。 # dpkg -l | grep パッケージ名など で調べるのかな。 railsもgem listで表示されていませんので、入れた記憶があるのでしたら、ほかのバージョンのrubyが残っている可能性が高いです。 私自身はScientific LinuxとOSXを使っていますのでちょっとコマンド体系が違うので外れているかも知れませんが。
基本的にはNo.1で書かれている通りですが、mailでも可能です。 ただし元々選択したものを消去することをあまり想定していないので、ちょっと使いにくいですが、 Mail.find(:delete_after_find=>true, :count=>50){|message| message.mark_for_delete=false # 一旦消去対象から外す if message.subject[/xxxxxxx/] # ここに消去条件 puts "deteting #{message.subject}" message.mark_for_delete=true # 消去対象に end } :delete_after_findオプションは危険なので、ブロックなしやmark_for_deleteをfalseにするのを忘れると全部消してしまいます。使うのでしたら十分注意してください。 現実的なやり方としては、 適当なメールソフトでサーバーから全部読み込み、サーバー上のメールを全部消去、 メールソフトで不要なものを削除 だと思うのですが、 これだと、サーバーからは無くなりますが、
クラス変数を使う方法に変更すれば、 active_support の cattr_(reader, writer, accessor) が使えるかなと思います。 gem install active_support #!/usr/local/bin/ruby # coding: utf-8 require 'active_support/core_ext' class Hoge cattr_reader :val1, :val2, :val3 @@val1 = 1 @@val2 = 2 @@val3 = 3 def piyo yield self end end Hoge.new.piyo {|t| p t.val1, t.val2, t.val3 }
これはどうでしょうか？ class Hoge def val "aaa" end def piyo yield(self) end end h=Hoge.new h.piyo do |this| p this.val end
def prime(val) maxv = Math.sqrt(val).truncate (2..maxv).each do |i| STDERR.print "mod: #{i}, " if val % i == 0 STDERR.puts return false end end STDERR.puts true end x = 101 until x < 10 if prime(x) puts x end x -= 2 end という感じでしょうか。 mod: というデバッグ表示は標準エラー出力に 出しているので、2>/dev/null とかすれば、表示しません。
＞処理後に初期化するなり前回のデーターに上書きしていくような方法はありませんでしょうか？ 何を？？ 文脈から見て、「60秒毎の処理に近づける方法は無いか？」という質問だとして回答します。 まず考えつくのは、sleepを1秒にして、現在時刻を調べ、秒が0であれば実行するという方法。 until Time.now.sec==0 sleep 1 end 微妙なタイミングで0秒の所をスキップしてしまう可能性があるため、もうちょっと工夫が必要。 あとは、Rubyの中で繰り返すのはやめて、１回限りの処理にして、OSの機能で1分毎に起動してもらう。
rubyではfixnumで表現できないものはbignumに自動的に変換されるそうですが、動きからすると64bitの上限に達しているのにbignumへの自動変換ができていないように見えます。2**50はOKで2**100だとダメというのだと、そういうことかと。 一応手元の、1.8.3p371で起きて、ruby 1.9.3p484では起きなかったので、この間で修正されたのではないかと当たりをつけて調べてみました。 両方のソースのファイル名をざっと見ると、bignum.cと一緒にnumeric.cというのがあり、中身を見る限り、fix_*という関数があるので、これがfixnumの実装だと思います。ちなみに、bignum.cもチラッと見ると、こちらはbig_*という関数があります。2**50で起きたというのでpowerなどの名前がついた関数を探すと、fix_powというfixnumのpowerを表しそうなものが見つかり、両方がfixnumだとint_powを呼んでいるのがわかります。 それで、起きたものと起きなかったものint_powを見比べると次のところが違います。 1.8.3p371: 2321 while (y % 2 == 0) { 2322 long x2 = x * x; 2323 if (x2/x != x || !POSFIXABLE(x2)) { 2324 VALUE v; 1.9.3p484: 2717 while (y % 2 == 0) { 2718 if (!FIT_SQRT_LONG(x)) { 2719 VALUE v; http://svn.ruby-lang.org/cgi-bin/viewvc.cgi/trunk/numeric.c?view=log をざっと見た感じだと、このへんで修正されたのではないでしょうか。 http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=revision&revision=12778 というわけで、1.9.1などこの修正が入ったあとのバージョンだとputs 2**1000が表示されると思います。
まず最初に間違いがありますので、それを修正しないと動きません。 employees = [ ]の上の行に end を追加する必要があります。そのままではエラーがでます。 また、最後の行は employee.sort! ではなく employees.sort! です。変数名が間違っていますので、これもエラーがでます。 デバッガを使えば質問の内容は簡単に確認できますので、それを使うのが理解する早道です。 それはそれとして、 >「return self.id <=> other.id」この部分のselfとotherが何をさしているのか分かりません。 def <=> otherがどのような形で呼ばれるかを考えればわかります。 このメソッドはsort!から呼ばれます。 return self.id <=> other.id の行で最初に実行を止めたときのデバッガの出力を書いておきます。 (byebug) self #<Employee:0x007fe12416ccb0 @id="3", @name="Tanaka"> (byebug) other #<Employee:0x007fe12416c9b8 @id="1", @name="Suzuki"> この場合はsort!からは、はじめに、employees[0]<=>employees[1]の形で呼ばれています。 ここでは、def <=> otherが定義されていますので、 self.id <=> other.id で比較されます。つまり "3" <=> "1"が実行されます。 >３つめでインスタント化している「employees<<Employee.new("2","Sato")」のは、selfに入りそれまでに入れた値はotherに入っているのでしょうか？ selfとotherのどちらになるかはsort!次第です。 余談ですが、 idが文字列になっていますので、文字列で比較されます。数値で比較したいのでしたら、 employees <<Employee.new(3,"Tanaka") のようにidを数値にする必要があります。あるいは return self.id.to_i <=> other.id.to_i のように。
rails newで作成したフォルダの中でさらにrails newをやるとそのようなメッセージが出ます。 つまり rails new t1 で作成し、 cd t1 rails new t2 で同じメッセージがでます。
control + Cで実行を止められます。
ruby 2.0.0p353 で実行しましたが、質問欄をそのままコピーをすると test.rb:4: unterminated string meets end of file test.rb:4: syntax error, unexpected end-of-input, expecting ')' とエラーがでます。 puts("正の数です！”) の”が全角になっています。 puts("正の数です！") で実行してみてください。 それでも駄目でしたらruby -vでバージョンを確認してください。 1.8.7なら require 'jcode' $KCODE="u" 最初に加えてみてください。
s[0]=8 を s[0]=8.chr としてください。
そうですね、少し漠然としていて原因が何処なのか正体が掴みづらいので順番に実行して欲しいのですが rubygemとruby自体はインストールが終わっているようなので「rails s 」の前に実行すべきコマンドのいずれかが抜けているようですので 順番にやっていきましょう rails sを打つべきrailsのカレントディレクトリに移動したら bundle install bundle exec rake db:create bundle exec rails s これでダメでしたらmacにプリインストールされているrubyのバージョンは既に古いものになっているのと macportsよりは既にhomebrewが主流になってきているので homebrew+rvm+ruby2.0系を容赦なくインストールしてから そちらでrailsをインストールしてみてください railsは流れが早いので、古い本は資料に合わせてインストールを行うと不整合を起こしやすいんですよね…（汗
ちょっと質問が漠然としていて回答致しかねるというのが正直な所なので * OSはWindows,Mac,Linuxのどれなのか？ * Linuxだとしたらディストリビューション、もしくは使っているサービスの種類（AWS、heroku、さくらクラウドetc．..）は何なのか？ それと、手順としてどの段階でそれが発生したのか？ を最低限伝えて欲しいところなのです 一応、質問の本文からのエスパー回答ですいませんが サーバー構築の知識はあまり無いようですので Windows環境になんらかのGUIのインストーラーを使ってrubyをインストールした仮定ですと rubygemからのSSL認証が上手く行っていないので proxy設定を行うのが正解だと思います http://d.hatena.ne.jp/atelier-shin/20110223/1298425324 ただ、個人的にはWindowsに直接railsをインストールするのは、最終的にはインストール不可能なgemが多数出てくるので VMWareやVirtualBox等で仮想マシンを構築するか、Macに持ち替えたほうが良いと思いますよ
クラス変数を定義します。 単に再定義するには、必要ないですが、 元のメソッドを利用したい場合は、alias しておきます。 #!/usr/bin/ruby # coding: utf-8 class Fixnum @@counter = 0 alias orig_compare <=> def <=>(other) @@counter += 1 orig_compare(other) end def counter @@counter end end a = [3, 5, 4, 2, 1] p a.sort, 0.counter 結果: [1, 2, 3, 4, 5] 7
元々シングルボードコンピュータが好きとか、Linux好きならともかく、これから ruby をやりたいと言うのでしたら、普通のPC環境でお使いになった方がよいと思います。 （Ubuntuなどで） Beaglebone の初期OSは Angstrom Linux です。 ruby に関しては、そのままでは動かない（入っていない）と思います。 ちょっと調べた感じだと gcc ですら初期では使えないっぽいですね。 rubyに関してはこんな記事がありました。 　↓ 「Angstrom Linuxに ruby を入れたい」（英語です） want to install ruby 1.8 on angstrom beaglebone https://groups.google.com/forum/#!topic/beagleboard/ZgfmYGNcqWI やり取りの結果、うまくいったのかどうかがイマイチ不明瞭だし、そもそも日本語の記事が皆無です。 それでも、PCではなく Beaglebone でおやりになりたいのであれば、Angstrom Linux ではなく、Ubuntu など他のディストリを入れた方がいいでしょう。 Ubuntu を入れる記事は日本語でも結構見つかります。 （ご質問に書かれたリンクにもありますね） ただ、Beaglebone向けのOSイメージだと Ubuntu であっても、かなり色々削っているらしいので、苦労して入れても、使いたいコマンドは結局後から導入、と言うパターンが多くなると思います。 ・Beagleboneで遊ぶ事を中心とするのか ・プログラミングをやりたいのか を再考された方が、よろしいかと。
k4
こんにちは > というプログラムを書いたのですが、うまくいきません。（エラーも出ないです） > もともとできないのですか？ 少なくとも私の環境では動作しているようです。 Windows Vista ruby 1.9.3p385 (2013-02-06) [i386-mswin32_100] 適当なサンプルがありませんでしたので ↓のサンプルプログラムからボタンクリックで呼ばれる メソッドを書き換えて実験してみました http://www.osk.3web.ne.jp/~nyasu/vruby/sample/paneltest.rb もう一点 以下についても試してみましたは仰るとおり機能しませんでした。 > def radioBtn1_clicked ラジオボタンについてはxx_clikedイベントは機能しない様ですね。 親クラスのVRCheckboxで機能が無くなっている様で ラジオボタンはチェックする/しないと、チェック有無の確認ができるのみのようです。 http://www.osk.3web.ne.jp/~nyasu/vruby/referer/vr/VRRadiobutton.html -----ここから # coding: windows-31j require "vr/vruby" require "vr/vrcontrol" frm=VRLocalScreen.newform def frm.construct # self.extend VRResizeSensitive # self._init self.caption="PanelTest" addControl(VRStatic, "label1","サイズ変更でmessagebox出ます",200,10,250,40) addControl(VRGroupbox,"group1","わく",80,50,300,100) addControl(VRButton,"btn1","左へ",5,20,80,30) addControl(VRButton,"btn2","右へ",85,20,80,30) @rad1=@group1.addControl(VRRadiobutton, "rad01","ラジオ1",5,20,80,40) @rad2=@group1.addControl(VRRadiobutton, "rad02","ラジオ2",150,20,80,40) end # 動作内容を書き換え def frm.btn1_clicked @group1.visible = true # グループボックス表示 end def frm.btn2_clicked @group1.visible = false # グループボックス非表示 end def frm.self_resize(x,y) # messageBox "(#{x},#{y})","resized",0 end # 追加でテスト # # ラジオボタンはxx_clikedイベントは機能しない？ # def frm.rad1_clicked @group1.move @group1.x+20,@group1.y, @group1.w, @group1.h end def frm.rad2_clicked @group1.move @group1.x+20,@group1.y, @group1.w, @group1.h end frm.create.show VRLocalScreen.messageloop exit -----ここまで
プログラムを書くなら、まずはエラーメッセージでググれるようになりましょうね。 「syntax error」は文法エラー。Rubyの文法ではおかしいと判断された箇所に発生します。 ＞@defeat = {rock::scissors, paper::rock, scissors::paper} 何と混ざったのか勘違いしたのか知らないし知ったこっちゃないが、こんな記述はRubyでは存在しない。
p を使ってるからでは。 http://doc.ruby-lang.org/ja/1.9.3/class/Kernel.html#M_P
こんにちは 同様の現象に遭遇したことがないのでご質問に直接の回答はできないのですが とりあえず発生していると思われるエラーメッセージをファイルに書き出してみては如何でしょうか？ エラーがわかれば対策も可能かと思います。 問題のプログラムの具体的な記述がわからないのですが、ソースの最後の方で作成したFormを実行している記述があると思います。（下の※に相当する記述です、複数行かもしれません） これをbegin～rescue～endで囲んで、エラーが発生した場合にそのメッセージをファイルに書き出す様にします。下の例ではエラー発生時に、error.txtにエラーメッセージが書き出されます。 -----ここから begin VRLocalScreen.start(MyForm) ……※Formを実行している記述（一例です） rescue File.open("error.txt","w") do |f| f.puts $!.message f.puts $!.backtrace end end ----ここまで
FormDesignerは使用していないのでよく分かりませんが ソース上で 非表示は以下でどうでしょうか @groupbox.visible = false 表示は @groupbox.visible = true ボタンも同様でいけると思います。
http://ja.wikipedia.org/wiki/%E3%83%AF%E3%82%A4%E3%83%AB%E3%83%89%E3%82%AB%E3%83%BC%E3%83%89_(%E6%83%85%E5%A0%B1%E5%87%A6%E7%90%86)
WindowsStyle 計算してみると、WS_VISIBLE + WS_CHILD + BS_CHECKBOX + BS_PUSHBUTTON ――かな。 https://www.google.co.jp/search?hl=ja&q=WS_VISIBLE+%2B+WS_CHILD+%2B+BS_CHECKBOX+%2B+BS_PUSHBUTTON+windowstyle&lr=lang_ja#hl=ja&lr=lang_ja&q=WS_VISIBLE+WS_CHILD+BS_CHECKBOX+BS_PUSHBUTTON+windowstyle
申し訳ありません。 ＃１は、呼び出し関係がわからなかったので、構文チェックをするメソッドを提供すればいかがでしょうか、という提案をさせていただいたものです。JSONファイルを指定する前に構文チェックをして、OKのものだけ指定する。ということをイメージしておりました。 （話変わりまして、） 以下のURLが該当しそうです。 https://gist.github.com/elarkin/4709748
railsの場合は他のWeb系のフレームワークに比べて進歩の速度が”ぶっちぎり”に早いと言われていますので 書物との不一致は観念した上で、足りないところはgoogle検索というのが適切な学習戦術ですね ３系までしかまだ触れていないので確定した話は出せませんが 4系はminitestにテストツールが切り替わっています ただ、普通にtest/unitのディレクトリを作ってそこにテストを記述すれば rspec等の他のテストツールを入れていない限り、テストのひな形は生成されそうな気がします... 何方かrails４系詳しい方help...
n1 = 1 ["a","b","c","d","e","f","g","h","i","j","k","l"].each do |n2| puts n1 puts n2 n1 += 1 end
どっちもuptoで統一した方が良かったですね、すみません http://ideone.com/cVy7kj
ファイル名については > hello_world.html.erbファイルを、以下のコードに修正してください > say_hello_controller.rbファイルを、以下のコードに修正してください > config/routes.rbに以下のコードを記述してください とありますが。それぞれのファイルは、その前の段階で > まずはHello World! > 生成されたファイルの中の、「app/controllers/say_hello_controller.rb」に対して、以下のコードを記述してください > 「app/views/say_hello/」ディレクトリに、「hello_world.html.erb」ファイルを作成して、以下のコードを記述してください > config/routes.rbに以下のコードを記述してください とあります。 > うまく写りません 具体的のどうなったかが、わかりません。 「うまく写りません」だけでは、答える方も答えようがありません。 人に尋ねる場合でも、自分で解決する場合でも、まずは「具体的に何がどうなっているのか/どうなっていないのか」を把握しましょう。 > 原因は、上段のコードファイルに関連付けがされていないのではないかと > 思います。ファイル名を一緒にしていないのが原因なのか？ ファイル名を変えたら、他の設定もそれに合せたものに変更する必要があります。 この例は、上記構成でのものになっています。 そのサイトのは、「この通りやったら、とりあえずは雰囲気は味わえる」という程度のもので、学習にはまったく役に立たないと思います。 別のちゃんとした入門書や入門サイト、マニュアル等で、基礎から勉強した方がよいでしょう。
以下のようにしてください youbi = %w[日 月 火 水 木 金 土] t = Time.now puts "%s年 %s月 %s日 %s曜日" % [t.year, t.month, t.day, (youbi[t.wday])] #----以下の行を追加----- # 次の水曜日にするため、何日加算するかを決める add_day = (10 - t.wday)%7 # その日付を秒に換算して加算する。 nt = t + add_day * 24 * 60 * 60 puts "%s年 %s月 %s日 %s曜日" % [nt.year, nt.month, nt.day, (youbi[nt.wday])]
正しく変換されています。 p text_shiftjis　 でなく print text_shiftjis　 で確認してみてください。 （もっと正確には、text_shiftjis　をファイルへ書き込んで、その結果をテキストエディタ及び１６進数エディタで確認してください） p text_shiftjisだと正しく表示されないようです。 当方、windows-7,ruby-1.93で確認済みです。
以下のようにしてください。 --------------------------------- n=10000 while n>=1 do break if n <= 1 if n%2 == 0 n = n / 10 end puts n sleep(1)・・・・・put sの次の行にこれを記述する end ---------------------------------
最近マニュアルを見ていたら、splitでこのようなことができる事に気づきました。 こんなのはどうですか。 puts DATA.read.chomp.split(/(<.+?>.+?<\/.+?>)/).reject{|a| a==""}.join("\n") もう少し縮めて puts DATA.read.chomp.split(/(<.+?>.+?<\/.+?>)/).reject{|a| a==""} もできるみたいです。 もうひとつおまけですが、\を使うのがいやな場合は puts DATA.read.chomp.split(%r[(<.+?>.+?</.+?>)]).reject{|a| a==""} のような書き方も
共通部分を別ファイルにくくりだしてそれを読み込むのは、require とか load とかで出来ます。 それが意味を持つかどうかは、スクリプトの作り方によります。
-は引き算として判断されます。 こんな書き方もできたはずです。 @item['name_zh-tw'] @item[:'name_zh-tw'] 文字列またはシンボルで、 -や特殊な記号があるとシンボルにするにも:'name_zh-tw'としないと不都合がでます。
多分長い行を折り返して書いてある物をそのまま別の行として入力したためでしょう。 doc.elements.each("guitars/make/model/color") { |element| puts element.text } と1行にするか、 doc.elements.each("guitars/make/model/color") \ { |element| puts element.text } と、\ で行をつないでください。 ＞Rubyのバージョンとかが関係あるのでしょうか？ 1.8.6でもエラーになるので、バージョンとは関係ないでしょう。
下記サイトを参考にしてみた感じ、パス部に変数展開で埋め込むだけでよいみたい。 http://d.hatena.ne.jp/aoi_273/20090311/1236764850
試してみた感じ、正常かと。
r=r<3 ? r+1 : 0 rが2だったら、r<3が真なので、r+1 つまり3になります。 r=r<2 ? r+1 : 0 では？
RailsのActiveSupportを使った例とかWeb検索で見つかるので、そこらへん参考にしてみては。 http://www.google.co.jp/search?hl=ja&q=ruby+ActiveSupport%3A%3ACallbacks+before_filter&lr=lang_ja 汎用的に使いたいというなら、Aspect指向プログラミングになるので、そちら方面を探してみるとか。 http://www.google.co.jp/search?hl=ja&q=ruby++AOP+Aspect+Oriented&lr=lang_ja
OSやハードウェアにもよりますが。よくつかわれるのは、Ctrl－ｃ、Ctrl-B、Ctrl-Break ,Ctrl－Alt-Del、Esc ,Ctrl-Esc　などですが、本当はプログラムを修正して、on-Key A then end みたいなAのKeyがおされたら　end するようなコマンドをプログラムの最初に宣言するようなことはできませんか？
ページがないと例外が発生するので、それを拾います。 begin page=URI(url).read page=Kconv.tosjis(page) puts(page) rescue puts "サイトが無い" end のようにしてください。
以下のようにしてください。 ------------------------------------------- # 単語の配列を初期化 words = Array.new # tanogo.txt のオープン File.open("tango.txt","r") do |file| # 1行単位で読み込む while line = file.gets #改行を削除 line.chomp! # wordsへ登録 words << line end end #単語の数を求める kazu = words.length # 乱数（整数）を求める # 0～単語の数-1　の範囲に乱数が収まるようにする word = words[rand(kazu)] print word,"\n" --------------------------------------------- 単語が書いてあるファイルをtango.txtとします。 このスクリプトをtest.rb とします。 スクリプトと単語のファイルは同じディレクトリにおいてください。 コマンドプロンプトで、そのディレクトリに移動し、 そこで ruby -Ks test.rb と入力してください。 毎回、異なる単語が表示されます。
＞この文章はエラーではなく、正常に通ってるということでしょうか。 エラーではなく、警告メッセージです。 正常かどうかは主観的な判断なので、人によります。 メッセージの意味は前回の回答に書いたとおり。 処理は正常にされています。
CentOSのバージョンは6なのでしょか？ 設定は同じはずですので、もう一度確認の意味で secure_path で検索してみて見つからなければ、 Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin のように全部追加してください /sbinと/usr/sbinはあった方が便利な様な気がします。 Scientific Linux6は初期状態で/sbin:/bin:/usr/sbin:/usr/binが登録されています。
パット見ですが、HTML的には改行してないからでは無いでしょうか まだ試験環境だと思うので、適当なHTMLの中で<br>つけてみて直るか確認するのが早い気はします。 もしかしたらこれだけでも直ってるようにみえるかも puts File.readlines('test.txt').join('<br>')
サーバー側プログラムが何を以て携帯からかどうかを判断しているのかはサーバーによりけりなので、一般論はありません。 同じ回線と同じブラウザで、Proxyを通すかどうかだけの違いでサーバー側の挙動が変わるとしたら、 Proxyの付けるヘッダを見てるのでしょう。 :ProxyVia => false, を追加するとどうですか？
何で修正じゃなくてエラーを消すことだけ考えるの？ それはともかく、Array#countは1.8.7以降のメソッドだけどcodepadは1.8.6だから使えない。
Rubyは知らないので見当違いな答えかもしれませんが一点だけ気になるところが……。 > :ProxyContentHandler => handler この行の末尾にカンマはなくてもいいのでしょうか？ > 正規表現ですべての文字にマッチするようなメタ文字 「.」ではダメなのでしょうか。任意の1文字にマッチします。 複数文字なら「.+」で大丈夫かと思います。 （この辺は正規表現の基本中の基本ですが、お調べになりましたか？）
＞if cgi.params["login"][0]=~/[0-9a-z]{1-8}/ then この通りに書いてるとしたら、動かないです。{1-8} じゃなくて {1,8} です。エラーにならないのが意外。 あとRubyでは、文字列 =~ 正規表現 では無く、正規表現 =~ 文字列 と書きます。 前者でも動くのですが。
「文字と数値を一緒に含むようなもの」とは具体的には何ですか？ Stringクラスのオブジェクト、ないしは、to_s メソッドでStringクラスオブジェクトに変換できるものなら %s Integerクラスのオブジェクト、ないしは、Integer関数で整数に変換できるものなら %d です。 数値しか含まないStringオブジェクトは、Integer関数で整数に変換できるのでどちらでも良いし、 大抵のクラスには to_s メソッドが定義されているので、%s だと普通はフォーマットできます。
No1です。 登録画面の方は出来ているのなら、新規登録ボタンの部分はJavaScriptがいいんじゃないでしょうか。 <html> <head><title>実験</title></head> <script> function regist(){ document.getElementById("regist").setAttribute("style","display: block"); document.getElementById("new").setAttribute("style","display: none"); } </script> <body> <input id="new" type="button" value="新規登録" onclick="regist()"> <div id="regist" style="display: none"> <form action="test.cgi" method="post"> Username: <input type="text" name="login"><br> Password: <input type="password" name="password"><br> <input type="submit" value="login"> </form> </div> </body></html>
方向性自体はあってると思うんですが、対象ファイルやコードに日本語文字含んでいるのでうまくいかないのかなーと Ruby1.9.3と2.0だけで動作確認したコードを載せます。 対象ファイルもコードもUTF-8決め打ちにしてあるので、適宜調整してみてください。 元のから殆ど変えずに（出力を整えてはいませんが、nil => nil ではなくなります。） http://ideone.com/2vWblD ブロックを使う形（個人的に、元のよりはおすすめ） http://ideone.com/MBNrCE ファイルではなく、標準入力から読み込んだ時のサンプル http://ideone.com/xK1Sj4
> まったくパラレルに行なっている様子が無い スタートしたスレッドに対して、逐次joinしているからかと。 スレッドの生成と待ち合わせについて見直してみては。 検索すると、すでにいろんな人がその手の記事を書いてるみたいですし。
いろいろと情報が少ないので、回答が難しいです。 ○サーバーとは何ですか? ・どのOSですか? ・管理者は誰ですか? Linuxや他のUNIX系だと、すでに使える状態の時もあります。 管理者(root)が自分だと、アプリケーション管理コマンドを使ったり、ソースからビルドしたりもできます。 しかし、インストールが制限されている等の場合には使えません。 ○どのemacsですか? ・サーバー側?ローカル側? ・GUI?CUI? 簡単なのは、サーバー側のCUI。TeraTermの文字の画面でemacsを操作します。 サーバー側のGUIだと、Windows側でXサーバーを用意する、あるいはVNCのような環境を用意する必要があります。 Windows側のemacsを使ってサーバーのファイルにアクセスするには、共有フォルダとしてマウントする等の工夫が必要です。 ○ emacsの設定 これは範囲が広すぎて説明できません。 もっと具体的に何の設定がしたいか書いてください。
一例。 「プロ」というのが「プロセス」のことだとしたらですが。
>　「わざわざ、『ブロックを引数として自作メソッドに与える』 >　ことの利点ってなに？」 自作メソッドの場合、ブロックを引数として自作メソッドに与えることの利点はない、といって良いかと思います。 そもそも、ブロックを引数を使用することの意味（利点）についてですが、私は以下のように考えています。 ある共通（に使用される）メソッドを外部に提供する場合、そのメソッド呼び出し時、呼び出し側の都合により、 呼び出し側で決めた特殊な処理をそのメソッドで実行してほしい場合に、ブロック引数を使用することにより それが最も低コストで実現可能となる。 例えば、共通なメソッドとしてソートについて考えて見ましょう。 ソートとはある約束に従って、データを並べ替えることです。 ある約束とは、昇順に並べるか、降順に並べるか等の並べ方に関する規則です。 この昇順、降順等の並べ方に関する規則をどのようにして実装するかということですが、 通常、以下の２通りの方法があります。 １）並べ方の規則をある引数の具体的な値で指定させる。 例えば、並び順（１：昇順　２：降順）を引数で指定する方法です。 ２）並べ方の規則を呼び出し側に記述させる。 これが、ブロックを引数として指定するやり方で、 昇順でソートしたい場合、そのようにブロック内に記述し、 降順でソートしたい場合、そのようにブロック内に記述します。 では、上記のどちらがよい方法かということですが、各々の長所、短所は以下のようになります。 １）の方法について（引数でソート順を指定する方法） 長所： パラメータの指定がわかり易いので、初心者でも簡単に利用可能。 短所： ソート時の並べ方が、あらかじめ決まっているので、別の並べ方が必要になった場合は、 ソートメソッド自体も変更が必要になる。 例えば、昇順、降順のほかに以下のような並べ方が必要になったとします。 「奇数を前半にならべ、偶数を後半にならべる。奇数については昇順にならべ、偶数については 降順にならべる」 これを実装するためには、引数に「３：特殊ソート」を追加し、更にソートメソッド自体も 修正する必要があります。 ２）の方法について（ブロックを引数で指定する方法） 長所： 上記の特殊ソートのようなソートが必要になった場合でも、ソートメソッドは一切変更の必要はない。 呼び出し側で、ブロック引数内にその規則を記述すれば、実現可能となる。 短所： ブロック引数の使い方が、初心者にはハードルが高いので、バグを誘発しやすい。 上記を踏まえて、ブロックを引数としてソートを行なう場合、どのくらい自由自在にソートが可能かを以下の ソースで確認して下さい。 -------------------------------------------- datas = [ 10,13,15,16,5,6,80,81,50,51,100,120] # そのまま表示 p "そのまま表示" p datas # 昇順ソート（ブロック指定無しのソート） result = datas.sort p "昇順" p result # 降順ソート result = datas.sort{|x,y| y<=>x} p "降順" p result # 特殊なソート # 奇数を前半に、偶数を後半に並べる。 # 奇数は昇順に並べる。 # 偶数は降順に並べる。 result = datas.sort{|x,y| if x%2 == 0 # xが偶数の場合 if y%2 == 0 # yが偶数の場合、降順ソート y<=>x else # yが奇数の場合、yを前半へ 1 end else # xが奇数の場合 if y%2 == 0 # yが偶数の場合、yを後半へ -1 else # yが奇数の場合、昇順ソート x<=>y end end } p "特赦なソート" p result # 1人は[名前，性別，年齢]の配列（性別は1:男、2:女） people = [["taro",1,20],["hanako",2,20],["jiro",1,18],["aiko",2,22],["saburo",1,50],["hanae",2,55]] # そのまま表示 p "そのまま表示" p people # 名前順（ブロック指定無しのソート） p "名前順" result = people.sort p result # 性別、年齢順 result = people.sort{|x,y| if x[1] != y[1] x[1] <=> y[1] else x[2] <=> y[2] end } p "性別、年齢順" p result -------------------------------------------- 実行結果は以下のようになります。 -------------------------------------------- "そのまま表示" [10, 13, 15, 16, 5, 6, 80, 81, 50, 51, 100, 120] "昇順" [5, 6, 10, 13, 15, 16, 50, 51, 80, 81, 100, 120] "降順" [120, 100, 81, 80, 51, 50, 16, 15, 13, 10, 6, 5] "特赦なソート" [5, 13, 15, 51, 81, 120, 100, 80, 50, 16, 10, 6] "そのまま表示" [["taro", 1, 20], ["hanako", 2, 20], ["jiro", 1, 18], ["aiko", 2, 22], ["saburo", 1, 50], ["hanae", 2, 55]] "名前順" [["aiko", 2, 22], ["hanae", 2, 55], ["hanako", 2, 20], ["jiro", 1, 18], ["saburo", 1, 50], ["taro", 1, 20]] "性別、年齢順" [["jiro", 1, 18], ["taro", 1, 20], ["saburo", 1, 50], ["hanako", 2, 20], ["aiko", 2, 22], ["hanae", 2, 55]] -------------------------------------------- 結論としては、 個人環境で開発を行なう場合は、ブロックを引数とするメソッドは作成する必要はない。 理由は、メソッドに対する要件があらかじめ決まっているので、開発後にもし要件が追加に なっても、その時点で対応すればよい。 但し、rubyで標準で提供されているメソッドでブロック引数をとるものについては（例えばsortメソッド） そのブロック引数の記述の仕方を理解しておく必要がある。 となります。
モジュールを使うのは２種類の目的があります。どちらかに該当すれば使えば良いでしょう。 １．複数のクラスで同じ機能を使う（多重継承） 例： モジュール Comparable を使うと、<=> だけ定義すれば他の比較演算子が自動的に定義される ２．名前空間の分離 クラスや定数、メソッドなどの名前がぶつからないように、親となる名前空間を作る。 ライブラリの中の構造の整理など。 例： 「太郎」という名前では区別できないので、「山田::太郎」、「鈴木::太郎」を使う。
#2です。 >エディタをterwpadにしたのですが、C言語でも使うには >コンパイラが必要なのでしょうか？ >それとも >ウブンツのようにCCやGCCと打てばコンパイルしてくれるのでしょうか？ >できれば教えていただきたいです、申し訳ありません C言語を使うには、コンパイラが必要です。 GCCのことをコンパイラといいますが、 これは、エディタだけでは、だめで、GCCが必要になります。 あなたの希望を要約すると、 １）rubyとC言語をやりたい。 ２）エディタはterwpad(terapadの誤りと解釈します)をつかうことにした。 ３）上記をwindows8のマシンで実行したい。 上記の要件だけに限定すれば、cygwinを使用するのが、最も簡単な方法かと思います。 （但し、それ以外にそれ以外にあれもやりたい、これもやりたいという話が出で来るのであれば、 ubuntuをインストールするのが確実な方法です。ubuntuのインストールは、#2でも書きましたが、 ハードルが高いので、今の時点ではお勧めできません） C言語とRubyだけに限定という前提ですが、 cygwinのインストールは、下記のサイトを参考にして行なってください。 （CygwinでのC言語コンパイラgccの使い方） http://i-love-windows.blog.so-net.ne.jp/2010-02-01 尚、このサイトの説明では、選択するGCCのパッケージとしてDevelを指定しています。 そして、gcc-coreが最低限ひつようなものとして記述しています。 しかしながら、今後、デバッガなども必要になりますので、 Develの全てをインストールすることを推奨します。 又、rubyも使うということなので、Rubyのパッケージ（の全て）もインストールして下さい。 それで、rubyとC言語が使えるようになります。
No1です。テストはしていませんが、 class Range_List < Hash def initialize(hash) 　@list=hash end def [](other) 　@list.each { |range, value| 　　return value if range === other 　} 　nil end end def Range_List(hash) 　Range_List.new(hash) end で、 angle_to_direction = Range_List( a..b=>c, d..e=>f, g..h=>i, ～～)
View.new する中で Tk.mainloop がぐるぐる回ってるから、それを外に出せば？
diffは結構高度なことをやっているので、同じようなことをやるのは大変です。 それこそRubyからdiffを呼び出せば良いのですが、 それか、diff-lcsというのがありますので、それを使われてはいかがでしょうか。 http://rubygems.org/gems/diff-lcs rubygemsでインストールできます。他にもdiffから始まるものがたくさん有りますので、利用可能かもしれません。
>（できれば　こちらの方法で出力する方法も覚えたいのですが..　^^;　） 以下のようにしてください。 ---------------------------- CSV::open("output.csv","wb") do |writer| output_ary.each do |ar| writer << ar end end -----------------------------
推測も若干混じりますがORを使えばいいだけみたいですね Bookinfo.where( " title like ? OR author like ? ", "%#{params[:key]}%", "%#{params[:key]}%" ) 結構簡単な話でしたが 回答遅れましてスイマセン
＞Rubyの本に、「$」はグローバル変数の指定として、次のような複数の扱い方があります。 本の名前が書いてありませんが、入門書ですかね。入門書には全部書いてないことも多いですよ。 わからないことがあったらマニュアルを見る習慣をつけましょう。 マニュアルの $? の説明部分には、$? には、nilもしくはProcess::Status 型のオブジェクトが入っていると書いてあります。 従って、$? の使い方はマニュアルのProcess::Statusのクラスの説明の所を見てください。
こういう書き方はあまり見たことがないですが、どこに書いてありますか？ ただし irbを使っているときに、表示される出力を抑えるために同じような書き方をすることがあります。 agent.get('http://www.abc.com') とだけすると、その出力がそのまま画面に表示されますが、;nilをするとnilしか出力されませんので、
こんにちは ruby 1.9.3では以下で動いているようですけれども たしか1.8.7では上手く動かなかった記憶が……" --- # coding: Windows-31J require 'open3' Open3.popen3("dir") do |stdin, stdout, stderr| #stderr.close #stdin.puts "foobarbaz" #stdin.close str = stdout.read puts str end --- 標準入力だけで良いのであれば以下は如何でしょうか ----- str = `dir` # dirの両側はバッククオート(shift+@)です。 puts str -----
こんにちは 以下の様に表示したい拡張子をセミコロンで区切って並べてみて下さい。 ---------------------------------- # coding: windows-31j require 'vr/vruby' require 'vr/vrcontrol' class MyForm < VRForm include VRCommonDialog def construct self.caption = 'テスト' self.move(0,0,500,500) addControl(VREdit, 'edit1' , "", 0,0,400,25) addControl(VRButton,'button1',"File", 400,0 ,90,25) end def button1_clicked file = openFilenameDialog([["すべて","*.*"],["テキストファイル","*.txt; *.csv"]]) @edit1.text = file if file end end VRLocalScreen.start(MyForm)
Wayback Machine
10.8はまだ使っていないので確認できないのですが、OSのバージョンごとにバイナリが違います。 http://sourceforge.net/projects/rubycocoa/files/RubyCocoa/1.0.5/ もしだめなら、作者に連絡をされてはいかがでしょうか。 http://d.hatena.ne.jp/kimuraw/
No3です。 ＞Numeric並に手軽に呼び出せた方が良いと思ったからです。 それは無理です。せいぜい、組み込みクラスのRationalのように、 def Angle(x) Angle.new(x) end と、クラス名と同名の関数（Kernelのメソッド)を定義するくらいですね。 ＞クラスのみ参照で、戻り値(Numeric)を取得したいです。 ＞angle　　# => 30(Numeric)のオブジェクト いやだから、それはわかっていて、それを文字通りにするのは無理なので、それに対しての回答が、 ＞数値演算関係がすべて定義されているなら、あとは to_int to_i to_f to_s inspect 等を適切に定義すれば良いです。 です。 p angle で 30 を表示するためには、inspect を定義すれば良いし、puts angle なら to_s を定義すれば良いと言うことです。 ただ、 ＞30 + Angle.new(30) ＞Numeric側の演算子定義を直すのも手なのですが、 ということは、上記回答の前提の、「数値演算関係がすべて定義されているなら」もまだと言うことですね。 30 + Angle.new(30) の結果は、Angleオブジェクトじゃ無くてNumericオブジェクトということでいいですか？であれば、Numericクラスを修正するので無くAngle#coerceを定義してください。 class Angle def coerce(other) [other, @angle] end end ただ、そもそも 30 + Angle.new(30) などという計算をするのはおかしくないですか？ Angle.new(30) + Angle.new(30) とするべきでは？
Gemfileに gem 'rake', '0.9.2.2' のようにバージョンを指定した行を追加しておくとインストールできます。
どのようなエラーがでているのでしょうか？ またデバッガは使っていますか？ それを見れば解決できるはずですが。 さて、まずこのファイルをどこに置いていますか？ database.ymlと指定されていますので、configフォルダの中でしょうか。 ところが、database.ymlにはdb/development.sqlite3と書かれているはずですので、探し出すことができません。 このファイルをconfigフォルダの外に出して、'database.yml'を'config/database.yml'に変更するとともかくデータベースは読めるようになります。 次に、bookinfo = Bookinfo.order("updated_at DESC").firstで読み込んだときには、配列にはなっていません。 info = Bookinfo.order("updated_at DESC").first puts info.id puts info.author puts info.title puts info.page puts info.date_available としてみてください。
Rubyは全くの初心者ですけど、やっつけ仕事でいいならこれでどうですか。 #!/usr/bin/ruby `ifconfig eth0` =~ /inet ([\d\.]+)/; printf("%s\n", $1)
ページのHTMLを取得した後、HTMLを解析するツールで情報を切り出します。 切り出しの指定方法は、CSS風とxpathと２通りありますが、xpathが細かい指定ができるので良いと思います。細かい指定をしないのならCSS風が楽か。 ツールとしては、標準添付だとREXML(Rubyで書かれている)。gemだとNokogiri(Cで書かれている)。 いずれもウェブ上にドキュメントがあります。
while word = words.resume でループしようとしていると言うことは、wordsというfiberが終了すれば nil が返ることを期待しているのですか？ そうであれば、 words = Fiber.new do testfile.each do |line| line.scan(/\w+/) do |word| Fiber.yield word.downcase end end nil end 元のままだと、words.resumeの最終回は、testfile.each do ～ end の結果つまり、testfile が返るので、resumeで受け取ったあとのwhileが終了しません。
規模関係なしにテーブルは１つじゃないかな。 同じ項目のテーブルは複数持たない設計が一般的だと思うよ。 いちいちモデル、エンティティなんかを複数作るなんて非効率だし、データを取得するロジックだって無駄が多くなる。 技術的には自動的に作れるけど
どこのレンタルサーバーかが秘密にされているので、推測ですが、CGIの拡張子はcgiだけなのでは？ リネームしてみてください。 許可されていれば、.htaccessの設定で、.rb もCGIと認識させられます。 AddHandler cgi-script .rb
ネット用語の「モヒカン族」の事でしょうね。 モヒカン族の属性として、「些細な間違いであっても容赦なく指摘する」と言うのが有ります。 別に悪気が有るわけではないのですけど。 モヒカン族から指摘を受ける事を「斧を投げられた」と言うんじゃないでしょうか。 モヒカン族についてはこちらを http://www.j-cast.com/2006/10/22003464.html?p=all http://ja.wikipedia.org/wiki/%E3%83%A2%E3%83%92%E3%82%AB%E3%83%B3%E6%97%8F_%28%E3%83%8D%E3%83%83%E3%83%88%E7%94%A8%E8%AA%9E%29 http://www.portalshit.net/2005/11/13/170
うーん、最後にjeweler使ったのが1年前とかなので、その時大丈夫でしたと言っても参考にならないですよね・・・ かといって回答のためだけに今からjewelerでrubygems.orgへpushするのもちょっとためらわれるので・・・ そもそもの質問からは若干ずれちゃうんですけど、何点かおすすめさせて下さい。 1. bundlerを使う gem周りに関して、2009年当時と今ではだいぶ違ってます。 作成～管理まで、ここ2年程bundlerが定番だと思います。 日本ではqiitaに新しくてかつ濃い情報が上がってきてるので、是非一読を * http://qiita.com/items/69333fc7f5e52deafbec * http://qiita.com/items/5b85459738d97bfa0a23 2. まずはpebbles配下で試す それでもjewelerでということであれば、 まずは pebbles-[自分の名前] といったgemの公開から試してみるのもいいかもしれません。 ジョーク用の名前空間として提案されています（あまり活用されてなさそうですけど） 3. 失敗したら gemcutter を使って、yankしましょう 4. もしかしたら ついこの間rubygems.orgが攻撃受けてたんで、その後なんか変わったのかも・・・
https://rvm.io/rvm/install/ より 3. Reload shell configuration & test Close out your current shell or terminal session and open a new one (preferred). You may load RVM with the following command: user$ source ~/.rvm/scripts/rvm とあります。 このsourceコマンドのことを言っているのなら、新しいシェルの度に毎回実行しろ、ということのようです。 毎回入れるのが手間で常に有効にしたいのなら、.bashrcにでも書いておけばよいでしょう。
主たる使用場所は、case / when 構文です。あと、Enumerable#grep での比較。 おそらく再定義で問題は無いと思いますが、心配なら、Vectorを直接使うので無く、サブクラスを定義してそこで再定義して使えば良いかと思います。
こんにちは 私は、Visualurubyをruby-1.9.3で使用しています。 ActiveScriptRubyをインストールすると一緒にインストールされます。 仕事で使用する簡易ツールをrubyで作成していて、他の人に使用してもらうときに簡単なGUIをつけてexe化してます。 Windowsのファイル選択ダイアログも簡単に呼べますよ。 欠点としてAPI仕様が特殊？でGUI部分がrubyらしからぬソースになるということと、ドキュメントがしっかりと整備されていないことでしょうか（基本的なGUI部品だけの使用なら問題ないと思いますが） これが気になり以前他のGUIライブラリもいくつか試したことがあるのですが、exe化するとファイルサイズが超巨大になってしまったので諦めました。 以上、ご参考まで。
「デプロイ」は他の項目に比べて細かすぎる感じです。 本番での運用を開始することを言いたいのだと思いますが、「本番運用開始」「カットオーバー」「本番リリース」といった表現にした方が良いでしょう。 開発環境・テスト環境に配置するのも「デプロイ」ですし。 また、設計工程やそれと対になるテスト工程は、複数の段階を設けることが多いですが、テストを一つの段階として記述するなら、単に「設計」とすれば良いのではないでしょうか。 既にコメントが付いていますが、この様な工程に関する考え方は非常にウォーターフォール的です。 http://itpro.nikkeibp.co.jp/article/lecture/20061130/255501/ http://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A9%E3%83%BC%E3%82%BF%E3%83%BC%E3%83%95%E3%82%A9%E3%83%BC%E3%83%AB%E3%83%BB%E3%83%A2%E3%83%87%E3%83%AB ソフトウェア製造ではなくソフトウェア『開発』である以上、カットオーバー以前のほぼ全ての工程は本質的に設計の一部ともいえます。 http://web.archive.org/web/20080803072849/www.biwa.ne.jp/~mmura/SoftwareDevelopment/WhatIsSoftwareDesignJ.html http://www007.upp.so-net.ne.jp/kengai/fowler/newMethodology_j.html
お書きのURLにブラウザからアクセスしても、同じく「システムエラー」という画面が出ますので、 プログラムはそれを正常に取得していると思われます。 URLがおかしいのでは？ 一連のセッションの途中から入ろうとしているように見えますが。 ブラウザでできないことは、Mechanizeにもできません。
>しかし入力するページが今度は文字化けします。 >ブラウザのエンコードを変えても文字化けしたままです。 ひょっとして、そのスクリプトのファイル自身がUTF-8で保存してないんじゃないですか？（入力するHTMLページも）
エラーの理由はちゃんとメッセージに書いてありますよ。 can't convert nil into String nilをString(文字列)に変換できない よって、どちらかがnilということで ・array1[m]が文字列ではない ・array2[n]が文字列ではない に該当します。具体的には ・termがnil ・dic_trans_noun[n]がnil のどちらか、あるいは両方です。 さらに、 a+b は a.+(b)であること、nilには+メソッドが定義されていないことから、「nil+文字列」ではNoMethodErrorになります。 TypeErrorにはなっている、ということは、「文字列+nil」なので ・dic_trans_noun[n]がnil が原因です。 dic_trans_noun[n]がnil、ということは次の2通りが考えられます ・実際にdic_trans_nounのn要素にnilが代入されている ・nがdic_trans_nounの範囲外になっている dic_trans_nounについての記述がここには無いので、どちらの理由かは不明です。 対処法ですが ・nilの場合は別の処理をする ・nilにならないようにdic_trans_noun、またはnを調整する となります。どちらがこのプログラムに求められる仕様なのかは、現在の情報だけでは。私には判断できません。
単にresourcesで指定をしただけだと、７つの基本アクションすべてが実装されているとみなされますので、それらの一つでもかけていると動かないはずです。show関数そのものをコメントアウトするのでなく、showの内部で実行する処理だけをコメントアウトして関数自体は存在するようにすればいいんじゃないでしょうか。 あるいは、resourcesにexcept指定をして、showアクションのみ除外するようにしてもいいと思います。 resources :users, :except => :show
>saveコマンドでのusersテーブルへの書き込みが、下記でnewしたuserの内容ではなく、fixturesフォルダの下の、users.ymlのテストデータの内容が書き込まれるようなのですが、動作はそれでよいのでしょうか？また、YMLデータではなくて下記のデータを書き込ませるsaveの書き方とかはあるのでしょうか？ 回答： モデルの単体テスト（unit）実行時、まず、fixturesフォルダの下の、users.ymlがテスト用DBに書き込まれます。次に、テスト用スクリプトのsaveで実行した内容が、書き込まれます。 但し、test "user auth test" do が完了した時点で、saveで書き込んだ内容は、消滅します。 （次のテストは、fixturesフォルダの下の、users.ymlのデータ読み込んだ状態で、開始します） 従って、実際には、saveで実行した内容はテストDBに書き込まれます。 >後、現在、usersテーブルのhashed_passwordフィールドに、モデル（user.rb）の中で、パスワードのセッターを再定義するために、・・・・の記述を入れているのですが、現在何故か、YMLのデータが暗号化されないでそのまま入力されてしまっていますま。このメソッドの呼び出しは、上に書いたusersテーブルの内容またはYMLデータの書き込み時に、実行されると思っていいのでしょうか？ 回答： user = User.new(:name => "tanaka", :password => "pass", :password_confirmation => "pass") を実行したタイミングで実施されているはすです。但し、saveで実行した結果が消滅するために、実施されていないように見えるだけです。 以下、確認用のソースと実行結果です。（User.cryptは入力文字の後に:cryptを付加した文字を返す形で実装しています） test/fixtures/users.yml -------------------------------- # Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/Fixtures.html one: name: MyName1 password: MyPass1 password_confirmation: MyPass1 hashed_password: MyPass1_hash two: name: MyName2 password: MyPass2 password_confirmation: MyPass2 hashed_password: MyPass2_hash ----------------------------------------- test/unit/user_test.rb -------------------------------------------- require 'test_helper' class UserTest < ActiveSupport::TestCase test "user auth test" do users = User.all p "====user auth test_before===" users.each do |user| p user.name p user.hashed_password end user = User.new(:name => "tanaka", :password => "pass", :password_confirmation => "pass" ) assert user.save, 'Failure1 to save user!' users = User.all p "====user auth test_after====" users.each do |user| p user.name p user.hashed_password end assert true, 'Error auth test' end test "user get test" do user = User.new(:name => "AAAAA", :password => "BBBB", :password_confirmation => "BBBB" ) assert user.save, 'Failure2 to save user!' users = User.all p "===user get test_after===" users.each do |user| p user.name p user.hashed_password end assert true, 'Error Success to get' end end ----------------------------------------------- models/user.rb ----------------------------------------- class User < ActiveRecord::Base attr_accessible :hashed_password, :name, :password, :password_confirmation def User.encrypt(pwd) return pwd + ':encrypt' end def password=(pwd) @password = pwd return if pwd.blank? self.hashed_password = User.encrypt(@password) end end ---------------------------------------------- 実行コマンド rake db:test:load rake test:units TEST="test/unit/user_test.rb" 実行結果 --------------------------------------------------- # Running tests: "====user auth test_before===" "MyName2" "MyPass2_hash" "MyName1" "MyPass1_hash" "====user auth test_after====" "MyName2" "MyPass2_hash" "MyName1" "MyPass1_hash" "tanaka" "pass:encrypt" ."===user get test_after===" "MyName2" "MyPass2_hash" "MyName1" "MyPass1_hash" "AAAAA" "BBBB:encrypt" . Finished tests in 0.486803s, 4.1084 tests/s, 8.2169 assertions/s. 2 tests, 4 assertions, 0 failures, 0 errors, 0 skips ------------------------------------------------------ 半角空白で投稿のため、インデントがずれています。
translation_ja.ymlの記述に問題があります。 ymlはインデントが命です。インデントは半角の空白のみ使用可能です。 タブ、全角空白を、使用すると正しく動作しません。以下のように記述してください。 --------------------------------------- ja: 　　activerecord: 　　　　models: 　　　　　　demandapp: "要望" #g 　　　　attributes: 　　　　　　demandapp: 　　　　　　　　acquisition: "補足" #g 　　　　　　　　class1: "大分類" #g 　　　　　　　　class2: "分類" #g 　　　　　　　　content: "内容" #g 　　　　　　　　derivery: "納期" #g 　　　　　　　　report_count: "件数"　　#g 　　　　　　　　source: "提起" #g 　　　　　　　　state: "状態" #g ---------------------------------------- 尚、このgooのサイトは半角のインデントは使えないので、全角で投稿しています。 あなたが、この記述をするときは、必ず半角の空白で記述してください。 又、 report_count: "件数　#g"　ですが これは report_count: "件数"　#g の誤りと理解しました。 参考までに index.html.erbの内容と実行結果です。 ------------------------ <h1>Listing demandapps</h1> <table> <tr> <th>Acquisition</th> <th>Class1</th> <th>Class2</th> <th>Content</th> <th>Derivery</th> <th>Derivery</th> <th>Report count</th> <th>Source</th> <th>State</th> <th></th> <th></th> <th></th> </tr> <% @demandapps.each do |demandapp| %> <tr> <td><%= demandapp.acquisition %></td> <td><%= demandapp.class1 %></td> <td><%= demandapp.class2 %></td> <td><%= demandapp.content %></td> <td><%= demandapp.derivery %></td> <td><%= demandapp.derivery %></td> <td><%= demandapp.report_count %></td> <td><%= demandapp.source %></td> <td><%= demandapp.state %></td> <td><%= link_to 'Show', demandapp %></td> <td><%= link_to 'Edit', edit_demandapp_path(demandapp) %></td> <td><%= link_to 'Destroy', demandapp, method: :delete, data: { confirm: 'Are you sure?' } %></td> </tr> <% end %> </table> <br /> <% Demandapp.column_names.each do |col| %> <th> <%= t("activerecord.attributes.demandapp.#{col}") %> <%#= Demandapp.human_attribute_name("#{col}") %> </th> <% end %> <br /> <%= link_to 'New Demandapp', new_demandapp_path %> ------------------------
現在pagenateが動いているものがありますので、確認してみました。 Scientific Linux 6でRuby1.8.7、rails 3.2.11ですので参考にならないかも知れませんが、とりあえず 質問欄の番号に合わせています 1) rubygemsでインストール will_paginate (3.0.4) 2) Gemfileの最後に gem 'will_paginate' を追加 3) sudo bundle installを実行 4) controllerのindexの記述 def index @pdbs = Pdb.paginate( :page => params[:page], :per_page => 30, :order => "entry_id ASC") respond_to do |format| format.html # index.html.erb format.json { render :json => @pdbs } end end 以下はjsonで保存しているものがあるので記述しているような記憶が？？　曖昧です indexしかpaginateは使っていません 5) index.html.erb <table>～</table>の下に <p><%= will_paginate @entry_id %></p> 以上で正常に動いています。
もし情報がなければ？ このような本があります 一読してはいかがですか ---------------------- １４歳から始める Rubyインターネットプログラミング教室 掌田（しょうだ）津那乃（つやの）著 ISBN978-4-89977-182-1 C3055 Y2381 出版社：ラトルズ ----------------------
module_functionは、privateメソッドで かつ モジュールの特異メソッドなので、(リファレンスを参照のこと) モジュール名.メソッド名 以外の呼び出し方はできません。 解決法は、そもそも何をしたいのかによります。
1.9で、ASCII以外の文字を使うときには、ソースの前の方(1行目か2行目)で、文字コードの種類を指定する必要があります。 #! ruby # encoding: Shift_JIS ←これが必要(実際の文字エンコーディングに合わせて指定) puts "あいうえお" とか。 デフォルトのエンコーディングがUS-ASCIIなので、いわゆる半角英数記号以外は使えません。 使えるエンコーディング種類は、下記で。 ruby -e "puts Encoding.list.map(&:to_s).sort" Ruby 2.0 では、デフォルトが UTF-8 になるそうです。
今試してみましたが、エラーになりませんよ。 =の前に空白があるとか、 UTF-8のBOM付きとかはないですか? # あと、正確には=begin =endは埋め込みドキュメント # http://doc.ruby-lang.org/ja/1.9.3/doc/spec=2flexical.html#embed
WindowsのRubyは使ったことがないのですが、Rubyがどこまでメモリを使えるか一度確認されてはいかがでしょうか。 方法としては、例えば irbを起動して a=(0..2**21).collect{|b| b.to_f};nil と入力して、rubyが使用しているメモリサイズを確認してください。 次に数字21を1つずつ大きくしていき、エラーが出るまで、または動かなくなるまで順番に大きくしてみてください。 MacとLinuxの場合は、仮想メモリが使いきるくらいまではいけますが、(少なくとも数GBまでは問題ない) 32ビットOSの場合は2GBくらいで限界があるように思いますが、それくらいまでは大丈夫なはずですが。 もしそれより大分小さいところに限界があるのなら、Rubyのコンパイルするときに何かあるのかも知れませんが。 Rubyの実行時の設定として使用メモリの設定は無いはずです。
ああ、なるほど。 私はこのサイトのソースを3分しか見ていないので 見落としがあるかもしれませんが、 このサイトはCookieをJavascriptで発行していますね。 ブラウザであればJavascriptが動作しますが、 Rubyでブラウザがわりのことをしようと思ったら、 Javascriptを独自に解析しないといけません。 この場合、セッションのキーがCookieで発行されていなければ、 そのままCookieで送っている情報をRubyで送ればOKなことが多いです。 Cookieの送信の仕方は、下記のサイトに記述があります。 http://d.hatena.ne.jp/mzp/20070216/cookie
……えーと、ちっょと混乱してませんか？ まず、Ruby で扱ってるのはポインタでもアドレスでもなく参照です。 参照はポインタと違って演算することも直接値を指定することもできません。 というか、そういった危険な動作をできなくしたポインタ「のようなもの」です。 次に、あなたが提示された例ですが、C のポインタでも以下の通り動作は同じです。 int main(int argc, char** argv) { /* ポインタ参照先として用意 */ 　　int a1 = 1; 　　int a2 = 2; /* 使用するポインタ */ 　　int* p1; 　　int* p2; /* 1点目 */ 　　p1 = &a1; 　　p2 = p1; 　　p1 += 42; 　　printf("p2が指す先の値 : %d\n", *p2); /* 結果は43 */ /* 2点目 */ 　　p1 = &a1; 　　p2 = p1; 　　p1 = &a2; 　　printf("p2が指す先の値 : %d\n", *p2); /* 結果は 2 ではなく 43 */ 　　return 0; }
通常はto_fでしょう。 mapのto_i→to_fに変更でもいいし、 0.５<(x[3].to_f-x[2].to_f)/(x[3].to_f+x[2].to_f) と使うところで変更してもいい。 あるいは、(x[3]+x[2])<2*(x[3]-x[2]) と式を変形するとかでもいいです。 とにかく、整数同士の演算は整数になるので、小数になならない、と覚えてください
Rubyのバグのようですね。とりあえず回避のために、 row.map!{|x| x.sub(/\r/,'')} と、\r を削除してください。
このあたりを参考に http://jp.rubyist.net/magazine/?0017-BundledLibraries result(binding)が実行されたときに埋め込まれますので注意してください。 文字列の中に#{}で埋め組むよりも、場合によっては便利だったりしますので、HTMLではなく普通の文字列への埋め込みにも使っています。
name = 'file' + i + '\n' で文字列と整数を足し算しているのが原因です。 そのまま活かすとすると name = 'file' + i .to_s かな putsは改行文字が無ければ追加してくれます。有ったらそのまま出力します。 ただし '\n'ではなく、どうしてもつけたいなら"\n"にします。 また、name = "file#{i}" こんな書き方もできます。iを文字列に変換してくれます。 それとRubyを使う人はあまりforを使いません。私自身、実は今までforを使ったことはありません。 質問欄のプログラムは (1..10).each{|i| puts "file#{i}"} のように書く人が多い気がします。
そうですか。となると、普通にフォームを用意して、Ajax送信処理を自分でJavaScriptのスクリプトを書いて自前で用意するのが一番確実のように思えます。jQueryは標準で使えるはずですからそんなに面倒な処理にはならないと思いますし。 ※jQueryでフォームをAjax送信する参考URL http://libro.tuyano.com/index3?id=72001&page=5
> +nosuffixしてなければ、ruby/gemではruby1.8.x、 ruby1.9/gem1.9では1.9.xが使われるはず と書いたように、MacPortsでインストールしたRuby 1.9.xでは「1.9」というsuffix(後に付くもの)が付きます。 インストール時に+nosuffixを指定すれば、suffixが付きません。が、installed の結果は「ruby19 @1.9.3-p286_0+doc (active)」と nosuffixが無いので、1.9が付いています。 ただ、「ruby @1.8.7-p370_2 (active)」ともあるので、1.8.7もactiveで、/opt/local/bin/rubyが存在するはずなので、「opt/local/bin/ruby: bad interpreter: No such file or directory」というエラーとは状況が一致しないのが気になります。 sudo port -f deactivate ruby sudo port activate ruby でactiveしなおしたらこのエラー自体は治るかもしれません。 ただし、gemもrailsも1.8系になります。 1.9系を使うならgem1.9です あと、MacPortsには rb19-rails 等のrailsに関係するパッケージも用意されています。 Ruby1.9をMacPortsのものを使うなら、railsをはじめ、必要なものはrb19-で始まるパッケージをMacPortsからインストールして、足りないものはgem1.9で、というのがいいかと思います。
プロジェクトは、完成された状態で収録されているのですね？　つまり、「その状態で動きます」と書籍には説明されているのですね？ とすると、マイグレーションはどうなっていますか？　あたり前のことですが、あなたのサーバーには、そのプロジェクトで使用するデータベースのテーブルなどは用意されていないはずですので、データベースサーバーを起動し、rake db:migrateコマンドなどでマイグレーションを実行してテーブルなどを準備する必要があります。 またデータベースの設定はどうなっていますか？　アクセスするユーザー名とパスワードなどが正しく設定されているかどうかも確認する必要があるでしょう。 後は、プロジェクト内のディレクトリのアクセス権などでしょうか。一時ファイルなどの保管ディレクトリ（「tmp」フォルダ内など）が書き込み不可になっている、というようなことはないか、確認しておくとよいでしょう。 とりあえず、そのあたりについてひと通りチェックしてはいかがでしょう。
こんにちは こんなかんじで如何でしょうか？ -----ここから # coding: windows-31J ROOT_DIR = 'C:/root_dir' def add_str(file, char) File.open('temp.txt', 'w') do |fo| File.foreach(file) do |line| line.chomp! case line when 'A='; fo.puts "#{line}#{char}" when 'B='; fo.puts "#{line}(#{char})" else fo.puts line end end end File.delete(file) File.rename('temp.txt', file) end Dir.chdir(ROOT_DIR) Dir.foreach('.') do |subdir| next if /\.\.?/ =~ subdir next if File.file?(subdir) c0 = subdir[0] c1 = subdir[1] Dir.chdir(subdir) add_str('a.txt', c0) if File.exist?('a.txt') add_str('b.txt', c1) if File.exist?('b.txt') Dir.chdir('..') end -----ここまで
こんにちは。 >Rails側はDBから取得したデータをto_jsonでJSON形式に変換して >respond_toで返してあげればいいんですよね？ 使ったことないので調べた結果で申し訳ないのですがそのようです。 >UI側はこのデータを利用して構築するにはDOMでがりがり組むしかないんでしょうか？ これはどのようなものを作りたいかによると思います。 (ようはJSON形式のデータをどのように使うか) 例えばExtJSなんかを使うと結構凝ったアプリを比較的簡単に実装できます。 http://extjs.co.jp/ >これはRubyというよりjavascriptのカテゴリになるんでしょうか。 どちらかといえば比率的にはJavaScriptになると思いますが(画面構成をするのはクライアント側の話なため)難しいところです。
こんにちは 私も業務で似たようなプログラムを書いてデータ処理しています。 Rubyを覚えるとお手軽に処理できて便利ですよ！ こんな感じで如何でしょうか？ data.csvを読み込んで、output.csvに出力します。 CSVクラスは使ったことないので使用していません。 プログラムがどの様な動作をしているかは、ご自身で確認してみて下さいね。 ----ここから data = Hash.new{|h,k| h[k]=[]} # CSVファイル読み込み first_line = true File.foreach('data.csv') do |line| if first_line # 1行目読み飛ばし first_line = false next else ary = line.chomp.split("，") # CSVなので区切りは半角のカンマでは？ data[ary[1]].push(ary[7]) end end # データ出力 File.open('output.csv',"w") do |fo| data.each_key do |key| fo.puts "#{key},#{data[key].join(',')}" end end ----ここまで
どのような処理をされているのか分からないので何とも言えませんが。 エラーメッセージに関しては、このサイトが参考になりますかね・・。 URL : http://www.odin.hyork.net/write/write0211.html
CSSであまり複雑な指定をしたこと無いのですが、おそらくXPathのほうが細かい指定が出来ます。 Nokogiriでしか確認していませんが、おそらくHpricotでもXPath指定が出来ると思います。 content / "./*[@class!='header' and @class!='footer']" ./* が直下の任意のノードで、[ ] 内がその選択条件です。 あるいはまとめて、htmlから直接、 html / "//div[@class='content']/*[@class!='header' and @class!='footer']" 任意のノードでなく、div と p だけに限るなら、 content / "./*[((name()='p')or(name()='div')) and @class!='header' and @class!='footer']"
質問文ではファイルを相対パスで指定していますが、実際にもそうなんですか？ Deploy後に実行するときのカレントディレクトリと、読み書きしようとしているファイルが存在するディレクトリが合っていないんじゃないかという気がします。
こんにちは これは実際にクラスを定義して説明しないと分かりにくいのかなと思います。 なので簡単なプログラムを書いてみました。 （段付けに全角のスペースを使用しているので実行させる場合は半角スペースに書き換えが必要です） 後半の# => の右に書いてあるのがプログラムを実行したときに表示される文字です。 ------------------------------- class Person 　def set_name(name) 　　@name = name 　　puts "Set @name : #{@name}" 　end 　def print_name 　　puts "My name is #{@name}" 　end 　def set_age(age) 　　var = age 　　puts "Set age : #{var}" 　end 　def set_height(height) 　　var = height 　　puts "Set height : #{var}" 　end end taro = Person.new taro.set_name("Taro") # => Set @name : Taro taro.print_name # => My name is Taro taro.set_age(20) # => Set age : 20 taro.set_height(170) # => Set height : 170 jiro = Person.new jiro.set_name("Jiro") # => Set @name : Jiro jiro.print_name # => My name is Taro ------------------------------- 前半でPersonというクラスを定義しています。このクラスでは４個のメソッドと、@nameというインスタンス変数、下の二つのメソッドではvarというローカル変数を使用しています。 このクラスの定義が、言い換えれば設計図になります。 例えば一つの自動車の設計図から実体としての自動車がいくつも製造できるように、クラスの定義からも実体をいくつも作ることができて、この実体をインスタンスと言います。では、実体としてのインスタンスが何処にできるかというとコンピュータのメモリ空間の中に作られるのですね。具体的にどうなっているかは、今のところはあまり気にする必要はありません。 ではクラスの定義（設計図）からどうやってインスタンス（実体）を作るのかというと、それが次のプログラム行になります。 taro = Person.new jiro = Person.new ここではtaroとjiroという二つのインスタンス（実体）を作っています。インスタンスの中にはクラスの定義のとおりに@nameというインスタンス変数が存在して、４個のメソッドが使用可能になります。また、taroとjiroはそれぞれ個別の実体になります。ですからそれぞれの中に存在するインスタンス変数@nameもそれぞれ別のものとなります。 ここで、taroというインスタンスをみましょう。 taro.set_name("Taro") # => Set @name : Taro taro.print_name # => My name is Taro taroインスタンスのset_nameメソッドを利用して、インスタンス変数@nameに"Taro"という値をセットしていますね。次にtaroインスタンスのprint_nameというメソッドを利用して@nameの値を読み出して表示しています。同じインスタンス内のあるメソッドで設定したインスタンス変数の値が、同じインスタンス内の別のメソッドで読むことができるということですよね。つまりインスタンス変数はインスタンスの中にメソッドとは関係なく存在して値が保持されるということです。これが「同じインスタンス内であればメソッド定義を越えてその値を保持したままでいられる」という意味です。 つぎにローカル変数についてですが、 ローカル変数というのはメソッドの実行開始時に、コンピュータのメモリ空間のどこかに生成されてメソッドに実行が終わると破棄されて存在しなくなってしまいます。 taro.set_age(20) # => Set age : 20 taro.set_height(170) # => Set height : 170 このプログラム行では各の行で、taroインスタンスのset_ageメソッドとset_heghtメソッドが実行して、それぞれのメソッドでvarというローカル変数が使用されています。 set_ageメソッド開始時に作られたvarというローカル変数はset_ageメソッド終了時に破棄されます。そしてset_heghtメソッド実行時にまた別に作られます。つまりset_ageメソッドで使用したローカル変数varとset_hetghtメソッドで使用されたローカル変数は同じ名前ですが、まったくの別物ということですね。 ですからインスタンス変数の様に、あるメソッドでセットした値を別のメソッドで読み取るということは当然できません。これが「ローカル変数がメソッドごとに異なる」の意味です。 > hello = "Hello, Ruby." > p hello > puts hello > print hello > > どのメソッドでもローカル変数が持つ値は > 変わらないと思っていたのですが。 この４行のhelloというローカル変数が、ひとまとめで見えない一つのメソッドの中に書かれていると考えてみて下さい。 def 見えないメソッド 　hello = "Hello, Ruby." 　p hello 　puts hello 　print hello end 見えないメソッド開始時にhelloというローカル変数が作られて、見えないメソッド終了時にhelloというローカル変数は破棄されます。その間ではhelloは一つの変数として値を保持したまま存在します。 私も詳しく理解しているわけではありませんので、アバウトな説明になってしまいましたが、ご理解の一助にしていただければ幸いです。
コマンドプロンプトで、dir と打ってください。 calc.rb という名前のファイルが無いんだと思います。 ・ タイプミス ・ calc.rb.txt になっちゃっている など。
つ　「git clean -dxf」 手短で失礼
rubyのバージョンが1.9のようですので、magic commentを入れておいてください。 それがないと思わぬエラーがでたりしますので、 http://doc.ruby-lang.org/ja/1.9.3/doc/spec=2fm17n.html それとデバッガを使ってみてください。 ruby -rdebug xxxx xxxx のように-rdebugを入れれば使えるようになります。 またrubygemsからruby-debugをインスールする方法もあります。 `initialize': Permission denied - dir1 の周辺にどの行でエラーがあるのか情報があるはずです。dir1フォルダが書き込み（読み込み）禁止になっているような感じですが。 デバッガを使うのが解決の近道だと思います。
「rubyをコマンドプロンプトで使うとき」ですね? > ruby スクリプト名.rb ディレクトリ名 これでいいはずです。 ただし、ruby だけで実行できるように、PATHが通っている必要があります。
質問者様の求められている内容とは必ずしも一致しないのですが 　Railsは、linuxのサーバーで運用される所を前提としている文化があり、Rails自体も、インストールのしやすさなどよりも 進歩を続けるための変更を重きにおいています なので、Windows上に環境を構築しようとするとどうしてもライブラリ関係で摺り合わせられない状態がよく起こるので 実際の開発の現場ではWindows上にVMWareを使ってLinux環境を構築する方法が一般的に取られています unixのコマンドの習得などが必要になりますが、実際作成したサイトを運用しだすと知らないと運用できないところもあるので 出来ればVMWareかVirtualBoxでのLinux環境の構築をオススメいたします
サイトの最初に書いてある、これは実行していますか？ sudo gem install spreadsheet
require の仕様がver1.9で変わりました。 require "sub" と書くと、ライブラリディレクトリ($:)からしか探しません。 同じディレクトリにあるファイルをrequireする場合は、 require "./sub" としてください。
phpでフレームワークを使った開発の経験はありますでしょうか？ Rails自身はrubyで構成されたフレームワークです。 当然Railsを扱う為には、rubyのプログラムが書ける事が前提です。 なので、最初はrubyのお勉強をしましょう。 今まで作ったphpをrubyに乗せ換えて作り直ししてみるなどすると 本などで勉強するより、良いと思いますよ。 また、Railsは、それ自身の規約をしっかり覚える事が大事です。 しかし、rubyのプログラムの勉強が済んでからで大丈夫です。
やはりケースバイケースですが、初心者さんのようなので、一番代表的な方法はattrubutesメソッドにhashで引き渡してしまう方法 hash = { :title => "title" } @blog = Blog.new @blog.attributes = hash <%= form_for(@blog) do |f|%> <%=f.text_field :title, value:@blog.title %> <% end %> あとはnewメソッドにハッシュで引き渡してあげるとか Blog.new( title:"title" ) JavaScriptなどもありますが、高度な方法は聞かれていないようなので 上記の例で大丈夫でしょう
絵（というよりもデザイン）に興味や必要性は感じるのですが、そこまで真剣に取り組めた事の無い自分からするとものすごく羨ましい悩みです。 自分より高次元の悩みを持たれてる方へアドバイスなんておこがましいかなとは思うのですが、どうしても２点お伝えしたいなと思いました。 まず、その二つに意思を持って取り組んだすごいハッカーの名著があります。 翻訳者が著名な日本人ハッカーがであることも含めて奇跡の一冊ですので、これは是非読んでみてください。 ハッカーと画家 Paul Graham (原著), 川合 史朗 (翻訳) そもそもRubyがこの本に出てくるLispという言語に近いとも言われているので、御自分がPHPよりRubyに興味を持たれた理由のヒントも見えるかもしれません。 もう一つ、「今ハマれるものにハマる」ことをおすすめします。 モチベーションのバランスなどという物を取ろうとして、せっかくの才能がどちらについても頭打ちになってしまうことを恐れます。 「ハマる」程のモチベーションの高さは、いつでも得られるものではありません。 絵とプログラミングどちらの経験も今後無駄になるものでは無いでしょうし、どちらも環境が今しか許さないというものではないでしょう。（高価な研究機材が必要とか） であれば、何かにハマってるうちはそこに没入しましょう、だらだらと興味ないことの勉強をしたときの数年分を、一瞬で得られることもあります。 以上、どうしてもお伝えしたかったのはこの２点です。 おまけですが、Tumblrの時のようにプログラミングも是非github等に置いていつでも好きなときに触れるようしてみてください。 学習経緯の段階でも、きっと役立ちます。
見たところ、mongralでも起動が出来ているのを確認していないようなので 原因がpassengerの設定にあるのか、railsの設定にあるのかを切り分けましょう！ (railsのインストールしてあるディレクトリでで） bundle exec rails server --port 80 -e production のコマンドで。ポート番号と動作環境を指定して、railsが立ち上がるかを確認できたら railsでの設定は問題なのは確認できるので、それを目指してみましょう で、見たところbundle installを実行して、必要なgemをインストールしたかの記入がないので rails本体が最低限必要としているgem以外はインストールされていないようなので bundle installを実行したかを、まずはおしえてホシイです あと、bundle installを実行して無事にgemがインストールされている場合、インストール作業を行ったあたりで実行したコマンドを、historyコマンドで取り出して、貼り付けてもらえればもう少しお力になれます
User classを定義していないからです。 中略のところが大事なのですが。 http://oshiete1.nifty.com/qa7409116.html のNo.1に実際に動くプログラムを載せておりますので参考に。 # table作成 の前までで何かが欠けているはずです。
0.step(100, 0.2) do |i| puts i end Rangeオブジェクトを使った例 (0..100).step(0.2) do |i| puts i end forを使用してみました for i in 0.step(100, 0.2) do puts i end for i in (0..100).step(0.2) do puts i end どの書き方が一般的なのかはわからないです、スミマセン。 自分だったら観て意味が把握しやすい２番目の書き方を使用する様な気がします。
各OSで共通に使えるImageMagickが一番簡単だと思いますが、何が問題なのでしょうか？ LInuxはyumやrpmを使えば簡単にインストールできますし、MacはfinkやMacPortsを使えば簡単にインストールできますが。 Macは画像の簡単な処理ができるコマンド(sips)が最初から入っていますが、他の環境との整合性をとるのが難しくなると思うのですが。
基本的なところで2点。 その１： CSV.read(A) で読み込んだ物は、配列の配列で、マトリクスとは違います。 Matrix.rows() 等でマトリクスに変換が必要。 その２： CSV.read(A) で読み込んだ物の配列の要素は文字列です。数値ではありません。 文字列から数値に変換しないと演算できません。 ma = Matrix.rows(CSV.read(A)).map{|x| x.to_i} mb = Matrix.rows(CSV.read(B)).map{|x| x.to_i} mc = ma*mb
正にそのものという機能でFile.basenameというのがあります。 filepath = "public/foror/filename" p File.basename(filepath) #=> "filename" また正規表現リテラルは両端をスラッシュで囲む必要がありますね。 p filepath[/[^\/]+$/] #=> "filename" 下記マニュアルを参照してみてください。 Fileクラスマニュアル http://doc.ruby-lang.org/ja/1.9.3/class/File.html 正規表現リテラル http://doc.ruby-lang.org/ja/1.9.3/doc/spec=2fliteral.html#regexp
f.class f= File.open("hello.txt") ; puts f.class すると Ｆｉｌｅ と表示されます。 なお、言葉の使い方がおかしいです。 少なくとも、「このfの変数にどんなクラスのインスタンスが格納されているか知りたいのですが、」 より正しくは、「この変数fの指しているインスタンスのクラスを知りたいのですが、」
メモリに入りきる大きさならお書きの方法が一番良いと思います。ただ、配列にする必要はないで、 xxx = "hoge\n" out = "" IO.foreach("file") do |line| out << line if line != xxx end open("file","w") do |f| f.write out end 最初に削除する行が、ファイルのかなりうしろの方であることがわかっているなら、その位置(tell)を覚えておいて、書くときに"r+"でオープンしてその位置にseekしてから残りを書くとそこまでを書かない分だけ速いですが。closeしてから、縮まったサイズにtruncateする必要もあります。
cpでは依存関係が足りないのでは？ >require～ 不足しているのですよね。 同じ経験のようですが、結局入れ直しが早いのでしょうか。 http://tech.portalshit.net/2011/07/29/rvm-bad-interpreter-error パスが間違っているだけだと思いますけどね。
JavaScript を使えばできるよ！ Firefox と Chrome なら問題ないとおもうけど、 IE なら version 9 で。 「表示させる数値」に 123456789 を入力して実行してみて！ <!DOCTYPE html> <html lang="ja"> <head>   <meta charset="Shift_JIS"/>   <title>数字が入れ替わる JavaScript サンプル</title>   <style>     body { font-family:meiryo,sans-serif; }     input, button { font-family:inherit; font-size:inherit; }     h1 { font-size:120%; }     h2 { font-size:110%; }     [name=estimate] strong { font-size:150%; }     [name=estimate] input {       width:8em;       background-color:white;       text-align:right;     }     [name=estimate] button { font-size:85%; }   </style> </head> <body> <section>   <h1>数字が入れ替わる JavaScript サンプル</h1>   <p>エラー処理して無いので数値だけ入力してね。</p>   <form name="estimate">     <h2>表示させる数値</h2>     <div>       \<input type="text" name="result" value="0"/>-       <button type="submit">実行</button>       <button type="reset">クリア</button>     </div>     <h2>表示場所</h2>     <div>     <strong>\<input disabled="disabled" type="text" name="price" value="0"/>-</strong>     </div>   </form> </section> <script>   document.forms['estimate'].onsubmit = function () {     var est = document.forms['estimate'];     nextprice.result = parseInt(est.result.value);     //nextprice.addnumber 一回目の追加分(10^n)を計算     var log10 = Math.log(nextprice.result)*Math.LOG10E;     var ru_log10 = (log10 == Math.floor(log10))? log10: 1+Math.floor(log10);     nextprice.addnumber = Math.pow(10,ru_log10-1);     window.setTimeout(nextprice,100);     return false;   }   function nextprice () {     var est = document.forms['estimate'];     var price = parseInt(est.price.value);     while (nextprice.result < price + nextprice.addnumber) {       //桁を落として再確認       //console.log(nextprice.addnumber);       nextprice.addnumber /= 10;       if (nextprice.addnumber < 1)         //1 より小さいなら終了         return;     }     est.price.value = price + nextprice.addnumber;     window.setTimeout(nextprice, 100);   } </script> </body> </html>
Ruby 1.9 なら、ソースの文字コードの指定が必要です。 #!/usr/local/bin/ruby # encoding: Shift_JIS とか、 #!/usr/local/bin/ruby # encoding: utf-8 とか指定してください。
Googleで調べようという考え方が間違ってます。 マニュアルを見ましょう。 http://www.ruby-lang.org/ja/documentation/ Windowsを使っているなら、CHM版をダウンロードしておくと便利です。 http://doc.ruby-lang.org/archives/201107/ruby-refm-1.8.7-20110729.chm http://doc.ruby-lang.org/archives/201107/ruby-refm-1.9.2-20110729.chm
Windows環境で試したところ同じ症状になりました。 p line.encoding で確認したところ 私のところでの原因はquestion.txtから読み取った文字がutf-8として認識されていない（バイト値の並びとしてはとしては正しい）ことが原因で openの行で utf-8 であることを指定したら正常になりました。 f = open("./question.txt", "r:utf-8") 環境が異なるので同じ原因か判りませんけれどもご参考まで。
環境変数 RUBYLIBをshellで設定すれば、そこからライブラリを自動的に読んでくれます。 http://doc.ruby-lang.org/ja/1.8.7/doc/spec=2fenvvars.html を参考に
まず pry と pry-doc をインストールします。 $ gem install pry pry-doc 次に pry を起動します $ pry おもむろに適当な数値オブジェクトに cd します pry(1):1>cd 1 すると divmod の内容が確認できます pry(1):1>show-source divmod ------------------ 直接 numeric.c を開いて読むほうが早いな。
undefined method `comic_masters_path' とありますので、ルーティングのためのURLの生成に失敗しているようですね 推測ですがconfig/routes.rbにコントローラーの情報の登録を忘れていないでしょうか？ routes.rbを開いて以下の行を追加してみてください resources(:comic_masters) その後に,unix環境なら rake routes | grep comic と入力して comic_masters GET /comic_masters(.:format) comic_masters#index の様な感じの行が表示されれば設定がうまく行った証拠です
http://doc.okkez.net/static/191/doc/spec=2fvariables.html > 最初の代入はそのスコープに属するローカル変数の宣言になります。 > ローカル変数のスコープは、((*宣言した位置から*))その変数が宣言されたブロック、メソッド定義、またはクラス/モジュール定義の終りまでです とあります。 「最初の代入」は > total = 0 #行数の合計 > wtotal = 0 #単語数の合計 > ctotal = 0 #文字数の合計 です。例の場合、この外側にブロック等が無いので、ファイルの終わりがブロックの終わり=スコープの終わりです。 > l = 0 #file内の行数 > w = 0 #file内の単語数 > c = 0 #file内の文字数 これらは、eachのブロックの中で最初に代入されたので、ブロックにローカルな変数になり、ブロックの終わりのendまでがスコープで、その外では使えません。 # こういうのは「メソッドの中」とは言いません。 # メソッドの中、というの、普通は「メソッド定義の中」「メソッドの実装」を指します。 > ltotal += l > wtotal += w > ctotal += c ここのltotal,wtotak,ctotalは、ブロックの外で宣言されたltotal,wtotak,ctotalそのものです。 eachのブロックローカルなものではありません。
最も単純なのは、ファイルの内容すべてを IO.readlines などで変数に突っ込んで、置換した結果を memo.txt に上書き。
そもそもインスタンス生成の構文が違います。Rubyでは b = B.new と書きます。
>$ rails _3.1.0_ --version >Rails 3.2.3 私の環境のVersion 2.xではちゃんと $ rails _2.3.7_ --version Rails 2.3.7 と表示されますが、Ver 3.xでは仕様が変わったのかな、それともバグ？ いずれにせよ $ rails _3.1.0_ --version　このシンタックスはRailsのバージョンをスイッチする ものではないというが私の認識です。これはVer 2.xでも同じです。 何らか理由でバージョンを指定したい場合、フルパスで実行するか、 RVM GEMSETを使ってプロジェクトごとに環境を分けてしまう。 私はRVMを使ってます。
＞gemで入れたプログラムはどうやって使えばいいんでしょうか？ 附属のドキュメントを読みます。 gem server と打つと、私の環境だと、Server started at http://0.0.0.0:8808 と出ます。 http://localhost:8808 とか、http://"gem server を打ったホスト名":8808 で、ドキュメントが見られます。 パッケージ名の右の [rdoc] をクリックするとローカルのリファレンスが、[www]をクリックするとウェブ上のサイトが表示されます。 ただ、リファレンスには、クラスの説明とメソッドの説明だけで、サンプルがあまりないことが多いので、実際には 検索してサンプルを探すことが多いですが。
:1 はシンボルではありません。構文エラーです。 http://doc.ruby-lang.org/ja/1.9.3/class/Symbol.html ＞一番目のリテラルでシンボルを表す場合、`:' の後には識別子、メソッド名(`!',`?',`=' などの接尾辞を含む)、変数名 (`$'などの接頭辞を含む)、再定義できる演算子のいずれかに適合するものしか書くことはできません(そうでなければ文法エラーになります)。 1は識別名(名前)でもなく、メソッド名にもなれず、変数名でもなく、演算子でも無い。 %s(1) や :"1" のようにクォートする必要があります。
クラス変数は同一クラスのインスタンス間で同じ変数を用意します。 なので、インスタンスfooでセットした値がインスタンスbarで読めます。 インスタンス変数は、各インスタンスで別々の変数を用意します。 なのでインスタンスfooでセットした値は、インスタンスbarでは読めません。 インスタンスbarで読めるのは、インスタンスbarでセットした値です。 クラス変数は、当然アクセスメソッドも書けます（インスタンス変数みたいに楽が書き方はできませんが） class Foo attr_accessor :b def initialize @@a = 0 #クラス変数初期化 @b = 0 #インスタンス変数初期化 end def set_a(x) # クラス変数@@aに設定 @@a = x end def get_a # クラス変数@@aの値読み出し @@a end def print_var puts "@@a = #{@@a}" puts "@b = #{@b}" end end foo = Foo.new bar = Foo.new puts "インスタンスfooの変数を表示" foo.print_var puts "インスタンスbarの変数を表示" bar.print_var puts "インスタンスfooのクラス変数@@aに10をセット" foo.set_a(10) puts "インスタンスfooのインスタンス変数@@aに20をセット" foo.b = 20 puts "インスタンスfooの変数を表示" foo.print_var puts "インスタンスbarの変数を表示" bar.print_var puts "インスタンスbarのクラス変数@@aに100をセット" bar.set_a(100) puts "インスタンスbarのインスタンス変数@@aに200をセット" bar.b = 200 puts "インスタンスfooの変数を表示" foo.print_var puts "インスタンスbarの変数を表示" bar.print_var 実行結果 インスタンスfooの変数を表示 @@a = 0 @b = 0 インスタンスbarの変数を表示 @@a = 0 @b = 0 インスタンスfooのクラス変数@@aに10をセット インスタンスfooのインスタンス変数@@aに20をセット インスタンスfooの変数を表示 @@a = 10 @b = 20 インスタンスbarの変数を表示 @@a = 10　　　←インスタンスfooに書いた値が読める @b = 0 　　　←インスタンスfooに書いた値は読めない インスタンスbarのクラス変数@@aに100をセット インスタンスbarのインスタンス変数@@aに200をセット インスタンスfooの変数を表示 @@a = 100　　　←インスタンスbarに書いた値が読める @b = 20 　　　←インスタンスbarに書いた値は読めない インスタンスbarの変数を表示 @@a = 100 @b = 200
rails初心者で、ただいま勉強中の過程で回答させて頂きます rails3で環境を作ったのならおそらくMogrelのサーバーを「rails server」コマンドで実行したのでしょう その場合「rails server &」と末尾にアンパサンドをつけてあげればrailsをバックグランドで実行できます （他の回答者様からも同じ言い権がありますが、Linuxではコマンド末尾に＆をつけると処理をバックグランドに回せます） ちなみに railsを終了させるには「ps ax | grep rails」コマンドで実行しているrailsのプロセス番号を調べて 「kill -9 <railsのプロセス番号>」を実行すれば無事に終了させられます この場合でも、railsのログは延々と出力されて、他のコマンドの実行結果と出力が混ざるので気をつけましょう Mogrelでのrails実行は、勉強のために実行する環境としては、まぁ、悪いものではないですが 身内以上の人に公開するにはpassengerかunicornの導入をオススメいたします （個人的には、passengerの方がややオススメ）
＞この認識に間違いはないでしょうか。 合ってます。 class Hoge def initialize(x) @x=x #インスタンス変数@xに初期化パラメータを保存 end def foo puts @x #呼び出したオブジェクトのインスタンス変数に保存されたものを表示 w=@x #ローカル変数wに値を保存 end def bar puts w end end a=Hoge.new(123) a.foo #=> 123 がputされる a.bar #メソッドbarには、wという変数は定義されてないのでエラー インスタンス変数は、個々のオブジェクトがもつ属性のような物と思えば良いです。 図形の色とか、人間の名前とか。
何に挫折しやすい、って言う意見なのでしょう? 「後で『C言語等をやろうとしたら』」挫折しやすい」ってことですかね? Rubyを先にやったら、Cの「低級」なところ(メモリは自分で管理しないといけない、とか、文字列の扱いが面倒、とか、)で「Rubyと違うからわからない」と、挫折するかもしれません。 でも、そういう人は、Cから始めても、同じように挫折すると思います。
こんなんか？ http://d.hatena.ne.jp/babie/20100506/1273157249
D:\ruby>cscript //E:rubyscript hello.rb と、//E オプションでスクリプトエンジン名を指定してください。
Macだと、TextMateを使ってる人が多いような気がします。 あとは普通に emacs や vim 使いが多いんじゃないですかね。 補完機能を欲している人はあまり見かけません。
「日本語」と「書類作成テンプレート」みたいな物です。 日本語が出来ても、それだけで仕事が出来るわけではありませんよね。 どんなに優れた言語があっても、それで優れたシステムが作れるわけではありません。 むしろ、優れた開発支援システム(=フレームワーク)を使うために、そこで使われる言語を選ぶ場合があります。
> Ruby言語を使ってどういうことができますか？ 　身近なものでは、検索サイトの応答ページを作って送り返したり、通販サイトの商品選択や注文などの処理をしたり、掲示板サイトの制御をしたりすることができます。 　また、そのようなサーバに用意するプログラムだけではなく、計算したり、テキストデータを処理したり、正規表現による検索や編集などの処理に使えます。 > ネットワークプログラミングってなんですか？ 　はじめの例に示したようなインターネットを介して、サーバ側と閲覧者側とのやりとりを処理するプログラムを作ることです。 　Rubyはそのサーバ側の処理によく使われます。他にもPerl言語やPHP言語やASP.net言語やJava言語なども使われます。 　一方、閲覧者側でのプログラミングとして、WebページにJavaスクリプトやVBスクリプトを埋め込み、入力データのエラー確認やウインドウの切替などをさせることができます。 　参考までにネットワークプログラムについて私がまとめたレポートをリンクしておきますので、よかったら参考にしてみて下さい。 　ネットワークプログラミング教育法事始め http://homepage1.nifty.com/tetsuhito/download/netpro-teaching.pdf
新しいArrayが欲しいならmap、既存のArray自体を書き換えたいならmap!が基本かなと思います。 （collectでもいいんですが） その中でいくつか記法は考えられるので、好きなものを選んで下さい http://ideone.com/WLxMN ただ、安全性を重視するなら to_i より Integer() の方がいいかなと思います。
こちらの環境だと、met.methodsの戻り値に:parametersも含まれました。 ruby1.9.3p125のdarwinとmingw32で確認済みです。 また、最後に貼っておいたideoneの1.9.2でも同様の結果が見られます。 Object#methods の引数にniｌかfalseを渡しているのでなければ、 Railsなり何かの追加gemなりで上書きしてるのかもしれませんね もし素のRubyで出ているようであれば、是非Rubyのコミュニティへ報告を上げてあげて下さい ＜おまけ＞ クラスごとのメソッドを表示するという意味合いですと、Object#methodsではなくてModule#instance_methodsが適するんじゃないかなと思います。 Object#methodsには特異メソッドも含まれるので http://ideone.com/WSMU3
まさにtailを使えばよいのですが 例えば open("|tail -n 30 <xxxx.txt"){|fi| fi.gets(nil)}
10.7で確認してみましたが、 /System/Library/Frameworks/Ruby.framework/Versions/1.8/Headers/ruby.h /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/universal-darwin11.0/ruby.h /usr/lib/ruby 1/1.8/universal-darwin8.0/ruby.h （ほかにもいっぱい有りますが） Xcodeがインストールされていないような気もするのですが。
installed_spec_directoriesで検索したら、いろいろ出てきました。 ようするに、それまでのgemと両方混ぜて使おうとするとよくないようです。 対策としては ・configureに--disable-gemを付けて、ruby1.9.2のgemを無効にする ・旧gem関連のファイルを削除して、ruby1.9.2のgemだけを使う。GEM_HOMEはこちらで関係ありそう のどちらからしいです。 RDocについてはわかりません。こちらでは特になにもなかったので
素直に書くとこんな感じでしょうか http://ideone.com/FJDTo 予め一つの正規表現にまとめておくという考え方もありそうですが、数百となると試したこと無いですね・・・ http://ideone.com/KqRbw
Ruby1.8で、ソースに日本語を使うには、起動オプションでeuc-jpだと -Ke と指定する必要があります。 #!/usr/bin/ruby -Ke など。 プログラム中で$KCODE="e"等と書いても、それが効力を発するのは実行時のその文以降で、ソースプログラム解釈時(コンパイル時）には無効です。
sleep 1 while @@ie.Busy == true のsleepが失敗するのは、どこかでsleepメソッドを定義してしまっていることが原因ではないかと思います。 おそらく、 Kernel.sleep 1 while @@ie.Busy == true を使うことで解決するのではないかと思います。 (Kernel.sleepを再定義していればどうにもなりませんが。)
インターネットにRubyを解説しているサイトが沢山あります。 「Ruby 入門」で検索してみてください。
IO#readを使って全部の内容を読み込んでいるので、aaaはString。 文字列の特定の箇所を取り出すには [nth, len] による指定や、slice(nth, len) メソッドが使えます。 どこから読むかを @startとでもしておいて def read(size) 　ret=@data[@start,size] 　@start+=size return ret end @dataを破壊してもいいなら、先頭からsizeだけ削除していくとか。
yamlでやればどうでしょうか。 http://www.ruby-lang.org/ja/old-man/html/YAML.html print xxx.meibo.to_yaml のように書き出し、 YAML.load_file("ファイル名") で読み込めます。 日本語が含まれているときには ya2yaml を使った方が読める形で出力できます。
mapで良いと思います。 http://ideone.com/wx5HW ＜おまけ＞ このケースなら大丈夫だとは思うんですが、uriライブラリ使ったほうが気持ち良いとは思います。 http://ideone.com/8pFtg
そのまま、可変長引数として取り扱えますよ。 http://doc.ruby-lang.org/ja/1.9.3/doc/spec=2fdef.html#method 受ける側のメソッド内で*を外すと、Array扱いになります。 また、Arrayやらといったオブジェクトに*を付けてやると、他のメソッドへバラけたパラメータとして渡すことができます。 http://ideone.com/jbWZX 記載された例で行くと、 (動作チェックはしていません。「v」の扱い方についてだけです) # このように使いたいなら replace('table',%w(a, b, c, d, e, f, g),[va, vb, vc, vd, ve, vf, vg]) # こうします。 def replace(table, k, v) db.execute('replace into ' + table + '(' + k.join(',') + ') values('+ k.collect {'?'}'.join(’,’) +')' , *v) end # このように使いたいなら replace('table',%w(a, b, c, d, e, f, g), va, vb, vc, vd, ve, vf, vg) # こうします。 def replace(table, k, *v) db.execute('replace into ' + table + '(' + k.join(',') + ') values('+ k.collect {'?'}'.join(’,’) +')' , *v) end
丸投げするなよっていうのはおいておいて。 そんな面倒なことしなくてもcountメソッドでできる。 http://ref.xaio.jp/ruby/classes/array/count
injectはブロックの結果つまりv[:b]が、次のhになります。それは意図と違いますよね。 ～.inject(Hash.new(0)){|h,v| h[v[:a]]=v[:b]; h} と、ブロックの結果が h になるようにしてください。
ファイルが able word length word length word のように1行1語なら lines=IO.readlines("***.txt") # 全行を読み込み配列に words=lines.collect{|line| line.chomp} # 改行を取り除く word_groups=words.group_by{|word| word} # 単語ごとにHashに sorted_words=word_groups.sort_by{|word, word_array| -word_array.size} # 出現頻度の高い方かならべる のような感じです。 sorted_words[0]には["word", ["word", "word", "word"]] が入っています。
@member.class => Member Member.primary_key => "id" な感じ。
以下の行を追加してください。 ---------------------------------------------- print "*** ログインしてください。自分のアカウント名とパスワードを入力してください。 ***\n" print "アカウント:" account = gets.chop print "パスワード:" password = gets.chop if hash_account.has_key? account print "アカウントはすでにあります。別なアカウント名を使ってください。\n" else #そのアカウントとパスワードをファイルへ追加する fo = open("accountData.txt", "a") fo.printf("%s %s\n",account,password) fo.close print "アカウントを作成しました。\n" end --------------------------------------------------------- >rubyのバージョンはruby 1.8.7 (2010-01-10 patchlevel 249) [i386-mswin32]です。 これを見る限り、windowsのrubyのように見えます。 もし、windowsで実行しているなら $KCODE = "s" としてください。 そのほうが、漢字のアカウント名も登録できると思います。 こちらでの動作確認は、 ruby 1.8.5 (2006-08-25) [x86_64-linux]で行なっています。 (windowsのrubyのバージョンがruby 1.9.2p180 (2011-02-18) [i386-mingw32]のため）
1:if (hash_account[account] == password) 2:rint "ようこそ、", account,"さん。それではゲームを始めましょう。\n" 3:elsif 4:print "パスワードが間違っているようです。\n" 5:else 6:print account,"というアカウントはありません。\n" 7:end 上記の３行目のelsif　を elsif hash_account.has_key? account に変えてください。 そうすると正しく動きます。 尚、今後質問される場合はOS、rubyのバージョンも記述されたほうが より正確な回答が期待できます。
No1です。 まず、02の方は、Arrayに入れます。 words = [] 繰り返し開始 　words << 取得した言葉 繰り返し終了 つぶやく言葉 = words.sample で、wordsというArrayから乱数で１つ選ばれます。 01の方は、HTMLのソースを見て、手動で単語を集めるとするとどうするかを考え、それをプログラムに直します。 プログラムをあまり書いたことが無いのであれば、 １．まずは自分がHTMLを見て単語を集めてみる ２．今度は、離れたところに居る見知らぬ人もそのHTMLを見ているとして、電話でその人に指示して単語を集めるとしたら何と指示するかを考える ３． ２の内容をプログラムに変換する という手順でやってみるといいかと思います。
カレントディレクトリがロード対象のパスから外れているようですね。 １．○○.rbをスクリプトファイルと同じ場所に置いた場合は、オプションでカレントディレクトリを追加する > ruby -I. foo.rb ２．スクリプトファイル内でパスを追加する $LOAD_PATH.push('.') # この行をrequreの前に追加 require '○○' ３．あるいは既に定義されているパスに○○.rbを置くとか パスの確認は以下でできます。 > ruby -r pp -e"pp $LOAD_PATH" こんな感じでどうでしょうか。
こちらで確認すると○のパターンでもエラーになりますが、 sample1 = "C:\\test\\01sample01.txt" sample2 = "C:\\test\\sample01.txt" としてください。（\\のようの\を2回続ける） そうすると、正しく動作します。 当方、 windows-7 64Bit ruby 1.9.2p180 (2011-02-18) [i386-mingw32] で確認済みです。 尚、今後質問される場合は、 OSとrubyのバージョンも記述すると、より正確な回答が期待できるかと思います。
どうやら、このバージョンのrails.jsのバグのようです。 {:disable_with => "Sending…"} のオプションをとれば、 if 'OK' == params[:commit] then 　　OKボタンが押された際の処理 　else 　　CANCELボタンが押された際の処理 　end は有効になります。（params[:commit]に正しい値が設定されるようになります） 従って、このままの状態では、対策としては、 {:disable_with => "Sending…"}をとるか、 質問者さんが、書かれた方法になります。 どうしても、{:disable_with => "Sending…"}をとりたくなく、 rails.jsをjquery用のものに変えてよいなら、荒療治になりますが、以下の方法があります。 ファイルを書き換えるので、必ずバックアップを取って行なってください。 １．jqueryをダウンロード http://docs.jquery.com/Downloading_jQuery jQuery CDN jquery-1.6.4.min.js をダウンロードし、 jquery.jsにリネームする。 ２．jquery用のrails.jsを使う。 https://github.com/rails/jquery-ujs/tree/master/src からダウンロードする。 ３．publicのjavascripts下に以下のファイルがあるので削除する。 prototype.js controls.js effcts.js dragdrop.js ４．ダウンロードした jquery.js と rails.js をpublicのjavascripts下に配置する。 (rails.jsは上書きする） ５．アプリケーション設定ファイルを変更する。 通常、app\vies\layoutsのapplication.html.erbの内容は java_script_include_tag:defaults になっています。この場合、上記で削除したファイルをこのままではincludeしてしまう為、 デフォルトのicludeを rails.js jquery.js application.jsにするために 以下の行を configの下のapplication.rbに追加します。 config.action_view.javascript_expansions[:defaults] = %w(jquery rails) 追加したファイルは、以下のようになります。 module Apart class Application < Rails::Application 　　途中省略 config.action_view.javascript_expansions[:defaults] = %w(jquery rails) end end これで、デフォルトの状態で、 rails.js jquery.js application.js が読み込まれるようになります。 そして、params[:commit]が参照可能になります。 当方、以下の環境で確認済みです。 rails 3.0.7 ruby 1.9.2p180 (2011-02-18) [i386-mingw32] windows-7 64Bit 以上。
多分このプロジェクトの事ですよね https://github.com/josh/rack-openid GitHubで進行してるみたいですし、そのままGitHub経由で問い合わせてみてはどうでしょう。 人単位でmessage送れますけど、 https://github.com/josh それよりはissueの方が向いているような気はします。 https://github.com/josh/rack-openid/issues ＜おまけ＞ 自分もあんまりGitHub使い込んでいないんですけど、改良案がある時はforkしていじってもらえるのが嬉しい気はします。
No.2です > アカウントがある場合は成功しました 「成功しました」というのは表示するメッセージだったのですね。 プログラムを作って上手く動作したのだと勘違いしました、失礼しました。 > verifyAccount(account, password)という関数 学校の課題ということなのではっきりとは書きませんが ・前の住所の場合と同じ様にHashにファイルデータを読み込ませる 　　hash[アカウント] = パスワード ・account有無の確認は、hashのkeyにaccountが存在するか調べる。 ・passwordの確認は、hash[account]とpasswordが一致するか調べる。 以上でできると思います。 　Hashのマニュアル 　http://doc.ruby-lang.org/ja/1.8.7/class/Hash.html
> そこでTCPServerクラスのリファレンス（http://www.ruby-lang.org/ja/old-man/html/TCPServer.html）を見るのですが、 > このサイトのクラスメソッド欄にかいてあるTCPServer.openを呼んでも、戻り値の型が書いていません。 これを見ると、結局 TCPServer.open は TCPServer.new と同じで TCPServer のインスタンスが返っているようですね。 で、そのマニュアル古いから(URL も old-man てなってる)こっちを参照するといいよ http://doc.ruby-lang.org/ja/1.9.2/class/TCPServer.html
1.8.6環境は手元に無いのですが、1.8.7で同様の症状を確認しました。 ソース覗いた限り、markabyが依存しているbuilderライブラリ側の仕様っぽいですね。 String#encode有るか無いか（≒1.9系か否か）を分岐に、動作を大きく振り分けています。 試しに、最初貼られたコード内「require 'markaby'」の直後に次の５行を加えてみて下さい class String def to_xs(_=nil) self end end 多分望みの出力になったと思いますが、エスケープ処理全てすっ飛ばしている状態なので現実的ではありません。 ということで、自分からの結論は下記とします。 推奨: 1.9系への移行 次点: 1.8系のまま最後のstrを処理（ANo1）する
>syntax error, unexpected $end, expecting kEND >obj.save >^ >と表示されました。 >これを、解決するにはどうしたらよいのでしょうか？ どこでendの対応がずれてしまっています。 こちらで、実行して正常に動作したスクリプトを張りますので、 違いを確認してください。（endの対応にずれがないか確認してください） windows-7 ruby 1.9.2p180 (2011-02-18) [i386-mingw32] で動作確認済みです。 ------------------------------------------------- # coding:WINDOWS-31J class AddressFile def initialize(file) @original = file @meibo = {} fo = open("address_list.txt", "r") lines = fo.readlines fo.close for aLine in lines data = aLine.split @meibo[data[0]] = data[1] end end attr_accessor :meibo def search(name) @meibo[name] end def add(name,address) @meibo[name] = address end def save open(@original,"w") do |io| @meibo.each do |key,value| io.print "#{key} #{value}\n" end end end end obj = AddressFile.new("address_list.txt") obj.add("一郎", "一郎の住所") obj.add("次郎", "次郎の住所") obj.add("三郎", "三郎の住所") p obj.search("一郎") p obj.search("山田") obj.save -------------------------------------------------- また、今後質問される場合は、動作環境（OSとrubyのバージョン） もかかれると、より正確な回答が期待できますので、それも 書かれることをお勧めします。
こちらの環境では、正しく動作しています。 CentOS release 5.6 (Final) Rails 3.0.10 ruby 1.9.2p180 (2011-02-18 revision 30909) [i686-linux] request.xhr?はこちらではtrueになっています。 ですので、rails.jsとjquery.jsの何れかが不正のような気がします。 念のため、以下のようにしてみてください。 （ファイルを置き換えるので、バックアップは取っておいてください） １．jqueryをダウンロード http://docs.jquery.com/Downloading_jQuery jQuery CDN jquery-1.6.4.min.js をダウンロードし、 jquery.jsにリネームする。 ２．jquery用のrails.jsを使う。 https://github.com/rails/jquery-ujs/tree/master/src からダウンロードする。 ３．publicのjavascripts下に以下のファイルがあるので削除する。 prototype.js controls.js effcts.js dragdrop.js ４．ダウンロードした jquery.js と rails.js をpublicのjavascripts下に配置する。 (rails.jsは上書きする） 上記のようにしてやってみてください。そのようにすると、こちらでは正しく動作します。 特に、prototype.jsとjquery.jsは共存させないほうが安全です。
以下のようにしてください。 -------------------------------------- def add(name,address) @meibo[name] = address #この行を追加します end -----------------------------------------
変数の中身を確認したいということでしょうか？ コマンドライン上からなら表示したい変数の前にpを使えば表示されます。 例： test.rb --------------以下をコピー-------------- #!/usr/bin/ruby # 変数を宣言 i = 0 s = "a1234" # iは数値なので出力時には文字列型に変換する p "iの中身は" + i.to_s s = "b" #←変数の中身を変更 # sの中身を表示 p "iの中身は" + s # 終了 exit --------------ここまで-------------- あとはコマンド上から ruby test.rb で実行すれば以下の様に画面上に出力されると思います。 "iの中身は0" "iの中身はb" test.rbのパーミッションは755にしてください。
ANo2, ANo3で挙げられている部分に加え、ｐｒｉｎｔと_printメソッドを交互に呼び合っています。 クラスの階層関係を確かめたいコードだとした場合、 Test#_print側でKernel.printを叩くか、Test#ｐｒｉｎｔ側でsuperを呼び出して下さい http://ideone.com/nKHyk
ん？ @meibo が Hash として完成したんだよね？ キーは名前なんだよね？ def search(name) 　@meibo[name] end だけど、meibo に外からアクセスできるならこんなメソッド要らんのでは？
初心者というか、入門されてないようなので、書籍かサイトで、Rubyの文法を学ばれた方が良いかと思います。Rubyの文法はルールが少なくて非常にシンプルです。 以下の説明は他の言語経験者のための説明でRuby的な厳密さは一部無視しています。 ＞１）NetクラスのインナークラスであるSMTPクラスのstartメソッドを呼び出している。 Rubyにはインナークラスという概念はありません。Netはモジュールで、他の言語で言うとパッケージに近いです（同じでは無いですが）。 ＞２）('smtp.example.com', 25）これはstartメソッドの引数である。 これはそう。 ＞３）|smtp|よくわからない。このstartメソッドの戻り値？startメソッドの中なのに？ startメソッドの引数はもう一つあって、 {|smtp| から 最後の } までが無名メソッド(ブロック）で、この無名メソッドを引数に渡して、startから呼び返して(コールバック)もらいます。 Rubyのメソッド呼び出しは、「ブロック付きメソッド呼び出し」という構文があって、あたかも言語構文のような形で最大一つの無名メソッドを呼び出し先メソッドに渡すことが出来ます。 簡単な例では、 (1..10).each { |i| puts i } は、def foo(i); puts i; end というようなメソッドをeachにコールバック用として渡しています。 ということで|smtp|は、コールバックメソッドの引数です。 startメソッドはTCPコネクションを張って、そのコネクションを含んだSMTPクラスのオブジェクトを引数としてコールバックを呼び出します。 ＞４）From: Your Name <from@example.com>　ここもよくわからない。なぜ急に変数にも代入しない　文字列を書いたのか？ これは、sh(Unixのシェル) 由来のヒアドキュメントという構文です。<<-EndOfMail がヒアドキュメントの開始。 複数行の文字列リテラルを書くときによく使われます。 <<-EndOfMail の部分が、次の行から EndOfMailの行の前までの文字列リテラルと置き換わります。 つまり、下記と同じ。 smtp.send_message( "From: Your Name <from@example.com> To: Dest Address <to@example.net> Subject: test mail Date: Sat, 23 Jun 2001 16:26:43 +0900 Message-Id: <unique.message.id.string@yourhost.example.com> This is a test mail. ", 'from@example.com', 'to@example.net') ↑この書き方だと、第二引数以降がメソッド名から離れすぎてしまう。
caseのところで式を省略します。 case when x < 0 when x > 0 まあ、マニュアル見てください。
「!~」ですね。 否定の「!」と正規表現比較の「~」が組み合わさっています。 記号系は「Rubyで使われる記号の意味（正規表現の複雑な記号は除く）」にいろいろ載ってますよ。
キーワードは「to_proc」です。 [1,2,3].map(&:succ) は [1,2,3].map{|i| i.succ } と同じです。 「&:」ではなく「& と　:succ」ですね。コロンから始まるのは「シンボル」です。 メソッドの引数の頭に「&」が付いていると、Rubyはこれをブロックだと判断します。でも実際はシンボル。 ここで、Rubyが気を利かせて(笑)Symbolクラスのto_procメソッドを呼んでくれます。 これによって [1,2,3].map(&:succ) は [1,2,3].map{|i| i.succ } と同じであるということになります。 一応、記述の簡略化のテクニックということになりますね。 詳しくは「to_proc」で検索して下記のような記事を見てもらえれば分かるかと思います。 http://d.hatena.ne.jp/keyesberry/20080917/p1 http://rubyist.g.hatena.ne.jp/muscovyduck/20061222/p1 http://blog.livedoor.jp/sasata299/archives/51541958.html
Array.new(3,"TEST")、Array.new(3) { "TEST" }で生成される配列はどちらも見た目上["TEST","TEST","TEST"]ですが、両者で異なるのが「3つのオブジェクトが同一かどうか」です。 Array.new(3,"TEST")の場合 配列の中身はこの↑"TEST"という文字列です。同じオブジェクトです。 Array.new(3) { "TEST" }の場合 配列の中身は↑この部分↑つまりブロックを実行した戻り値としての"TEST"という文字列です。そして、Array#newにブロックを渡した場合、それぞれの要素について毎回ブロックが呼ばれます。つまり、毎回新しい"TEST"という文字列を生成しているので、3つの"TEST"は異なるオブジェクトです。 object_idというのがあります。これは各オブジェクトに自動的に割り当てられる数値のIDで、異なるオブジェクトは必ず異なるobject_idになります。逆に「同じオブジェクトのobject_idは同じ」と言うことになります。 @array = Array.new(3, "TEST") @array.each {|n| puts n.object_id} と @array = Array.new(3){ "TEST" } @array.each {|n| puts n.object_id} をそれぞれ実行した結果を比べれば違いがよく分かると思います。 …まあマニュアル見れば詳しく書いてあるんですけどね(笑)
私の環境(windows7-64ビット)ではRDEが実行できないので、推測になりますが、 STDOUT.sync = trueをスクリプトの最初に追加してみてください。 RDEのfaqに記述されています。
私の場合、timesは「特定回数繰り返すこと」だけが必要なときに主に使います。 10.times {|i| 　puts "test" } iは使っていません。10回putsするだけが目的なので、timesが一番簡潔です。 あとは「0～nの数値か数字がほしいとき」ですね。 5.times{|i| 　@pictures[i] = "./img/pic#{i}.jpg" } 以上、参考になれば。
プログラミング初心者なら、「たのしいRuby」一択。 http://www.amazon.co.jp/dp/4797357401 プログラミング経験者なら、上記もしくは　「はじめてのRuby」 http://www.amazon.co.jp/dp/4873113679　 オブジェクト指向プログラミング経験者なら、上記もしくは、「プログラミング言語Ruby」「プログラミングRuby1.9」 http://www.amazon.co.jp/dp/4873113946 http://www.amazon.co.jp/dp/4274068099　（これは読んだことないのですが） プログラミング初心者が経験者向けの本を読むとわけわかんないと思います。
適当にググると、InstantRails てのを使えという雰囲気。 http://www.ne.jp/asahi/free/hiroro/RubyOnRailsTutorial/Tutorial_jp.htm しかしまあ、Windows で Rails アプリケーションを開発しようとすると様々な困難が待ち受けていることでしょう。 全くお勧めできません。
一つずつです。 ハッシュの定義にはいろいろな書き方がありますが、質問文にある記法の場合、括弧の中の要素を先頭から順にキー、値、キー、値…と拾っていきますので、偶数個でないと最後にキーが余るわけです。 どこの注意書きだか知りませんが、そういうのはちゃんと理由を書いて説明してくれないと困りますね…
カタカナでならば「トゥ・フォーマッテド・ストリング」。
追記された状況を見る限り、JobやUserといった構造体クラスやテーブルクラスを書きわけておくことで取り回しが楽になりそうな気もしますが・・・今回の本題からははずれちゃいますね。 本題の中で残っている疑問点は、多分 Enumerable#inject と Hash.[] ですよね Enumerable#inject は有名なメソッドなので、少し検索すればいっぱい解説が出てくると思います。 自分はとりあえず公式リファレンスのURLだけ貼っておきます。 http://doc.ruby-lang.org/ja/1.8.7/class/Enumerable.html http://doc.ruby-lang.org/ja/1.9.2/class/Enumerable.html inject(sym) -> object inject(init, sym) -> object の部分ですね。 ぱっと見わかりづらいメソッドだとは思うので、いくつか書いてみて動作確認することをお勧めします。 RubyのHashは、1.9系から順番の保持を保証するようになりました。（OrderedHash） Hash.[] を使うことでソートが崩れて、なおかつinjectのシンボル記法が使えるということであれば、多分Ruby1.8.7をお使いですよね？ もしRuby1.9系で#eachの順番だけ維持されればいい（indexアクセス等不要）なら、最終形がHashでも動きます。 Ruby1.8.7から乗り換えるわけにはいかないということであれば、多重配列で我慢するかテーブルクラスを書くことになるのかなと思います。
私がいつも見ていたサイト。 http://www.mapee.jp/ruby/ http://www.namaraii.com/rubytips/ あと、公式リファレンス http://doc.okkez.net/ はもちろん必須ですね。
＞インスタンスと属性、または属性値 この場合の「属性値」というのはインスタンス変数のことだと思うのですが、そうすると違いと言うか当然まったくの別物ですね。 「インスタンス」は単純に言うと「何らかのクラスのオブジェクト」です。もちろんRubyではどんなオブジェクトも何らかのクラスに属しているわけですが、「インスタンス」と呼ぶ場合は特に @instance = SampleClass.new として生成したオブジェクトのことを一般的に指します。 ＞初期化する意味 簡単に言えば初期値が必要な場合です。 class TestClass 　def initialize 　　@counter = 0 　end 　def count_up 　　@counter += 1 　end end @n = TestClass.new @n.count_up こうすると意図が見えやすいでしょうか。 @counterの初期値は、もちろん0である必要はありませんが何らかの数値が入っていないといけません。でないとcount_upメソッド実行時に+=を実行できずエラーとなります(初期化していないインスタンス変数の値はnil)。
独学でRubyをやってるものです。 とりあえず私がお世話になった「たのしいRuby」を。 プログラム自体全くの素人とのことなので一番初めだけ難しいと思いますが、少しでもプログラムというものが分かりはじめるころにこの本はすごくいいです。 あとは、やっぱり公式のリファレンスですね。 なんらかのメソッドひとつとっても、当然公式以上に正しい説明はないわけですから。
解釈としては間違ってないです。 「クラス定義の中で～」の文章を、「メソッド定義の中で～」が上書きする形で、別の意味を与えていると思えば良いと思います。 「クラス定義のコンテキストの中で」の略記と考えた方が良いか。
とりあえずはRubyをインストールすると含まれる組み込みライブラリとか標準添付ライブラリの中で興味を惹くものでしょうか。
単項演算子の+と見なされるためです。 a = +3 みたいな。 構文としては、 print value.to_s +"の時"+ x.to_s + "<br />" が、 print value.to_s( (+"の時")+ x.to_s + "<br />") のように解釈されています。 メソッド呼び出しの括弧を省略できるRubyでは、曖昧な構文の時に空白をみて解釈を決めています。 print value.to_s + "の時"+ x.to_s + "<br />" print value.to_s+"の時"+x.to_s+"<br />" print value.to_s() +"の時"+ x.to_s() + "<br />" ならOK。 下記のどちらかに書法ルールを統一していれば普通は大丈夫です。 ・二項演算子の前後に必ず空白を入れない ・二項演算子の前後に必ず空白を入れる
この辺ちゃんと使った経験が無いので、「普通こうする」という回答にはなって無いかもしれませんが・・・ >Net**HTTP::Postクラスのrequestメソッドを用いてハッシュとして渡した時 これは、 #set_form_data (#form_data=) で予め値を入れたっていうことですよね？ net/http ライブラリのソースを覗いてみると、set_form_dataの方はエンコードかけていますが、HTTP#postの2引数目はそのまま文字列として取り扱っているみたいです。 ということで、一度きりの使い捨てなら「query=subject&target=ruby&PHP」を「query=subject&target=ruby%26PHP」へ書き換えれば済むんじゃないでしょうか。 こういう使い方が多いのであれば、ヘルパーメソッド作っておいてもいいかもしれませんが・・・ https://ideone.com/3fi2I そもそも、HTTP#post側だとこういう用法を想定していないのかもしれませんね。 フォームのデータ送るなら、#form_data=を予め使っておく方が素直なのかもしれません。
この場合はArray#-が単純で良いと思います。 ([3, 4] - hairetu).empty?
私見ではありますが、クラスやインスタンス変数などの概念は、はっきり言って余程の適性がない限り、講座を受けるだけではまず理解出来ないと思います。というより、聞くだけで理解できれば世の中にプログラマなど必要なくなります。 また概念が分かっても、大抵の場合、他の方法でも同じ処理が組めるので、どういう利点があるのかが分からないと思います。少なくとも、自分はそうでした。 やはり、一度は良く利用されているオープンソースのWEBアプリのソースを読んでみたり、自分でプログラムを作ってみたりしなければ理解はできないと思います。特に理解出来ないのなら、無理やりにでもクラスやインスタンス変数を組み込んだプログラムを作ってみましょう。そうすれば、ある日自然と理解できるようになるかと思います。 習うより慣れろ、ですね。その時「あの講座では、このことを言っていたのか」と理解できると思います。
> ブラウザってそう簡単に変更できるのですか？ できるよ。 firefox や Chrome でググればダウンロードするサイトにあっという間に到着。インストールするだけ。
インスタンスそのものをnilに変える（？）というのではなく、名前の参照先をnilに変えるということですよね？ となると、その名前を何かしらの手段で入手する必要がありそうですが、どこまでを対象とされているのでしょうか。 また、newメソッド以外にもインスタンスを作成する可能性はありますが、newメソッド経由で作成された物に限るのでしょうか。 仮にグローバル変数かつインスタンス全てということであれば、こういった感じで実現できそうです。 https://ideone.com/Jpphp (===はクラス判定に限らないことと、kind_of?はサブクラス等も含められる事に気をつけてください) クラス変数や定数、現在のローカル変数等も同様に実現可能です。 ただ、それで対象のインスタンスすべてがGCによって攫われたのかと言われると、自分にもよくわかりません。 最後にObjectSpace経由で対象のインスタンスが無くなっている事を確認したほうがいいかもしれませんが・・・それでも全ての「組み込みクラスのインスタンス」まで含められるわけではない筈です。 ちなみに、どういった用途を想定されているのでしょうか？
物理的なディスクが何かによります。 一般的には、１つのハードディスクをＣドライブとＤドライブに分けて使用することが多いですが、この場合には同じハードディスクを使用しているのでほとんど差は無いでしょう。プログラムと処理データをＣドライブに配置するとハードディスクの構造上、読取りヘッドが位置決めをするための時間がごくわずかに減少するかもしれませんが人が速くなったと認知できるほどの改善はまず期待できません。 Ｃドライブがハードディスクで、ＤドライブがＵＳＢメモリなどである場合には、プログラムの処理データが大きいほど（３００ＭＢなど）、処理時間が短縮されることが期待できます。これは、ハードディスクよりもＵＳＢメモリの方が読み書きにかかる時間が短いためです。 このため、ＷｉｎｄｏｗｓではＵＳＢメモリの高速性を利用した高速化機能Ｒｅａｄｙｂｏｏｓｔがあります。 もっとも、速くなっても意味（価値）があるのか・・・？　という問題は残ります。 現代では、実用性や利便性、特に経済性が優先されるので、必要に迫られないかぎり高速化を考える必要はありません。プログラムが実用的な処理時間の範囲内で結果を返せるなら、内部の処理効率が悪いことを気にするのは無益です。Ｒｕｂｙなどを使うのなら、生産性（経済性）が高いことが最重要なのですから。 また、プログラムの処理速度が遅いときに、プログラムを改善するよりも、ディスクをＳＳＤに置換える、メモリを増設する、ＣＰＵを増設または置換える方が経済的であることが多々あります。もっとも、扱うデータ量が多い場合はプログラムが遅いことによって失われる時間などが大きくなる場合には、プログラムを改善するべきでしょう。 というわけで、やや批判的になりますが、プログラムの実行速度を気にするよりもプログラムの恩恵（貢献）を重視してくださいが結論です。 # まあ、チューニングして目に見えて高速化したときは、うれしいですよね♪
目標があった方が習得早いのは確かですが、明確な目標がない場合、目標作る方がただ学習するより難しかったりというのはありますね。 何か興味があるものが見つけられるとよいのですが。 作ってみたいものがあれば、それに関する入門書とか、使えそうなライブラリを探してみるとか、 これなら作れそうというのがあれば、作ってみればよいだけですし。 やりたい事が見つかれば、とりあえず挑戦してみて、わからなければもっと簡略化したものにしてみるとか、参考書を調べたり、より具体的な質問ができたり、道筋を立てるといった事が能動的に出来るので、目標を持つといいよと皆言うのだと思います。 でも人から与えられた課題が、能動的な行動に結びつく「目標」になることってあんまないかなぁと。 ウェブ工学って具体的にどういう研究をしてるのか私は知らないのですが、調べてみると検索エンジンみたいな基盤技術や、ブログとかSNSみたいなソーシャルサービスのデータマイニングとか、そういうのを研究してる…のかな？ 結局、ご自身が院に進んでからしたい研究があるなら、それ繋がるようなものを作ることを目標に勉強されるのが一番いいと思いますが、もし具体的にないのであれば、C++とRubyかPerlの入門書を読んで、そこに書いてある内容くらいは本見なくても使えるようにしておくくらいでもいいんじゃないでしょうか？ 必要なことは必要になれば必然的に覚えます。（でないと卒業できないですよね） 私は全然ウェブ工学とか勉強したこと無いので参考になるかはわかりませんが、 関係がありそうで面白そうなテーマとしては、ウェブクローラとか、簡易検索エンジン、人工無能の自作とかどうでしょう。 はじめてのAIプログラミング―C言語で作る人工知能と人工無能 http://www.amazon.co.jp/%E3%81%AF%E3%81%98%E3%82%81%E3%81%A6%E3%81%AEAI%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E2%80%95C%E8%A8%80%E8%AA%9E%E3%81%A7%E4%BD%9C%E3%82%8B%E4%BA%BA%E5%B7%A5%E7%9F%A5%E8%83%BD%E3%81%A8%E4%BA%BA%E5%B7%A5%E7%84%A1%E8%83%BD-%E5%B0%8F%E9%AB%98-%E7%9F%A5%E5%AE%8F/dp/4274066649/ref=pd_sim_b1 Rubyでつくる検索エンジン http://www.amazon.co.jp/Ruby%E3%81%A7%E3%81%A4%E3%81%8F%E3%82%8B%E6%A4%9C%E7%B4%A2%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%B3-%E6%98%9F%E6%BE%A4-%E9%9A%86/dp/4839931496 といったような興味ありそうなテーマを、覚えたい言語で扱ってる本を探してみるというのもいいんじゃないでしょうか。 簡単なモノから１つづステップアップしてくんではなく、いきなり高いところから始めて、わからない事があったら、入門書などを調べるという逆説的なやり方です。 （「なに」が「どう」わからないか、が解ると、それが勉強の動機になることが往々にしてあります。） あとは、Fortranで組んでいたものをC++やRubyで組んでみる…とかでしょうか。 今まで科学計算よりのプログラムを主に組まれていたようなので、 もっとアプリケーションよりのプログラムを作ることには挑戦された方がよいと思います。
そういうときは、return でなく、break を使います。 return はメソッドからの戻りなので、たとえば、 def foo 　(1..10).each do |i| 　　return 1 if i==3 　end 0 end のreturnは、eachからの抜け出しでなく、fooの終了になります。 お書きのプログラムだと、メソッドの中じゃないのにreturnしてるので、エラーですね。 ブロックからの抜け出しはbreakです。 中級以上の話になると、lambdaとprocというオブジェクトがあって、lambdaのブロックの中ではreturnが使えるなど、ちょっとややこしい話になりますが、初級のうちは気にしなくていいでしょう。
Array#eachではイテレート毎に要素数のチェックをしてるので、後ろに足していく pushなら問題ないみたいです。イテレート中のpopも大丈夫です。 でも、Arrayの先頭を操作する、shiftやunshiftでは内部ループカウンタとインデックスが ずれるのでダメですね。 一応CRubyの実装をコピペしときます。 array.c: VALUE rb_ary_each(VALUE ary) { 　　long i; 　　RETURN_ENUMERATOR(ary, 0, 0); 　　for (i=0; i<RARRAY_LEN(ary); i++) { // ←イテレート毎に長さのチェック 　　　　rb_yield(RARRAY_PTR(ary)[i]); 　　} 　　return ary; }
ブラウザでアクセスすると、wwwの取れた方へリダイレクトかかりますよね？ Rubyでも、例えばこういった感じの物を動かしてみてください https://ideone.com/Q5ZFR 何もいじらないと301が返りますし、その先を追いかけるようにすれば中身が取れます。 先日同じような話が出たので、詳細はこちらを参照して下さい http://okwave.jp/qa/q6987202.html
C:/ruby/binの中にgem.batとかirb.batという名前のバッチファイルがあると思います。 この一つをコピーしてexerb.batという名前のファイルを作成してください。
エンジニアとしての見方やビジネスとしての見方等いろいろありますが 質問の意図を出来るだけ読み取らせていただきます Rubyが流行ったのは Ruby on Rails(Web開発の環境)とセットでのお話なのでWeb開発でのお話だと思いますが ビジネス的な視点からは デザインや作り込みはいいので、とにかくきちんと動くものが欲しい という場合には、機能をおおざっぱに企画して エンジニアに任せれば超短期間で出来上がったものが上がってくる開発スピードだと思います エンジニア側でプロジェクトが新規に起こるたびに作り込んでいたWeb開発のツール類が あらかじめ揃っていたり、簡単なコマンドで自動生成されますので 案件ごとの作り込み部分の前段階までは驚異的な速度で開発できます ただ、Ruby on Rails の良いところは他のプログラミング言語(PHP等)でも 真似してツール化されているので現在は決定的な差はないです エンジニアサイドの意見としては あと、何より、イメージ通りに動く道具を使うと仕事が楽しいです ただ、Java等よりも表現力が高い分、個人の考え方のパターンや手癖がよく出ますので ハイスキルの人と、初心者を混ぜて仕事をさせにくいです 最近注目されているのはScala、続いてGrooby等がWeb等の現場で使えそうな言語で注目です 他にもKotlinやCeylon等、Javaの後釜を狙っている言語がいずれ来るのでしょうが まだ案件を見かけた事がありません（泣
たぶん、この例外発生原因は次の部分です。 Net::HTTP.start("http://yahoo.co.jp", 80) {|http| URIではなくアドレス（IPアドレスやFQDN等）を入れる場所なので、こんな感じですね Net::HTTP.start('www.yahoo.co.jp', 80) {|http| ＜おまけ1＞ まず、参照するドキュメントを変えましょう。 記載されたマニュアルは既に古い物なので、Ruby1.8.7系であっても次のマニュアルを当たるようにしましょう。 http://doc.ruby-lang.org/ja/1.8.7/doc/index.html http://doc.ruby-lang.org/ja/1.8.7/library/net=2fhttp.html ＜おまけ2＞ ヤフーのトップページはリダイレクトかかるので、多分今回のサンプルそのまんまだと意図した実験にはならないでしょう。 別のサイトで試すか、マニュアルにも記載のあるリダイレクト対応メソッドを実装しましょう。 以下、枠線内抜粋 -------------------------------------------------------------------------------------------------- リダイレクトに対応する 以下の例の fetch はリダイレクトに対応しています。 limit 回数以上リダイレクトしたらエラーにします。 require 'net/http' require 'uri' def fetch(uri_str, limit = 10) # You should choose better exception. raise ArgumentError, 'HTTP redirect too deep' if limit == 0 response = Net::HTTP.get_response(URI.parse(uri_str)) case response when Net::HTTPSuccess response when Net::HTTPRedirection fetch(response['location'], limit - 1) else response.value end end print fetch('http://www.example.org') -------------------------------------------------------------------------------------------------- このサンプルコードから、最終行を次の内容に変えてみてください 尚、この例だとuriライブラリを読み込んでいるため、ターゲット指定にURIが使えるようになっています。 print fetch('http://www.yahoo.co.jp').body 順を追う意味からはあまり適さないと思うので、別のサイトで試したほうがいいとは思います。 ＜おまけ3＞ 他の言語経験から、メソッド呼び出しに()を加えたり、行末に;を付けたりされていると思います。 特別に強いこだわりが無ければ、この辺のコーディングスタイルをRubyっぽい物に合わせるようにしましょう。 規約として有名な所では青木さんや前田さんの物がありますが、 取り敢えずマニュアルで使われているスタイルを参考にしてみてください。 今後マニュアルを読む上でも、標準的なスタイルには慣れておいた方が良いと思います。
＞(無名クラス　と　メタクラスは同義？？） 無名クラスとメタクラスは直接は関係ありません。Yuguさんは、Classクラスオブジェクトの特異クラスのことをメタクラスと呼んでいるようですね。特異クラスは一般に無名クラスですが。 ＞また上記URLの画像からメタクラスはClassクラスのインスタンスであるようです。 特異クラスであろうが、メタクラスであろうが、すべてのクラスはClassクラスのインスタンスです。 理由は無いというか、それがRubyのクラスの概念です。数学で言う公理みたいなものか。 ＞もう一点、ｐ　Cattle.class()；と記述するとClassクラスが返ると思います。 Classという定数が返りますが、これはClassクラスのことですね。 ＞これはCattleクラスのClassクラスのインスタンスであるということになるのでしょうか？ 日本語がおかしいです。 Cattleという定数に代入されているのは、Classクラスのインスタンス(のリファレンス)であると言うことです。わかりやすく言うと、CattleというのはClassクラスのインスタンスということ。 ＞しかしながらYUGUIさんの画像ではCattleはメタクラスのインスタンスとなっています。 であれば、メタクラスを意味するのでしょうか？ 図のしたの↓は読みましたか？理解できましたか？ Yugui＞つまり、初期状態ではメタメタクラスというものは定義されていないんだな。メタクラスに対して特異メソッドを定義しようとしたとき、初めてメタメタクラスみたいなものが作成されて、 一般に、クラスＡのインスタンスＸに特異メソッドを定義すると、「Xの特異クラス」が作られて、ＸはＡのインスタンスで無く、Aのサブクラスである「Ｘの特異クラス」のインスタンスに変わります。これは特異メソッドや特異クラスの説明の所に書いてあるはず。 で、classメソッドで返る値では特異クラスのことは隠されます。うーん、このこと、Object#classのリファレンスに書いてないですね。 上の文のA←Class、Ｘ←Cattle とするとあの図の関係になりますね。「メタクラス＝Classクラスインスタンス(ここれはCattle)の特異クラス」なので、Ｘの特異クラスのことをメタクラスと呼んでいるわけです。 基本的な理解のためには、「メタクラス」という言葉を頭の中から一度追い払って、「クラス」「特異クラス」だけで考えるといいと思いますよ。 特異クラスというものを十分理解してから、「メタクラス＝クラスの特異クラス」と覚えるといいかと。
入力待ちの状態にしたいのであれば gets これでいけますよ。
モデルの方にコントローラー名とアクション名が渡らないので validationをモデル内でやるのは難しいと思います コントローラー内部で解決しましょう
Class.newにおけるnewは、マニュアルにある通り特異メソッドから検索されますので、Classクラスの特異メソッドです。Class.newでできるインスタンスは、無名のクラスです。代入先で挙動が変わることはないです。 クラス定義で用いられる次の構文は、 class Hoge end 以下の3つの作業をしています。 １．Classクラスのインスタンスを生成 ２．そのインスタンスにHogeという名前を付ける ３．Hogeという定数の参照先をこのインスタンスにする Class.newは、１の作業のみをしています。 Class.newでできた無名クラスは、定数に代入される（参照される）とその定数名と同じ名前が付けられます。上述した作業２→３の逆順の３→２をしていることになります。名前がない状態で表示すると、普通のインスタンスと同様に生成元のクラス（この場合Class）とそれのアドレスが表示されます。 hoge = Class.new # hogeという変数が無名クラスを参照 p hoge # 無名クラスなので生成元クラスとアドレスを表示 Hoge = hoge # Hogeという定数が無名クラスを参照 p hoge # この時点ではHogeという定数が無名クラスを参照しているので、この無名クラスにHogeという名前が付けられる ＞No.2、notnotさん マニュアルの以下の文はその通りだと思います。 ＞名前のないクラスは、最初に名前を求める際に代入されている定数名を検索し、 ＞見つかった定数名をクラス名とします。 名前が求められた際、定数が格納されているハッシュテーブルのスロットを上から順に見ていき、最初に見つかった定数の名前をそのクラスの名前にしているのだと思います。検索順序は、Object.constantsで表示されるものと多分同じだと思います。 Ruby1.9の場合はハッシュに順番を付けたので、最初に代入した定数が先に見つかりそういう結果になったのだと思います。
No3,6,9です（なぜか３の倍数の回答が私だ）。 ＞ClassクラスのインスタンスなのにFileという定義されたクラスであると・・・。 ＞おもえばここの解釈が一番の原因でしたね。いまでもちょっと捕らえにくいのですが。 Rubyではほとんどのものがオブジェクト（主要な要素でオブジェクトでないのはメソッドくらい？）と、あちこちで書かれています。1 や nil がオブジェクトであり、クラスもオブジェクトですね。 最後に、クラスメソッドと特異メソッドとの関係について。 クラスでないオブジェクトの特異メソッドについては、わかると思うので説明略。 ＞ただ実際はクラスメソッドの定義の仕方と特異メソッドの定義の仕方がことなるので厳密には違うものなのでしょうか？ 定義の仕方は同じです。というか、クラスメソッドの定義の仕方は、特異メソッドの定義の仕方の一種。 また、 とあるクラスFooのクラスメソッド ＝ Foo の特異メソッド ＋ Fooの祖先クラスのどれかの特異メソッド なので、「hogeはFooのクラスメソッドである」と「hogeはFooの特異メソッドである」は等しくないです。 アドバイスとしては、考えるときに、「Fileオブジェクト」とか、「Fileインスタンス」という言葉を使わない方がいいです。 「Ｆｉｌｅクラスのオブジェクト(インスタンス)」と「Classクラスのオブジェクト(インスタンス)であるFile」とが、意識下で混同されてしまっていると思います。いざ明示的に聞かれると違うことはおわかりのようですが、曖昧な言葉で思考しているとつい引きずられてしまいます。
Net定数→HTTP定数と辿りたい状態なので、まずは3行目の「Net::http」を「Net::HTTP」にしてください とりあえず今出ている例外は収まるはずです。 ＜おまけ＞ Rubyの「::」は、名前空間を辿る事とメソッドへのアクセス両方に用いる事が出来てしまいます。 間違えたときに文法エラーとなってくれないのが嫌らしいので、頭の片隅に入れておいて下さい とはいえ、通常は次のように使い分けます。 メソッド呼び出し: 「.」 名前空間: 「::」
私もANo.1さんの仰ってることが全面的に正しいと思います。 加えて、独立してやっていくには、どの言語をというよりは ・デザインパターンやデータベース理論など基礎的な開発力がしっかりしていること ・お客さんと信頼関係を結べる能力（お客さんの求めていることの正しい把握等） が何より重要です。 >WEBプログラマーとして独立するのであれば、HTML、CSSも自分で打てないと難しいでしょうか？ ドリームウイーバーが使えれば大丈夫でしょうか？ に関しては、デザイン専門業者に外注する手もありますが、それが正しいHTML,CSSであるかを判断出来る能力が必要です。 DreamWeaverのサポートが無いと判断できないようでは「webプログラマ」としては失格の域だと思いますよ。
すみません。#2の回答も的外れでした。 viewの@productsに正しい値が設定されていないのは、 def check @product = Product.all 　 render :action => 'check' end の @product = Product.allが原因です。 これを @products = Product.all として下さい。（@productを@productsにする） 尚、view側も見やすくするために =================================== <%= link_to "安い順", :action => 'low' %> <%= link_to "高い順", :action => 'high' %> </br>　　　　　　　　　　　　　　　・・・ここに改行をいれる <% @products.each do |product| %> 商品名<%= product.code %> 金額<%= product.price %></br>　　・・・ここに改行をいれる <% end %> =================================== とすると良いかと思います。
view側のボタンを１つにまとめます。 ================================================= <%= form_tag({:controller => :products, :action =>:search_price }) do %> <p>メーカーから探す</p> <% Maker.all.each do |maker|%> <%= check_box_tag "maker_id[]", maker.id %> <%= maker.maker_name %><br /> <% end %> <p>カテゴリから探す</p> <% Category.all.each do |c| %> <%= check_box_tag "category_id[]", c.id %> <%= c.name %><br /> <% end %><br /> 価格指定 <%= text_field_tag "price1" %> ～ <%= text_field_tag "price2" %></br> <%= submit_tag "検索"%> <% end %> =================================================== 尚、params[:maker_id].include?　等のようにメーカの指定がある場合は、この例は考慮していません。 全てのメーカー、全てのカテゴリから選択させています。ですので、ここは、適宜修正してください。 contoller側は、search_priceにまとめるものとします。 この場合、以下のパターンになります。 １．メーカーでいくつか選択されたか又は一切選択されていない。 ２．カテゴリでいくつか選択されたか又は一切選択されていない。 ３．価格下限が指定されたか、又は指定されていない。 ４．価格上限が指定されたか、又は指定されていない。 これらの全ての組み合わせは２×２×２×２＝１６通りになります。 従って、ifの組み合わせで１６個の検索文を記述することになりますが、これを１つの検索文にすることが 今回の目標です。 予備知識として、「whereメソッドは複数連結して記述することが可能である」ということを理解しておきます。 これは、 @products = Product.where('price >=? AND price <=?', params[:price1],params[:price2]) は @products = Product.where('price >=?',params[:price1]).where('price <=?',params[:price2]) のようにも記述できるということです。 今回は @products = Product.where(.....).where(....).where(....).where(....) のように書くことを目指します。 この場合のwhereの条件はＡＮＤ条件で連結されます。 また、where(....)の....の部分が、「空っぽいもの」の場合は、このwhereは、効力をもたず 無いものとして扱われます。 「空っぽいもの」は .blank?が成立するものです。 where("")　・・・空文字列 とか where({})　・・・空のハッシュ などが該当します。 つまり @products = Product.where('price >=?',params[:price1]).where("")と @products = Product.where('price >=?',params[:price1])　は同じ結果になります。 以上のことを前提にすると、 メーカー、カテゴリ、価格下限、価格上限が全て指定された場合は、 @products = Product.where(:maker_id => params[:maker_id]).where(:category_id => params[:category_id]).where('price >= ?',params[:price1]).where('price <= ?',params[:price2]) と記述すればよいことになります。 従って、ここで、メーカー、カテゴリがともに指定されていないなら、 @products = Product.where({}).where({}).where('price >= ?',params[:price1]).where('price <= ?',params[:price2]) でも良いわけです。 更に、価格下限、価格上限が指定されない場合（要は全て指定されない場合）は、 @products = Product.where({}).where({}).where("").where("")のようになります。 上記は、正しいのですが、価格下限、価格上限はプレイスフォルダを使うことが望ましい（セキュリティ対策）ので、 @products = Product.where({}).where({}).where('price >= ?',0).where('price <= ?',2147483647) のようにします。 （価格はＤＢ上は0円以上で、2147483647円以下とします。2147483647は32ビット整数の最大値です。 今回、2147483647としましたが、正確には、ＤＢ上に実装される価格の最大値を指定してください） 上記を踏まえたsearch_priceメソッドは、以下のようになります。 ==================================== def search_price p1 = p2 = Hash.new p3 = 0 p4 = 2147483647 if params[:maker_id] p1[:maker_id] = params[:maker_id] end if params[:category_id] p2[:category_id] = params[:category_id] end unless params[:price1].blank? p3 = params[:price1] end unless params[:price2].blank? p4 = params[:price2] end @products = Product.where(p1).where(p2).where('price >= ?',p3).where('price <= ?',p4) render :action => 'index' end ==================================== 更に、価格順に取得したい場合は、 @products = Product.where(p1).where(p2).where('price >= ?',p3).where('price <= ?',p4).order('price ASC') のようにします。 尚、今回は、価格下限、価格上限の入力チェックはしていません。 （数字でないものが入力された場合とか、価格下限＞価格上限のとなる値が指定された場合、本来はエラーメッセージを出すべきと考えています）
>2）carts/indexでは、スクリプトが表示されていませんでした^^; とりあえず、POSTが送信されない原因が判明しましたので、よかったです。 ではなぜ、この画面を表示した場合のみ、rails.jsがブラウザへ転送されないのかが、 問題になります。 通常は、/app/views/layouts/の下に application.html.erbが存在し、 そのapplication.html.erbから個々のxxxx.html.erbが呼び出されます。 application.html.erbの内容は、 通常、以下のようになっています。 <!DOCTYPE html> <html> <head> <title>そのアプリケーションのタイトル</title> <%= stylesheet_link_tag :all %> <%= javascript_include_tag :defaults %> <%#= javascript_include_tag :all %> <%= csrf_meta_tag %> </head> <body> <%= yield %> </body> </html> 上記の<%= javascript_include_tag :defaults %> で、rails.js等が取り込まれ、ブラウザに送られるはずです。 carts/indexの場合のみ、application.html.erbが呼び出されていないようにみえます。 意図的に呼び出さないようにしている場合は、問題ありませんが、 そうでない場合は、application.html.erbが呼び出されるようにすべきです。 また、/app/views/layouts下には、application.html.erbのほかに 別のテンプレートファイル（xxx.html.erb形式のファイル）がありますでしょうか？
>この機能についてのご説明とマニュアルの何処に記載されているかをご教示いただけると幸いです。 「メソッド呼び出し(super・ブロック付き・yield)」のあたり。 素直に (1..5).to_a と書いたほうがわかりやすいと思います。
> Web初心者、プログラミング初心者にとっても解りやすい参考書を教えていただけないでしょうか？ 開発環境さえ用意できれば、Mac だろうが Windows だろうが変わりません。 むしろ Windows の方が色々面倒臭いです。 んで、開発環境は ruby と rails がインストールできていればそれで完了です。 ruby は 1.9.2 を用意しないと、Rails3.1以降にバージョンが上がった時に困りそう。 あとはテキストエディタとコンソールが使えれば十分です。Mac の人は TextMate を使ってる人多いね。 参考書としては達人出版会が出してるのが Rails3 対応で初心者向けだと思います。 http://tatsu-zine.com/
def search_priceを以下のようにしてください def search_price @products = Product.where('price >=? AND price <= ?',params[:price1],params[:price2]) render :action => 'index' end ---------------------------------------------- 結果を表示する views/products/index.html では @productsに指定範囲のレコードが複数格納されていることを前提にしています。 しかしながら、 @products = Product.all で全レコードが取得されているため、その内容がそのまま（結果として）全レコード表示されます。 私が、記述した方法は、価格が指定範囲内に収まるレコードを取得してその結果を@products にセットしています。 全レコードを取得後、each do で、個々のレコードを参照する方法は、 全レコードの数が少ない場合は、問題ありませんが、多い場合（例えば数千件）は、パフォーマンス上 問題があります。多くのレコードの中からある条件を満足するレコードを取得する場合は、 通常、その処理をＤＢ側に任せます。（つまり今回のようにwhereメソッドなどで範囲を指定します） そうすると、ＤＢ側でレコードの絞込みを行なうので、結果として返されるレコード数が非常に削減され レスポンスの向上につながります。
Windowsのペイントでしょうか。 起動するだけならsystem()を使えばいいでしょう。
文字化けするのはrexmlの内部でエンコーディングが変わっているからでは。多分utf-8になっていると思います。それでkconvのtosjisを使ってp emement ...のところをputs　element...tosjisとするときれいに出てきますよ。つまりこんな感じです。 require 'kconv' require "rexml/document" oDoc = REXML::Document.new(File.open("db.xml")) oDoc.elements.each("/Root/Customer/Business") do |element| puts element.attributes["Text"].tosjis end
知識ゼロを前提に説明するのは大変なので、質問です。 (1) Ruby言語の基本的な文法は知っていますか？ 　　知らない場合、他に知っているプログラミング言語はありますか？ 　　知っている場合、injectとjoinのリファレンスを読んでおいてください。 (2) ３つともわかりませんか？ (3) 階乗の帰納的な定義は理解していますか？
system()ではgnuplotの標準入力とつなげないので、IO.popen()を使います。WindowsではなくてMacですが、下記のコードでRubyの中からsin(x)をプロットできました。 pipe = IO.popen("/Applications/gnuplot.app/bin/gnuplot", "w"); pipe.puts("plot sin(x)"); sleep(10); … すぐにclose()するとプロットしたグラフが消えてしまうので10秒待つ pipe.close();
>http://item.rakuten.co.jp/gekiyasukaguya/chair-panda?s-id=browsehist_top_normal このサイトの実装方法はわかりませんが、私は hidden_field_tagを使って、/animals/indexへ年齢を含めて渡す場合は、 以下のようにする方法しか思いつきません。 form_tagを2つ作成し、 1つ目は通常の（年齢の選択ができる）tag もう1つは、/animals/indexを呼び出すtagで、この中に、hidden_field_tagをつくる。 このhidden_field_tagに年齢を格納しておく。 但し、そのままでは、年齢が選択されても、その内容が、hidden_field_tagに反映されないので、 javascriptを使用して、年齢が選択されたとき、その内容を自動的にhidden_field_tag に格納するようにする。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ views/prseons/show.html ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ <h1>Presons#show</h1> <%= @preson.name %> <%= form_tag({:controller => 'animals',:action => 'age'}) do %> <%= select("form","age", (1..100),{:include_blank=>false},{:onChange=>"changeage(this.value)"})%> <%= submit_tag '表示する',:name=>'tag1' %> <% end %> <%= form_tag({:controller => 'animals',:action => 'index'}) do %> <%= hidden_field_tag('age',1,{:name=>'hiddenage'}) %> <%= submit_tag '次へ進む' %> <% end %> <script type="text/javascript"> <!-- document.write("javascriptによるbutton_toのurlの直接書き換え試験") function changeage(value) { alert(value); document.forms[1].hiddenage.value = value; } //--> </script> ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ animals_controller.rb ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ def index age = params[:hiddenage]　・・・年齢の取得 　　・・・・以下省略 end
そのような場合は、flashを使用すると良いでしょう。 セッションを使用する方法もありますが、リダイレクトした先の画面で一時的に使用したい場合は、 flashが適しています。 def foo 　　arr = [1,2,3,4] 　　#arrをいろいろと処理 　　flash[:arr] = arr #ここで設定する 　　redirect_to :controller => "top", :action => "bar" 　end def bar 　　#ここで@arr = arrしたい 　　arr = flash[:arr] #ここで元の画面で設定したarrが取得できる 　end 尚、flashは現在のリクエストと次のリクエストのみで使用可能です。その次のリクエストでは使用できません。（使用可能にする方法が無いわけではありませんが、そのままだと使用できません） 今回はflash[:arr]としましたが、:arrのところは、他のシンボル名でもかまいません。 例　flash[:hogehoge] = arr でもＯＫです。
arr_sではなく、arrを渡しては、どうでしょうか。 例： Data.delete_all["id in (?)", arr_s ]　を Data.delete_all["id in (?)", arr ]　とする。 こちらの環境 rails3.0.7 ruby 1.9.2 P180(windows版) ではうまくいきました。 但し、DBはpostgresqlを使用しています。(mysqlでも同じかと思います)
症状直すだけであれば、CGIライブラリをcgi-libからcgiに変えてみてください マニュアル探されるとわかるとおもうのですが、cgi-libはobsoluteです。 （1.9.2で確認したら無くなってました。） ＜おまけ＞ 少し書き換えて、Ruby1.8.7で動いたものを載せておきます。 自分もRubyでcgiいじるの初めてなので、これが推奨というわけではありません。 #!/usr/bin/ruby -w -Ku # -*- coding: utf-8 -*- # require 'cgi' print <<EOD Content-type: text/html; charset=utf-8 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> <html> <head <meta content='text/html; charset=utf-8' http-equiv='Content-Type' /> </head> <body> <h4>チャットだお(´・ω・`)</h4> <form method="POST"> nameフォーム<input type="text" name="name" size="20"><br> 本文フォーム<input type="text" name="message" size="80"> <input type="submit" value="送信"> </form> EOD LOG_PATH = 'data.log' input = CGI.new.params open LOG_PATH, 'a' do |f| f << input['name'] f << "> #{input['message']}<br>" end print <<EOD #{File.read(LOG_PATH)} </body> </html> EOD
＞結果を出力する これは print k(3) のところでしたね。 def k(i) の最後の s は、計算結果を呼び出し元に返す、という意味です。
そもそも、s=...の式とプログラムとが一致してないので、説明もなにもないですが。 実行したら 18 と表示されました。 1=1 2=1+1 5=2+3 10=5+5 17=10+7 26=17+9 ←書いてないけど、それまでのパターンから推測 37=26+11 ←書いてないけど、それまでのパターンから推測 50=37+13 と、奇数分の分増えているように見えます。なので、 i: sに加える値 j: 次のiへの増分(連続した奇数) とすると、 > j+=2 は、「次の奇数」を計算するためのもの という説明は付くと思います。 > s+=1 はループ回数を数えるだけのものになっているので、 s+=i の間違いではないかと予想されます。 そうなってくると > for i in 1..100 が問題です。 rubyのforは、リスト状のものを連続で処理するものです。CやBasicのように、変数の値を計算するものではありません。 例えば、i=2のときj=3になっているはずなので i+=j → i=2+3=5 になります。 次のループになったとき、Cでfor(i=1;i<=100;i++)だったら、 i<=100とi++ はこの i=5 に対して評価、計算します。 しかし、rubyでは、1..100での2の次である3になってしまいます。 for k in 1..100 と、関係無い変数にすれば、一応期待通りの計算にはなりますが、美しくは無いですね。
> ただ、VBA上で処理する場合Modを使わないで算出する方法はないのでしょうか？ あえて、Modを使わないのであれば、こんな感じでしょうか？ あとは、自分の流儀に合わせて修正してください。 Sub test() MsgBox MyMod1(-12977, 60) + 1 End Sub Function MyMod1(dividend As Double, divisor As Double) As Double Dim result As Double If divisor = 0 Then Err.Raise 11 Exit Function End If If dividend >= 0 Then If divisor > 0 Then result = dividend - Int(dividend / divisor) * divisor Else result = dividend - Int(dividend / -divisor) * divisor End If Else If divisor > 0 Then result = dividend + Int((divisor - dividend) / divisor) * divisor If result >= divisor Then result = result - divisor End If Else result = dividend + Int(-dividend / -divisor) * -divisor End If End If MyMod1 = result End Function
Web アプリケーションを動かす方法は色々ありますが、ラクーカンという web サーバーを使っているということですので、おそらく CGI プログラムとしてしか動かせないと思います。 プログラミングには自信があるということですので、調べればすぐにわかると思います。 「CGI」 というキーワードで調べてみてください。 一応参考になりそうなページを参考 URL に挙げておきます。
java,C言語でおなじみのfor文と全く同じ構文はrubyには有りません。 （そのため、初心者がつまずきやすいのも確かですが） １から100の繰り返しは for i in (1..100) do ・・・ end のようになります。 配列の処理は以下のようにします。（他にもやり方はありますが１つの例です） 配列を格納する変数をhairetuとすると hairetu = []# 配列の初期化 hairetu << 5# 配列へ追加 hairetu[0] = 5 と同じ hairetu << 7# 配列へ追加 hairetu[1] = 7 と同じ 上記をふまえて、今回の質問者さんの内容をrubyでかくと以下のようになります ------------------------------------------------------------- #素数を求めるメソッド（パラメータは開始の数値、終わりの数値） def sosu(start_i,end_i) ary = [] #素数を格納する配列を初期化 for i in (start_i..end_i) do count = 0 for j in (1..i) do if i%j == 0 count += 1 #rubyはcount++の命令はないのでこの形式になる end end if count == 2 #print "i=",i,"\n" #素数の印字（現在はコメントにしてある） ary << i #配列にiを加える end end p ary #配列の内容を印刷 end sosu(10,50) -------------------------------------------------------------------- 実行結果 [11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]
strA="ぬ\\\\ね"; 代入する時、正規表現、で評価されるようです。 または、 gsub(/ぬ\\ね/, strB, $0);
>ここで表示したいのは、starttime の値です。現在時刻ではありません。説明が足りずすみません。 具体的にstarttimeに何が格納されているのかわかりませんので、回答できませんが、 starttimeに格納されている時刻をTime型に変換し、その値を:default=>で指定してあげれば、よいかと思います。
つまり上記のような params じゃねぇってことだよ。 そして変数 index が謎すぎる。
そのハッシュであれば、一旦'studydate'というkeyでとってやらないといけないですね http://ideone.com/bz9iv リテラルで生成したHashに対して、存在しないkeyで添字アクセスすると、例外ではなくnilが返ります。 そのnilへto_iした結果（0）×3をDate.newへ渡しているため、invalid　date が出ているんだと思います。 ＜おまけ＞ 利用されているアプリの仕様上、こういうHashが返される感じなんでしょうか？ もし一から作成されたのであれば、（ここだけを見る限り）'studydate'のvalueはArrayの方が楽かもしれません。 http://ideone.com/Kl98c
params[:studylogdetails] が配列なんでしょ？その各々の要素であるハッシュから Studentlogdetail を作成するとして params[:studylogdetails].map { |detail_hash| Studentlogdetail.new(detail_hash) } で Studentlogdetail からなる配列が得られると思うよ。
コードがないのでわからん。 > @studylogheader は、学習記録を保持するオブジェクトで、学習記録には、 > 学習者（member）を持っています。 これは StudyLogHeader モデルが member_id を経由して Member モデルとbelongs_to で紐づいているということ？ なんとなく collection_select の第一引数が :member なのが怪しげですけど、単純に :member_id のミスタイプではなくて、何らかの意図があるのであれば補足にどうぞ。
不具合修正は、ANo1さんが仰られているとおりだと思います。 出力方法一般に関しては、文字列っぽいもの（ここではget_foobarの返り値）を出力系メソッド（print, puts, p等）に渡してやれば問題ありません。 例えばこんな感じですね http://ideone.com/61F0H ＜おまけ＞ 今回の内容を、少しだけRubyっぽくしてみました。 http://ideone.com/puQ38 # アクセサ名称 get_fooやset_fooという命名ルールは使わない方がいいでしょう。 Rubyに於いてはインスタンス名称をそのまま活用するアクセサが好まれます。 obj.get_foo → obj.foo obj.set_foo → obj.foo = このようなルールを用いる事で、言語自体が備えているアクセサ定義メソッド(attr_reader等)の助けを借りることも出来ます。 # インスタンス変数名称 余程有名な形か特徴的なprefixでも無い限り、省略形は可読性を下げます。 今回はフルでの記載をおすすめします。 conti → continent # 本題からは外れる内容なので、設計については省きます。 ・クラスやモジュールを通して、値が共通である → インスタンス単位で状態を持つ必要がないため、定数等へ ・インスタンス生成時に値を指定しなかった際のみ、標準値を採用する 等々、いろいろ試しながらRubyの機能に触れてみてください
たしか、libpngで定義されている png_info の定義が1.2.Xとそれ以降とで変わっていたと記憶しています。 Macportsでの最新版や、 「libpng14」 という記述からして、 src/texture.cが想定しているバージョン:1.2.X MacPortsによってインストールされたバージョン: 1.4.X という状態だと思われます。 texture.cのバージョンが古いのか、対応するのが遅れているのか、だと思われます。 対処方は ・libpng 1.2.X系をインストールする。 →MacPortsとの共存が面倒かもしれません ・texture.c をなんとかする →開発が止っているようなので、「最新版」でも対応できてないかもしれません。 →自分で修正するなら、変更方法は、検索したら次のものがみつかりました。 http://tuxthink.blogspot.com/2010/08/pnginfo-has-no-member-by-name-trans.html →ここが通ったら、他で別のエラーが出るかもしれません。
たぶん、無理です。 NKFモジュールによる理由 ・NKFモジュールのエンジンであるnkf自体にSJISとCP932の区別がない(SJISしかない) 文字コードによる理由 ・二つに違いは、拡張文字の有無が主であり、ほとんどの文字はまったく同じ。 そのため、それらの拡張文字を使ってなければ区別できない。(たとえば、あなたの質問文にはそのような文字が無いため、区別できない) また、使っていたとしてもCP932以外の可能性もある。
findはクラスメソッドのため、2番目の User.new.find(:all, :conditions => '...', :order => '...') の構文はエラーになるはずです。 こちらの環境で、実行したときはエラーになりました。 こちらの実行環境は、windows7で ruby 1.9.2p180 (2011-02-18) [i386-mingw32] rails3.0.7です。 findの構文を見た限りでは、rails2.Xのように見受けられますので、 rails2.Xの場合はエラーにならないのかも知れません。 ただ、rails3.Xでは使用できないことは、明らかですので、 今後のrailsのバージョンアップなどを考えると、 この構文は使用しないほうが良いかと思います。 但し、本件は「回答に自信なし」のため、 更に、正確な回答を期待すのであれば、rubyのメーリングリストに参加し、 そこで聞かれるのが確実かと思います。 rubyのメーリングリストへの参加方法は参考URLを参照ください。
Windowsのコマンドプロンプトは、デフォルト設定ですと、Shift JISのテキストデータを正しく表示できますが、UTF-8テキストは表示できません。 Mac OS Xのターミナルは、デフォルト設定ですと、UTF-8のテキストデータを正しく表示できますが、Shift JISテキストは表示できません。 ――というところは知っているように見受けられますが、具体的になにが解せないのでしょう? 解せない内容を具体的（どういう挙動を示すことを想定しているとか。）に補足してみては。
まず、自分は方法を知りません。 少なくとも標準機能ではちょっと聞いたことないです。 ただSciTEはluaで拡張が可能なので、誰かの書いたlua拡張を探すか自分で書くかで対応できるかもしれません。 とはいえ、今最初のプログラムを他の言語で練習しているのであれば自作は現実的な解ではないと思います。 海外サイトも含めて拡張スクリプトを探して見ると良いかもしれません。 （ちょっとググってみた限り、自分には見つけられませんでした。）
文字コード絡みのトラブルだとは思うんですが、そういうエラーに繋がってしまう記述ではないと思います。 （日本語Win7と1.92で試しましたが、動きました。） 後は、スクリプトファイル自体の文字コードとマジックコメント（#encoding: cp932）に差異のある可能性が高そうです。 Win7であればメモ帳でも文字コード数種を判別できるので、まずは開いて「名前を付けて保存」を選んでみてください 開いた画面下部にある「文字コード（E）」にANSIが自動選択されていれば、本来は大丈夫な筈です。 もし違っていれば、ANSIに変更して保存しなおしてみてください。 ＜おまけ 1＞ ただ、特に深い理由が無いのであれば、文字コードにはUTF-8の選択が無難です。 この際は、マジックコメントも書きなおしてください 例） # -*- coding: utf-8 -*- ＜おまけ 2＞ エディタは何をお使いでしょうか？ ソースコードの記述にメモ帳の利用はあまりに不便だと思うので、おすすめできません。 現在愛用中のものがあれば、是非そちらを利用して下さい もし無いということであれば、次のどちらかをおすすめします。 ・初期設定が特にいらない。メモ帳の上位互換イメージで利用可能 　→サクラエディタ ・初期設定が若干面倒な代わりに、軽量なプログラミング環境として便利 　→SciTE
使われた参考書と、指定されたインストーラパッケージによってそういう登録がされるんでしょうね。 なぜ表示されないのかは著者環境との僅かな差異によりそうなので、あまり気にされなくていいと思います。 そもそもソースファイルはテキストデータなので、専用メニューから作らなければいけないという決まりはありません。 新規作成→「テキスト　ドキュメント」から、ただのテキストファイルを作り、拡張子を「.rb」に変えれば十分です。
こんな感じ? 親クラスのインスタンスから呼び出せないけど、サブクラスのだったら呼び出せる。 class BaseClass def initialize @methods_list = Hash[ *([ :private_instance_methods, :protected_instance_methods, :public_instance_methods ].collect{|m| [m, Module.instance_method( m )] }.flatten) ]; end def show @methods_list.each do |k,v| v.bind( self.class ).call(false).each{|s| p [k,s]; } end end def test( it ) begin it.msg rescue print self.class.name, ': ', $!, "\n"; end end end class TestClass < BaseClass def msg; print "OK - ", self.class.name, "\n"; end end class DerivedClass < TestClass end target = TestClass.new; target.show; sup = BaseClass.new; sub = DerivedClass.new; sup.test target; sub.test target; TestClass.class_eval{ protected( :msg ) }; target.show sup.test target; sub.test target; TestClass.class_eval{ private( :msg ) }; target.show sup.test target; sub.test target;
github.com には沢山のオープンソースプロジェクトがホストされていて、特にRubyを使ったプロジェクトが多くあります。その中で何か読みやすいものを探してみてはどうでしょうか。 個人的にはRedmine (http://www.redmine.org/ )がよく練られた構成で勉強になるとは思います。やや大きめのプロジェクトであることとまだRails 3に対応していないことが難点ではありますが、 https://github.com/edavis10/redmine からソースを見ることができます。
そうですよね。 他にも方法あるのかもしれませんが、自分はBigDecimalやRational使ってます。 個人的には、1.9から組み込みになった事と記法の好みとして、Rationalを愛用してます。 BigDecimal http://ideone.com/ZfUsN Rational http://ideone.com/gxWXO Ratinalを1.8台で使うときは、require 'ratinal'を入れて下さい
勉強目的で自分もチャレンジしてみました。なんとなく動いているかな？ to_sはBignum等にも都度書いてやらないと使えません。 36までだったら標準のメソッドへ投げて、それ以上で一覧表にある限りはこの中で処理をします。 http://ideone.com/J6ZiY ちゃんと検証とる程体力が残ってませんが・・・少なくとも実用に使えるしろものではありません。
こんな感じ # coding: cp932 module Unicode def escape(str) ary = str.unpack("U*").map!{|i| "\\u#{i.to_s(16)}"} ary.join end UNESCAPE_WORKER_ARRAY = [] def unescape(str) str.gsub(/\\u([0-9a-f]{4})/) { UNESCAPE_WORKER_ARRAY[0] = $1.hex UNESCAPE_WORKER_ARRAY.pack("U") } end module_function :escape, :unescape end require "kconv" utf8_string = "こんにちは".toutf8 escape_string = Unicode.escape(utf8_string) # => "\\u3053\\u3093\\u306b\\u3061\\u306f" puts Unicode.unescape(escape_string).tosjis # => "こんにちは".tosjis
Macportsでruby19をインストールして使用しています。 ○インストールしたvariantを確認する port installed ruby19 でどんな指定したかわかる。例えば私の場合は ruby19 @1.9.2-p180_0+c_api_docs+mactk+universal (active) って出てくる。 ・(active)になっているかを確認する。なってなかったらactivateする ・+nosuffix があるかどうかを確認する。 ある場合は、コマンド名がrubyに。gem,rake等の関連コマンドもそのまま 無い場合は、コマンド名に「1.9」という文字が付く。関連コマンドもそのまま ruby→ruby1.9, rake→rake1.9, gem→gem1.9,irb→irb1.9等 ○環境変数PATHを確認する Macportsは標準で /opt/local/bin にインストールされるので、PATHに含まれているかを確認する 無ければ追加する。
逆でしょう。 マジックコメントが効いてるから、invalid multibyte char (UTF-8)となるのでしょう。 マジックコメントにしても,htmlのcharset=にしても、「そのコードを使っています」と宣言するものであって、「そのコードに変換される」ものではないです。 保存するときにその出力コードを使うように、エディタを設定するとか、nkf等で後で変換するとかして、宣言したものと実際のコードを合せてください。 # 一部には、現在のコードと比較して、宣言されているコードで保存したり、コメント自体をファイルに合せて書き換えたり、警告表示したりするエディタもあります # emacs + ruby-mode.el とか > # cat hello.rb > # -*- encoding: utf-8 -*- > puts 'こんにちは' となってますが、その表示に使った端末がEUC-JPになってないですか? nkf --guess hello.rb 等で文字コードを確認してください
> サーバ立ち上げの記述も数年前とは違うという事でしょうか？ そうです。 rails3 からは、rails server として起動して下さい。 ほかにも色々変わってるから、Rails のサイトを見てね。
> if class_d.class_c and class_d.class_c.class_b and class_d.class_c.class_b.class_a > 　class_d.class_c.class_b.class_a.name > end > のようにしていますが、煩わしくてしかたがありません。 単純に classD にそのようなメソッドを一つ定義して 他ではそれを呼び出せばいいんじゃないの？
「何回繰り返す」と考えているのがおかしいです。「このデータすべてについて繰り返す」という風に考えてください。 class Shop_number def initialize @mise=["SA003","SA005"] end def each(&proc) @mise.each(&proc) end end data =[["SA001",0,10,20,10],["SA003",0,10,20,20],["SA004",0,10,20,100],["SA005",0,10,20,50]] obj = Shop_number.new obj.each do |i| data.each do |j| if j[0] == i p j end end end 元のプログラムを出来るだけ変えないとすると、クラス定義はそのままで、メイン部分を、 data =[["SA001",0,10,20,10],["SA003",0,10,20,20],["SA004",0,10,20,100],["SA005",0,10,20,50]] obj = Shop_number.new obj.tenposuu.times do |i| data.size.times do |j| if data[j][0] == obj.tenpo_no(i) p data[j] end end end
こんなかんじで如何でしょう。 考え方は他のご質問の内容と同じです。 def get_getsuban(y, m) return (y*12+m+12) % 60 + 1 end year = 2008 month = 12 puts get_getsuban(year, month)
私の場合は、windowsでvmwareで開発していますが、多くのrails開発者はmacで開発していると思います。 macをお持ちということなのでmacで開発されたほうがよいと思います。
Rails だと勝手に想定。 > ・記事タイトル・日時・内容を1つのセット(かたまり)としてまとめる なんのこっちゃわからん。 > ・一ページにつき5件のみ表示される方式 kaminari とか使うといいよ http://ja.asciicasts.com/episodes/254-pagination-with-kaminari >・最新の記事が一番上に来る並べ方 Blog.order("created_at DESC") とか。
pではなくprintやputsで出力してください
class << self def baby? # 処理 end end こんな感じでどうですか？
「申」を SHIFT JIS で表現したバイト列は "\x90\x5c"になりますが、 この"\x5c"は、1バイト文字「\」の文字コードに一致します。 そのため、SHIFT JIS と解釈せずにコードを見ると、不可解な「\」が現れてエラーになります。 そのため、文字列中に「申」などの文字を使いたい場合は、rubyに、文字のエンコードはSHIFT JIS であると認識させる必要があります。 ruby 1.8系の場合は、起動オプション(1行目の「#! /usr/local/bin/ruby」といった行)に -Ks を追加してください。 http://www.ruby-lang.org/ja/man/html/FAQ_C6FCCBDCB8ECA4CEBCE8A4EAB0B7A4A4.html ruby 1.9系の場合は、#!の次の行にmagic comment 「# -*- coding: Windows-31J -*-」を追加します。 http://dgames.jp/dan/permalink/20090828_00
以下のようにしてください。 ---------------------- for i in 1..3 eval("$hensuu#{i} = i") end #各変数の内容を確認する p $hensuu1 p $hensuu2 p $hensuu3 ----------------- 実行結果は以下の通り 1 2 3
年月をまたぐ計算は専用のライブラリを使用すればラクになりますね。 # coding: Windows-31J require 'date' year = 2011 month = 7 day = 7 date = Date.new(year,month,day) # 対象日 base = Date.new(2010,7,13) # 基準日 day = date - base # 対象日と基準日の日差を計算 puts (day.to_i % 60) + 1
剰余演算子を使用すれば良いと思います。 year = 1983 puts ((year - 4) % 60) + 1
年をyear、月をmonthとすると、 (2010..2012).each {|year| (1..12).each{|month| ans=9-(year*12+month+5)%9 puts "#{year}年#{month}月=#{ans}" } } などでしょうか。 http://www.ruby-lang.org/ja/man/html/_C0A9B8E6B9BDC2A4.html 等を参考にループを作っておいて、 (year*12+month+x)%y #xは0から(y-1)の数、yが除数 で余りを求めればよいと思います。
お使いになっているRubyのバージョンは何でしょうか。 オーム社のプログラミングRuby 1.9 ライブラリ編にも例が載っています。 h = { "a" => 100, "b" => 200, "c" => 300 } s = h.select { | k, v | v == 200 } # {"b"=>200} p s.values[0] # 200 になるはずなんですが。 http://ref.xaio.jp/ruby/classes/hash/select
No.1 にて、mtaka2さんがおっしゃている通り、1要素のハッシュで上書きしていますので、結果は1要素になります。 なにをやりたいのかが、質問では分かりかねますが、 5から13までの文字列をキーにもつハッシュを作って表示したいのであれば、 center = 7 ban = { } for i in 5..13 if center < 9 ban[i.to_s]= center center += 1 else ban[i.to_s]= center center = center % 9 center += 1 end end ban.each{|key, value| print(key , "=>", value , ",") } 等でしょうか。 ハッシュでeachを使うと順序は保障されませんので、順序を気にするのであればmtaka2さんがおっしゃているように最初から配列をつかう方法が良いと思います。
Rails 3.0 から、もろもろ rails コマンドに統合されました。 プロンプトから rails server で起動するはず。 Rails3 の日本語の書籍は達人出版会から出てるやつしか知らん。
私の場合は共通系のコードはlibの下におくようにしています。 Moduleがネストする場合はそれぞれディレクトリを作ってあげると自動的に読み込まれたと思います。
フォームからの入力データは、たとえ数字だけで構成されていても、データ型は「文字列」です。 文字列から数値に変換するには to_i を使います。 print -(birth.to_i - 1927)%9+1
2だけ回答。 何故見つけられなかったのか不思議ですが、そのまんま、 & と | というメソッドがあります。 標準では TrueClass, FalseClass, NilClass, Fixnum, Bignum のクラスだけで定義されているようです。 （メソッドなので再定義したり他のクラスに定義したりも出来ますが） 一方、&& || and or はメソッドじゃなくて言語機能の演算子（ある意味制御構造）で、どんなクラスのオブジェクトに対してでも使えます。 and / or は、演算子優先度を除いては && || と同じ機能です。優先度がどちらも最低なので、あまり良い例じゃないですが、 if x=gets and x.to_i>0 のように使います。&& だと、代入より優先度が高いので、代入の所にカッコが必要です。
何をどうしたのかよくわかりませんが、gemコマンドが動かないと言うことは何かに失敗して環境を壊したと思われます。 初心者でmingw32ということは、RubyInstallerパッケージですかね。 そういうことであれば、いちどRuby全体をアンインストーラーでアンインストールして、インストールし直すのが確実です。 gem のアップデートは、ダウンロード＆setupではなくて、 gem update --system でやってください。--system を付けるとgem自体のアップデートになります。 ちなみに、 ＞rubygems1.5.0をダウンロードして ruby setup.rb でインストールしたのですが そういうことをやれと何処で読みましたか？
例で挙がっている配列なら x.sort でいいんじゃね？
「-kは不正なオプションです (-h で正しいオプションを表示できます)」 と書いてあります。 エラーメッセージはよく読んで理解するようにしましょう。プログラミング上達のコツの一つです。 -kというオプションはありません。-K(大文字)で、スクリプトで使用する日本語のコードを指定します。 これに限らず、大文字と小文字は区別されます。また、シングルクオート(':日本語キーボードではSHIFT+7)とバッククオート(`:同SHIFT+@)、1lIといった文字は印刷では判別しずらいことがあります。よく注意してください。時には、その本ではなく、リファレンスマニュアルも参考にしてください。 http://www.ruby-lang.org/ja/man/html/ http://doc.okkez.net/ ところで、Rubyは1.8系から1.9系の間で大きく変更され、-Kオプションは1.9では非推奨となっています。(次の行のencodingで指定する) ほかにも変更点が多いので、その本がどちらを基に書かれているか確認してください。(Amazon等では確認できませんでした)
どの辺でひっかかっていますか？ 1. サクラエディタを開く 2. フロッピーアイコンをクリックして（名前を付けて保存） 3. ダイアログで目的のフォルダ"C:\ruby_ex"に移動 4. 名前test01.rbで保存 これだけです。 または、 1. エクスプローラで目的のフォルダ"C:\ruby_ex"を開く 2. 右クリック→テキストファイルを新規作成 3. 名前をtest01.rbに変更 4. test01.rbを右クリック→SAKURAで開く これでもＯＫ。 「SAKURAで開く」メニューが出ない場合は、そのままダブルクリックしてください。 「ファイルが開けません」 と言うエラーが出たら、下に表示されている「一覧からプログラムを選択する」を選び、サクラエディタを選択します。 ところで、質問自体は、特にRubyとは関係無いエディタの使い方の基本的な話ですので、他のカテゴリ（「その他(ソフトウェア)」とか）の方が回答がすぐに付くと思います。 （適切な回答が素早く欲しい場合、カテゴリ選びは、結構重要です） Rubyそのものの質問であれば、もちろん、このカテで大丈夫ですよ。
Rubyは触ったことありませんが… 「x:\Documents and Settings\xxxxxx>」となるのはXPの場合です。 その入門書のどこかに、「WindowsXPにて動作確認」とか、そんな感じの注釈はありませんか？ とりあえず、"Documents and Settings"は"Users"に読み替えてもいいでしょう。 # WindowsVista/7の場合 ただし、アカウント名を日本語で設定しているようですので、それらが問題を起こす可能性はあります。 # Rubyは日本生まれですから、大丈夫…かとも思われますが…… >(1)で指示どおりに「C:\Documents and Settings\○○　○○>mkdir C:\ruby_ex」と入力すると この場合、入力するのは>の後の部分になります。 http://www.amazon.co.jp/dp/4774132063 こういった書籍で、コマンドプロンプト(CUI操作)について先に勉強しておいた方がいいと思われます。 # 類似のサイトもあるでしょう。 「カレントディレクトリ」「コマンド検索パス(PATH環境変数)」「相対パス」「絶対パス」「コマンドラインスイッチ」などが不明な状態でCUI操作は厳しいと思われます。
パーミッションは？ ちゃんと元通りにした？
exec関数が成功した場合は、制御が戻りません。（execの次の行に進みません） したがって、一度動作を行うと終了します。 制御が戻るのを期待する場合は、execの代わりにsystemを使用します。 systemの呼び出し方はexecと同じです。
ソースは本当に上記の通りですか？ #! ruby -Ks は、1行目に書かないとオプションが有効になりませんので、文字コード無指定になってしまいます。 同じソースで以前は出来ていたのなら、環境変数 RUBYOPT に -Ks が入ってたんでしょう。
＞現在手元にPHPのソースが無い状態で 現在と言うことは、いずれ入手できると言うことでしょうか。 PHPのソースがない状態であれば、元がPHPかどうかなど関係なく、すでに述べられている方法で新規にrubyonrailsで作るしか方法がないと思われます。 そんなに難しいことをやっていなければ、PHPだろうがrubyonrailsだろうが問題にならないと思います。 それとも何か具体的にPHPに関することでの、疑問をお持ちなのでしょうか。
#2です。 以下のようなスクリプトを書いて実行してください。 -------------------------------- fh = open("data.txt") while line = fh.gets #もしデータに期待しない文字列を含むものがあるなら、スキップする # 期待する文字列は、３つの|が存在し、各々の|の両端に|以外の文字が１文字以上存在すること if /^[^|]+\|[^|]+\|[^|]+\|[^|]+$/ !~ line #上記条件の文字列でないなら、次の行へ移る next end #改行文字を削除する line.chomp! # |で分割する elm = line.split("\|") # 4つの部分に分かれるので、それらを印字する print elm[0],"\n" print elm[1],"\n" print elm[2],"\n" print elm[3],"\n" end -------------------------------- データは、data.txtという名称のファイルに格納されているものとします。 起動オプションで -Ksを指定してください。（文字コードの指定） コマンドを実行したディレクトリと同じ場所にに、このdata.txtをおいて実行してください。 ４つの個々の部分が、画面に表示されます。 なお、データが全て、例に出されたようなクリーンなデータだけなら、 if /..../ !~ line end の部分はなくてもかまいません。
＞初心者ですのでほとんどプログラミングできません。 ということでは無理です。 Rubyで書かれたtwitter botのキットのようなものは無いと思います。 ケース１：プログラミングを学ぶつもりはない。とにかくボットが欲しい。 ⇒ こういうのを調べるのでしょうか。 http://www.google.co.jp/search?hl=ja&safe=off&client=firefox&hs=Zz5&rlz=1R1GGGL_ja___JP340&q=twitter+bot+generator&aq=2&aqi=g10&aql=&oq=twitter+bot+&gs_rfai= ケース２：Rubyのプログラミングを学びたい。その題材としてボットを選んだ。 ⇒まずはある程度のプログラムが作れるまで勉強してください。
「学びやすい」かどうかは、たぶん、人によると思います。 一応、Javaと同じ「手続型言語」なので、「関数型言語」ほどの違いは無いですから、基本はすぐ覚えられると思います。 しかし、Javaに比べて非常に柔軟な言語ですし、Javaに無い機能がたくさんあります。 Javaとの違いを見抜いて、Ruby独特のものとして理解できるようなら「学びやすい」かもしれませんが、とにかくJavaに置き換えて理解しようとすると「学びにくい」でしょう。 >「PHPと言えばコンシューマ向けのWebアプリケーション」 >「Javaと言えばエンタープライズ向けのWebアプリケーション」 こういう先入観は持たない方がよいです。 例えば、開発環境として有名なEclipseはJavaで書かれています。 「Javaで苦労したことが、Rubyでは簡単に出来た」というものが、Rubyの得意分野です。いろいろやって実感するのがいいと思います。
#1です。やってみると、出力の前のevalでエラーになってますね。 さっき後半で書いたやり方でやると、スクリプトの1行目の -T を取って、 require 'erb' の後に、 include ERB::Util を追加。 [tmp.html] の方では、<%= をすべて <%=h に変えます。h というメソッドがhtmlエスケープをしてくれます。
1年以上前のブログですね。 こういう新しいサービスのAPIは頻繁に変わりますので、新しい情報を探す必要があります。 uri = URI.parse('http://stream.twitter.com/1/statuses/sample.json') と変更すればいいと思います。 もしWindowsでやるなら、シフトJISにする必要があるので、 最初の方で require 'kconv' しておいて、表示の所で puts "・・・・・・".tosjis とします。
cgi.head do の後ろに cgi.meta ({'http-equiv' => 'Content-Type','content' => "text/html; charset=UTF-8"})+ でどうでしょうか？ 以下のキーワードで検索すると、サンプルプログラムが何個か見つかりますよ。 ruby cgi meta
OSというか漢字コードが提示されていないので、シフトＪＩＳ（Windowsで使用する漢字コード） という前提で回答します。 やり方は以下のとおりです。 １．文字列を個々の文字に分解する。 ２．分解された個々の文字の文字のサイズ（バイト単位）を取得する。 ３．そのサイズごとに集計する。 以下のサンプルコードを実行してください。 -------------------------------------- # coding:WINDOWS-31J def count_data(moji_tbl) zen = 0 han = 0 fumei = 0 for m in moji_tbl case m.bytesize when 1 han +=1 when 2 zen += 1 else fumei += 1 end end printf("半角の数=%d 全角の数=%d 不明な文字の数=%d\n",han,zen,fumei) end str1 = "あいイウう" str2 = "あいイウう" moji_tbl1 = str1.split(//) moji_tbl2 = str2.split(//) count_data(moji_tbl1) count_data(moji_tbl2) ------------------------------------- 実行結果は以下のとおりです。 半角の数=0 全角の数=5 不明な文字の数=0 半角の数=2 全角の数=3 不明な文字の数=0 str1は全て全角 str2はイとウが半角です。（投稿すると全角になってしまうかも知れませんがこちらでは半角の文字です）
スクリプトのライセンスは Ruby 本体のライセンスとは関係ありません. だから, スクリプトを作った人が自由に決めることができます.
3)のみ回答します。 rubyのメーリングリストに参加されてはいかがででしょうか。 わたくしもこれに参加していますが、かなり的確な答えが返ってきます。 メーリングリストの種類もいくつかありますが、ruby-list(日本語) でよいかと思います。
はーい。Rubyを学び始めたいと思っている者です。 一応雑誌の記事を読んだ事ある程度の知識と 一応プログラマしてた知識をを総動員したフリして 解説っぽく回答します。 なので、回答内容が正しいかどうかもあわせての検証をお願いします。 各行の頭についている数字は行番号という認識で進めていきます。 では始まり始まり。 １：クラスVecの宣言。 ２：Vec用変数xとyの宣言。 ３：いきなり使われるとx、yの中身は不定なので初期化（？）。 ４：…何だろう？初期化の実体？ ５：初期化の終端。 ６： ７：表示処理の…関数みたいなもの？ ８：表示処理の実体？ ９：表示の終端。 １０： １１：足し算する時はこうよ。宣言 １２：足し算処理はこうするのね。 １３：足し算終端。 １４： １５：引き算する時はこうよ。宣言 １６：引き算処理はこうするのね。 １７：引き算終端。 １８：－－－クラスVecの終端？ １９： ２０：vec0として、xに３、yに６をセットします。 ２１：vec1として、xに１、yに８をセットします。 ２２： ２３：vec0の内容を表示？　（3,6） ２４：vex1の内容を表示？　（1,8） ２５：vec0とvec1を足して表示？　（4,14） こんな感じでしょうか。 では質問文に対しての回答。 ＠が付いているのは１２行目の場合、"＋"の左側にきたもののデータ。 ２５行目でいうvec0に格納（？）されているxが３でyは６。 に対して、other.xとother.yは"＋"の右側にきたもののデータのxとy。 ２５行目でのvec1の部分に相当。 つまり、２５行目では「vex0とvex1のx同士、y同士を足しますよ」 と言っているものと思われます。 頭にｐが付いているので表示処理も合わせて行うと推測しました。 さて、現実はいかに？
Railsを使うには以下のこれらが必要です。 Active Record http://rubyforge.org/frs/?group_id=182 Active Support http://rubyforge.org/frs/?group_id=570 Action Pack http://rubyforge.org/frs/?group_id=249 Rake http://rubyforge.org/frs/?group_id=50 Rails http://rubyforge.org/frs/?group_id=307 足りなくてエラー吐いたらすいません(;^^) これらのファイル(.gem)をダウンロードし、ダウンロードしたディレクトリで上記の順に gem install ファイル名 --local と実行してください(必要に応じてsudoなども)。 こうすることによって古いバージョンの他に新しいバージョンがインストールされ、両方のバージョンが共存することになります。また、 rails appname と実行すれば新しいバージョンのRailsが使われますが、バージョンを指定する場合は rails _バージョン_ appname とすれば出来ます。
使っているrubyのバージョンはなんですか? 1.9.2なら require 'method_area.rb' を require './method_area.rb' のようにしてみてください。
こちらは参照されましたでしょうか。こちらにming/rubyのインストール 方法があります。
ファイルを指定サイズで複数ファイルに分割したいと言うことですね。 open("test.log","r") do |file| # windowsだと file.binmode i=0 while data=file.read(500*1024*1024) i+=1 open("test.log.#{i}","w"} { |out| out.write data } end end 最後のファイルは500MB未満の可能性があります。
>拡張子が.soファイルがあるのですが、これはなんなのでしょうか。 ダイナミックリンクライブラリです。 rubyからある特定のクラスのメソッドを呼び出すとき、そのクラスのメソッドの実装されたものが このダイナミックリンクライブラリです。 通常、Ｃ言語で作成されています。 rubyの使用者（ダイナミックリンクライブラリの呼び出し側）は、どのような言語で 作られているかに関心は、ありませんので、呼び出したメソッド（ダイナミックリンクライブラリ）が 期待した結果を返すかどうかだけに関心を持ちます。 >C++のプログラムで扱う場合、配布する際には、バイナリ形式にすると思うのですが、それはどうすればいいのでしょうか。 この意味がよくわかりませんが、rubyの拡張モジュールを作成されたいということでしょうか。 rubyの拡張モジュールも、拡張子が.SOのダイナミックリンクライブラリとなります。 rubyの拡張モジュールを作成する場合、ruby 拡張モジュール 拡張ライブラリ 等のキーワードで検索を行って、調査して下さい。私はＣ言語での拡張モジュールの作成は行ったことがありますが、それを配布したことはありません。拡張モジュールの作成自体は、非常に困難というわけではありませんが、それほど簡単というわけでもありません。また、もし本格的に、この作業を行いたいのなら、rubyのメーリングリストに参加されることをおすすめします。 参考ＵＲＬからメーリングリストへたどれます。
server.mount_proc("./dummy") do |req, res| ↓ server.mount_proc("/dummy") do |req, res| でしょうか？(.をとります。)
>>どの.html.erbを使うかの指定はどこでされてるんですか? 特にrenderで指定しない限り、[action_name].html.erbが自動的に使用されます。 action名がindexだった場合は、index.html.erbを参照 action名がshowだった場合は、show.html.erbを参照。 http://guides.rubyonrails.org/layouts_and_rendering.html
scanを利用すれば可能でしょうか？ def counter d,w d.scan(%r{#{w}}).length if d.scan(%r{#{w}}).length > 0 end #1行ずつ読み込み、各行でマッチした個数を配列に格納し返す。 p open("sample.txt","r").each_line.map{|line| counter line,"foo" } #ファイルを全部読み込んで、マッチした個数を返す。 p counter File.read("sample.txt"),"foo"
1. rubyではメモリを確保する必要はありません。必要なときに動的に確保されて、使用されなくなったら自動で開放されます。 どうしても確保したいときは、 str = " " * 256 等とすれば、(char*)型のようなものが確保できます。 外部プログラムを呼び出すときに、バッファが必要と指定されているのであれば、上記のように確保しておきます。（win32APIを使うときに目したくらいで、大抵は使わないと思います） メモリ開放をどうしても手動で制御したいときは、 http://www.ruby-lang.org/ja/man/html/GC.html を参照するとよいです。 2. ファイルからのバイナリ読み込み例は $KCODE="NONE" #←文字列等をバイト型で扱う file = File.open("hoge.bmp") file.binmode #←windowsの場合に必要 file.seek(10) buf = file.read(4) file.close 等とすれば、最初からオフセット10から4バイト読み込みます。詳細はFileとIOのリファレンスを参照ください。 (FileのスーパークラスがIOなのでFileオブジェクトからは両方のメソッドが使えます。) http://www.ruby-lang.org/ja/man/html/File.html http://www.ruby-lang.org/ja/man/html/IO.html readで読み込んだ戻り値は、文字列(Stringクラスのオブジェクト)ですから、上記例なら、 buf[0] #←オフセット10の文字コード(バイナリ値) buf[0,1] #←オフセット10の1バイトの文字列 buf[1,2] #←オフセット11から2バイトの文字列 ということになります。 ちなみに、Stringクラスはバイナリ情報も扱えます。詳細はStringリファレンスを参照ください。 http://www.ruby-lang.org/ja/man/html/String.html byte型以外のバイナリを扱うには、unpackメソッドを使いますのでこちらのリファレンスも参照ください。 http://www.ruby-lang.org/ja/man/html/pack_A5C6A5F3A5D7A5ECA1BCA5C8CAB8BBFACEF3.html numarray = buf.unpack("i*") #int型の配列に変換。
ダウンロードしたものが違う可能性があります。 最新版はこちらにあるようです。 http://github.com/cyross/ruby-miyako-mswin32
ツッコミ所が多いのですが、 useridというCookieの値が1であれば、cgi.cookies["userid"] は、["1"] を返しますので、 require "cgi" cgi = CGI.new print cgi.cookies["userid"][0]
逆にお聞きします。 1行「戻らないと」ダメなのですか? 例えば f = nil while g = file.gets do 　g.chomp! 　unless f.nil? then 　　p f 　　p g 　end 　f=g end と、前の行を変数に取っておく、という方法もあります。 どうしても戻るのなら、2行目を読む前にtell / posで場所を覚えてseek / posで移動するというのはありますが、何度もファイルを行き来して読むのは効率はよくないです。 file_position=0 while f = file.gets do 　f.chomp! file_positon = file.pos g = file.gets # ここでg==nil(→ファイルがfを読んだところで終り)のチェックが無いので # 次のchompで # abcde.rb:9: private method `chomp!' called for nil:NilClass (NoMethodError) #のエラーになってます g.chomp! 　p f 　p g file.pos = file_positon end
これはクラス定義だけなので、それを使ったメインプログラムが必要です。 何がしたいのでしょうか？検索エンジンを作りたい？大変ですよ。
#2 #3です。 #3でも、うまく記述できなかったので。話がちょっとそれて申し訳ありません。 OKWaveの確認画面で表示される文字列と投稿後に表示される文字列が違うみたいですね。 半角「－」は入力時・確認・投稿後も半角の「－」 半角「＆＃４５；」は入力時・確認はHTMLエスケープした文字列で、投稿後は半角の「－」 半角「＆ａｍｐ；＃４５；」は入力時・確認は2回HTMLエスケープした文字列で、投稿後は半角の「＆ａｍｐ；＃４５；」 となってしまいましたね。 OKWaveではどうやって、半角「＆＃４５；」を表示するのか、よく分かりませんが、 半角「＆＃３８；＃４５；」なのかな？ 申し訳ありませんが、ちょっとテスト &#45; これで、半角「＆＃４５；」？ いずれにしても、#2で書きたかったのは、以下です。 str ="<!-- Advertiser 'XXX', Include user in segment 'test--001' - DO NOT---ANY WAY -->\n<img src=\"XXXXXX\" alt=\"test--001\" width=\"1\" height=\"1\" />\n<!-- End of segment tag -->" str.gsub(/\<!\-\-(.*?)\-\-\>/) { "<!--" + $1.gsub(/\-/,"＆＃４５；") + "-->" } の＆＃４５；を半角にすれば、半角「－」をHTMLエスケープできると思います。
違いが全く分かりませんが、 例えば、 test→#test #test→#test として出力したい場合以下のようにすれば可能です。参考になればですが・・。 str.gsub(/(?<!#)(?=test)/,'#')
オーム社から出ているRailsによるアジャイルWebアプリケーション開発第3版がオススメです。
そもそもMacOSはファイル名の大文字小文字を区別しませんので、 etc,Etc,eTc,etC,ETc,EtC,eTC,ETC はすべて等価です。 なので判定したいしたくない以前の問題なんじゃないでしょうか？ どうしてもというのでしたら、 真の場合にファイル名を文字列として判別する課程も追加すればいいと思いますが、 環境によっては意図通りの働きをしてくれないかもしれません。 P.S. MacOSの設定で大文字小文字を区別するようにもできますが、 影響範囲が大きいのでどこでどんなエラーが発生するか分からない上、 余所の環境では結局何も変わりないのでお勧めしません。
使ったことはありませんが、マニュアルにあるとおり、 http://www.goto.info.waseda.ac.jp/~fukusima/ruby/pcap/doc-ja/index.html TCPPacketクラスならば tcp_data UDPPacketクラスならば udp_data が、パケットのデータ（ペイロード）では？ マニュアルのないクラスなら、ソースを見たりmethodsを使ったりしますが、 http://doc.okkez.net/static/187/class/Object.html マニュアルがあるなら、心当たりのあるページを全て確認しましょう。
Ruby on Railsのプログラムを組んだことがあるのであれば、ちょっとしたサイトを作ってみるとか。自分の熱意が表せれば、何でも良いのです。 求人の内容で、初心者・未経験者歓迎と言っているのであれば可能性がありますが、そうでなければまあ厳しいですよね。 経験者の求人で、プログラムを作って来いというのは無理難題に近いですから、自分のプログラム技術がどの程度か、世間ではどういうプログラマを求めているのか、聞いておくと良いと思います。もちろん、駄目もとでなんて態度はとても失礼ですので頑張って作ったと言う熱意を伝えます。 ソフトウェアは多くの人が作るので、ルール・慣例に従っていないプログラム、適切なコメントが入っていないプログラムが嫌われます。他の人がプログラムを見て、やりたい事と、その文脈(何をやっているか)がしっかり分かるプログラムを書くことを心がけます。コンパイルエラーは論外として、このような条件を満たしていないプログラムはバグより性質が悪いです。この辺りは、「プログラムの書き方」辺りでWeb検索するとよいです。 あとは、プログラマをやるようになると、要求・設計上の質問、例えば「設計書が曖昧でプログラムにならない」と言ったことが良く発生します。この場合は出来るだけ早く（失礼でない時間に取り決めに従って）報告して、設計の変更・要求の明確化をします。 今回は該当しませんが、課題で曖昧な設計が出るようなときは、しっかり確認を取ってメモを残しておくようにするとよいです。 何をやりたいかが明確に分かるプログラムを作り、ルールを守り、設計者と意思疎通が出来て、熱意もあれば、採用に値するプログラマということになるでしょう。 その先、正社員や管理職、もしくは設計者になりたいのか、はっきり答える準備はしておきましょう。 ghfjriさんの明るい未来を願って。
サーバーに保存せずにプレビューする方法としては、 HTML5のFile APIを使用する方法くらいしか思いつきません。 あとは、何らかの方法でサーバーで保存しないことにはプレビューは無理では ないでしょうか？
rubyの乱数は組み込み関数のrandを使います。 http://www.ruby-lang.org/ja/man/html/_C1C8A4DFB9FEA4DFB4D8BFF4.html#rand 1から30までであれば、 rand(30)+1 となります。 場合分けは、case - whenを使うとか、 http://www.ruby-lang.org/ja/man/html/_C0A9B8E6B9BDC2A4.html#case case rand(30)+1 when 1 email = "11111@yahoo.co.jp" password = "11111" when 2 ・・・ end 配列等に格納しておいて、代入するか。 http://www.ruby-lang.org/ja/man/html/_A5EAA5C6A5E9A5EB.html#a.c7.db.ce.f3.bc.b0 http://www.ruby-lang.org/ja/man/html/_B1E9BBBBBBD2BCB0.html#a.c2.bf.bd.c5.c2.e5.c6.fe arr = [ ["11111@yahoo.co.jp","11111"], ["22222@yahoo.co.jp","33333"], ・・・ ] email , password = arr[rand(30)] 実装は、いろいろあると思います。
＞何が問題なのでしょうか？ メッセージを見る限り、何も問題はないと思いますが、 ＞ドライバのバージョンを下げたりしてみてもうまくいきません。 何がうまくいかないのでしょうか？ メッセージの意味がわからないということですか？ ==== の行以降の警告メッセージはドキュメントのインストール時にソースを解析してドキュメントファイルを作成する際の警告(ソース中のドキュメントの記述の不足)なので動作には関係ないです。
ubygems が見つからないエラーなので、Google先生で ubygems LoadError を検索すれば、解決策が出てきます。 http://www.google.co.jp/search?hl=ja&lr=lang_ja&tbs=lr%3Alang_1ja&q=ubygems+LoadError&aq=f&aqi=&aql=&oq=&gs_rfai= マイコンピュータ→右クリック→プロパティ→システムのプロパティ→詳細設定タブ→環境変数 RUBYOPTの値を削除。 C:\Rubytest>ruby test.rb ruby: no such file to load -- ubygems(LoadError) のエラーであれば、上記で解決すると思います。
＞現在、インストールされているrubyのバージョンを確認するには、 ＞ruby -vでは、駄目なのでしょうか？ バージョン確認はそれで合ってますが、複数のバージョンのRubyがインストールされている場合は、自分の使うRubyで確認しないと無意味です。 ＞CORESERVERにruby1.8.7を入れてみました。 どこのディレクトリにインストールしたのでしょう？gemとかRailsはそのRubyを使っていますか？ gemとかRailsとかどうやってインストールしましたか？Ruby1.8.7を使ってインストールしてないのでは？インストールに使ったRubyを使うようにインストールされるはずです。
たのしいRuby http://www.amazon.co.jp/dp/4797357401 が、定番の入門書です。
def omit_block1 if defined? yield puts "brock exist" else puts "brock not exist" end end omit_block1{puts "foo"} #=> brock exist omit_block1 #=> brock not exist ブロックなしでメソッドを呼ぶとif文の判定はfalseになりますね。 メソッドの定義の中にyieldが在った場合には、一時的にブロックへ制御が渡されます。ですからブロック付で呼ばれる場合とそうでない場合があるメソッドの場合、ブロックの有無を判定して処理を分けなければなりません。 > yieldってはじめからRubyにあったはずです。 このif文の意味は、yieldという語句がRubyに存在するかをみているのではなくて、yieldが制御を渡すブロックの有無を判断しています。 ちなみにyieldのあるメソッドをブロックなしで呼ぶとエラーになりました。 def omit_block1 yield end omit_block1 test.rb:4:in `omit_block1': no block given (yield) (LocalJumpError) from test.rb:7:in `<main>'
test.batに文字を渡すだけなら IO.popen("test.bat", "w") do |out| out.puts "foobarbaz" end test.batの出力をRubyスクリプトで受け取るなら、こんな感じでどうでしょう。 require 'open3' Open3.popen3("test.bat") do |stdin, stdout, stderr| stderr.close stdin.puts "foobarbaz" stdin.close while line = stdout.gets puts "ruby : " + line end end う～ん、pauseで停止しませんね。 > Buildは別プロセスで動いている状態になっていると思いますが、 > Build中はRubyはどのような状態になるでしょうか？ よくわかりませんが、Buildのプロセスの終了待ちではないでしょうか。
Rubyは触ったことありませんので細かいところは不明ですが… Dependency Walkerでuser32.dllを見ると…CreateWindowAという関数はエクスポートされていません。 つまり、そんなAPIは存在しません。 # Dependency Walkerはフリーで入手可能です。 WindowsSDKをインストールしてヘッダファイルを確認すると… CreateWindowはCreateWindowExでdefineされています。 # user32.dllにCreateWindowExはエクスポートされています。 ということで、CreateWindowExでWin32API.newすればよいのではないでしょうか。 # 第1引数にWndExtraのサイズを指定する必要があるようです。 # CreateWindow()では0を指定していることになっています。 しかし…コモンコントロールならともかく、それ以外のウィンドウだったとしてウィンドウプロシージャはどうなるんでしょうかね？
カナは文字コード表上でアルファベットの様に半角と全角で同じ順番に並んでいるわけではないので、trで単純に変換できません。 # coding: Windows-31J require 'nkf' input = "アイゥェォバヴァポヲ".encode('Shift_JIS') output = NKF.nkf('-SsZ4',input ).encode('Windows-31J') puts output ruby 1.9.1p429 (2010-07-02 revision 28523) [i386-mswin32]の環境で確認しました。 エンコードは適宜変更して下さい。
http://www.meadowy.org/meadow/wiki/Screenshots 公式サイトにあるスクリーンショットです。 オレンジ色ですか?
> なにをもってblockは保存できないといってるのでしょうか？ Lambdaの項の最初に“Procを2通りの方法で使ってきました。直接渡す方法と、変数に保存する方法です。”という記述があります。 保存とは変数に保存するということの様です。Procのインスタンスは変数に保存して使い回しができますが、ブロックはできないということではないでしょうか。 > この２行ではエラー処理が行われず，なんらかの出力がされています， > これはなぜでしょうか？メソッドの中にreturnがある限りエラー処理が起こると思っているのですが・・・ メソッドの中ではなくて、Proc.new{　}の中にreturnがある場合ですね。 この中にreturnがあると、そのProcが定義されたレベルからのreturnを行おうとするようです、このサンプルだとProcはプログラムのトップレベルで定義されているので、トップレベルからreturnしようとしてエラーになっている様です。 要するにProcを使用する場合はreturnを使うな、returnを使う場合はlambdaを使えということではないでしょうか。
(\d\d)+ は、２つの数字の１回以上の繰り返しですから、"23"と"45"にマッチします。 ですから、$2には最後にマッチした"45"を指すことになります。 もし対象の文字列が"12345"であれば、"23"と"45"にマッチさせると最後の(.)にマッチする文字が無くなってしまうので、$2は"23"になりますね（$3は"4"） > いったい23はどうすれば後方参照できるのですか？ /(.)(\d\d)/ =~ "123456" p $2 ではダメでしょうか？
file1とfile2 に含まれるファイル名の差分配列を作成すればOKです。 file1 = "C:/*.*" file2 = "C:/デバッグ用２/" file2_list = Dir.entries file2 FileUtils.cp(Dir.glob(file1).reject{|f| file2_list.index File.basename(f)},file2)
色々ありますが、 １．while data=file.gets split(/[:,]/) fileがどこでも定義されていません。splitがここにあるのはまずいです。 ２．arry=file.gets これでは1行分のデータ(文字列)しか取得できません。また、eachも使えません。 ３．infile=open("marks2010","r") "marks2010"はコマンドライン引数(ARGV[0])から取得する必要があります。 (ruby prog1.rb marks2010で実行する為) 適当なサンプル(ruby1.9)作成してみました。 raise "Error:File not found!!" unless ARGV[0] and File.exist? ARGV[0] open(ARGV[0],"r") do |f;result,pass| begin results = open("results2010 1","w") passed = open("passed2010 1","w") f.each_line do |line| if line =~ /^("(?:[^"\\]|\\.)*"):(.*)/ name = $1 score = $2.scan(/\d+/) avg = score.inject(0.0){|r,i| r+=i.to_i }/score.size results << "#{name}: #{ avg.round(1) }\n" passed << "#{name}: #{ avg.round(1) }\n" if avg >= 60.0 end end rescue =>ex p ex ensure results.close if results passed.close if passed end end
Rubyのインストールについて詳説されています。 参考にしてください。 http://www.rubylife.jp/install/install/
DateやTimeのインスタンスの各時刻要素を持ってきて、新しくDateTimeのインスタンスを作成すれば良いと思います。 irb(main):001:0> require 'date' => true irb(main):002:0> ddd = Date.new(2001,1,1) => #<Date: 2001-01-01 (4903821/2,0,2299161)> irb(main):003:0> hhh = Time.now => 2010-07-29 19:34:40 +0900 irb(main):004:0> date = DateTime.new(ddd.year,ddd.month,ddd.day,hhh.hour,hhh.min ,hhh.sec) => #<DateTime: 2001-01-01T19:34:40+00:00 (2648064221/1080,0,2299161)> irb(main):006:0> > また、時刻だけを定義出来るクラスはないのでしょうか。 > Timeでは時刻だけと思ったのですが、日付＋時刻のようです。 > こちらもアドバイス頂ければ幸いです。 そのようですね。 DateTimeで年月日の値を適当なものに固定して使用するとか、あるいは時分秒のデータの保持のみが目的であるならば、自分でクラスを定義してしまうのも良いかもしれませんね。
＞20323.27430556の場合は、"1955-08-22 06:35:00"としたい。 もしやと思ったら、"1955-08-22 06:35:00" は、Excelで 20323.27430556 を日時書式で表示したときの値ですね。 Excel は、1900-01-00 00:00:00 という現実には存在しない日付をゼロとしているので、1日ずれます。さらに、1900-02-29 という現実には存在しない日付もカウントしているので、合計2日ずれます。 セルに、0 ～ 61 の数字を入れて、書式を日付にすると確認できます。 Excelの日付をシミュレートしたければ、DateTimeを使った上で上記の考慮が必要です。
プログラムを書かれている文字コードは何でしょうか？ moji2 = NKF::nkf( '-SsXm0', moji2 )でShift-JISのStringがmoji2に代入されますが、moji1やmoji3は他のエンコードのStringが代入されているのでエンコードが一致しないというエラーになっているのだと思います。 私の環境（Windows VISTA）では以下の様になりました。 # coding: Windows-31J　だと test.rb:20:in `gsub': incompatible encoding regexp match (Shift_JIS regexp with Windows-31J string) (Encoding::CompatibilityError) from test.rb:20:in `<main>' となったので moji2 = NKF.nkf( '-SsXm0', moji2 ) moji2 = moji2.encode('Windows-31J')　←この行を追加してエンコードを一致させるとエラーは無くなりました。 # coding: shift_jis　では エラーは発生しませんでした。
要するに 2進表記の文字列が欲しいってこと？ sprintf "%#06b", 0b0001
内部では全部2進数です。 元ののリテラル表記が何進法表記だったか？という意味の質問なら、知る手段はありません。
edit_student_pathについては、railsのルーティングについて知る必要があります。 http://guides.rubyonrails.org/routing.html >>例えば、モデル名を"student"にてscaffoldを実行すると config/routes.rbに下記ルーティングが自動的に定義されます。 map.resources :students これによりstudentに対するRESTfulルートが使えるようになります。 (詳細は、上記ページ内「3.3 URLs and Paths」に記載されています。) controllers/hoge/students_controller.rb のように階層を下げたい場合は、上記ルーティングを一部変更する必要があります。 #map.resources :students ===>これは削除 #下記追加 map.namespace(:hoge) do |hoge| hoge.resources :students end ルーティングを追加した場合は、「rake routes」でルーティングの確認を行ってください。 おそらく下記3つのルーティングが定義されます。 new_hoge_student edit_hoge_student hoge_student 仮にedit linkは、下記のように訂正する必要があります。 <%= link_to 'Edit', edit_hoge_student_path(student) %>
BigDecimalについては、こちらを参照ください。 http://www.ruby-lang.org/ja/man/html/.html 内容については、notnot様の回答の通りです。 簡単なサンプルを作りましたので動きの参考にしていただければ。 (bigdecimalを利用した場合は、全ての演算でbigdecimal型を利用する必要があります。) require 'bigdecimal' require "bigdecimal/util" #適当なbigdecimalの出力桁数調整関数 def printtd(d,n=15) d.to_s("f").slice(Regexp.new("^(\\d+(\\.\\d{1,#{n}})?)")) end data = (2.0).to_d #to_dでFloat型をBigDecimal型に変換できる。 p data.class data = data.sqrt(16) p printtd(data) #少数13桁以下はFloat型では表現できない為文字列から変換する。 data2 = BigDecimal("1.123456789012345") p data2.class p printtd(data2) #これだとおかしくなる。(200.0はfloat型) w = data + 200.0 p w.class #演算結果がfloat型になってしまう。(有効桁数の減少) p w #型変換を回避するため、常にbigdecimal型同士で演算する。 w =data + (200.0).to_d p w.class p printtd(w) #有効桁数が保障される。
元のページの文字エンコーディングと、結果を見ようとするツール（メモ帳？？）が期待する文字エンコーディングが異なっているんでしょう。 Windowsのメモ帳で見たければ、Shift_JISにする必要があるので、 require "kconv" しておいて、 print f.gets.tosjis それより文字エンコーディングを自動認識するエディター（フリーソフトでもたくさん種類があります）を使うのがいいと思います。
1)2) http://doc.okkez.net/static/191/class/String.html http://doc.okkez.net/static/191/doc/spec=2fm17n.html ・ASCII-8BITを使う。 あるいは ・バイト単位ではなく文字単位で処理するようにアルゴリズムを変更する 3) http://www.ruby-lang.org/ja/man/html/Date.html を見ると、exist?って無いんですよ。検索したら、exist?で日付の正当性を確認する、と説明しているサイトもあるんですが... そのあたりの経緯は詳しい人におまかせして。 ・ valid_～? メソッドが使う 4) http://doc.okkez.net/static/191/method/String/i/tr.html 1.9でもtrはあるので ・mojiがStringではない ・Encode関係で両者の対応が取れてない ということではないでしょうか
＞Ruby1.9を使うとありますが、1.9になると何か便利機能が増えているのでしょうか？ 1.9だと、Stringがバイト列じゃなくて文字列になるので、 "1あいアう234565789"[2,2] で、OKです。 1.8だと、 "1あいアう234565789".split(//)[2,2].join
以下の様なページをみつけました。nkfを使用する必要があるようですね。 http://www.db.is.kyushu-u.ac.jp/rinkou/ruby/hankaku.html
データベースとの接続は問題というよりは、 LineItemとOrderのアソシエーション設定に問題があるかもしれません。 class LineItem < ActiveRecord::Base belongs_to :order belongs_to :product class Order < ActiveRecord::Base has_many :line_items 単数形と複数形あたりが怪しい？ 画像のログがもう少しはっきり見れればよかったんですが。
p "ｆｕｎｎｙ".tr("ａ-ｚ","Ａ-Ｚ") p "ＦＵＮＮＹ".tr("Ａ-Ｚ","ａ-ｚ") とかどうでしょうか？
a = hoge.select(ARGS) の場合に、ARGSの部分が引数です。 ここは、「reads[, writes[, excepts[, timeout]]]」とかかれているので 以下の４種類の書き方ができます。 hoge.select(reads, writes, excepts, timeout） hoge.select(reads, writes, excepts） hoge.select(reads, writes） hoge.select(reads） また、aに代入される値が戻り値です。 ここには、 「戻り値は、timeout した時には nil を、そうでないときは 3 要素の配列を返し、その各要素が入力/出力/例外待ちのオブジェクトの配列です(指定した配列のサブセット)」 と書かれているので nil 若しくは [???,???,???]の形で値が代入されます。 これでご理解いただけるのではないでしょうか。
＞ｓにns[0]を入れると、＜＜を使っても変更されないから、意味がないと思うのですが、なぜここでforを使ってるんでしょうか？ ＞ns[0]を消去するようなメソッドはforの下ではつかわれていないようにみえるのですが・・・。 このあたりの意味が不明ですが、ns には、nil(タイムアウト)でない場合、三要素の配列が返りますが、ns[0]が入力、ns[1]が出力、ns[2]が例外のそれぞれ配列になります。 この例だと、select時に、入力のみ引数に渡して、それも一要素だけ渡しているので、実際には、ns は nil もしくは [[server],[],[]] のどちらかしかあり得ません。従って、 for s in ns[0] if s == server ～ end end でなく、 s=ns[0][0] ～ でも同じです。 一般には、ns[0]が一要素とは限らないため、要素数だけ繰り返しが必要になりますし、出力待ちもしている場合はns[1]も見る必要があります。
#1のかたが言うように、もう少し具体的に書くと、良い回答が得られるかと思います。 入力した内容とは、 ファイルから入力したものですか？ 画面から入力したものですか？ それは、文字列なのですか、それとも、バイナリーデータなのですか？ 配列に入れたい理由は何故ですか？ 文字が"abcdefg"とあったら、 配列にはどのように入れたいのですか？
1.8と1.9でも大分挙動が違いますね。 p Proc.new{} == Proc.new{}　　　　　　　 #=>[1.8]true,[1.9]true p1 = Proc.new{} p2 = Proc.new{} p p1 == p2　　　　　　　　　　　　　　　　#=>[1.8]true,[1.9]true a = 1 p Proc.new{a} == Proc.new{a}　　　　　　　#=>[1.8]false,[1.9]true p Proc.new{|x| x} == Proc.new{|x| x}　　　#=>[1.8]false,[1.9]true p1 = Proc.new{|x|x} p2 = Proc.new{|x|x} p p1 == p2　　　　　　　　　　　　　　　　#=>[1.8]false,[1.9]true p Proc.new{|x| x} == Proc.new{|x| x*x}　　#=>[1.8]false,[1.9]false p1= Proc.new{|x| x} p p1== p1.dup　　　　　　　　　　　　　　#=>[1.8]true,[1.9]true p (p1=Proc.new{|x|x})==(p2=Proc.new{|x|x})#=>[1.8]false,[1.9]true p p1 == p2　　　　　　　　　　　　　　　　#=>[1.8]false,[1.9]true 「Procの==が成立するのは、比較対象がクローンかコピーになっている場合。 Proc.new{}==Proc.new{}等は例外的にtrueを返す」とあります。 (引用元：「プログラミング言語 Ruby」 David Flanagan、まつもとゆきひろ共著) 1.8では上記の通りでしたが、1.9ではProc内のコードが一緒であればtrueを返しました。 1.9だと期待通りですかね? 1.8と1.9で変更があったのかもしれません。 (irbだと少し違う結果になりました。)
※申し訳ありません。余計なエスケープが含まれていましたので削除しました。 a , b = str.split(/\n(?=<!--\s+Advertiser)/) (?= )は正規表現の先読みという機能です。 \nの後に <!-- Advertiser という文字列が続く「位置」にマッチします。 位置というのがポイントです。<!-- Advertiser自信を含めてしまうと、 splitした際に<!-- Advertiserが消えてしまいます。 【先読み有りの場合】 \n <!-- Advertiser ↑↑ 「\n」と「\nと<!-- Advertiserとの間の位置」にマッチし、 <!-- Advertiser 自身は含まれません。 【先読み無しの場合】 \n<!-- Advertiser ↑↑↑↑↑↑↑↑ 「\n<!--\s+Advertiser」にマッチし、<!-- Advertiserも含まれてしまう。 この2つの動きを比べてみると詳細がわかると思います。 a , b = str.split(/\n<!--\s+Advertiser/) #先読み無し a , b = str.split(/\n(?=<!--\s+Advertiser)/)#先読み有り。
Hypertext Transfer Protocolの仕様として、CRだけでもLFだけでもないCR LFの並びを使わなければいけない部分があるのです。RFC 2616を見てください。 Ruby以外のプログラミング言語でHTTPクライアントを作る場合でも同じです。
No.1です。 エラーがでましたか・・・。 rails2.3.5では大丈夫なんですが、バージョンの違いでしょうか？ (renderのコードを見る限り問題もなかったものですから) :templateを指定しないとダメかもしれません。 render :template =>"user/test.html",:layout=>false
pingライブラリは、ICMP echoを送るものでもなく単にソケットを開いてみるだけのものということもあって、Ruby 1.9では削除されました。 このため、通常であればrequire 'ping'に失敗するところですが、今回はたまたまスクリプトがping.rbという名前のため自分自身をrequireしています。requireされたping.rbの中で、既にping.rbはrequireずみのため1行目はスキップします。4行目に到達した時点で、ここまでのどこでもPingなどという定数は定義されていないため、例外が発生します。 対策としては、Ruby 1.8に含まれていない上に実装も適当なpingライブラリではなく、他の手段を使うということが考えられます。 * システムのpingコマンドをKernel.systemで利用する * 開いているtcp portを特定できるなら、TCPSocketで開いてみて例外を捕えてみる。
もうすこし何か覚えていることは何かないですか？英語だったとか、日本語だったとか、個人のサイトだったとか、企業サイトだったとか、ORGだったとか？ ちなみに私がよく使うサイトはここら辺です。 - http://www.moongift.jp/tag/ruby-on-rails/ オープンソース、フリーウェアを紹介するブログ。リンクはタグ機能でRailsアプリに絞ったところ。 - http://ruby-toolbox.com/categories/crm_apps.html gemやrails pluginsを比較、検討できるサイト。リンクはCRMを比較しています。
#1です。申し訳ありません。userをすっかり忘れてました。 userのblog_entriesに対するhas_many(何を使われているかによりますが)宣言で [userモデル] has_many :blog_entries do def find_by_prev time find :first, :conditions=>["created_at < ?",time],:order =>"created_at DESC" end def find_by_next time find(:first,:conditions => ["created_at > ?",time],:order =>"created_at ASC") end end 使い方 @user.blog_entries.find_by_next　@blog_entry.created_at @user.blog_entries.find_by_prev　@blog_entry.created_at では、どうでしょうか？
sample1.xlsをダウンロードされましたでしょうか？ おそらく11行目でエラーがでていますので、sample1.xlsファイルが見つからない為に エラーが発生しているものと思われます。 同じ環境で試していますが、問題なく動作します。 また、タブ区切りのcsvを生成する方法の1つは、 標準ライブラリのcsvを利用して下記のように書けます。 CSV.open("test.csv", "w",{:col_sep=>"\t"}) do |writer| writer << ["foo", "bar", "huga"] end これを利用して、excel1.rbを下記のように変更。 require 'win32ole' require 'CSV' def getAbsolutePath filename fso = WIN32OLE.new('Scripting.FileSystemObject') return fso.GetAbsolutePathName(filename) end filename = getAbsolutePath("sample1.xls") xl = WIN32OLE.new('Excel.Application') book = xl.Workbooks.Open(filename) csv = CSV.open("test.csv", "w",{:col_sep=>"\t"})　　#追加 begin book.Worksheets.each do |sheet| sheet.UsedRange.Rows.each do |row| record = [] row.Columns.each do |cell| record << cell.Value end csv <<record　　　#追加 end end ensure book.Close xl.Quit csv.close　　#追加 end
watirは、Ruby1.8.6を推奨しているようです。 >>We recommend using Ruby 1.8.6 on all platforms. 初めてRubyを触られているとのことですので、 1.9系にこだわる理由が特にないのであれば、Ruby1.8系を 使われてみてはいかがでしょうか？ (最新版の1.8.7では問題なく動作しました)
#2です。 度々ですみません。 もっと、簡単な方法がありましたね。 サーバー上にバッチファイルを置いて、以下のようなページにすれば、ダウンロードを促してバッチの実行がIEで可能でした。file://ではうまくいかないようですね。 <html> <META HTTP-EQUIV="Refresh" CONTENT="0;URL=http://serverpc/test.bat" <body> <a href="http://serverpc/test.bat">DL</a> </body> </html>
attr_accessor :NEW_USER_PWを定義したからといって、 NEW_USER_PW?メソッドが定義されるわけではりません。 attr_accessorはゲッターとセッターメソッドを作るだけです。 それ以外の論理値を返すようなメソッドは自作しなければなりません。 NEW_USER_PW?メソッドを作成されていないのなら、「undefined method」が 出てしまうのは当然です。 質問にあるように、「入力があった場合のみ」とありますので、 NEW_USER_PW?メソッドを下記のように実装すればチェック可能です。 def NEW_USER_PW? @NEW_USER_PW.size > 0 end また、ifにはprocオブジェクトを渡すこともできますので、 :if => Proc.new{|u| u.NEW_USER_PW.size > 0} と書いてもいいでしょう。 NEW_USER_PWというインスタンス変数はすべて大文字を使用されていますが、 見る人によっては定数と勘違いします。 変数であれば小文字表記を利用するほうが良いかもしれません。
下記ＵＲＬ等を参照してみて下さい。 http://q.hatena.ne.jp/1149751438 要は、アセンブラがバイナリコードに変換する時点の解析処理で最初に文字がくると、文字か数値かの判断に手間がかかるから数値と判断しやすいように「0」を付けてるようです。
バッククオートを使わずに b = "bbb" c = "ccc" aaa = "diff -q " + b + " " + c res = system(aaa) こんな方法はどうですか？
「osx ターミナル ruby」 辺りで検索してごらん。 まずはターミナルの使い方からになるかもしれないけどね。
Ruby1.9以降であれば、文字列リテラルでUnicodeエスケープを使うか、pack して force_encoding すればできます。 例えば U+29E3D のホッケはサロゲートペアで表すと D8 67 + DE 3D なので、 s = "\u{d867}\u{de3d}" puts s とすれば出力できます。 あるいは、バイトデータからですと、 a = 0b111011011010000110100111 b = 0b111011011011100010111101 s2 = [a, b].map{|i| [i.to_s(2)].pack("B*").force_encoding("utf-8") }.join puts s2 です。 この場合はto_s(2)で2進数表現にしているのでB*でpackしてます。
b= を書き換えるなら#1の方の回答の通りですが、 if /test\[/ =~ a と書かないということは、b は実際にはどこかから読み込んだデータが入っているわけですよね。 if /#{Regexp.escape(b)}/ =~ a とすれば、bに含まれる正規表現記号を適切にエスケープして文字列そのままの正規表現にしてくれます。 もちろん、正規表現にせずに、単純に文字列が含まれるかと言うことなら、 if a.include?(b) if a[b] とか書きます。
セッション情報は、テンポラリディレクトリに書かれますが、そのあたりの問題はないでしょうか。
#Rubyあんま使ってないけど出来た。Rubyがメインの人から見たら可笑しいかも。(コピーでないことを示すため、先頭四行のみ出力した。) #==== #　a.txt #==== #1 #2 #3 #4 #5 #6 #7 #== #output.txt #== #1 #2 #3 #4 a = File::new("a.txt","r") o = File::new("output.txt","w") x = a.readlines (0..3).to_a.each {|i| o.write(x[i])} o.close a.close
define_singleton_methodは1.9で追加されたもので、Objectクラスのメソッドです。 一方define_methodはModuleクラスのprivateメソッドなので、ModuleかClassの中から呼ばないといけません。 (ClassクラスはModuleクラスのサブクラス。Rubyのprivateはサブクラスからも見える) define_methodであとからメソッドを追加しようとする場合、直接外からは呼べないので、間接的にdefine_methodを呼ぶメソッドを作成しておくか、一度Classを開くなどをやらないといけませんが、 define_singleton_methodを使えば、そんなことはせずに、簡単にできるということです。
> とまでは書けたのですが、コールバック（ブロックパラメータの部分）、上記例だと > |a,b| a.to_s+'*'+b.to_s+'='　の部分 > を変数として定義（Scalaの例のf1として定義するところ）する方法を知りません。 Rubyだと f1 = Proc.new{|a, b| ... } または f1 = proc{|a, b| ... } または f1 = lambda{|a, b| ... } という形になります。ブロックを受け取る関数に上で作ったfを渡すには&をつけて puts Kuku.new(3,5).calc(&f1) のようにします。
「Array#shift().to_iメソッド」という言い方はしないと思いますが、複数のメソッドがピリオドでつないであれば、左側のメソッドの返すオブジェクトに、右側のメソッドを適用した物が結果になります。ということで、その理解で合ってます。 細かいことですが、to_i は整数に変換するメソッドです。「数字」というと文字列"123"なども含む可能性もあるので。例えば、「正規表現 \d+ は数字にマッチする」という文での「数字」は文字列のことです。
どうしてもわからなければ、「文字列とシンボルは兄弟」と思ってください。 プログラム中に文字列を書くときは、" " や ' ' などで囲みます。 プログラム中にシンボルを書くときは : を前置します（:" " や :' ' で囲んでも良い)。 "abc" == %+abc+ #⇒ 真（同じ文字列の別の書き方。入門書の「%記法」参照） :abc == :"abc" #⇒ 真（同じシンボルの別の書き方） ★文字列に対してシンボルの長所 代入や等値比較が速い ★文字列に対してシンボルの短所 大小比較が出来ない。正規表現とマッチできない。分解・連結・部分取り出し・書き換えなど加工・編集など一切が出来ない。多分まだまだある。 そういえば、以前もシンボルの説明をしました。 http://okwave.jp/qa/q5800523.html ここに書きましたが、ハッシュのキーでは、文字列よりシンボルが好んで使われます。長所が生きて、短所が関係ないので。 なお、to_s と to_sym で相互変換できます。 "abc" == :abc #⇒ 偽 (文字列とシンボルは等しくない) "abc" == :abc.to_s #⇒ 真 (変換して文字列同士の比較で等しい) "abc".to_sym == :abc #⇒ 真 (変換してシンボル同士の比較で等しい） putsに対しても相当の誤解があるようですが、どこから説明したものか。 「メソッドとは何か」をまず勉強するのかな。「たのしいRuby」等の定評のある入門書を虚心に読む。
numsってクラスは組込みにないと思います。 というより、小文字で始まるクラスは無いんですが。 ただの変数じゃないんですか? each_char()が使えるということは文字列か、文字列と互換のあるクラスだと思われます。
＞ Successfully installed twitter-0.7.0 ならインストールできてるような。 ただ、requireのエラーメッセージがバージョン付きになっているのが気になりますが。 試しに、 ruby "H:\Program Files\ruby\lib\ruby\gems\1.9.1\gems\twitter-0.7.0\examples\user.rb" みたく例題プログラムを動かしてみては。
"Saving arrays, hashes, and other non-mappable objects in text columns" http://api.rubyonrails.org/classes/ActiveRecord/Base.html#M002229 でもActiveRecordなら、配列じゃなくてhas_manyにしたほうが良さそうな。
こんにちは、主にWindows上でRubyを使用しているライトユーザーです。 > 「たのしいRuby」を一通りやるのにどのくらいの時間がかかりましたか？ ７年ほど前に第1版を購入ました。その時にC言語の初歩は知っていましたのでプログラム素人とはいえないのですね。 で、回答ですがまだ一通り終えていません（笑 ifやwhileなんかは楽勝でしたが、クラスがでてきたところで進度が鈍り（ここまで一週間くらい）、イテレータで挫折しました。未だにyeildがよく理解できていません（実際の使用で使わないので問題なし） > 「Ruby２さまざまなデータとプログラミング」をもっている方、この本は本当に初心者向けなんでしょうか？ 「Ruby 2 さまざまなデータとアルゴリズム」ですよね？ 持っていないので推測ですが、この本はよくあるアルゴリズム本のRuby版という位置づけなのではないでしょうか、ならば必ずしも（Rubyの）初心者向けとはいえないと思います。ですからメソッドも自分で調べろと書かれているのかもしれませんね（今はネット上でマニュアルが見れるのでその点で言えば必ずしも不親切とも言えないのかもしれません） 　＃他のご質問にあるようにいきなりビットマップ云々なんてプログラムが出てきたら私も挫折しそうです。 いろいろなアルゴリズムを習得したいのではなくて、Rubyという言語を学びたいというのであれば、他のアプローチの仕方を選択しても良いかもしれませんね。 > 短かいにもかかわらずわからないプログラムを見て、数日も考え続けるのは時間の無駄でしょうか？それともみんな初めはこんなもんなんでしょうか？ ある手法を、どのようにプログラムで表現するかに慣れていないと、こんなものかもしれません。 が、それ以前に件の書籍が初心者向けかというと少々疑問にも感じます。
> 抜き出しているなら、はじめにWIDTHとHEIGHTを設定した時と、パスカルの三角形の中のWIDTHと HEIGHTは異なるはずではないのですか？ 横方向（X）について パスカルの三角形は、1～1280(=640*2)の範囲で作成されているのに対して ビットマップの作成は320～959（=320.upto(960 - 1)） の範囲を使用していますね。 中央部を抜き出している様に読めます。
中学数学でいけますよ。 がんばれ-♪
名前空間ですね。 class Foo 　class Bar 　…… 　end …… end class Hoge 　class Bar 　…… 　end …… end class Bar 　…… end だと、それぞれの、Barクラスは別物で、それぞれFoo::Bar、Hoge::Bar、Barという名前のクラスになります。ただし、クラスFooの中ではFoo::BarはBarと略記できるし、Hogeの中ではHoge::BarをBarと略記出来ます。 例えば、Fooクラスの中でしか利用しないクラスがあった場合に、他のクラスと名前の衝突を気にすることなく名前を付けることが出来るわけです。ただし、Fooクラス外からもFoo::Barのように利用することが出来るので、Fooクラス内に隠蔽できるわけではないですが。 定数などもクラスの中で定義すれば、Foo::CONSTNAME のような定数が出来ます。
単に ruby.exe 1.rb の間違い、ということ？
twitter インストール時、以下のようにすればうまく行きますよ。 gem install twitter -v 0.7.0 また、twitterのバージョンは作者のホームページで確認出来ますよ。
オプションのselectedにid値と一致する値をセットすると反映するので <%= collection_select(:auth, :authCd, Auth.find(:all, :order => "AUTH_CD"), :id, :AUTH_NM, :include_blank => true) %> を <%= collection_select(:auth, :authCd, Auth.find(:all, :order => "AUTH_CD"), :id, :AUTH_NM, {:selected => @auth_authCd.to_i, :include_blank => true } ) %> Controllerで@auth_authCdが宣言されないとViewでエラーが起きるので if params[:auth] @auth_authCd = params[:auth]["authCd"] end を @auth_authCd = (params[:auth].present? ? (params[:auth]["authCd"] || '') : '') ソース見た感じだとこんな感じでどうでしょう。
No.2です > その後ruby.batと入力してアドレスがたくさん表示されました。 > ここで詰んでいるところです。 アドレスと仰られているのは、設定されたPathの内容が表示されているものだと思います。たくさん表示されるのは正常です。 その最後に追加したパス、前述の例でいえば F:\ruby-1.8\bin 、が表示されていれば正しく設定できています。 もし正常にパスが設定されていれば、コマンドプロンプトで ruby -v と入力すればRubyのバージョンが表示されます。 私の例では以下のような表示になりました。 F:\>ruby -v ruby 1.8.7 (2010-01-10 patchlevel 249) [i386-mswin32]
やってみましたが、下記が返ってきました。XP/SP3 Ruby1.8.6 #<OAuth::RequestToken:～～～> キーが間違っていませんか？キーを変えると401が出ました。
>この"utf-8"の部分に書く文字コードの表記一覧（？）はどちらを参照すればよろしいのでしょうか？ ruby -e "puts Encoding.name_list" >書き方として"SHIFT-JIS"、"Shift-JIS"、"SJIS"等のうち、どの表記が正解なのか判りません。 ruby -e "puts Encoding.default_external" かな？ 実はよくわからん。SJIS だとうまく行かなかったので、Windows-31J にしてみたりしてる。
これじゃないの？ スクリプト言語“Ruby”をWindows環境へ簡単に導入できる「RubyInstaller」 http://www.forest.impress.co.jp/docs/review/20100302_351032.html
#{式} の展開は、" " の中だけです。' ' の中では効きません。 node = REXML::XPath.first(@masterdata, "//NameRoot/Text/No[text()='#{id}')]")
下記の参考ＵＲＬを参考にされてはいかがでしょうか。 （わたしは動作確認していませんであしからずご了承下さい）
http://jp.rubyist.net/magazine/?0004-Win32OLE
$PROGRAM_NAME
#1,#2,#4です。すいません。さっきの半分無しにしてください。 開発版の1.9.0を使うべきでないと言うところは良いのですが、原因は、Rubyの不具合じゃなくて、1.8系と1.9系の仕様の違いですね。 1.9系では、slice!を初めとする「文字列の一部を数字で位置指定する」機能が変更になってます。 1.8系がバイト単位で、1.9系が文字単位です。指定しないとデフォルトがUS-ASIIだから同じだろうと思っていましたが、何も指定しないでファイルから読むと、OSの標準(Linuxだと環境変数LANG)の文字コードになります。なお、US-ASCIIだと\x80～\xFFのバイトがエラーに。 1.9系のRubyを使うのなら、プログラム先頭で、 Encoding.default_external = "BINARY" if RUBY_VERSION > "1.9" としてください。
LinuxのRubyにはそういう問題はありません。勘違い、ないし別の現象でしょう。 どういうスクリプトで、どういう結果になるのですか？
おそらく関数aはRationalで計算しているのだと思いますが、 「1.0」と記述すると、その数値は「Float」(浮動小数点型)で表現されます。 また、「RationalとFloatとの計算結果」はFloatになります。 以前の質問で別の方が答えられていた通り、Float 型は、精度に限度があり、その結果として「out of Float range」エラーになるのです。 数式中の小数値は、浮動小数点数(1.0/300)ではなく、Rational型になるようにすれば、「out of Float range」エラーは出なくなります。 a(7000,3500)*(Rational(1,300)**3500)*(Rational(299,300)**3500) で計算してください。 あと、Rationalは分数型ですので、そのまま結果表示すると分数で表示されてしまいます。 ですが、これを単純に小数(Float)に変換しようとすると、その段階で「out of Float range」になってしまいます。 一手間かかりますが、require "bigdecimal"した上で、 result = a(7000,3500)*(Rational(1,300)**3500)*(Rational(299,300)**3500) puts BigDecimal(result.numerator.to_s,1000)/BigDecimal(result.denominator.to_s,1000) とでもすれば、小数で表示できます。 ちなみに、そうやって上記結果を表示すると、 0.15(略)E-6569 と表示されますが、これは「0.(0が6569個)15(以下略)」という意味です。
＞これは計算の桁が大きすぎるためなのでしょうか。 そんなところです。 例えば、 a=1E1000 # 10の1000乗 とすると、 warning: Float 1e1000 out of range という警告が出て、a の値は Infinity (無限大) になります。 ＞ルビーは計算の桁がメモリーの許す限り無限と聞いたのですが。 違います。きっと、聞き間違い、読み間違いですね。 整数の計算はメモリーの許す限り無限桁です。 通常の浮動小数点数の値は普通の他の言語と同じ。 BigDecimalライブラリを使うと、任意の桁数で浮動小数点数計算できます。
疑問に思っている部分を削除して実行はされてみましたか？ そこでエラーメッセージが出れば、それを検索することで ブロックが何をしているか判るのでは。 irbでは実行もされないというのであれば、 プログラムに書き換えて実行してみればいいだけのお話ですし。 まあ、リンク先に書かれている通り、ブロックの中を 呼び出し先に設定しているというだけかと思いますけど。 （それぞれのメソッドに検索処理は記述されていませんよね） あと余計なお世話かもしれませんが、質問文が非常に判りづらいです。 疑問点 ・A 判っている点 ・B ・C という風に、箇条書きされてはいかがですか？
例え1000桁にしても、浮動小数点実数型では1.0/3は3分の1にはなりません。計算によっては誤差がどんどん溜まっていきます。 そういう精度が気になる用途なら、Rational を使いましょう。 Rationalは分数型なので、3で割って3倍したら元の数に戻ります。 --- require "rational" def test(value, count) step = value / count sum = value * 0 count.times do sum += step end print step," * ",count," - ",value," = ",(sum - value),"\n" end test(Rational(1), 300) test(1.0, 300) ---
関数ab は、計算結果を表示はしていますけど、 その結果を関数の戻り値として返してないですね。 (元のコードでは、puts の結果(=nil)を、関数の戻り値にしてしまっています) > puts b / ( d * f ) これを、 > b / ( d * f ) にしてください。
おそらく a(10,i) が、なんらかの引数の時に nil を返しているのでしょう。 で、そのタイミングで 「nil + 整数」という演算はできないので、質問のようなエラーになる、と。 あとは、関数 a のコードを見ないとなんとも言えません。
Rubyのwhile式は当然ネスト可能です。 while condition while another_condition something end end と書けば、別に最初に出現したendで外側のwhileまで終わったりはしません。
できます。 が、何の計算するのか分かりませんが別の方法を考えた方が良いのではないでしょうか。 require 'bigdecimal' puts( (BigDecimal('1') / BigDecimal('300')) ** 7000 結果 0.1416501250750661252256415(略)35213460001E-17339
ruby -e "def c(n,k) k % n == 0 ? 1 : c(n-1,k-1)+c(n-1,k); end;p c(10,2)" ruby 1.9で確認。
Rubyの整数の桁数は無限桁なので、特に意識せずに、整数だけで演算すればいいです。
` ` や " " の中で \ を指定するには、 \\ と書くと言うところでの躓きですかね？ os = `xcopy .\\org_data\\*.* L:\\ /s /e /v` でどうですか？
downto を使う人が多いと思います。
RubyにはERBというライブラリが添付されています。これは3, 4のようなテンプレートファイルを用意して、その中に若干のRuby式などを埋め込んで値で置換するためのものです。これを利用すればまさに3, 4のようなことができます。
cgi["aaa"] というのは、クライアントから渡されたパラメータを参照するときに使います。 この場合は関係ないので、普通に文字列代入。 require "cgi" cgi = CGI.new redirect_url = "http://www.google.com" print cgi.header({ 'status' => 'REDIRECT', 'Location' => redirect_url }) cgi["..."]の使い方は、例えば、 require "cgi" cgi = CGI.new redirect_url = cgi["goto"] print cgi.header({ 'status' => 'REDIRECT', 'Location' => redirect_url }) だと、これに対して、 http://あなたのサイト/上記のcgi.cgi?goto=飛び先URL URLで指定した場所に飛べます。
ubuntu 9.10, locale ja_JP.UTF-8 ですが、 下記のように問題なく動作します。 $ cat engawa.rb str1 = "縁側でお茶が飲みたい" puts str1 $ ruby --version ruby 1.8.7 (2009-06-12 patchlevel 174) [i486-linux] $ ruby engawa.rb 縁側でお茶が飲みたい 他の部分に文法エラーがあるのではないでしょうか。
Rubyっぽいコードに不慣れということでしたら、まさにそのための本『初めてのRuby』はどうでしょうか。
文字列操作や配列について http://0xcc.net/blog/archives/000137.html http://0xcc.net/blog/archives/000043.html 外部コマンド実行 http://pub.cozmixng.org/~the-rwiki/rw-cgi.rb?cmd=view;name=%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%B8%C0%B8%EC%A4%CE%C8%E6%B3%D3%3A%3A%B3%B0%C9%F4%A5%B3%A5%DE%A5%F3%A5%C9%A4%CE%BC%C2%B9%D4 こんなのとかですか？
No3です。 ＞Rubyのみ初心者です． よかった。 ＞>確認２：readlinesというメソッドはどういう機能を持ったメソッドだと思っていますか？ ＞ファイルの内容が一行ずつ入った配列だと思ってます ファイルを行の配列のようにアクセスできるメソッドと思っているのなら間違いです。 ファイルから全データを読み込んで、それを配列の形で返すメソッドです。したがって、呼び出したことで、該当ファイルのファイルポインタ(ファイル中で次に読み取る文字位置)は末尾のEOFの所に行ってしまいます。二回目の呼び出しで、EOFに達したファイルを再度読むことになるので空が返ります。具体的には配列なので [] が返ります。 他の方がお書きのように、呼び出し結果の配列オブジェクトを保持しておいて、以降はそれをつかうといいです。
インスタンスメソッドとするのにそぐわない機能だが、そのクラスの中で定義したい機能。 リファレンスマニュアルに出てくる実際の例を見ればわかると思います。
高水準なライブラリがありますので容易と言えば容易です。ただし、PHPのように言語処理系に自動的に付属するライブラリにはMySQLサポートがありません。ですから別途MySQL用のライブラリを導入する必要があります。この意味ではPHPほど容易ではないという考え方もできます。 参照URLにMySQL/Rubyライブラリの配布元を書きました。リファレンスもそちらにあります。 http://www.ruby-lang.org/ja/libraries/ に書いてあるような手順でRubyGemsというライブラリを管理するためのライブラリを導入し、その後にmysqlという名前のgemを導入すればMySQL/Rubyが利用できます。こうして一度導入すれば、あとはMySQL/Rubyが提供する機能でプログラムからMySQLとやりとりできます。
可能かと言えば可能ですが、プロセスを起動する無駄が生じるので普通はやりません。処理件数が少なく、かつ、レスポンスタイムがシビアでないシステムで、完成したプログラムを使い回す場合くらいでしょうか。 質問の様子では、これから両方作るようなので、普通はしませんね。 どうしてもPHPからrubyを起動するなら、system(),proc_open()などの外部プログラムを起動する関数を使うことになります。データ受け渡しは、ファイル経由 または DB経由 または パイプ経由。
多くの言語では、メソッド呼び出しや関数呼び出しの時に、メソッド名・関数名の後に引数を囲むカッコが必要です。 例： print(1+2) Rubyでは多くの場合、カッコを省略できます。 例： print 1+2 さて、カッコにはこの他に、演算の順序を変えるためのカッコがあります。例：(1+2)/3 メソッド名の後にカッコがある場合、演算の順序を変えるためのカッコなのか、メソッド引数をくくるカッコなのか？？？ Rubyは、引数をくくるカッコとみなして解釈しようとします。そうじゃなくて演算の順序を変えるカッコのときは、引数をくくるカッコは省略できません。 例：誤： print(1+2)/3 #=> エラー → こう見なされている： (print(1+2)) / 3 #=> printの返す結果を3で割ろうとして、割れないのでエラー ＊＊＊１ 例：正： print((1+2)/3) ＞文法的に、何に違反してるのか、わかりません。 文法と言うより実行時のエラーです。writeは出力した文字数を返すので str が "hoge" の場合、STDOUT.write(str||'defaultString') は 4 を返します。次に、4 + "\n" を実行しようとして、「文字列と整数は足せない」というエラーになっている。エラーメッセージの corce というのはここでは「(計算できるように値を)変換する」という意味です。 さて、上の ＊＊＊１ では、わざとエラーになる例にしましたが、 例：STDOUT.write(1+2)/3 はエラーになりません。どうなるかわかりますか？ なお、改行付きで出力したい場合は、puts を使うと便利です。 def hoge(str) puts str||'defaultString' end
こんにちは、 おそらく、PATHの設定の問題ではないでしょうか？ NumRu-0.42.exe ダウンロードして、実行してみました。 手持ちのWindows7環境では、 require "gsl" は問題なく通ります。 NumRu-0.42.exeでRuby本体もインストールされますが、呼び出しているruby.exeが電脳 Rubyプロジェクトのものか確認されましたか？ (whitchコマンドはwindowsにはないので)コマンドラインで、 ruby -e "p $LOAD_PATH" でどの環境が動作しているか分かるはず。 NumRu-0.42.exeのインストールの最後に環境変数を設定するをチェックすると、インストールしたユーザのPATH等が自動で設定されますが、依然つかっていたRubyのPATHより後ろにPATHが設定されると思います。。 すでにRubyの実行環境をインストール済みであれば、 システム→（システムの詳細設定）→詳細設定→環境変数 ユーザとシステムにPATHがあるので、依然使っていたrubyのPATHを削除もしくは、電脳 Rubyプロジェクトのものより後に設定してみてください。
$ chmod +x test.sh $ ./test.sh じゃないでしょうか？？
else b =~ /\s+with\s+/i ↑ else じゃなくて、elsif です。 ３つの条件のどれが成り立っても a<<b と同じ処理をするので、条件を「または」でつなぐとプログラムが簡単になります。 あと工夫すべき所としては、例えば to が行頭や行末にある場合。
今までの回答と重複する部分がありますが、ご勘弁ください。 「たのしいRuby」を読んでないのですが、#1の補足に書かれている3つは、オブジェクト指向におけるクラスの継承の説明かと思われます。 - 機能 = メソッド - 処理 = なんらかのコード と解釈している前提で、それぞれのサンプルを書いてみます。 # インデントに全角スペースを使っているので、コピペの際には注意してください。 １ 既存の機能はそのままで、まったく新しい機能を追加する 子クラスにメソッドを追加することですよね。 class MyString < String 　# hogeという文字列を返すメソッドを追加 　def hoge 　　'hoge' 　end end ２ 既存の機能を定義し直して同じ名前のメソッドに違う振る舞いをさせる メソッドのオーバーライドですよね。 class MyString < String 　# replaceを書き換える 　def replace other 　　puts 'replaceなんてしませんよ！' 　end end ３ 既存の機能に処理を追加して拡張する 既存のメソッドの機能を活かし(super)つつ、処理を追加します。 ２と違うのはsuperを呼んでいることで、親クラスの処理を使っています。 class MyString < String 　# replaceする文字列に必ずゴミをつける機能を追加します 　def replace other 　　other << 'gomi' 　　super other 　end end p String.new('foo').replace('bar') => 'bar' p MyString.new('foo').replace('bar') => 'bargomi' # 実用性が全くなくてすみません 誰が作ったクラスか、メソッドかは関係なく、「既存の機能」とは親クラスが持っているメソッドのことを指していると考えられます。 上記のサンプルの場合、親クラスはStringなので、Stringクラスが持つメソッド全てが「既存の機能」になります。 既存の機能(super)に処理を追加(other << 'gomi')することで、メソッドを拡張することができるということです。 継承した場合は親クラスと同じ挙動となります。 変更しない部分については、基本的にコードを書く必要はありません。 クラスの継承はオブジェクト指向の特徴的な部分なので、オブジェクト指向の説明に特化した本に目を通すと、より理解が深まるかと思います。
私の手元にある一部の PC でも同じ症状が出ます。時間がないので原因は探っていませんが、次の方法を試してみて下さい (1.2.5 の代わりに 1.2.3 を入れているだけです)。 gem install sqlite3-ruby --VERSION=1.2.3 gem uninstall sqlite3-ruby --VERSION=1.2.5
open-uri ではなく net/ftp を使う方が簡単かと思うのですが、いかがでしょうか。(参考 URL)
＞{forms}> formsが空だからですね。 そのサイトを見てみましたが、非道いページですね。 ・ページの文字コードはUTF-8 ・HTTPヘッダで示される文字コードはUTF-8 ・ページ中のMETAタグで示される文字コードはShift_JIS サイトのユーザなら、先方に教えてあげましょう。 HTTPヘッダの指定より、METAタグの指定が優先されるので、MechanizeはShift_JISだと思ってページを解釈しようとして、失敗します。 ページ解釈前に、ページのMETAタグを書き直す(か削除する)必要があります。 agent = WWW::Mechanize.new agent.post_connect_hooks << Proc.new do |params| if %r|text/html| =~ params[:response]["Content-Type"] params[:response_body] = params[:response_body].sub(/Shift_JIS/,"utf-8") end end page = agent.get('https://www.superdelivery.com/common/auth/login') hooksへの設定は、agent作成後に一度だけ行えばいいです。ページ取得直後にProcの内容(Shift_JIS => utf-8)が毎回実施されます。
＞呼び出し側と密な関係を持つ必要はありません。 なら、DLLにする必要ないのでは。 クラスProcessBuilderとかで、外部プログラムとして実行すればよいような。 http://java.sun.com/javase/ja/6/docs/ja/api/java/lang/ProcessBuilder.html あるいは、JRubyを組み込んでみるとか。 http://jruby.org/
> ちなみに、javaや.NETではstatic宣言すれば、同クラス内からだと、メソッド名にプレフィクスを付けなくても使用できるので、それに対してrubyはちょっと不便に感じたことが質問の動機です。 そうですね。Javaや.NETでは確かにこのような小さなユーティリティ関数の類をよくクラスメソッドにしますし、文法上そのように扱えるので便利です。ただ、改めて考えてみると、こうした関数はRubyでは普通はprivateなインスタンスメソッドにしてしまう気がします。 なぜならば、 > もしvalid_password?メソッドがインスタンスメソッドだと、@saltや@passwordに何らかの変更を加えた場合、 valid_password?メソッドが万が一これらを参照している可能性があるので クラスメソッドであっても、クラス変数やクラスのインスタンス変数を参照しているかも知れません。その場合はもっと酷い副作用/非純粋性がありえます。結局@saltや@passwordなどの他の状態に依存していないかどうかは他の部分、例えば規約やドキュメントや、設計上の常識、あるいはソースを見る、などによって担保しなければならないのであって、文法上は保証できません。Javaや.NETでもその気になれば期待に反するコードはいくらでも書けることでしょう。特にRubyの場合はそのDynamismからクラスメソッドにしたところであまり保証度が上がった気がしません。 この手のユーティリティでstaticメンバ関数/staticメソッドを用いるのは、保守性というよりはどちらかというと、多態性を必要としない場合のC++におけるパフォーマンスチューニングの流儀が継承されてきた設計ではないかと思います。 > 実態が1つしか作られないので実行速度が上がる等な理由もありますが、 Javaや.NETでは静的なinvokeは速度が向上する場合もあろうかと思いますが、Rubyではクラスメソッドもクラスに対するシングルトンメソッドなのであって、実行時に動的に解決されますし多態に振る舞いもします。 どちらかというと、特異クラスに対するメソッド呼び出しがメソッドキャッシュに載っていない分パフォーマンスが低下するケースもあるかと思います。ケースバイケースで、プラスになる場合もありマイナスになる場合もあり、少なくとも一般的にパフォーマンスが向上するとは期待できません。 ついでに言うと、 class MyClass (snip) 　private 　def self.valid_password?(passwd) 　　(/\A\w{4,12}\Z/ =~ passwd) != nil ? true : false 　end end 今、valid_password?はMyClassのpublicなクラスメソッドです。なぜならば、privateはそれ以下の、そのクラスのメソッドをprivateにするものだからです。クラスメソッドはそのクラスの特異クラスのインスタンスメソッドであって、そのクラスのメソッドではないです。従って、privateはdef self.valid_password?には影響を与えていません。 無理に多言語のパフォーマンス特性やオブジェクトモデルを流用した設計にせずともよいのではないでしょうか。この場合素直にMyClassのprivate instance methodにしてはどうでしょう。私ならそうしますし、保守の点はunit testとrdocでカバーします。 それにしても、確かにC++ならvalid_password?はstaticにしていたところです。面白い例をありがとうございました。
以下のようにしてください。 ------------------------------ $KCODE='e' word_tbl = {} #Hashテーブルを初期化 ARGF.each do |line| words = line.split(/\s+\.*/) #1行を単語毎に分割する wordsの配列には各単語が格納される # 分割する時の区切り文字の正規表現は、スペースが１個以上連続し、 # ピリオドが０回以上連続すること words.each do |word| # wordsの１単語を処理する if word_tbl.key?(word) # word_tblにその単語が登録済みなら word_tbl[word] += 1 # その単語の回数に１加算 else #そうでないなら word_tbl[word] = 1 # 初回の登録 （１を設定） end end end word_tbl.each do |word,count| # word_tblの各要素のキーと値を印字する print word," ",count,"\n" end ----------------------------
「うまくいかなかった」以上の何の情報もないので、「バグがあるのでしょう」としか言えません。数行の最小限のプログラムにして、まず正常動作させ、少しずつコードを追加していくのがいいと思います。 後半は、RDEのインストールをせずにRDEを使おうとしているというエラーです。
これはRubyというより、Unixの問題ですね。 flockのロックはファイル全体のロックで、fcntlのロックはファイルの中のl_startバイト目からl_lenバイトの領域に対するロックですので、全く別のものです。両方同じ方式を使う必要があります。 flockを使うとすると、 #!/usr/local/bin/ruby file='./hoge.txt' f=open(file,'r+') ret=f.flock(File::LOCK_EX|File::LOCK_NB) if ret puts "ロック成功" STDOUT.write 'Hit any key' STDIN.gets.chomp else puts "ロック失敗" end #!/usr/local/bin/ruby file='./hoge.txt' f=open(file,'r') ret=f.flock(File::LOCK_SH|File::LOCK_NB) if ret f.flock(File::LOCK_UN) puts "ロックされていなかった" else puts "ロックされていた" end fcntlでロックするなら、arg="" じゃなくて、man 2 fcntl を見てstruct flockの内容をセットしたものをargとして渡さないといけません。
file.rbとかstat.rbとか、何のことかわからなかったですが、どうやらおそらく、rubygemsのwin32-file-statの話ですね。 require "win32/file" class File::Stat def name @file end end でいいと思います。やってみましたが、ファイル名はUTF-16で格納されていますね。
日本語が曖昧ですが、 (1) シェルのコマンドラインからライブラリを作る方法は知っている。それをRubyから行うにはどうしたらいいか？ (2) C等から、Rubyで書いたプログラムを呼びたい。Rubyで書いたプログラムをCにリンクできるライブラリ化できるか？ のどちらでしょう？ (2)だと、出来ません。
文字コードがおかしいのかと思いましたけど、nil になるのが不審。 OSの種類とRubyのバージョンはなんですか？ ruby -v でバージョンがわかります。 1.8.x の場合は、p $KCODE というスクリプトを実行した結果はどうなりますか？ 1.9.x の場合は、p Encoding.default_external というスクリプトを実行した結果はどうなりますか？ docu.txt と word.txt のデータの文字コードはなんですか？ 問題点とは関係ありませんが、こういうほうがいいですね。 open("docu.txt"){|io| 　str = io.read 　puts str 　File.readlines("word.txt").each{|word| 　　puts word 　　word.chomp! 　　p str.index(word) 　} }
何故そうなるかは、["2",["B","C"]] というデータをCSV出力しようとするので、1項目が"2"でこれは文字列でそのままOK。2項目は["B","C"]で文字列でなく配列なので、["B","C"].to_s で文字列化されます。この結果は"BC"になります。 2,B,Cと出力したければ、#1の方の回答の通り、["2",["B","C"]].flatternで、["2","B","C"]に変換して出力するといいかと。 2,"B,C"にしたいとか、もっと全体をすっきりさせたいとすると、属性保存の所で、配列を借用するのじゃなくて自分でクラスを定義して、to_sも定義します。 require 'csv' in_path=・・・・・ out_path=・・・・・ class Attr def initialize; @data = []; end def <<(other); @data |= [other]; end # 集合の和集合(重複を省く) def to_s; @data.join(","); end end h=Hash.new{|h,key| h[key]=Attr.new} CSV.foreach(in_path){|key,n1,n2,attr| h[key.data.to_i] << attr.data } CSV.generate(out_path){ |writer| h.sort.each{ |row| #ソートした方が良いかと writer << row } }
インスタンス変数 @a は、インスタンス(オブジェクト)に付随したもので、祖先・子孫クラスでも共通です。 クラス定義Aの中で現れるインスタンス@aと、子クラス定義Bの中で現れるインスタンス変数@aが別物と誤解されているようですが、違います。同じオブジェクトであれば同じものです。 従って、@a でアクセスします。 ちなみに、super.a とかくと、「親の同名メソッドを呼び出して、その結果のオブジェクトのメソッドaを呼び出す」という文法上正当な表現ではありますが、やりたいこととは全く違います。
システムにRubyがインストールされていないか、またはインストールされているとしてもrubyにパスが通っていないのが原因です。 「パスの通し方」「windows path」などで検索すると、参考URLに挙げたような資料が沢山見つかるはずです。それを参考にruby.exeにパスを通してください。 なお、Rubyをインストーラーでインストールした場合、パスが通った状態のコマンドプロンプトを起動するための項目がメニューに登録されていることもあります。それがありそうならばそれを利用する手もあります。
変更前が14桁の数字列固定という前提です。 a = '20090925055902' b = a.gsub(/(\d{14})/, 'a\1a') puts b #=> a20090925055902a
sinatraは使ったことがないので、よくわからないのですが、 system関数やバッククォートを利用すればできると思います。 http://doruby.kbmj.com/yablog/20090531/ruby_1 ・html側 <html> ・・・・ <a href="/command">コマンドの実行</a> </html> ・rubyプログラム（sinatra）側 get '/command' do 　# バッククオートを使うと、実行結果を取得できます。 kekka = `/usr/bin/test.sh` # system関数だと、単純に実行します。 system("/usr/bin/test.sh") # プログラムの終了コードを確認します。 # 0が返れば、成功。 $?.exitstatus end
現在、Rubyの最新安定バージョンは、1.9.1と1.8.7の2つがあります。 1.9.1は文字コードまわりなど、最新の機能が盛り込まれていますが、動作しない 外部ライブラリーがあります。 一方、1.8.7は1.9.1の最新の機能を一部先取りした上に、後方互換を保っているた め、ほとんどの外部ライブラリーが動作します。 なので最初のうちは、1.8.7がお薦めです。 もちろん、現在参考にされている書籍が1.9.1対応のものであるならば、1.8.7では 動作しない例文があるかもしれませんので、その場合は1.9.1をインストールされれ ばいいと思います。 Windows環境でかつ、1.8.7をインストールされるのであれば、有用な各種ライブラ リーが同梱されているActiveScriptRubyがお薦めです。 No.1さんが紹介されているサイトからたどっていけます。 直リンすると以下です。 COM Meets Ruby http://arton.hp.infoseek.co.jp/indexj.html インストーラーでインストールするのが嫌な場合や、1.9.1を使用する場合は、以下 のサイトが参考になると思います。 Rubyダウンロードとインストール http://www.rubylife.jp/install/install/index.html Windows以外の環境はよく知らないので、Windows以外の環境でしたらごめんなさい。
おおざっぱに言うと、puts の引数がStringクラスのオブジェクトで無いときは、その引数オブジェクトに対してto_sメソッドが呼ばれます。 to_s というのは主に出力のための文字列化メソッドです。 正確にはリファレンスのputsの所を見てください。
No.1 です。本当にパスワードをきかれますか? 解凍に利用しているソフトウェアは何でしょうか。「Windows 上での zip 解凍時の注意」はお読みになりましたか? そこに書かれている「短いパス」の条件に合うなら、パスワードはきかれないと思うのですが。
サンプルを見ると、16進数を定義するんじゃなくて、文字を16進表記であらわしたいと言うことですよね。 普通は、"\x82\xa0" お書きの例に合わせると、 0x82.chr+0xa0.chr [0x82,0xa0].pack("C2")
Railsプロジェクトでなくとも、Railsに組み込まれているactiverecordライブラリさえあればmigrationを利用可能です。ただし、その場合はrailsのconfig/database.ymlに書かれている相当のactiverecord初期化処理を自分で呼び出さねばなりません。 参考URLに挙げたようなやり方で、ActiveRecord::Base.establish_connectionを呼び出してactiverecordを初期化します。例えば次のような具合です。 require 'rubygems' gem 'activerecord' require 'active_record' # 仮にSQLite3を使用。ファイルhoge.sqlite3に書き出し ActiveRecord::Base.establish_connection \ :adapter => 'sqlite3', :database => 'hoge.sqlite3' # migrationを定義 class CreateUsers < ActiveRecord::Migration def self.up create_table(:users) do |t| t.string :name, :limit => 100, :null => false, :unique => true t.timestamps end end def self.down drop_table(:users) end end # 実行 CreateUsers.up
kamuycikapです。 私は職場でRubyを無理矢理使っています。 新しいプロジェクトを無理矢理Rubyで押し切っています。 私の周囲(現場)でのRubyの評価は「未知の領域」です。 すでに様々なアプリケーションがCやC#およびJava等で作成され、システムとして動作しています。 そんな業界の中で、 ・今後、お金をかけてRubyで作り直すのか？ ・Rubyにそれだけのメリットがあるのか？ ・Ruby開発での問題解消方法は確立されているのか？ などなどが浮かび上がってきておりました。 最近、やっとRubyの資格が定着してきた(１つだけ)くらいで、まだまだ未知の領域ですので、業務実績がなければ企業(お客さん)は納得してくれません。 明らかにRubyで書いたほうが早く作成できるのに、C言語やJavaやC#での開発をお願いされたりする始末です。 これは過去の信用(実績ある言語)の問題と、もしRubyで失敗した時のコストを考えての結果です。 Rubyに限らず、新しい言語や新しい技術を導入する場合、お客さんとの信頼関係が如実にプロジェクトに左右されます。 信用のない技術屋が次期プロジェクトに新しい言語やシステムを導入しようとしても心配しか産まれないでしょう。 私は小さなプログラムから実績を公開し、Windowsアプリケーション及びLinuxアプリケーションで積極的にRubyを導入することを勧めています。 最初は他の有名言語で作成するシステムの一端をRubyにするとかから始められてはどうでしょうか？ そして、お客さんの信用を得るだけの実績が出来た時に初めてRubyだけのシステム構築が仕事として舞い降りてくるはずです。 現状で私はRubyでWindowsもLinuxも問題無く開発できています。 ExcelマクロまでRubyで書いています。 CGIもRubyで書いています。 活用は無限大です。
hoge で対処するのは多分できないと思います。 hoge を使うところを修正してよいのなら ret=hoge([0,1,2]) do |x| 　break true if x==1 　puts x end と break に戻り値を与えれば success にはなると思います。 が、使い勝手はいまいちですねえ。
まずは、Railsのサイト、書籍を紹介、つぎに、Rubyの初心者向け情報を書いています(後者はコピペですが)。 ■Railsのサイト 公式ガイド。チュートリアルです。 書籍もいいのですが、これを一通り読むとかなり理解できます。 http://guides.rubyonrails.org/ 公式wikiも同上です。 http://wiki.rubyonrails.org/ 上記はサイト内検索を使うとよいと思います。 ↓こういうブックマークレットが便利です。 サイト内検索を簡単に実行するブックマークレット - inamenaiの日記 http://d.hatena.ne.jp/inamenai/20090117/p1 あとやっぱり、慣れてきたら、詳しく見るのに、公式APIドキュメントはずせません。 http://api.rubyonrails.org/ Windowsなら、上記のHTMLヘルプ版がすごく便利です。 …なのですが、新しいのを配布されていた方のページがリンク切れになっているので、 とりあえず、こちらのRails-2.3.2.chmを。 RubyForge: RDoc Chm: Project Filelist http://rubyforge.org/frs/?group_id=5928 ■Railsの書籍の紹介 基本はやっぱり、アジャイル本かと。 新しいバージョン(2.x系)で変わっているところがかなりあるので、 日本語訳を待たずにRails 2.x対応の洋書の第3版を買いましょう。 英語がよくわからない！という場合は、お持ちの第2版(とおもわれる)と合わせてよめば、大体わかりますよ。 (私もそれで学習しました) ・Amazon.co.jp： Agile Web Development with Rails (Pragmatic Programmers) 3版 洋書 http://www.amazon.co.jp/dp/1934356166/ ・Amazon.co.jp： RailsによるアジャイルWebアプリケーション開発 第2版 http://www.amazon.co.jp/dp/4274066967/ あとは、逆引き系の書籍でしょうか？ ・Ruby on Rails 逆引きクイックリファレンス Rails 2.0対応 http://www.amazon.co.jp/dp/4839928266 ・Railsレシピブック 183の技 http://www.amazon.co.jp/dp/4797336625 ただ、これらは、Rails 2.0対応のようで、新しいバージョンで導入されたとても便利な機能 (named_scopeなど)の記述が少なかったり、なかったりしますので、 新しいバージョンとの差分情報は、以下のサイトのリンク集から見ていくとよいと思います。 Ruby/Ruby on Rails/リリース差分情報 - TOBY SOFT wiki http://tobysoft.net/wiki/index.php?Ruby%2FRuby%20on%20Rails%2F%A5%EA%A5%EA%A1%BC%A5%B9%BA%B9%CA%AC%BE%F0%CA%F3 逆引き系は、webで調べられるし…最新の情報ではない、ということもありますが、 ちょっとしたヒマにでもパラパラと見ることができますし、 わからないことがあったら、索引として使って詳細をwebで調べる、という使い方もできます。 とりあえずは、上記サイトとこの書籍だけでもRailsはそこそこなんとかなります。 ただし、これは、Rubyを知っている人向けの話！ なので、以下はRubyの初心者向けの話。 ■Rubyの初心者本 と書きながら、私はそんなにRuby自体の書籍はあまり詳しくなく、 2chのRubyスレによいテンプレートがあるのでそれを見てもらったほうがいいかと思います。 > Q: > いちからRubyを始める初心者向けのRuby入門書は何がありますか？ > > A: > プログラム作成自体の初心者なら > 　・「たのしいRuby 第2版 Rubyではじめる気軽なプログラミング」 > 　　http://www.amazon.co.jp/dp/4797336617/ > 文法は理解済み（orリファレンスで乗り切る既言語習得者）の場合のRuby様式を知る必携2冊目 > 　・「初めてのRuby」 > 　　http://www.amazon.co.jp/dp/4873113679/ > > 以下は外れが少ないとされている本です。必ず立ち読みした上で自分の目的とレベルに応じて購入してください。 > 　・「Rubyレシピブック 第2版 268の技」（初心者向け） > 　　http://www.amazon.co.jp/dp/4797340045/ > 　・「プログラミングRuby 第2版 言語編」（初心者向け） > 　　http://www.amazon.co.jp/dp/4274066428/ > 　・「Ruby Way 第2版」（脱初心者向け） > 　　http://www.amazon.co.jp/dp/4798115339/ > 　・　「Rubyクックブック ―エキスパートのための応用レシピ集」（脱初心者向け） > 　　http://www.amazon.co.jp/dp/4873113245 > > 以下の本は言語作者が書いた最新本ですがとりあえず初学者向けではありません。 > 　・「プログラミング言語 Ruby」（言語として深く知りたい人向け） > 　　http://www.amazon.co.jp/dp/4873113946/ ■Rubyのサイト Rubyのサイトも以下略。 Windowsなら、HTMLヘルプ版がすごく便利です。 > Ruby 公式・非公式便利サイト2009 > > ・Ruby Home Page 【公式、お役立ち度が微妙】 > 　http://www.ruby-lang.org/ja/ > ・Rubyリファレンスマニュアル 【検索機能休止中、Googleなどの併用を】 > 　http://www.ruby-lang.org/ja/man/ > 　http://www.ruby-doc.org/ 【詳しい英語版】 > ・HTMLヘルプ版リファレンスマニュアル配布さん 【Windowsで便利、検索も無論可能】 > 　http://elbereth-hp.hp.infoseek.co.jp/ruby.html > ・Programming Ruby - The Pragmatic Programmer's Guide 【好評書籍の初版がネットで、ただし英語】 > 　http://www.ruby-doc.org/docs/ProgrammingRuby/ > ・Rubyist Magazine - るびま 【ライブラリ紹介などの読み物、過去のコードレビューは一読の価値あり】 > 　http://jp.rubyist.net/magazine/ > > ・逆引きRuby 【やりたいことから探すWiki、最近元気ないので編集者募集】 > 　http://www.namaraii.com/rubytips/ > ・はてなキーワード > Ruby 【うっかりどっさりまとまったリンク集、説明なし】 > 　http://d.hatena.ne.jp/keyword/Ruby > > ・RubyForge 【○○をやりたい管理されたライブラリを探すならここ、英語】 > 　http://www.rubyforge.org/ > ・GitHub 【○○をやりたいコードをとにかく探すならここ、英語】 > 　http://github.com/ > > ・日本Rubyの会 【最近はオフライン勉強会の寄り合い場と化しているので近くで勉強会があれば】 > 　http://jp.rubyist.net/
config/database.ymlで指定可能です。 database:で指定してください(mysqlの場合) 例： development: 　：(前略) 　： 　database: myproject_development 　： 　：(攻略) production: 　：(同上) 　： 　database: myproject_production test: 　：(同上) 　： 　database: myproject_test 公式ガイドにも記載があります。 Getting Started with Rails http://guides.rubyonrails.org/getting_started.html#configuring-a-database
> pdftotext.exeを使って予めtxt形式に変換 コマンドラインで使用するコマンドをそのままsystemで実行すれば良いと思います。 ----- PDFTOTEXT = ' "c:\Program files\Xpdf\pdftotext.exe" ' OPT = ' -enc Shift-JIS' filename = "foo.pdf" system("#{PDFTOTEXT} #{OPT} #{filename}") ----- ファイルパスやオプションは適宜修正が必要です。
lambda do |arg, &block| 　arg.each do |x| 　　block.call(x) 　end end.call([1,2,3,4,5]) do |x| 　puts x end こんな感じでどうでしゅうか？Proc.newの変わりにlambda使ってますが、procでも同じです。
以下のように、ブロックを一旦、変数に格納すればすっきりすると思います。 block = proc {|x| puts x } if sw hoge &block else piyo &block end __send__（あるいはsend）を使うと1行で書けます。 __send__( sw ? 'hoge' : 'piyo', &proc {|x| puts x } ) メソッドがたくさんある場合は以下のようにすることもできます。 sw = 2 __send__( %w(hoge fuga piyo foo bar baz)[sw], &proc {|x| puts x } )
いかのようにして下さい。 @member = [ "192.168.10.1", "192.168.11.1,2,3,4,5,6", "192.168.12.100,200,230", ] ary = Array.new @member.each do |mem| ip1 = mem.split(".") ip2 = ip1.pop.split(",") ip2.each do |x| ary << ip1.join(".") + "." + x end end ary.each do |x| print x,"\n" end --------------------------- 動作確認済みです。
one-click-installer でインストールした場合、拡張子 .rbw が、rubyw.exeに関連づけされていて、コマンドプロンプトを開かずに実行されます。 他のパッケージでインストールした場合も、rubyw.exeがあれば自分で関連づけを行って同じ事が出来ると思います。
こちらの環境で再現できました。 db/migrateに xxxxxx_create_schedules.rb というファイルが2つありませんでしょうか？ バージョン違いの同名のmigrationファイルがあると 「Multiple migrations have the name　CreateSchedules」のエラーがでるようです。 例えば、 db/migrate/20090902225921_create_schedules.rb db/migrate/20091002325002_create_schedules.rb というファイルが2つある感じです。 この場合の対処としては、 ・重複して生成してしまったのであれば、片方を削除する(内容を見て全く同じだったり、削除しても差支えがなければです) ・片方のmigrationファイルの名前を変える(中身のクラス名"CreateSchedules"も変えないとダメだと思います) 環境構築中、ということならば多分、前者かよいのではと思います。
@memberを直接更新することは、考えないで、 一旦別の配列を作ることを考えてはいかがでしょうか。 以下のようにすると、aryに望む結果が取り込めます。 @member = [ "123,456,789", "1,4,7", "56,789,0,0," ] ary = Array.new @member.each do |mem| ary << mem.split(",") end p ary #@member = ary #p @member もし、そのaryの内容を@memberに設定したなら 最後の２行のコメントをはずして下さい。
関数自体の機能を誤解している。 やりたいのは 「元の文字列のうち,第一引数で与えられた正規表現にマッチした部分を第二引数で置き換えた」subメソッドではなく http://www.ruby-doc.org/core/classes/String.html#M000816 「元の文字列のうち,第一引数で与えられた正規表現にマッチした部分だけを取得する」matchメソッドではないだろうか？ http://www.ruby-doc.org/core/classes/String.html#M000778
この書籍が手元にないので推測に過ぎませんが、以下の点を改善してみて問題が解決するか、試してみて下さい。参考 URL も読んでみるといいかもしれません。 (1) RubyGems を最新の 1.3.5 にアップデートする gems update --system (これでダメなら、 http://rubyforge.org/frs/?group_id=126 の tgz か zip をダウンロードして解凍し、 setup.rb を実行) (2) mysql の gem をインストール http://rubyforge.org/frs/?group_id=1598&release_id=8668 からダウンロードして gem install mysql-2.7.3-mswin32.gem
rake db:migrate:reset を実行しても、DB 以外に支障は出ないはずです。 どうしても心配でしたら、現在作業中の project のバックアップを取っておいて下さい。(SQLite3 以外の DB をご利用でしたら、DB の中身も。) Git や Subversion などをご利用なら適切な名前 (タグ) をつけて commit するだけですが、利用していなければ zip 圧縮だけでも充分です。
まず外側のtableをユニークに指定しないといけないですよね。 xpathを使うとして、絶対パスでrootから何階層目かを数えて、 search("/*/*/*/table/tr") とか。階層だけで決まらなければ、具体的なタグ名を書く。 search("/html/body/div[3]/div/table/tr") とか。 cssだと、 search("body > * > * > table > tr") とか。
詳細な理屈はわかりませんが、インターネットゾーンマークが付いていると駄目なようです。 クリックすると、警告が出ますよね。あれです。 ファイルのプロパティから、ブロックを解除してください。 インターネットゾーンマークについては、こちらを。 http://www.atmarkit.co.jp/fwin2k/win2ktips/498zoneid/zoneid.html
\config\environment.rbのconfig.time_zoneの設定を確認してみてください。 デフォルトではタイムゾーンはUTCなので日本時間とは9時間ズレています。 Tokyoにしてもテーブルの型がタイムゾーン付の型になっていなければ、9時間ズレた値が登録されるだけなので、タイムゾーン付の型にした方がよいかもしれません。 （手元にMySQLがないので確認できていませんが、PostgreSQL8.3ではそうなります） DBにローカルタイムで保存していいなら、config.time_zoneの行を削除すれば済みます。
フルパスでnoeditorを指定すれば動くはずです。
REXML::elements#[xpath] は、マッチする先頭のエレメントだけを返します。REXML::elements#each(xpath) か、REXML::element#each_element(xpath) を使えばいいでしょう。 xml.elements.each("hoge/item") do |line| puts line.elements["name"].text line.elements.each("data"){|datum| puts datum.text} end
'sex' が何型なのか分かりませんが、もし整数型なのだとしたら、1, 2 が文字列型であることが原因でしょう。 <%= select 'member', 'sex', [["男", 1] , ["女", 2]] %> であればうまくいくと思いますが、いかがでしょうか。 なお、質問する際には、 rails --version gem --env といったあたりの出力を添えておくと、回答が得やすくなると思われます。
printf( "%5.5f / %5.5f = %5.5f\n",a,b, a.to_f / b)
@model.send("column=",xxxx) は @model.column=xxxx と同じです。 細かい点では異なります。 http://www.ruby-lang.org/ja/man/html/Object.html#send
まだ私も、初心者ですが、修正後のように直してみてはどうでしょう？ 似たような処理の記載が「ＲａｉｌｓによるアジャイルＷｅｂアプリケーション開発／オーム社」書籍にあるので、それを真似しての変更です。 ＜修正前＞ <% for @category in @categories %> <label><%= f.radio_button "category_id","@cateroy.id" %><%= @category.name %></label> <% end %> ＜修正後＞ <% for category in @categories %> <label><%= f.radio_button :category_id,cateroy.id %><%= category.name %></label> <% end %>
最初の条件の文で、もし、nameに"%"が含まれていないなら @users = User.find(:all, :conditions => ["family_name LIKE ?%", name]) のように"?"のあとに"%"をつけます。 それから、複数の条件を指定するなら以下のようにします。（以下はLIKEを使っていません） @users = User.find(:all, :conditions => ["family_name = ? or family_name = ?", name1, name2]) "family_name = ?"を繰り返し記述するのが嫌なら、以下のような書き方もあります。 @users = User.find(:all, :conditions => ["family_name IN ( ? , ? )", name1, name2]) 動作テストはしていませんが・・・。この検索条件については、データベースのＳＱＬ文法の本を購入されると、参考になります。 「現場で使えるＳＱＬ／翔泳社」などもいいかもしれません。
>>根本的な原因は何なのでしょうか？ (rubyは1.8.7、railsは2.2.2です。) 単純にtime_selectを使用したフォームを使って、ＤＢへのUpdateを行った場合、こちらでは、問題が発生していません。Controllerでは何も指定しない場合です。(ruby 1.8.6,rails 2.3.2) なので、もしかすると、Controllerの中で自分で細工する場合、きちんと(6i)までの指定が必要になるのかも？
scaffoldを使って生成したアプリを実行したとき、 Status: 500 Internal Server Error というエラーがlogディレクトリのファイルに書かれていたことがあります。 このときは、このメッセージに続いて Access denied for user 'XXXXXX'@'%' to database 'YYYYYY' というメッセージが書かれていました。 データベースMySQLを使用していて、作成したSchemaに対して、ログインユーザにアクセス権限を与えていないのが原因でした。 エラーメッセージを見直せば、エラーの原因がわかると思いますよ。 >>ジェネレータから作成しなければいけないのでしょうか 一時は、ジェネレータのscaffoldが配布ファイルからはずされたこともあったようです。別に絶対にジェネレータから作らなくてはいけないってことはないですよ。
テストしてませんが、これでどうでしょう。 class MyCGI < CGI 　def initialize(type = "query") 　　super 　　@params = @params.each do|key,val| 　　　@params[key]=val.collect{|x|x.tosjis} 　　end 　end end cgi=MyCGI.new if cgi.has_key?('arg') then 　STDERR.puts cgi['arg'] 　cgi.out(){'ok'} end あと、tosjisメソッドは入力文字列コード自動判定ですが、短い文字列だと判定が間違う可能性があるので、kconvメソッドで入力文字コードも指定した方がいいです。
>>selectboxが複数個あり、(1i)、(2i)のように変数がControllerにくるので上手く取得する方法が分かりません。 別々に送られてくる年・月・日データを１つの文字列にまとめて paramtheday = params[:shedule]['theday(1i)']+'-';params[:shedule]['theday(2i)']+'-'+params[:shedule]['theday(3i)'] さらに、Ｄａｔｅ型に変換する事例がありました。 datetheday = Date.parse(paramtheday) （shedule,thedayは実際のアプリにあわせて変えます。） 参考になりますでしょうか？
erbですよね。 echo "<% def form_for(*a);p a;end;form_for :toto, :@toto, :url => { :action => 'update'} %>"|erb エラーになりません。erubyでも同じです。 どうしてもだめなら、{ :a => :b, :x => :y } は { :a, :b, :x, :y }とも書けるので、 <% form_for :toto, :@toto, {:url, { :action, \'update\'}} %> でしょうか。
>>javascriptではDBの内容は引っ張ってこれないと思うのですが、 Railsでこういうことができるのでしょうか。 手軽にできるようです。コントローラの中で、def newやdef editの直後に @categories = Category.find(:all); のようにしてプルダウンの情報を読み込んで、 <%= options_from_collection_for_select @categories, "id", "category", @item.category_id %> のような記述を<select id='item_category_id' name='item[category_id]'> ・・・</select>の間に入れるとＯＫみたいです。(変数等は、参考文献のもので、実際は変わります） 参考文献は、Four Days on Rails2.0 （http://rails.to/pages/4daysonrails2）です。
alias で別名を付けて、中で呼び出します。 class CGI alias :out_orig :out def out(hdrs) out_orig(hdrs) { yield.toutf8 } end end かな。 他のやり方としては、一皮かぶせるほうが理解しやすいか。 def my_out(cgi,hdrs) cgi.out(hdrs) { yield.toutf8 } end my_out(cgi,header) { hoge }
先の回答者さんのリンクにもありますが、手っ取り早くloggerを使うのはどうでしょうか？p pp の変わりに使えます。 logger.info "host = #{request.host}" などのように使います。 ご存知かと思いますが、↓でログを見られます。 tail -f log/production.log ただし、production環境だとバッファリングされて逐一ログが出ないので、 logger.flush を毎回呼んでバッファをフラッシュしてログを吐き出す必要があります。(ハマりポイント)
演算子式 - Rubyリファレンスマニュアル http://www.ruby-lang.org/ja/man/html/_B1E9BBBBBBD2BCB0.html#and && はショートサーキット論理演算子の一種なので、 　式A && 式B としたときは、 まず左辺の式Aが評価され、 その結果が真であった場合のみ右辺の式Bも評価されます。 もし、式Aが偽であれば式Bは評価（実行）されません。 そのため、式Aが真の時にのみ式Bを実行したいときに 上記の様な書き方をすることが可能です。 また、rubyにおいてifは式なので式Bはif式でも大丈夫です。 （C言語などとは違ってrubyのifは「値を持つ式」だったりします。） # 合ってるか間違ってるかはあえて明言しませんでしたがこの説明でそれは判断できますよね？ なお、ショートサーキットはPerlで割と良く出てきます。
「管理者権限がない」ということは、Linux系システムだと思うので、Linux系+Rubyはよく知りませんが、自分なら次の点を確認します。 ・rubyライブラリへのアクセス権があるか ・rubyライブラリがロードパスに含まれているか(普通含まれているはずですが・・) 　○puts $LOAD_PATHを実行して、ロードパスを確認 　○-Idirectoryオプションを指定して実行してみる ・Digest::MD5が定義されているファイルが本当に存在するか（ぜんぜん調べてないのであてにならないのですが、digest.soの中で定義？） ・rubyを自分用にインストールしなおして再トライしてみる 　これをやればアクセス権の問題やファイルが足りない問題だった場合解決するはず gem install railsでエラーとなる箇所がrequire時ではなくいきなり「uninitialized constant Digest::MD5」となっている点が気になりますが・・ 推測とかしかできませんね・・。 書きたいほうだいでスミマセン。
def hello 　self.class.say('hello') end でしょうか。何かもっと違う書き方もありそうな気もしますけど。
gem install deprecated がうまくいかないのがおかしいですね。以下の出力を追加情報として書き込むと、どなたか解決してくれるかも知れません。 rails --version gem env
ビューの変更が可能なのであれば、 check_box_tagを使って以下のように変更すれば結果が params[:fruits] = ["1", "4"] として得られます。 【ビュー】 <% @fs.each do |f| %> <%= check_box_tag "fruits[]", f.id %><%= hl(f.name) %> <% end %> ビューの変更ができない場合は以下の式でどうでしょう。 params[:fs].delete_if{|key, value| value != "1"}.keys
ああ、なるほど。そういう勘違いですね。Hash#[]で例外は発生しません。 その前にまず、 ＞代入された値、代入できなければnilが返ります。 代入演算子で、「代入できない」のはあり得ません。nilが返るのはnilを代入したときです。 ＞a = params[i]['a'] ＞この処理でもし、" params[i]['a'] "が存在せず、nilが代入されれば、 例外が発生しプログラムが停止すると思いますが、 しません。場合分けすると、 (1) 配列paramsのi番目がハッシュとして存在する場合 (2) 配列paramsのi番目がハッシュ以外で存在する場合 (3) 配列paramsのi番目が存在しない場合 ですが、今回は(2)(3)のケースは想定されていないと思いますので省きます。 (1)をさらに場合分けすると、 (1-1) そのハッシュにキー'a'が存在する場合 　　→対応する値が返る (1-2) そのハッシュにキー'a'が存在しない場合 　　→この場合はハッシュ生成時にデフォルト値を指定していないのでnilが返る どちらも例外は発生しません。 (1-2)の場合に、値の取り出しに[]メソッドでなく、fetch()メソッドを使うとキー無しの例外が発生します。この場合、 a=params[i].fetch('a') と書こうが、 if a=params[i].fetch('a') end と書こうが同じです。 if の条件部分は必ず実行されます(実行しないと値がわからないので)。 if の条件部分の値がnilやfalseだとthen部分が実行されません。 ハッシュからの値の取り出しは普通は[]を使い、キー無しの時に意図的に例外を発生させたいときにfetch()を使います。また、ロジックでキー有りキー無しで違う処理をさせたいときは、key?()を使います。 a = {} p a['X'] b = Hash.new("default value") p b['X'] p b.fetch('X')
#!/usr/bin/ruby -Ku # -*- coding:utf-8 -*- # 今から ruby でスクリプトを書きます、そのファイルで使用するエンコーディングは utf-8 ですよ、という宣言。 directory = '/dog/cat/bird' Dir.new(directory).each { |file| # ここまでで、'/dog/cat/bird' というディレクトリをまず指定し、 # そのディレクトリの中のファイルそれぞれ (each) に対して操作を行うという宣言 if Time.now - File.atime(file) > 60*60*24 # もし最終アクセス時間と現在時刻との差が24時間以上なら if File.ftype(file) == 'file' # もしそのファイルが普通のファイルなら #File.delete(file) # 本番用 puts file # 確認用 elsif File.ftype(file) == 'directory' # もしそのファイルがディレクトリであれば #Dir.rmdir(file) # 本番用 puts file # 確認用 end end } 以上です。ここの投稿はスペースが無視されちゃうので残念ですね。 エンコーディングは UTF-8 で保存してください。(たぶん UTF-8 じゃなくても動く気がするけど) たぶんこんな感じです。ファイルを消しちゃったらごみ箱に行くわけではないのでちゃんと確認してから本番用のほうに変えてください。 http://www.ruby-lang.org/ja/man/html/File.html atime というのはアクセス時間のことです。ファイル作成時間にしたければ ctime に変えてください。 cron の設定は、crontab -e でテキストエディタが起動しますので、 0 * * * * /usr/bin/ruby 保存したファイルのパス と書いて保存すれば1時間おきに実行されます。このあたりは適当にググってください。
何度かやってみましたが、 p ie.document.getelementsbytagname("td").length で、305が表示されますね。 WinXP ProSP3+IE7です。 あと、スクレイピングであれば、rubygemsのmechanizeを使ってみてはどうでしょう？
expect( /[\>\$] / ){|match| command } expect( /(A|B)/ ){ |match| case match[1] when Aに一致? then command2 when Bに一致? then command3 end } ――とか。
未検証。Rubyの経験殆どなし。 ですが， http://www.ruby-doc.org/core/classes/String.html#M000831 >.sub(・・・) での置換開始行がずれました。 メソッド自体が，そういう仕様なんじゃないの？ If the method call specifies replacement, special variables such as $& will not be useful, もし、メソッド呼び出しがreplacementを指定知る時，$&のような特殊な変数は役に立たないだろう。 >as substitution into the string occurs before the pattern match starts. なぜなら，文字列への置き換えは【パターンマッチが始まる前】に行われるからだ。 However, the sequences \1, \2, etc., may be used. \1,\2...等の変数が用いられるだろう。 #Howeverは訳すと今ひとつしっくり来ないので訳さず
"top_dir" が無い場合、"linux" が無い場合をそれぞれ考慮するとなると、confと書くのは最低二回は要るでしょう。 nil? という判断条件をひっくり返すことで、conf["top_dir"]["linux"]を一回に出来ます。～.nil? が出てきたら見直した方が良いでしょうね。 str = conf["top_dir"] && conf["top_dir"]["linux"] || "/root" conf一回で済ませるパズル的解法としては、nilの添え字参照がエラーにならないようにする。 def nil.[](x) end str = conf["top_dir"]["linux"] || "/root" パズルの回答以外ではやめた方が良いでしょう。デバッグがしにくくなります。 begin str = conf["top_dir"]["linux"] || "/root" rescue str = "/root" end も駄目でしょう。こんな目的で例外を使ってはいけない。
＞documentというメソッドは～～ie.ole_methodsを実行して取得できたメソッドには含まれていませんでした。 含まれてますよ。 C:\temp>irb -rwin32ole irb(main):001:0> ie=WIN32OLE.new("InternetExplorer.Application") => #<WIN32OLE:0x2ba3be4> irb(main):002:0> ie.ole_methods => [QueryInterface, AddRef, Release, GetTypeInfoCount, GetTypeInfo, GetIDsOfNames, Invoke, GoBack, GoForward, GoHome, GoSearch, Navigate, Refresh, Refresh2, Stop, Application, Parent, Container, Document, TopLevelContainer, Type, Left, Left, Top, Top, Width, Width, Height, Height, LocationName, LocationURL, Busy, Quit, ClientToWindow, PutProperty, GetProperty, Name, HWND, FullName, Path, Visible, Visible, StatusBar, StatusBar, StatusText, StatusText, ToolBar, ToolBar, MenuBar, MenuBar, FullScreen, FullScreen, Navigate2, QueryStatusWB, ExecWB, ShowBrowserBar, ReadyState, Offline, Offline, Silent, Silent, RegisterAsBrowser, RegisterAsBrowser, RegisterAsDropTarget, RegisterAsDropTarget, TheaterMode, TheaterMode, AddressBar, AddressBar, Resizable, Resizable, GetTypeInfoCount, GetTypeInfo, GetIDsOfNames, Invoke] Rubyでは、名前の英大文字・小文字は区別されますが、Win32側では区別されないようです。 irb(main):003:0> ie.gohome #上記ではGoHomeだが小文字でOK。newしただけだとdocumentが無いので、HOMEページを表示させる => nil irb(main):004:0> ie.visible=true => true irb(main):005:0> ie.Document # 上記表示のままDocumentで呼んでみる => #<WIN32OLE:0x2f69cb0> irb(main):006:0> ie.document.ole_methods # 小文字で呼んでみる => [たくさん～～～～] OLEのmethodsは、method_missingを使って実現されているので、普通のメソッドとは異なります。混乱すると思うので、クラスとメソッドの関係を十分学ぶまで手を出さない方が良いと思います。methods_missingの仕組みを理解してからの方が良いかも(必須ではないと思いますが)。
redirect_toを利用すると、URL自体も書き換わるはずなのですが・・・ →HTTP 301（302だったかも）のリクエストを送ります。 render_to "xxxx"とすると、表示だけが変わり、URLは変わりません。 該当controllerにて、本当に意図する処理（redirect_to）に流れていますか？
「クラスの生成」とは何だろうと思ったら、オブジェクトの生成ですね。 「失敗」というのはそのプログラムの文脈の中でどういう意味なのかを考えて、例外を投げるか、お書きのようにするのかどちらかでしょう。どちらが良いのかは、ケースバイケースだと思います。 ＞なんか、ものすごく我流になってる気がします。。。 unlessのオペランドにカッコをつけるのは我流で筋が悪いと思います。 if / unless / case / while / return 。。。 も同じ。
identifierとは識別子・・・名前ですね。変数名とかメソッド名。 エラーメッセージは「endが来るべき所で識別子があった」です。 コピペしてみましたが、そのエラーは出ないですね。全角空白とか入ってませんか？Rubyは全角文字も識別子に使えるので、それもあるかも。ただ、32行目あたりにendが必要とされる箇所はないので、もっと離れたところに原因がある可能性もあります。 あと、 誤：open("#{grasre}") {|f| 正：open("#{@grasre}") {|f|
＞という具合にブラウザ上でURLを入力してみても、Object not found!とい うエラーが表示されてしまいました。 タイムアウトで削除されたのではないでしょうか。 ＞mbs3.cgiのソースから、さらに・・・返してもらうことは出来ないものでしょうか。 ウェブの仕組みをきちんと理解されていないような印象を受けます。こういう処理(ブラウザもどきというか)をするのは初めてですよね。返されたHTMLの解釈は自分で(プログラムで)やらないといけません。その中から望みのリンクを探してさらにそれを送信します。 あと、もしかすると、Cookieが関わっているとすると、生でコーディングするのは厳しいので、Mechanizeなどのライブラリを使うと、勝手にCookie処理をしてくれます。 http://mono.kmc.gr.jp/~yhara/rubyscraping/?Mechanize
> Perlの作者が変数に$をあえてつけた理由が、 変数に$をつけるようにした理由かは分かりませんが、 変数に$がついていることにより、予約語/関数との名称の衝突を防げるという利点があります。
#1の人の補足修正ですが、yieldを使うときに、ブロックがあるか無いかは、 if block_given? __yield(1) end で判断します。 一番大きいのは、&で受け取ると、手続きオブジェクトとしてハンドリングできるので、別のメソッドに渡せることです。 def a(&p) __puts "call a" __b(&p) end def b(&p) __puts "call b" __p.call("call here") end a { |x| puts "proc "+x } 引数ももちろん渡せますので、機能的にはyieldのメリットがないので廃止の案もあったようです(速度面のメリットはあり)。
rubyの場所が設定してないとか。 「ツール」メニューの「設定」で、「Ruby基本設定」にある、Ruby.exeのパスのところにC:\ruby\bin\ruby.exeとかいうようにしてruby.exeのパスを指定するんだが、これはやってあるだろうか。要確認。
Rubyは型(オブジェクトのクラス)に厳しい言語なので、演算子・メソッドにデータを渡すときには型がなんであるかを意識しないといけません。 ライブラリのメソッドが返すオブジェクト型についてはドキュメントに記述があるはずです。もし無い場合は、puts xxxx.class などを挿入してみてクラス名を確認します。 修正点は下記。 rss.items.each do |i| 　　titles.push(i.title)#pushは配列に要素を加えると言う意味 　　links.push(i.link) 　　dates.push(i.date.strftime("%Y/%m/%d")) end
No.1 です。次のうちどれかでうまくいくのではないかと思います。 (1) Mongrel のダウンロードページ (参考 URL) から mongrel-1.1.2-mswin32.gem をダウンロードし、そのディレクトリで以下のように入力。 gem install mongrel-1.1.2-mswin32.gem (2) gem update --sysmte で RubyGems 自体をアップデートしてから以下の通り入力する。 gem install mongrel -v 1.1.2 (3) もし (2) で RubyGems の挙動自体がおかしくなってしまった場合、RubyGems の最新版をダウンロード ( http://rubyforge.org/frs/?group_id=126&release_id=27655 ) し、ruby setup.rb を実行。なお、 C:\ruby\bin\gem.bat の中身がおかしくなっていることがある (最下行で「"」が2つ連続している) ので、その場合は連続している「"」を1つ削除する。
No.1の方のURLが端的なのですが、もう少し詳しく書いてみます。 Ruby での「数」は「数が格納された箱」ではなく「数」そのものです。 例えば String は「文字列が格納された箱」なので、<< の用な破壊的なメソッドを使い、foo = "0"; foo << "1"; p foo とすれば "01" と表示されます。また、foo = "0"; bar = foo; foo << "1"; p bar としても、bar は foo と同じ文字列が格納された箱を示しているので "01" が表示されます。この辺りは Array や Hash などの「何かを格納する箱のようなもの」でも同じですね。 さて、Ruby では Fixnum などが数字そのもののためこの様な破壊的な動作が出来ません。もし出来てしまうと、foo = 0; foo++ としたときに、そのスクリプト中にある全ての 0 が 1 になってしまいます。これは Symbol・true・false・nil なども同じです。 もう少し簡単に言えば、Ruby では数字や Symbole などはリテラルで表現した物はどこでも同じインスタンスが返る（irb で 0.__id__ や :foo.__id__ を何度実行しても同じ値が返ってきて、"foo".__id__ は実行する度に違う値が返ってくる事などで確認できます）ため、++ の様なメソッドが存在してしまうと、foo = 0; bar = 0; foo++; p [foo, bar] と書いたとき、foo と bar は先の String の例と同様、同じオブジェクトを指しているので、[1, 1] と表示されることになる、ということです。 専門的(?)に言えば、これらは Flayweight パターンを利用した immutable なオブジェクトなので破壊的変更が出来ません。 なお foo += 1 は、Ruby の内部で foo = foo + 1 と展開されて解釈されているので問題ありません。 シンタックスシュガーとして Numeric#++ というメソッドを作りませんか？ という話は、何度か No.1 の方の URL 以外でも出ていたと思うのですが、Matz 氏は Ruby のそのような世界観から考えると、破壊的に見えるメソッドが Numeric などに実装されるのは、それがシンタックスシュガーといえどやはり整合性に欠け好ましくない、ということで退けていたと思います。 個人的には、Ruby は内部イテレータ関係が豊富で for 文を使うことはまずありませんし、1.9系や 1.8.7 などのバージョンではさらに Enumerator が実装され (10..35).each.with_index{|i, idx| ...} などと書けるようになり、foo += 1 と書く機会がほとんど無いので気になりませんね。C++ や C# などの言語で無いと腹が立つでしょうけど（笑） 以上でご理解いただけたでしょうか？
こんな感じでどうでしょうか。 heap = [15,14,13,12,11,10,9,8,7,6,5,4,3,2,1] def hoge(heap,ptr,depth) return unless heap[ptr] hoge(heap,2*ptr+1,depth+1) depth.times{print"□"} puts heap[ptr] hoge(heap,2*ptr+2,depth+1) end hoge(heap, 0, 0)
#Wikipediaの「二分ヒープ - ヒープ操作」を参考に作ってみた。 #「upheap/downheap操作は次のような配列の点から説明できる。」以下は読んでも良く解らなかった。 #最初は配列だけにしていたが、追加操作や削除操作を持つクラスの方がわかりやすそうだったのでクラスにしました。(ループ変数の変数名がiからじゃなくてjからになっているのはその名残り) #速度や計算量の測定はしていません。 class BinaryTree def initialize @array = [] end def size @array.size end def add(val) if @array.size == 0 @array.push(val) else @array.push(val) j = @array.size - 1 while j > 0 if @array[((j - 1) / 2).floor] > @array[j] @array[j],@array[((j - 1) / 2).floor] = @array[((j - 1) / 2).floor], @array[j] else break end j = ((j - 1) / 2).floor end end val end def remove temp = @array.shift() if @array.size != 0 @array.unshift(@array.pop()) j = 0 while 2 * j + 1 < @array.size if 2 * j + 1 == @array.size - 1 minimum = 2 * j + 1 else if @array[2 * j + 1] > @array[2 * j + 2] minimum = 2 * j + 2 else minimum = 2 * j + 1 end end if @array[minimum] >= @array[j] minimum = j end @array[minimum],@array[j] = @array[j],@array[minimum] if j == minimum break else j = minimum end end end temp end def arr @array end end hoge = BinaryTree.new myarray = [12,11,13,19,15,8,7,10] while myarray.size != 0 p hoge.add(myarray.shift()) end print "---\n" p hoge.arr print "---\n" while hoge.size != 0 p hoge.remove() end
aliasは、「クラス・メソッドの定義」のところに、ensureは「制御構造・例外処理」のbeginのところに出ています。 検索でも探せると思いますけど。
画像処理、特に質問者の言うような「パターン認識」などの処理に関しては、これはRubyというよりも、Ｃ言語などで書かれたライブラリということになると思います。 このようなライブラリでデフォルトなのはOpenCVです。 http://opencv.jp/ RubyからOpenCVを扱えるようにするライブラリもあるみたいです。 http://blueruby.mydns.jp/opencv/
#2の方が書かれたとおり全角空白が原因でしょうね。 Rubyは全角文字も変数名等に使えるので、人間の手として3を入力した場合、「未定義の変数かメソッドの 全角空白 が現れた」というエラーになります。Rubyの処理系は、未定義の変数は実行時のエラーになるので、3を入れない限りエラーにならないというのが#1の方の実行結果だと思います。 NetBeansのような統合開発環境を使うと、実行前に未定義変数を検出する機能があります。
＞・説明の中の「正規表現/sheet/にマッチした全体の文字列」とは何を指すのか？ /sheet/にマッチする文字列は "sheet" です。 ＞・説明の中の「マッチした部分文字列の配列」が何を意味しているか？ 部分文字列とは、カッコに囲まれた正規表現の一部分にマッチする文字列のことですが、/sheet/ にはカッコがないので部分文字列はありません。 ＞・match(s).lengthの答えが、どうして1になるか分からない。 マッチした文字列が1個で、部分文字列が0個なので全体で１個。 ＞・返ってきたMatchData オブジェクトの中身は何？ マッチした結果の様々な情報。 [11, 16]もその１つです。 アドバイスとしては、学校の受験勉強じゃないので、問題集と参考書で勉強するのは無理です。 「Ruby認定試験対策問題」はRubyでプログラミングを出来る人が、その技術レベルを認定してもらうための試験なので、まずはプログラミングをしてみましょう。
どうしてもしたければセミコロンで文の区切りを指定する。 この例であれば print 文ひとつにまとめるだけですが。
シャドウイングというのは ['foo'].each do |i| ← この i と ___['bar'].each do |i| ← このiが同じ名前だけど別の変数になること ______print i ← これは ['bar']に対する each なので当然 'bar' ___end ___print i ← ['bar'].each のブロックを実行したためにi の内容が変えられてしまっている! end ということで、 内側のprint で bar 外側のprint でも bar が出力されるので、結果は 'barbar' になるというわけです。 なお、この仕様は1.9で変わってますので、 試験を受けるときにはバージョンに気をつけてください :)
どこそこのサイトにこうありました。という場合は、可能ならそのURLも書いておいてください。 irb(main):001:0> self => main irb(main):002:0> class Foo irb(main):003:1> def test irb(main):004:2> (1..3).each{|i| yield(i)} irb(main):005:2> end irb(main):006:1> end => nil irb(main):007:0> foo = Foo.new => #<Foo:0x2b67a18> irb(main):008:0> foo.test{|i| i } => 1..3 irb(main):009:0> foo.test{|i| p self } main main main => 1..3 irb(main):011:0> class Foo irb(main):012:1> def test2 irb(main):013:2> p self irb(main):014:2> end irb(main):015:1> end => nil irb(main):016:0> foo2 = Foo.new => #<Foo:0x2b44644> irb(main):017:0> foo.test2 #<Foo:0x2b67a18> => nil irb(main):018:0> ということで >・testメソッドに渡されたブロックとは、(1..3)のことを指すのでしょうか。 違います。質問にあった例でいうと foo.test{|i| i } の、{|i| i} の部分のことです。 >・メソッドの呼出し先とは、foo.test{|i| i }のことを意味しているのでしょうか。 そうですね。 でもそれは「呼び出し元」のような気がするのですが。 >・呼出し先のselfとは、fooかFooのことでしょうか？ ちがいます。 上述した例にあるように irb(main):001:0> self => main main (== トップレベル)です。 >・「selfはメソッド内で実行されるとそのメソッドを実行しているオブジェクトを参照することが出来ます」 と別のサイトに記載されていたのですが、「トップレベルのselfとはObjectクラスのメソッドを実行している」、という意味になるのでしょうか。 irb(main):020:0> self.class => Object ということでそうなりますか。
下記URLを参照ください。 Arrayクラスのマニュアルです。
起動時のオプション指定に :DocumentRootOptions => { :FancyIndexing => false } を追加してみたらどうなりますか? Rubyist Magazine - WEBrickでプロキシサーバを作って遊ぶ http://jp.rubyist.net/magazine/?0002-WEBrickProxy WEBrick::HTTPServer - Rubyリファレンスマニュアル http://www.ruby-lang.org/ja/man/html/WEBrick_HTTPServer.html WEBrick::HTTPServlet::FileHandler - Rubyリファレンスマニュアル http://www.ruby-lang.org/ja/man/html/WEBrick_HTTPServlet_FileHandler.html
無いです。
>と書かれているのですが、「キーが単語、値がその単語が出現した回数を表します」 >の内容が理解できません。newしただけなのに、どうして、 >キーと値の内容が決まるのでしょうか？ 別に決まってはいません。 その後のコードで count の key と value をそのように解釈して利用しているということです。 >作成したハッシュcountと、getsメソッドで読み込み単語単位に分割した配列wordsとが、 >どこで関連付けされているのかが、分かりません。 配列 words を一単語ずつ each メソッドで処理することで関連づけています。 Hash.new(0) でデフォルト値が 0 であることに注意しましょう。 >「ruby word_count.rb README」と書くだけで、 > 処理の流れが、getsの所まできたとき、 > 自動的に指定ファイル名を判断し、 > 読み込みを始めるということなのでしょうか。 gets とは ARGF.gets と同じです。
まず、1と1.0は違うクラスのインスタンスだということです。 1は、Integer型（を継承したFixnum型） 1.0は、Float型 これを踏まえて4つの例を説明すると以下のようになります。 A: 1 << 1 Integerクラスのインスタンスである1 その演算子（メソッド）<< に引数として Integerクラスのインスタンスである1を渡す 　Integerクラスの演算子<<は、引数で与えられたビット分だけ自分を左シフトする 　だから、1を1ビット左シフトして結果は2になる。 B: 1 << 1.0 Integerクラスのインスタンスである1 その演算子（メソッド）<< に引数として Floatクラスのインスタンスである1.0を渡す 　Integerクラスの演算子<<は、引数で与えられたビット分だけ自分を左シフトする 　演算子<<の引数がFloatで与えられた場合は自動的にIntegerに変換される 　すなわち1.0は、1に変換される。 　だから結果はAと同じく2になる。 C: 1.0 << 1 Floatクラスのインスタンスである1.0 その演算子（メソッド）<< に引数として Integerクラスのインスタンスである1を渡す 　Floatクラスには、演算子<<が定義されていない 　だから、エラーになる。 D: 1.0 << 1.0 Floatクラスのインスタンスである1.0 その演算子（メソッド）<< に引数として Floatクラスのインスタンスである1.0を渡す 　Cと同じ結果になる。
「?」は、直前の正規表現の 0 または 1 回の繰り返しです。 従って 1 　行頭～行末間にABCがない = ABCの0回の繰り返し　にマッチ 2 　ABCABCは、行頭～行末間に2回繰り返しがあるからマッチしない 3 　順番にマッチさせていくと 　$1 = "1" 　$2 = "23" 　$2 = "45" 　$3 = "6" 　$2には最後にマッチした"45"が入ります。 4 　(?: )は、後方参照を伴わないグループ化で$1, $2などの対象にはなりません 　なので (?:\d\d)+ にマッチする"2345"はスキップされて、その次にマッチした"6"が$2に代入されます。 下のURLにマニュアルがありますのでご覧ください。
配列の作成は、split メソッドが行います。splitは、「文字列を分割して、それぞれの切れ端からなる配列を新たに作り出して返す」という動作のメソッドです。 その前に、ary = Array.new と配列を生成しても別にかまわないのですが、せっかく生成しても、何も使われないまま捨てられてしまいます。 Array.new(ary) は何も代入してない変数aryを参照するのでエラーです。
エラー (Error)じゃなくて、警告 (Warning)なんですけどね。 これは、pはメソッドなので、 p "hogehoge" は p("hogehoge") と書くことができます。 このとき、p("hogehoge") と p ("hogehoge") とでは意味と動作が変わることがあります。 質問にある例でいうと、 > p (1..10).find {|n| n > 3} (1..10) の部分について、「ひょっとして p(1..10)としたかったのではないですか?」 と注意を促しているのです。 p( (1..10).find {|n| n > 3} ) のように、pの引数を囲むカッコをつければ警告は出なくなります。 >ruby 1.8.4 (2005-12-24) [i386-cygwin] ところでバージョンがずいぶん古いですね。 新しくした方がいいと思いますよ(現在は1.8.7)。
　当方も同じくIEでJavaScriptが正常動作しませんでした。 　OperaやSafariではダウンロードまで行き着きました。 　恐らくFireFoxでもいけるのではないかと思います。 　たぶんaptanaのサイトはIEで動作確認していないのではないかと思います。
中略の部分に何が書かれているのか不明なので何とも助言しにくいのですが、グローバル変数 (変数名の頭に「$」がついているもの) を使いたいということでしょうか?
$ ruby -v check.rb -F 012345678 Filename のように-Fと012345678の間にスペースが有る場合はARGVの中で別々の要素となります。 従ってこの場合は when /^-F/ ; calling_num = ARGV.shift.to_s とする必要があると思います。 -Fと012345678の間にスペースが無い場合はご提示のプログラムで問題ないのではないでしょうか。
よくわかりませんが、こういう事ではないとしたら、もうちょっと具体的によろしく。 begin begin a=1/0 rescue => e raise(StandardError,e.message+'!!',e.backtrace) end rescue => e p e p e.message p e.backtrace end
