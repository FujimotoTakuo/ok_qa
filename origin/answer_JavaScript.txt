<title>～</title> の後ろにくっ付いている全角スペースを消したらちゃんと動きますよ。
$.getJSON("school.json", function(data){ console.log(data); }); とかしても中身見えませんか？
1月から12月までのページがあるとして、それを入れ換えてやるだけ、と言うことで良いのですか？ 前提部分がすっぽり抜けているので、構成がわかりませんが、ファイル名が「1.html」とか月毎の名前になっているのか、全く別々の名前になっているのかでも話は変わってきます。 ファイル名が「数字」なら、ファイル名をスクリプトで生成すれば良いし、「jan.html」「feb.html」と言ったように「文字列」なら、配列やらでファイル名を管理する必要があります。 //月毎のファイル名 var cal_src = ["jan","feb","mar","apl","may",・・・・・"nov","dec"]; var m = 0; //初期化 function init(){ //現在の月を取得 var d = new Date(); var nowManth = d.getMonth() ; //関数に渡す moveMonth(nowMonth); } //表示用の計算 function moveMonth(a){ //現在保持している数値に引数を加算 m += a; //範囲内(1月～12月)におさめる if(m < 0 ) m = 0; if(m > 11) m = 11; //表示用関数に渡す change_cal(m); } //表示用関数 function change_cal(cal){ //カレンダー1を読み込む document.getElementById('farame1_ID').src = cal_src[cal] + '.html'; //月の値が12月（cal = 11）なら、空白ページ（about:blank）を //それ以外なら、対応するページをカレンダー2に読み込む if(cal == 11){ document.getElementById('farame2_ID').src = 'about:blank'; }else{ document.getElementById('farame2_ID').src = cal_src[cal + 1] + '.html'; } } 1.初期化「init()」をページのonloadイベントで呼び出す。 2.Next、Prevに対応するonclickイベントで、「nowMonth()」を引数付きで呼び出す。 Nextの場合は引数「1」、Prevの場合は引数「-1」。 適当に省略して書いてますので、そのままだとまず動きません。ご自身のページに合わせて書き換えて下さい。
＞どうしてiが使われているのでしょうか？ 変数iは、forループのループ回数に使用されています。 初期値が「1」、上限が"i<=10"つまり「10以下」、増分が"i++"で「+1ずつ」なので、1～10の10回処理が行われます。 1回目の処理では、ループに入る前の初期値 bunbo=2 で kai を出したあと、bunbo*2 で2倍にしたものを bunbo に代入しています。つまり ループ前：bunbo=2 1回目：a=1/2　bunbo=2*2 2回目：a=1/4　bunbo=4*2 3回目：a=1/8　bunbo=8*2 　・ 　・ 　・ 10回目：a=1/1024　bunbo=1024*2 と言う処理になります。 10回目の処理の最後で bunbo=1024*2 で11乗となりますが、11回目は「i>10」となり、ループ上限から外れ処理は行われないので、結果2の1～10乗を処理したことになります。 私がforループで同じ事をさせるなら、 function goukei(){ var kai = 0; for (i = 1;i <= 10;i++){ kai += 1 / Math.pow(2,i); } alert("合計は" + kai+ "です"); } と言ったところでしょうか。 while使うなら function goukei(){ var kai = 0; var i = 1; while(i <= 10){ kai += 1 / Math.pow(2,i); i++; } alert("合計は" + kai+ "です"); } な感じですかね。
「1より大きい最小の値」については指数部に制限が加わるため、その差が出ます。 例えば、仮数部・指数部共に8bitだとすると、共にとれる範囲は-128～127ですよね。 この場合、MIN_VALUEは1×2^(-128)になりますが、EPSILONは1と65×2^(-6)の差の1×2^(-6)になります。
デバッグを行う際は、各ブラウザの開発者ツールなどと呼ばれる機能を活用しましょう。 そこにはエラーメッセージ等、有用な情報が表示されています。 「document.order.a1.checked」といった形でオブジェクトを指定していますが、この場合 document に続くオブジェクト名は name 属性で指定されたモノを使用しなければいけません。（id 属性が使えるのは IE 独自仕様です） HTML では id 属性が「order」、name 属性が「名前」となっている為、document.order という名称のオブジェクトが見つからないためエラーになっています。 なので、「<form id="order" name="order" method="post" action="http://www.---" enctype="----">」とすれば動作するでしょう。 あと、「Java」と「JavaScript」は全く異なるプログラミング言語ですので混同しないようにしましょう。
> また、無いと何か問題がありますか？ あなたの疑問は至極まともです。何の意味もありません。そのプログラムはおそらくJavaScriptが分かっていない人が書いた間違ったコードです。真似してはいけません。 イベント発生時に「return false」を記述するのは、いわゆる「デフォルト動作をキャンセル」する際に記述します。 例えば、リンクのonClickイベントで本来はリンク先に遷移するはずですが、任意の処理を行うだけでリンク先には遷移させたくない場合や、submitボタンのonSubmitイベント発生時に入力チェックをし、もしもエラーが発生した場合にはsubmitをさせないようにする場合などに使用します。 # <input [省略] onclick="alert();return 0;"> この[省略]の部分がsubmitやresetなどだったら意味はあります。 <input type="reset" onclick="return confirm('リセットしてよろしいですか？')"> とか。 しかしボタンではまったく意味がありません。書くだけ無駄ですし、無駄かどうか判断できない人初心者を惑わす罠になってしまいますので絶対に書かないようにしましょう。
こんな例でだいじょうぶですか？ 基本的にはイベントを拾ってあげればいいと思います。
http://wakabaya.main.jp/js/jquery.rwdImageMaps.min.js これがどうみてもjsでははくhtml。 jquery.rwdImageMaps.min.js の確認をお薦めします。
リンク先のページは内容がおかしいです。いかにも素人考えな感じです。 特に最後のほうの 「人工知能による代替が難しい職業」、「その他代替が難しいクリエイティブ系職業」 に書かれているような事は、ＡＩの研究で、まっさきに代替えが検討された作業です。 そもそも、単純作業をするのは普通のプログラムで、ＡＩはそれを超えてより人間に近い、あるいは人間以上の作業をすることを目指したプログラムです。 特に、芸術的なものは、失敗しても人に危害が加わる可能性が低いので、今後さらに研究が進むというか、アマチュアが独創的なＡＩをどんどん作るようになると思います。 実務的なことでは、すべての業種に言えることですが、単純作業はAIに任せて、人はそれを管理するのが将来のビジネスの形になるでしょう。変化はゆっくり進むはずなので、管理者としての勉強を進めるように心がけることです。
まず、wait()はwhileを使ったビジーループなどで実現することもできますが、けしてしてはいけません。 何故かと言うと、例えばブラウザ上のJSが処理を止めるということは、 イベントループが回らなくなり、ブラウザも固まるということだからです。 ですのでまず、コールバックを覚えましょう。 たとえばsetTimeoutを使うと、指定した時間後に関数を呼ぶことができます。 これを使って以下のように書けます。 function test(id) { 　writeX("1", "a1") ; 　setTimeout( function(){ 　　writeX("3", "a3") ; 　　writeX("4", "a4") ; 　　writeX("5", "a5") ; 　　writeX("6", "a6") ; 　}, 3000) ; } これがJSに置ける基本的な非同期処理のやり方です。 １年くらいやってJSに慣れたら、Promiseやジェネレータ、asyc-awaitも覚えてください。 そうすれば最初の理想に近いこういう風にかけるようにもなります。 async function test(id) { 　writeX("1", "a1") ; 　await timeout(3000) ; 　writeX("3", "a3") ; 　writeX("4", "a4") ; 　writeX("5", "a5") ; 　writeX("6", "a6") ; }
日本語だとそうです。 アメリカ英語だと、ダムに近いかもしれません。
ボタン(submit)が押された場合に、参考URLのようにチェックのOff/Onは可能です。
VBA使わないと難しそうですね。 VBAであれば以下を参考に実現できると思いますよ。 http://vba-code.net/ie/ IE開いてURLに接続しdocument情報を取得してgrepしてもいいですし、 IE開いてURLに接続し全てコピー、Excelのシートにコピーし、シート1の文字列の隣のセルに関数を入れておけばいけそうですね。 VBA意外の手段は思いつきませんでした。
> jQueryには次のような機能・特徴がある。 ～ > Ajax いまさら聞けない、“Ajax”とは何なのか？ http://www.atmarkit.co.jp/ait/articles/0708/23/news134.html http://www.atmarkit.co.jp/ait/articles/0708/23/news134_2.html http://www.atmarkit.co.jp/ait/articles/0708/23/news134_3.html > Ajaxは略語で、正式名称は「Asynchronous JavaScript ＋ XML」となります。 > AjaxのAである「Asynchronous（非同期）」は、非同期でのクライアント・サーバ間の通信を指します。
したいなら、前に１をつければいいのでは？ 下２桁だったらうまくいくでしょ。
> ajaxとjQueryはjavascriptのライブラリーと言う事でしょうか？ ajax は概念です、jQueryはライブラリー(フレーム・ワーク)です。 いまさら聞けない、“Ajax”とは何なのか？ http://www.atmarkit.co.jp/ait/articles/0708/23/news134.html http://www.atmarkit.co.jp/ait/articles/0708/23/news134_2.html http://www.atmarkit.co.jp/ait/articles/0708/23/news134_3.html > Ajaxは略語で、正式名称は「Asynchronous JavaScript ＋ XML」となります。 > AjaxのAである「Asynchronous（非同期）」は、非同期でのクライアント・サーバ間の通信を指します。 jQuery https://ja.wikipedia.org/wiki/JQuery
確かに asuncion さんの おっしゃるとおり、下記の計算の意図が不明です。 > (1000*1900/02/28*1900/02/28*24) 文字どおり日にちの差なら、下記のようになります。 合ってるか どうかチェック、結果は「14」になるハズです。 <html> <head> <meta http-equiv="Content-Type" content="Text/HTML; charset=Shift_JIS"> <title>test</title> </head> <body bgcolor="#8f9fff" text="#000000" link="#2f2fff" vlink="#d700d7" alink="#00ffff" > <script type="text/javascript"> <!-- // 「var」、「new」、「Date」などの間にスペースが必要です。 var Year0, Month0, Date0; var Year1, Month1, Date1; Year0 = 2016; Month0 = 6; Date0 = 1; Year1 = 2016; Month1 = 6; Date1 = 15; // 「Date」オブジェクトでは、数値で"月"を設定する場合、「0～11」(ゼロ・スタート)になるので"月"から"1"を引いて、"月"をゼロ・スタートにしています。 var Date0_Obj = new Date(Year0,Month0-1,Date0); var Date1_Obj = new Date(Year1,Month1-1,Date1); // ↑合ってるか どうかチェックしたい場合は本当に簡単に計算できる値にした方が良いでしょう。 var TimeDenominator = 1000*60*60*24; // 数字に対応する意味：1000(ミリ秒→秒)、60(秒→分)、60(分→時間)、24(時間→日にち) // ↑ここで割り算を使わないのは計算誤差を最小にするためです。 var StartElapse = Math.floor(Date0_Obj.getTime( )/TimeDenominator); var EndElapse = Math.floor(Date1_Obj.getTime( )/TimeDenominator); // ↑個々に「Math.floor( )」で少数以下を切り捨てる、「Math.floor( )」でマイナスの数値を扱う場合には注意が必要になります。 var Elapse = EndElapse-StartElapse; document.writeln(Elapse+'日の差<br>'); // 上記の設定値なら、結果は「14」になるハズです。 --> </script> </body> </html> 今年の年末までの計算。 <html> <head> <meta http-equiv="Content-Type" content="Text/HTML; charset=Shift_JIS"> <title>test</title> </head> <body bgcolor="#8f9fff" text="#000000" link="#2f2fff" vlink="#d700d7" alink="#00ffff" > <script type="text/javascript"> <!-- // 「var」、「new」、「Date」などの間にスペースが必要です。 var Year1, Month1, Date1; Year1 = 2016; Month1 = 12; Date1 = 31; // 今年の年末 // 「Date」オブジェクトでは、数値で"月"を設定する場合、「0～11」(ゼロ・スタート)になるので"月"から"1"を引いて、"月"をゼロ・スタートにしています。 var Date0_Obj = new Date( ); var Date1_Obj = new Date(Year1,Month1-1,Date1); var TimeDenominator = 1000*60*60*24; // 数字に対応する意味：1000(ミリ秒→秒)、60(秒→分)、60(分→時間)、24(時間→日にち) // ↑ここで割り算を使わないのは計算誤差を最小にするためです。 var StartElapse = Math.floor(Date0_Obj.getTime( )/TimeDenominator); var EndElapse = Math.floor(Date1_Obj.getTime( )/TimeDenominator); // ↑個々に「Math.floor( )」で少数以下を切り捨てる、「Math.floor( )」でマイナスの数値を扱う場合には注意が必要になります。 var Elapse = EndElapse-StartElapse; document.writeln(Elapse+'日の差<br>'); --> </script> </body> </html>
プログラミングを始めてする方なのでしょうか…。 プログラムを全部チェックしていませんが、 >ダブルコーテーションで括るとエラーになります。 ここだけが問題ならとりあえず、ダブルがダメならシングルクォーテーションで書いてみてきださい。 その他、どうしてもダブルクォーテーションで書きたいなら円マークでエスケープしてもいいです。どんな言語でも大体同じですよ。
ハイその通りですね。 var agent = navigator.userAgent;　←アクセスして来たブラウザ情報を取得. var redirectPass = 'sp/';　←転送先のURLを指定. 変数.search(/文字列X/)　←変数(文字列)の中に指定した文字列Xが含まれるか検索. search関数は文字列内を先頭から検索し、指定文字列が発見された時点のオフセット数を返します。もし見付から無かった場合は "-1" を返します。最も簡単なブラウザ判別関数ですね。 何か豪勢にjQueryを使ってますが、関数内でjQuery的な処理は一切行ってないので、謎のコードですね(笑)。
質問者さんのソースコードで問題なく動くと思います。 私は、Windows10のIE11と、そのエミュレートによるIE9で動作を確認しました。 デモとそのソースコードをギットハブで公開しているので、確認をお願いします。
var dat1=new Date(); 引数を指定しないと今日の日付が入ります。
alert 等は関数です。 document 等はオブジェクトです。 if while 等は制御構文のキーワードです。 + - = 等は演算子です。
ES2015以降ならこうです [A,B,C,D] = prompt('').split(',').map(s=>+s)
サーバー・サイドの言語を何にするのかと言うのは大いに悩んで良いと思いますが、フロント・エンドには JavaScript は必須です、フレーム・ワークを使うにしても、そのフレーム・ワークを使って どう表示させるのかと言うスキルが必要になります。 今からでもフロント・エンドの JavaScript の勉強をして行った方が良いでしょう(その経験はムダにはなりません)。 ただし、受験勉強の弊害か(教科書を読んで言い成績を取って来たと言う経験から)本を読めばプログラミングができるようになると錯覚している人が たまにいますが、プログラムを組まなければプログラミングは上達しません(例えば大工になりたい人が本だけ読んでも上達しないのと同様です)。
CSVファイルを生成する場合、「改行」(\r\n)「ダブルクォート(")」「カンマ(,)」の3文字の扱いに気を付ける必要があります。 改行は <br> に変換するようですが、残り2文字のエスケープに注意してください。 https://jsfiddle.net/67byzuho/ 2列目で [PRIMARY CATEGORY], [CATEGORY] のどちらを期待しているのか不明ですが、[CATEGORY] としました。 Re: cnkozo さん
> 動的なページを作るものですか？ 基本的には動的なページを作るものですが、場合によっては静的なページにも利用する場合もあります。 ただし、動的とは どう言う概念か(能動的に動くモノだけを動的と捉えるのか、受動的に動くモノも含め動的と捉えるのか)人によって受け取り方がったりしますが、本来なら受動的に動くモノも含め動的と捉えるのが筋なのでしょうけどね。
かいとうがつきませんね。（おぶじぇくとしこうでもりさげているのに） ぜんかくくうはくもじは、すべてはんかくくうはくうもじに ちかんしてください ちなみに、どちらの機種も もちあわせておりません。うごかないかも？！ （かいておきながら、ちょっとまずそうなのが、あるような・・・） <!DOCTYPE html> 　<meta charset="utf-8"> 　<title>オブジェクト指向っぽく？</title> <style> </style> <body> <select name="tabemono"> <option value="">選択</option> <option value="野菜">野菜</option> <option value="フルーツ">フルーツ</option> <option value="魚">魚</option> </select> <select name="tabemono2" ></select> <script> function SelectChanger (baseSelect, targetSelect, values) { 　this.baseSelect = baseSelect; 　this.targetSelect = targetSelect; 　this.values = values; } SelectChanger.prototype.handleEvent = function () { 　var t = this.targetSelect; 　var v = this.values[this.baseSelect.value]; 　while (t.hasChildNodes ()) 　　t.removeChild (t.firstChild); 　 　if (v) 　　v.forEach (function (v) { 　　　 　　　var opt = this.ownerDocument.createElement ('option'); 　　　opt.value = v; 　　　opt.textContent = v; 　　　t.appendChild (opt); 　　}, t); } SelectChanger.create = function (baseSelect, targetSelect, values) { 　if (3 > arguments.length) 　　throw new Error (); 　 　var obj = new SelectChanger (baseSelect, targetSelect, values); 　 　baseSelect.addEventListener ('change', obj, false); 　obj.handleEvent (); 　 　baseSelect = targetSelect = null; 　return obj; }; //設定はここから SelectChanger.create ( 　document.querySelector ('select[name="tabemono"]'), 　document.querySelector ('select[name="tabemono2"]'), 　{ 　　'野菜': 　　　['ほうれんそう', 'にんじん'], 　　'フルーツ': 　　　['りんご', 'なし', 'みかん'], 　　'魚': 　　　['あじ', 'さけ'] 　　, 　} ); </script>
では、いつものように ていせい。 function reset () { 　var es = document.querySelectorAll ('fieldset.q input[type="hidden"]'); 　Array.prototype.forEach.call (es, function (e) { e.value = ''; }); 　es = document.querySelectorAll ('fieldset.q input[type="checkbox"]'); 　Array.prototype.forEach.call (es, function (e) { e.checked = false; }); } -- '問題数は、'+ es0.length + 'です。', を '問題数は、'+ es0.length + '問です。', に。 -- <legend>Q1. 東北の県は次のうちどれですか?</legend> を <legend>Q2. 東北の県は次のうちどれですか?</legend> に。 -- ><meta charset="utf-8">だと文字化け おもうに、ほぞんするときにutf-8でほぞんしてないだけ。 -- あまりにも しつもんの れいが ちゅうしょうてきで えすぱる
jQueryのDataTableを使うと簡単かと思います。 参考URLにサンプルもありますので、そんなに難しくはないと思います。
>javascript(typescript/babel)とnodejs、expressは全く別の言語を学ぶような物という事ですか？ 質問者さんにとって、どこからが別の言語に感じるのか分からないので、回答が難しいですね。ただ、当たり前ですが、言語はあくまでjavascriptなので、同じです。そこに差はありません。おそらく、言語が違うかどうかはあまり問題ではないのではないでしょうか。ようするに、どれくらいの学習コストが必要か、クライアントサイドでの学習がどれくらい役に立つのか、ということが知りたいのですよね? クライアントサイドのjavascriptをある程度ご存知であることを前提に話を進めますが、ブラウザを対象にしたjavascriptはwindowオブジェクトを主に操作します。この場合のほとんどのメソッドがwindowオブジェクトの中にあるといっても過言ではありません。対して、node.jsでは、windowオブジェクトは登場しません。当然です。目的がことなるからです。 今やjavascriptは、サーバーのみならず、machintoshのネイティブや、Adobe製品のプラグインなど、あらゆる場所で使えるようになっています。言語を共通して使えるということは、構文や基本メソッド(function/array/objectなど)を同じように扱えることを指します。しかし、javascriptの対象・目的が変われば、それに伴った学習が必要になります。ブラウザにはブラウザ用のメソッドが提供され、サーバーにはサーバー用のメソッドが提供されます。それを「まったくちがう言語くらいの学習が必要」と受け取るかどうかは個人の問題ですね。だって、言語は同じなんですから。
その地域の表示形式（ローカル）での表示には「toLocaleString()」を使ってもいいのですが、動作環境によって表示が異なる（ローカルの環境に任せてしまうため）ので、他の方法も含めて以下のような方法があるようです。 JavaScript カンマ区切りフォーマット - Miuran Business Systems http://www.m-bsys.com/code/javascript-commaformat
どんなブラウザを対象としているのか、わかりませんが。 スクリプトを持ち出す前に、input 要素の属性には、required がありますよ。 他にも placeholder とか pattern 属性とか便利なものがちらほら。 （なんでそっちを勧めない！？）
こんなところでしょうか。 function check3() { 　　var tel3 = document.form3.tel3.value; 　　var fax3 = document.form3.fax3.value; 　　var isValid = true; 　　if (!tel3) { 　　　　alert("電話番号が未入力です13"); 　　　　isValid = false; 　　} 　　if (!fax3) { 　　　　alert("FAX番号が未入力です133"); 　　　　isValid = false; 　　} 　　if (!isValid) { 　　　　return; 　　} 　　document.form3.submit(); }
なんだかお勧めしない方法ですね。 無理くり実現するなら以下のようにしてみるとか。 関数 SetSubMenu の引数が複数指定できるようにします。 onClick="SetSubMenu(value);" は、this.value なのでは？ <form action="">のaction=""は、まずいのでは？ 最初の電車orバスの要素は、インライン要素なのでブロック要素で囲んでは？ if( idname != "" ) {... idnameがあるかどうかで判断するのではなく、idnameで指定された要素があるかどうかで判断しては？ <form>要素は１つでよいのでは？ といいつつ、面倒なので修正はしませんでした。 <!DOCTYPE html> <meta charset="UTF-8"> <style type="text/css"> .second , .third{ display: none; } </style> <script> function AllHide() { document.getElementById('bus').style.display = 'none'; document.getElementById('train').style.display = 'none'; document.getElementById('bus_high').style.display = 'none'; document.getElementById('bus_normal').style.display = 'none'; document.getElementById('train_high').style.display = 'none'; document.getElementById('train_normal').style.display = 'none'; } function SetSubMenu( idname ) { AllHide(); for (var i = 0, e, I = arguments.length; i < I; i++) if (e = document.getElementById (arguments[i])) e.style.display = 'block'; } </script> </head> <body> <form action=""> <label><input type="radio" name="move" value="bus" id="move_0" onClick="SetSubMenu(this.value);">バス</label> <label><input type="radio" name="move" value="train" id="move_1" onClick="SetSubMenu(this.value);">電車</label> </form> <form action=""> <div class="second" id="bus"> <label><input type="radio" name="grade" value="bus_high" id="grade_0" onClick="SetSubMenu('bus',this.value);">バス/高級</label> <label><input type="radio" name="grade" value="bus_normal" id="grade_1" onClick="SetSubMenu('bus',this.value);">バス/普通</label> </div> <div class="second" id="train"> <label><input type="radio" name="grade" value="train_high" id="grade_2" onClick="SetSubMenu('train',this.value);">電車/高級</label> <label><input type="radio" name="grade" value="train_normal" id="grade_3" onClick="SetSubMenu('train',this.value);">電車/普通</label> </div> </form> <div class="third" id="bus_high">高級バス</div> <div class="third" id="bus_normal">バス</div> <div class="third" id="train_high">高級電車</div> <div class="third" id="train_normal">電車</div>
下記の方がスマートですね。 九州の県は次のうちどれですか?<br> <br> <form name="KyuusyuuForm"> <label><input id="FukuokaCheckbox" type="checkbox" onclick="oHTMLDocument_CheckboxChecked_Member[this.id] = this.checked;">福岡</label><br> <label><input id="HirosimaCheckbox" type="checkbox" onclick="oHTMLDocument_CheckboxChecked_Member[this.id] = this.checked;">広島</label><br> <label><input id="KumamotoCheckbox" type="checkbox" onclick="oHTMLDocument_CheckboxChecked_Member[this.id] = this.checked;">熊本</label><br> <label><input id="YamanasiCheckbox" type="checkbox" onclick="oHTMLDocument_CheckboxChecked_Member[this.id] = this.checked;">山梨</label><br> <label><input id="NagasakiCheckbox" type="checkbox" onclick="oHTMLDocument_CheckboxChecked_Member[this.id] = this.checked;">長崎</label><br> <br> <input type="button" value="Exec" onclick="ClickButtonFunc( );" > </form> <br> <div id="Answer"></div> <script type="text/javascript"> <!-- oHTMLDocument_CheckboxChecked_Member = new Array( ); CorrectAnswer_Member = { // 正解 "FukuokaCheckbox":true, "HirosimaCheckbox":false, "KumamotoCheckbox":true, "YamanasiCheckbox":false, "NagasakiCheckbox":true }; function ClickButtonFunc( ) { oAnswer = document.getElementById('Answer' ); var ccm = oHTMLDocument_CheckboxChecked_Member; // この関数内の短縮形 Alias var check = false; // true; // var err = false; // true; // for(k in CorrectAnswer_Member){ // 厳密非等価比較 if( ccm[k]!==undefined ) check = true; if( ccm[k]===undefined ) ccm[k] = false; if( ccm[k]!=CorrectAnswer_Member[k] ) err = true; // ↑なぜか厳密非等価比較になるようです。 } if( ! check ){ oAnswer.innerHTML = "チェックされていません。<br>"+ "１つ以上をチェックして下さい。<br>"; }else if( err ){ oAnswer.innerHTML = "不正解です。<br>"+ "正解は「福岡、熊本、長崎」です。<br>"; }else{ oAnswer.innerHTML = "正解です。<br>"; } } --> </script>
イベントリスナの追加は、関数をグローバルに公開しなくてもできますよね。 ================================= <input type="button" value="test" id="test"> <script> (function(){ 　var test = document.getElementById('test'); 　test.addEventListener('click', function() { 　　alert("クリックされた"); 　}, false); })(); </script> ================================= 公開したい関数などがあるならその関数だけを公開すれば良いです。 公開したい関数が多い場合は、1つのオブジェクトを名前空間代わりにして グローバル汚染を最小限にした方が名前の衝突の恐れが減ります。 ================================= <script> (function(global){ 　var mylib = {}; //名前空間代わりのオブジェクト 　mylib.func1 = function(){alert("func1");}; 　mylib.func2 = function(){alert("func2");}; 　global.mylib = mylib; //mylibにはグローバルからアクセスできるように 　var func3 = function(){alert("func3");}; //非公開 })(this); mylib.func1(); //外から参照 mylib.func2(); </script> =================================
$('a[href^=#]').click(function() { document.home.src="./img/Sunset.jpg" // スクロールの速度 var speed = 800; // アンカーの値取得 var href= $(this).attr("href"); // 移動先を取得 var target = $(href == "#" || href == "" ? 'html' : href); // 移動先を数値で取得 var position = target.offset().top; // スムーススクロール $('body,html').animate({scrollTop:position}, speed, 'swing'); return false; }); ↑実際に試してませんが、こんな感じで この関数の中に「document.home.src="./img/selectedHome.png"を入れてみるのはダメなんでしょうか？ しかし、最近の javascript は全然 訳の わからんレベルまで進化しているんですね(^_^;)
> JSそのものだと今でもクロスブラウザの対応が大変なのですか？ 基礎的な知識がないと web で調べるのが少々大変かもしれませんから、クロスブラウザに関しては本を買ったほうが良いかもしれません。 > IE9以降でもそうでしょうか？ 大まかに言って IE系と 新Netscape系(Firefox、Chromeなど)の2系統があり、その 新Netscape系 のグループ内でもビミョウに互換性がないと思われます。 ですのでシェアの低いブラウザまでは対応しないのが普通です。 > メテオ、リアクトでも同じですかね？ 「ライブラリ、フレームワーク」とか良くワカランので全く使った事はないですが、基本的に「ライブラリ、フレームワーク」とかはバックヤード的(ユーザーから直接見えない処理)だと思われますので、フォロント的(ユーザーから直接見える処理)は JS の基礎的な技能が必要でしょう。 僕の作った前述の JS のベージは一切「ライブラリ、フレームワーク」とか使っていませんし、使いようがないでしょう。 つまり、あのように直接 表示をコントロールする場合は基礎的な知識が必要になるでしょう。 プログラマーが基礎的な技能を向上させたいなら とにかくモノ(プログラム)を作れと言うのが基本です、喩えば大工になりたい人が いくら本ばかり読んでいても技能は向上しないのと同様です。 > 結局重くてもjQueryで今後も行えばWEBクリエイターは仕事でも十二分なのでしょうか？オワコンとも聞いていますが。 「ライブラリ、フレームワーク」とか良くワカラン僕でも「jQuery」の名前は知ってるほどなので、「jQuery」はメジャーなモノなのでしょうね。 jQuery は重いと言われているようですが、それもプログラマーの技能しだいのようです。 jQuery高速化！処理速度を10倍上げるテクニック20選 - MILL KEY WEB http://millkeyweb.com/jquery-high/ もっさりとは言わせない！jQuery高速化のポイント http://marunouchi-tech.i-studio.co.jp/1896/ 検索すれば もっと いろんなサイトが見つかるでしょう。
あれは、コンサル業界さんが自分たちは永遠に必要だ、と言うために作ったレポートだと思っています。 あとは、自分のお客さんである企業が、安く外注したい業務を「○年後になくなる仕事」と評価してあげることで、価格破壊を起こすためのコンサルタントさんのレポート。
FireFoxで試してみましたが、たしかにダウンロードがはじまりませんでした。 調べてみましたが、 document.body.appendChild(a); をcreateElementの下に追加する必要があるようでした。
平方メートルの代わりに² 仮名で書くと アンドシャープ178セミコロン を代用文字を使います。 new Array("（記載無し）", "１m²コンテナ", "２m²コンテナ", "３m²コンテナ", "４m²コンテナ"); //この画面で正しく表示されてるかわかりません そしてオプションの指定の際にtextではなくinnerHTMLを使ってみてください。 document.getElementById("selectId0").options[i + 1].innerHTML = genba[i];
　変数ｉの型が整数（ｉｎｔ）なのがうまくいかない原因です。 　まぁ、この類のパターンの時は、文字列を連結する時に、 　"middle"+String.valueOf(i) 　とやってやります。 　String.valueOf(i)は、数値型のiを文字列に変換してくれるものです。 　さらに、eval()は、ループ内の式全体に対して実行する必要があると思います。 　eval("document.estimateEnter.middle"+String.valueOf(i)+".length=1;"); 　となるかな。
JavaScriptのプログラムを見る限り無理そうですね。
イベントの発火条件というのは、単にイベントの種類を指しているのですよね? だとしたら、それは一般的な表現ではないので、多くの場合、通じないと思います。 さて、前置きはここまでとして、onで扱えるものであれば、同時に定義ができます。たとえば、$("#hogehoge")に対して、mouseenterとmouseleaveを同時に定義するには、単にイベント名をスペース区切りにするだけです。 $("#hogehoge").on("mouseenter mouseleave", function(){}); ただ、質問者さんの例の場合、readyはイベントではないはずで、onでは扱えないため、上記のような書き方はできないと思います。仮に、readyと似たような機能を持つwindow.onloadイベントに置き換えたとしても、やはり、この場合は、イベントターゲットが異なる(windowと#hogehoge)ので同時には指定できないと思います。 個人的には、質問者さんがおっしゃる「処理内容を関数定義して呼び出す」で、ほとんどの場合、十分かと思うのですが、何か問題でもあるのでしょうか。 $(window).on("load", hoge); $("#hogehoge").on("click", hoge); function hoge(){ //処理内容 }
長いので分割します <!DOCTYPE html> 　<meta charset="UTF-8"> 　<title>3D</title> 　<style> 　　canvas { background : #aaa; } 　</style> <body> <canvas width="1024" height="700"></canvas> <script> function ball (r, n, n1) { 　var rst = [], a = [], b = [], c = []; 　var pi = Math.PI, sin = Math.sin, cos = Math.cos; 　var k = 2 * pi / n1, k2 = pi / n; 　var i, i_, j, s, r2, yb; 　var r2 = sin (k2) * r, h2 = cos (k2) * r, yr = r2, yt = h2; 　 　for (i = 0; i <= n1; i++) { 　　s = k * i; 　　a[i] = sin (s); 　　b[i] = cos (s); 　} 　 　for (i = 0; i < n1; i++) { 　　rst[i] = [ 　　　[0, r, 0], 　　　[a[i] * r2, h2, b[i] * r2], 　　　[a[i_= i +1 ] * r2, h2, b[i_] * r2] 　　]; 　　c[i] = [ 　　　[a[i_ = i + 1] * r2, -h2, b[i_] * r2], 　　　[a[i] * r2, -h2, b[i] * r2], 　　　[0, -r, 0] 　　]; 　} 　 　for (i = 2; i < n; i++) { 　　s = k2 * i; 　　yr2 = sin (s) * r; 　　yb = cos (s) * r; 　　 　　for (j = 0; j < n1; j++) { 　　　rst.push ([ 　　　　[a[j] * yr, yt, b[j] * yr], 　　　　[a[j] * yr2, yb, b[j] * yr2], 　　　　[a[j+1] * yr2, yb, b[j+1] * yr2], 　　　　[a[j+1] *yr, yt, b[j+1] * yr] 　　　]); 　　} 　　yt = yb; 　　yr = yr2; 　} 　return rst.concat (c); } function rotation3D (m, x, y, z) { 　var deg = Math.PI / 180, sin = Math.sin, cos = Math.cos; 　var xc = cos (x * deg), xs = sin (x * deg); 　var yc = cos (y * deg), ys = sin (y * deg); 　var zc = cos (z * deg), zs = sin (z * deg); 　 　var x0 = xc * yc, y0 = xc * ys * zs - xs * zc, z0 = xc * ys * zc + xs * zs; 　var x1 = xs * yc, y1 = xs * ys * zs + xc * zc, z1 = xs * ys * zc - xc * zs; 　var x2 = -ys, y2 = yc * zs, z2 = yc * zc; 　 　var i, j, a, b, c, d, e, s; 　var rst = []; 　for (i = 0; a = m[i]; rst[i++] = s) 　　for (j = 0, s = []; b = a[j]; j++) 　　　s[j] = [ 　　　　x0 * (c = b[0]) + y0 * (d = b[1]) + z0 * (e = b[2]), 　　　　x1 * c + y1 * d + z1 * e, 　　　　x2 * c + y2 * d + z2 * e 　　　]; 　return rst; } //面の法線ベクトルを求める function crossProduct (ary) { 　var rst = []; 　var i, s; 　var p0, p1, p2; 　var x0, x1, x2, y0, y1, y2, z0, z1, z2; 　var px, py, pz, qx, qy, qz; 　 　for (i = 0; s = ary[i]; i += 1) { 　　p0 = s[0]; p1 = s[1]; p2 = s[2]; 　　x0 = p0[0]; x1 = p1[0]; x2 = p2[0]; 　　y0 = p0[1]; y1 = p1[1]; y2 = p2[1]; 　　z0 = p0[2]; z1 = p1[2]; z2 = p2[2]; 　　px = x1 - x0; py = y1 - y0; pz = z1 - z0; //p 　　qx = x2 - x1; qy = y2 - y1; qz = z2 - z1; //q 　　rst[i] = [ 　　　py * qz - pz * qy, 　　　pz * qx - px * qz, 　　　px * qy - py * qx 　　]; 　} 　return rst; } //明るさを求める function brightness (ary, v, el) { 　var lx = v[0], ly = v[1], lz = v[2]; 　var lv = Math.sqrt (lx * lx + ly * ly + lz * lz); 　var i, a, x, y, z, rst = []; 　var c, b = 1 - el; 　for (i = 0; a = ary[i]; i++) { 　　x = a[0]; y = a[1]; z = a[2]; 　　tv = Math.sqrt (x * x + y * y + z * z); 　　inp = x * lx + y * ly + z * lz; 　　len = inp / (lv * tv); 　　rst[i] = el + Math.cos (Math.acos (len)) * b; 　} 　return rst; } //3Dの物体を2Dの座標へと変換する function cov3to2 (m, zz, sc) { 　var rst = [], a, b, c, d, s, i, j, t; 　for (i = 0; d = m[i]; i++) { 　　a = d[0]; 　　for (c = [], j = 0; b = a[j]; j++) { 　　　c[j] = [b[0] / (t = (zz + b[2]) / sc), b[1] / t]; 　　} 　　rst[i] = [c, d[1]]; 　} 　return rst; } function canvas_draw_create (c, o) { 　var ctx = c.getContext ('2d'); 　var x = c.width / 2 + o[0]; 　var y = c.height / 2 + o[1]; 　var rgb = [50, 150,255]; 　var int = Math.floor; 　ctx.lineWidth = 1; 　return { 　　draw: 　　　function (a, b) {//面を描く 　　　　ctx.beginPath (); 　　　　ctx.fillStyle = 　　　　　'rgb(' + 　　　　　int (rgb[0] * b) + ',' + 　　　　　int (rgb[1] * b) + ',' + 　　　　　int (rgb[2] * b) + 　　　　　')'; 　　　　ctx.moveTo (x + a[0][0], y - a[0][1]); 　　　　for (i = 1; b = a[i++]; ) 　　　　　ctx.lineTo (x + b[0], y - b[1]); 　　　　ctx.lineTo (x + a[0][0], y - a[0][1]); 　　　　ctx.closePath(); 　　　　ctx.fill(); 　　　}, 　　cls: 　　　function () { 　　　　ctx.fillStyle = 'RGBA(160,160,160,1)'; 　　　　ctx.fillRect (0,0, c.width, c.height); 　　　} 　　}; } function draw (a, dw) { 　var i, b, c; 　dw.cls (); 　for (i = 0; c = a[i++]; ) {//面の３点だけでベクトルの外積の向きで判断 　　b = c[0]; 　　if (0 >= ((b[2][0] - b[1][0]) * (b[0][1] - b[1][1]) - 　　　(b[2][1] - b[1][1]) * (b[0][0] - b[1][0])) 　　) 　　　dw.draw (b, c[1]); 　} }
＞　テキストエリアには表示されましたが、時間などの数字以外の文字がテキストエリア内部で化けています。 PHP側の問題じゃなくてJavaScript側の問題でしょう。 onClicked 関数の中を ========== var user = encodeURI(document.getElementById("user").value); var chat = encodeURI(document.getElementById("input_chat").value); ========== と直したら日本語でも大丈夫だと思います。 理想的にはエンコードするんじゃなくてPOSTメソッドに変えて処理する方がいいと思いますが。
そら、jQuery Mobileの公式サイトだと思いますが。 「jQuery Mobile」で普通に検索すれば、5秒程度でわかると思いますけど…。 jQuery Mobile https://jquerymobile.com/ Version 1.4.5
JavaScriptでは、 <!-- から 行末までは1行コメントとして無視されます。 > 本件について参考になるURLなどがあれば、 > 併せて回答お願いします。 以下のページからダウンロードできる ECMA-262.pdfの523ページ「B.1.3 HTML-like Comments」に記載があります。 Standard ECMA-262 http://www.ecma-international.org/publications/standards/Ecma-262.htm なお、Script要素の中にJavaScriptコードを書くのは気をつけなければいけないことが増えてしまうので（コード中に</script>という文字列が出現したときとか）、基本的には外部ファイルにしておくのがお勧めです。
ガラケーはJavaScriptが使えないか、使えても機能制限が有るのでJQuery Mobileが動作する保証はありません。 URLを分けてた方が無難です。
「WYSIWYGエディタ」で検索するとライブラリの情報がいろいろ出てきますよ。
メソッドを覚えようとするのではなく、 また、実際に本に書いてあることだけやるのではなく、 本を使ってそれを応用して自分でサイトを作ってみることです。 自分で作ったファイルそのものが あとで同じものを組むときに参考になったりします。 また、本そのものが引き出しとなるかもしれません。 codepenなどでポイントをまとめてもいいかもしれませんが、 単純にメソッドを覚えても使えないのは応用力がないためで、 組みながら引き出しと応用力を増やしていくことを 心がけていくとよいと思います。 そうしていくうちに、「あ、これ見たことある」と 気付いてきて、徐々に、最適に書けるようになってくると思います。 全部覚えようとしなくても大丈夫だと思います。
あるようなないような。 「JavaScriptのバージョン」そのものを現在でもふっているのは、FireFoxだけです。これはFireFox独自の番号にすぎません。 割とオフィシャルな番号としてはECMAScriptとしてのバージョンがあります。これはブラウザによらず「JavaScriptのバージョン」といった場合こちらのことを指す方が多いかもしれません。 しかし「ECMAScript」といった場合には本来、JavaScriptに限らず「ECMAScript」をベースにした他の言語も含まれますので、「ECMAScriptのバージョン」を「JavaScriptのバージョン」ということは正確には間違っています。 人によって、文脈によって異なるでしょうからどちらの話なのかを判断できる能力が必要になります。 JavaScript - Wikipedia https://ja.wikipedia.org/wiki/JavaScript ECMAScript - Wikipedia https://ja.wikipedia.org/wiki/ECMAScript
１は数行で実現でき、超簡単です。喋らせるのは専用のAPIがあるのでそれをただ叩くだけです。 ２も同じく超簡単です。１，２は一ヶ月以内にできるようになります。 問題は３で、これはいろいろと総合力が必要になってくるので、地味に大変です。 が、時間を掛ければ１年目の人でも作れるレベルではあります。 しかし結局は貴方の資質次第でもあります。
HTMLの中のどこでコメントアウトしようとしたか次第でしょう。 /* ・・・ */ や　// は JavaScript のコメントアウトです <!-- --> は HTML のコメントアウトです。 買いた位置次第でブラウザの解釈が異なります。
ダイアログボックスのデザインを変更するならSweetAlertがお薦めです。 下記サイトにわかりやすいデモページがあるので参考にしてください。 http://co.bsnws.net/article/1
>教えていただいたjsにヘッダのチェックボックスクリック時に全チェックボックスをONにしたくて以下のコードを追加しました。 http://jsfiddle.net/17z691sh/5/ こういうことですかね？
不確かで恐縮ですが、 このjqueryスクリプトがあるだけでは、何もしないです。 何故なら、このjqueryスクリプトがありますと、存在を宣言しているだけだからです。 通常は、この場所に存在するjqueryスクリプトを参照しますと宣言しただけで、中の一部分を使えるようになっただけで、まだ、使ってはいないと考えます。 しかし、中で何を書いているかがわからないのであれば、外してみて、何も変化がなければ、あってもいいけど、なくてもいいものだと判断が出来ますから、要らないなら、捨てても良いと思います。必要があれば復活すれば良いと思います。 気味が悪いですし。必要ないなら、 私なら外します。 別の方法で、自分が把握しているものを自分で作ると思います。 そこに残すと、それに何か意味があるのかなと、開発者を悩ませますし。 他人が作ったものだと、バグがあったら、修理が必要になりますし。 壊れたままにして、増やすと、ウィルス感染みたいな状態になるし。 どうでしょうか？ 知らない癖に、余談を話して大変失礼しました。
ブラウザで実行するなら、グローバルオブジェクトのwindowを使って、 c = c.map(function(x){ return window[x.replace(" ","")]; でしょうか。 わかりやすく書くと、 c[0] = window[c[0]]; c[1] = window[c[1]]; ということです。 なお、splitした時点では、c の値は ["a","b"] ではなく ["a"," b"]なので、余計な空白を取り除く必要があります。
A ? B : C というのはJavaScriptの条件演算子（三項演算子）です。 式と演算子 - JavaScript | MDN https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Expressions_and_Operators#Conditional_%28ternary%29_operator if文を使って書き直すと、以下のコードと同じ意味です。 ================================= var index_add; if ( event.shiftKey ) { 　if ( index > 0 ) { 　　index_add = -1; 　} else { 　　index_add = 0; 　} } else { 　if ( index < total ) { 　　index_add = +1; 　} else { 　　index_add = total; 　} } fields.eq( index + index_add ).focus(); ================================= > それとこの内容の検索はどうやればヒットするのでしょう。 JavaSciprtの演算子なので、JavaScriptのリファレンスを見ましょう。 検索で直接見つけるのは、 ? ; が条件演算子であることは知っていないとなかなか難しいと思うので、 （私は「JavaScript 条件演算子」で検索しましたが知らなければ出てこないでしょう） JavaScriptの学習をちゃんとやるのが近道な気がします。 一度見たことがあれば検索もしやすくなるでしょうし。
JavaScriptからローカルファイルを作成する方法まとめ http://d.hatena.ne.jp/a_bicky/20110718/1311027391 JavascriptでIEからテキストファイルを保存、読み込みする http://blog.goo.ne.jp/xmldtp/e/bdc416e4985f02f60b0399864d49fd3f ファイルAPI(3) - IT技術者向け開発講座DTC(Java,PHP,HTML5,) http://dtcnews.blog.jp/archives/51903920.html 注．良く知りませんが、自分の PC でテストしたい場合は、Apache などをインストールして、localhost で実行しないと正常に動作しない場合があるみたいな記事もありました。
そのスクリプトが実行されるページの Content-Length を取得したいのですか？ それとも XHR で取得したページの Content-Length を取得したいのですか？
その認識でいいと思います。便利なライブラリです。
標準的なイベントは UI Events、audio要素等の要素固有のイベントは HTML5 で定義されていますね。 UI Events https://w3c.github.io/uievents/ http://www.hcn.zaq.ne.jp/___/WEB/uievents-ja.html HTML5 http://www.whatwg.org/html5 http://momdo.github.io/html51/Overview.html
AjaxはJavaScriptを使った機能実装の手法を指す言葉なので、JavaScriptとAjaxは同じではありません。 JavaScriptはプログラミング言語の一種です。 Ajaxは『Asynchronous JavaScript + XML』の略称で、JavaScriptで書かれたプログラム上で非同期通信とXML形式のデータを使い、HTMLを動的に変化させるために考え出された機能の事です。 現在はXMLだけでは無くJSON形式など多彩なデータ形式が用いられますが、JavaScript上で非同期通信を使ってブラウザとサーバ間でデータのやり取りを行う機能を広くAjaxと呼んでいます。
結論から言うと時代と共にjavascriptのコマンド解釈やブラウザ側の挙動、戻り値なども微妙に変化し続けており、単に navigator.appName で得られる値がそうなってしまったと言うだけの話…。 なので現状、navigator.appName は実質飾りと言うか、ブラウザ判別の役には全く立ちません。ブラウザ情報を種類やバージョン毎に細かく知りたい場合は以下の様なコードで取得し、複数を組合わせて総合的に判別する方法しかありません。 <script type ="text/javascript"> document.write("<p>ブラウザ情報[appName]: "+ navigator.appName +"</p>"); document.write("<p>ブラウザ情報[appVersion]: "+ navigator.appVersion +"</p>"); document.write("<p>ブラウザ情報[userAgent]: "+ navigator.userAgent +"</p>"); </script>
<div id="hoge" style="border:1px solid;">幅<span id="aaa"></span> 縦<span id="bbb"></span> <p></p></div><p></p> <script type="text/javascript"> //ウィンドウサイズの取得 getWindowSize(); // リサイズイベントの設定 window.onresize = getWindowSize; //ウィンドウサイズを取得する function getWindowSize() { ZZZ = window.innerWidth; AAA = ZZZ * 0.98; BBB = (ZZZ * 0.98) * 0.5625; document.getElementById("hoge").style.width = AAA + "px"; document.getElementById("hoge").style.height = BBB + "px"; document.getElementById("aaa").innerHTML = AAA; document.getElementById("bbb").innerHTML = BBB; } </script>
インラインフレームに直接URL入力すればできますよ。 http://www.petitmonte.com/internet_blog/googlemap_embedded.html
//コメントは、javascriptのコメントです。素のHTMLにかくと、そのまま表示されたはずです。
可能であれば画面設計を見なおして擬似モーダルにしたほうがよいと思います。 擬似モーダルであれば、jqueryを使うことで結構簡単に実装出来ます、ライブラリもいろいろとあります。がオススメはjqueryを使って自分で作ることです。 ただし擬似モーダルにすると「擬似」ですので、ウィンドウ内から外に出すことができなかったり、擬似だけ残すということをできなくなります。
そうです。
機械学習を開発、とありますが、機械学習のアルゴリズムを一から全部自分で書いて作りたい、ということでしょうか。それだと、それほど違いはない気がします。 が、既にあるライブラリを利用しての開発を考えるなら、Pythonでしょう。JavaScriptで機械学習のすぐれたライブラリってあまりよくしらないのですが。Pythonなら、GoogleのTensorFlowもありますし、出来合いのものを使うだけでいいならGAEでPrediction APIを利用すればPythonやJavaあたりで作れますし。Pythonのほうが利用する環境が整っていると思います。
あ～やっぱり…とりあえず元HTMLが、 <div id="inum"><span class="num">1</span></div> <div id="inum"><span class="num">2</span></div> 　　： <div id="inum"><span class="num">9</span></div> ～上記のようになっていると言う前提で、 <script> var my_array = $('div#inum span.num').text(); for ( var i=0; i<my_array.length; i++ ) { $('div#inum').eq(0).attr( 'id', my_array[i] ); /* もしくは... $('div#inum').eq(0).attr( 'id', 'inum_'+my_array[i] ); */ } </script> こんな感じで通ると思うけど、また後出しジャンケンで「実は…」と言われてももう知らん(笑)。 P.S. そもそも同一ページ内に同じ名前のIDが存在する事自体、HTMLとしておかしいので、早急にサイト全体のあり方を考え直すべき事案。基本的にjavascriptもjQueryも、同一ページ内には同じ名前のIDは常に1個単独でしか存在しない前提で設計されてるので、正しいコードを教えても元HTMLに重大な欠陥が内包されたままでは如何ともし難い…。
<script language="javascript" type="text/javascript"> function autochk(f){ for(var i=0;i<f.form.length;i++){ if (f.form.elements[i].className=="ko"){ if (f.checked){　//checked チェックが入っていたら f.form.elements[i].disabled = false; // 入力不可, 無効化 }else{ f.form.elements[i].disabled = true; // 入力可能,有効化 } } } } </script>
#2, 3 です。 > Aから始まるの後に、AAA, AAB と並ぶようにしたいです AAA, AAB の順でソートされる実装になっていると思うのですが、期待通りに動かないHTMLを開示できるでしょうか。 ■JavaScriptの問題点 #2 で述べたように基本的には JavaScript で実装しない方が良い案件に思えましたが、この辺りはどうでしょうか。 Re: yukiponta さん
一応、可能は可能ですが…ネイティブのみだと無理。javascriptの拡張プラグインに当たるjQueryと呼ばれるモノを別途導入する必要が有り。それだとさすがに「少しわかる」程度のレベルだと厳しい…！ 逆にjQueryを使えば2秒で終了と言うか簡単。類似のサンプルコードもweb上に何万と溢れてますので。 P.S. 純粋にjavascriptのみだと仕様上、外部サイトのHTMLを直に読み取る事は出来ない様に設計されています。プログラムテクニックとかそういう事以前に不可能。これはセキュリティ上の仕様なので変更不可能。 jQueryはそれだと最近のweb事情にマッチしてない、不便だよ～と言う声に答えて開発されたモノで。本来ならjavascript上では不可能な事も色々と可能になります。
<script> var hairetsu = []; $(function() { $('#hoge').find('li > a').each(function(){ hairetsu.push([$(this).attr('href'),$(this).html()]); }); }); </script>
https://jsfiddle.net/b9u4jwcs/7/ こんな感じかな
"/＊＊＊/＊＊＊＊.js" というファイルパスに存在する、JavaScriptのプログラムが書かれたファイルを読み込んで実行するという意味です。
質問が２つありますので、順番に回答させていただきます。 まず一つ目ですが、"active"が外れないのは コードを読む感じ、やりたいことを実現するには $('.kuruttosuru') に対して、activeクラスを当てているのですから $(this).removeClass('active'); ではなく $(".kuruttosuru").removeClass('active'); と書かないと、指定されたクラスが違うものになってしまいますね。 あと、もう一つ とりあえずは、Firebugなどのデバッガをインストールしましょう。 プログラムにエラーがあると、デバッガ上に表示がありますので、それ原因が大幅に特定されやすくなります。 手元で動かしてみた感じでは、下の様にエラーメッセージが出ました。 TypeError: target.offset(...) is undefined 読み込んだjQueryが同じものでは無いので、推測するしかありませんが 何処かでバグがある気がします。
document.getElementById("A" +i) で取得できないでしょうか？ ・xxformをはずす ・頭文字を小文字に。GetElementById → getElementById
var replace = this.href.replace(/\$/g, ''); Re: red_rose42 さん
1ページにwindow.onloadは1つしか存在できないからです。後に書いてある方の処理で前に書いてある処理が上書きされて、後の処理だけが実行されます。
$.post のsuccess処理の中で document.getElementById('search_button2').click(); を実行すればいいんじゃないでしょうか？ それと、jQuery 使って書いている所と、純粋なJavaScriptで書いている部分が混在してますが、統一した方がいいと思いますよ。
この場合の $(this) は $("ul li img") と等価です。
概ねその通りです。 サンプルコードを見て用途を簡単に満たせそうなら、ライセンスをチェックして、そのあと実際に手を動かしてみて大丈夫なら採用しています。 実際にはリリースまでにはコードレビューなどで様々な指摘が出たり、企画からの要求のレベルが上がって、そのプラグインでは要求を満たせない場合もありますが、そこは交渉で解決したりもできますので。
htmlファイル、というのは癖がありますね。 普通のwebサービスならログインページと非ログインページを作るものですが、そこまでの工数はかけないでhtmlファイルだけで完結したいのですね。 まぁ、そうであれば選択肢はcookieに値を保存しておくで１択でしょう。 一月程度で過去のcookieは蒸発して消えてしまいますが、毎度登録してくださいという表示がなければいいみたいですしね。
一から教えるのは大変なので、Javascriptを勉強できるサイトを教えます。 ドットインストールというサイトです。 頑張ってください。 http://dotinstall.com/lessons/basic_javascript_v2
function は関数の定義を行うという宣言ですから function で始まる行は関数の定義を行っています。 ご質問の例だと slideOut と言う関数の定義を行っています。
>$("#next").click(); jQueryのセレクタでの指定のようですが、@requireでjQueryのjsは指定されていますか？ もしそのWebサイト上でjQueryが使われている場合、clickではなくonを使うと動くかもしれないですね。 >jQueryで追加した要素にイベントセレクタを指定しても、動かない http://creator.aainc.co.jp/archives/6611#section3
formに対して、setAttributeメソッドでactionを書き換えることができるはず。 form.setAttribute("action","bbb.html"); form.submit(); みたいな感じ。詳細は省略。自分で考えてね。
＞　質問でも記述してあるように以下のような引数を時刻の文字列としたメソッドにできますでしょうか。 ========== function getJstTime(localTime){ times = localTime.split(":"); var date = new Date(); var tz = date.getTimezoneOffset(); tz += 540; date.setHours(times[0]) date.setMinutes(times[1] + tz); var retHours = ('0' + date.getHours()).slice(-2); var retMinutes = ('0' + date.getMinutes()).slice(-2); return retHours+":"+retMinutes; } ========== 引数が正しくない時のエラー処理は書いてないので、適当に直して下さい。
可能だけど、入力間違いが格段に増加するので、そういう処理は入れてはいけない。 上下カーソルキー等で月を変更している時に、月が「１２→１」と変化した時に「勝手に年の部分が変わっている事に気付かない」ので、入力間違いが起きる。 人間は「便利にすればするほど、間違いに気付かないイキモノ」なので、そういう「勝手に書き換わる処理」は、やってはいけない。 有能な設計者であれば、そういう設計はしない。
Windowと、リソースを含む要素（おそらくlink,style,img,iframe,frame,embed,object,script,track,input[type=image]）から発火します。 bodyはwindowのリダイレクトになっているだけです。
Clickイベントを拾おうとしているからではないでしょうか。 http://text.moroya.net/entry/2013/05/06/122013 （ちょっと古いですが） tapとかtouchとかの関連イベントを拾うといけるような気がします。 使う場所によってiPhone/Androidで共通の書き方でいけないこともあるので色々組み替えて頑張ってください。
失礼しました。 そのようでしたら、cookieのpathに/を指定してあげたら動きそうな気がします。 >同一サーバ内は参照可能 >document.cookie = name + "=" + escape(value) + "; path=/; expires=" + expires;
???? htmlを見たら、id=""で指定されていますね。 <p><a id="move-page-top" class="move-page-top">▲</a></p> ですが、cssの方を見ると「.」でclassを指定されている。 まずはこの辺りを調整されてはいかがでしょうか？ .move-page-top
以下の記事が参考になるかと。 http://webdrawer.net/javascript/browserdifference.html もっとも、このような機能の常として、バージョンアップに伴う仕様変更で突然使用できなくなるリスクは付きものですけどね。
JavaScriptで印刷オプションまでは制御できないようです。
＞　初回アクセス後、リロードを押しても同じようにアラートが一度表示されるようになればと思っております。 ---------- <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script> <script language="JavaScript"> $(document).ready( function(){ if (window.name != "test") { alert("reload"); location.reload(); window.name = "test"; } else { window.name = ""; } }); </script>
現在の案件で普通にWebデザイナさんとしてやっていくには、既に基本は覚えている状態のようですね。 質問の内容から察するに、フロントエンドエンジニアとしてやっていきたいように見えていますので、その前提でお話をさせていただきます。 あなたの現在の状態がわかりませんが、学生さんであれば自分で好きな技術を選別してサイトを作っていく、社会人としてその技術を活用しているなら、現在の案件に合わせて必要な技術を入れていく通路を辿っていけば良いのではないでしょうか？ Webの世界は技術進歩が早いので特定のクライアントサイドの技術を習得しても、数年後にはトレンドが変わってしまうものなのですし、作られるサイトに応じてその選択肢は変わります。 例えば、ブログザイトに若干の動的な部分をつけたい場合は、AngularJSの様な大掛かりな仕掛けは読み込み速度低下を嫌って使われず、jQueryをどうやって高速に読み込ませるかに心血を注いでいたりします。 また、質問内容にある様なJSの世界は、文化的にプログラマの自由に寄った民主主義の文化があって２～３年するとイケてるフレームワークの名前が変わりますので、"今"イケているフレームワークを勉強しても、もらった案件が３年前に開始されたものであれば、勉強したものとは違うフレームワークが使われているでしょう。 上記の理由から、特定の技術を勉強しても案件で生かせる"打率が良くない"ので、もらった案件に合わせるのが一番効率的な選択肢になります。 そこをあえて棚に上げてフロント系のおすすめの回答をするなら、SCSS、AngularJS、TypeScriptでしょうか。 理由は、AnguarJSは細かいカスタマイズは効きづらいですが、リッチなページを作るのに必要な技術が一通り入っているのでこういう機能があるというのを体験しやすいので。 TypeScriptは今の所のAltJSの本命でその上でECMAScript6の機能の体験版として使えるからです。 SCSSは案件で生かしやすい技術ですが、JS関連技術は勉強しても実案件で活かせないかもしれません。 そこはご理解お願いいたします。
実際に試してみましたが、 jQuery('#bgcolor-ch').css('background-color','#ff0000'); ボタンの色は変わりました。 コード単体では問題ありません。 もしかしたらコードが実行されていないのかもしれませんね。 jQuery('#bgcolor-ch').css('background-color','#ff0000'); console.log('色変更'); というようにしてコンソールに「色変更」と表示されていれば実行されています。 $(document).ready( function(){ jQuery('#bgcolor-ch').css('background-color','#ffff00'); }); 上記3行はページ読み込み後に実行されます。 これでもダメな場合は、 jQuery('#bgcolor-ch').css('background-color','#ffff00'); で色変更された後に、色を戻している何者かがいると思います。 もしくはcss優先度で!importantですね。
基準となる日からの日数差を求める、という意味でなら下のコードみたいになるでしょうか。 startDateが基準日で"2015/9/1"からの日数差なので31になります。 $(function(){ var imgAry = <?php echo json_encode( $imgAry ); ?>; var imgCount = imgAry.length; t = new Date(); // 日数差を計算 var num = Math.floor((t.getTime()-startDate.getTime())/(60*60*24*1000)); img = imgAry[num % imgCount]; console.log(img); });
うむ、 ＞ブラウザでやるなって話ですよね（汗 これに尽きる。 端末の処理速度に依存しちゃうし。 ソフトでMP3に変換するのだってそれなりに時間かかるんだから。
「スクリプト」というより、「プラグイン」とか「ライブラリ」ですかね。 それならバンバン使いますよ。 今や自分では書くなと言われる時代です。 大抵のものはすでに誰かが作っています。 だからそれをどう利用するかですね。 ただし、やはりそれを採用するには条件があります。 ・ライセンスが商用利用可能であること ・今でもメンテナンスされていること ・最悪自分でもメンテナンスできるものであること ・チームの自分以外の人でも利用できるものであること 「メンテナブルな」とか言ったりしますが、継続していけることが大事だと考えているので、 メンテナンスしやすいのは第一条件です。
カッコの中身「href == "#" || href == "" ? 'html' : href 」は三項演算子と呼ばれる条件演算式です。 http://www.ajaxtower.jp/js/ope/index14.html 従って、「href == "#" || href == ""」が真の場合、'html' にマッチした要素（要は <html> 要素）の jQuery オブジェクトが target に入ります。偽の場合は、href 変数の中身にマッチした要素の jQuery オブジェクトが target に入ります。
回答 No.1 です。 > 肝心のボックスの中身は、どちらもスペースになってしまいます。 データが Submit できないという質問ではなく、 INPUT ボックスが空になるという問題に対する質問だったのですか。それは今の実装方式で解決するのは難しいです。 INPUT ボックスが空になる原因は『Submit によってページが再読み込みされる』ためです。つまり、Javascript でボックスにデータを記入しても、Submit によってページが再読み込みされて、「最初の INPUT ボックスが空のページ」で上書きされてしまうために発生します。 これを回避するためには、以下のような対処を取るほうほうが考えられます。 A案) Submit を使用せずに、Ajax (jQuery) などを使用してサーバにデータを送る 　　（ページの再読み込みが発生しないようにする） B案) 問題のページを PHP などを使用した動的ページに直し、 　　 再読込み時には value 値をセットした HTML を作るようにする
<script> var ret = test("A"); </script>
こんにちわ。 どのような目的の構文解析でしょうか？ 構文エラーのチェックが目的のようでしたら、 HTML/JavaScriptのエディタとしてよく利用されているSublime Textにプラグインを追加しても可能です。
分足は分かりますが、あなたの言葉の「約定単位チャート」はよく分かりませんし、あなたの言葉の「同期」の意味もわかりません。分足も約定もそれぞれ独立した過去の静的なデータに過ぎず、一般的な意味での「同期」は全く必要ないはずです。普通に実装したら、ただ単に2つのデータをそれぞれ表示すればいいだけなはずですが…。 とりあえず処理内容はさておき、質問はここですね。 >setIntervalの時間間隔を「動的に変更すること」 >そのようなことは可能なのでしょうか？ 可能か不可能かということなら、当然可能ですよ…。 JavaScriptをあまり触ったことがない方なのでしょうか。それを前提に書きますと setIntervalの戻り値のIDを保存しておいて clearIntervalで処理を停止させ、 新たな処理間隔を指定したsetIntervalを実行すればいいだけです。 コードにするとこんな感じでしょうか。 var pid = null; function _setInterval(func, msec) { 　　if (pid) clearInterval(pid); 　　pid = setInterval(func, msec); }
使っているライブラリはjQueryですか？ jQueryなら以下のようにするのはどうでしょう。 ====================================== var json1 = $.getJSON("jsonGet1.php"); var json2 = $.getJSON("jsonGet2.php"); $.when(json1, json2) .done(function(result1, result2){ alert("done"); }).fail(function(result1, result2){ alert("fail"); }); ====================================== ↓参考 jQuery.when() で、複数の非同期処理を扱う | Tips Note http://www.tam-tam.co.jp/tipsnote/javascript/post5807.html
jQueryでよろしければ、以下のようなものがあります。 http://memocarilog.info/jquery/7477 ちなみに参考サイトの場合、 クリックすると新しいページへ遷移しますね。 これは単純に別ページを用意しそちらへ遷移させているだけなので、 javascriptを使用しなくてもできます。 認識違いの回答であればすみません。 参考になれば幸いです。
submit() を実行した時点でformのactionで指定されたURLへブラウザは遷移します。 遷移が始まった時点でブラウザは表示しているページが無くなると判断するためJavaScriptの実行を停止しているので、ブラウザ側の実装としては正しい実装だと思います。 formにtargetを指定されているので、フォームを表示しているページを残したまま別ウインドウ（別フレーム）に対してフォームの内容を送信したいのだと思いますが、そういった場合はフォーム側でsubmitするのでは無く、Ajax等でサーバにデータを送信し、targetで指定している別ウインドウ（別フレーム）を再読み込みさせるか、別ウインドウ側もAjaxを使って定期的にサーバからデータを取得してコンテンツを書き換えるようにすると、クロスプラットフォームで確実に動くようになると思います。」
＞document.forms[txt_submit].submit();の後の部分が実行されるようにするにはどうしたらいいのでしょうか？ まずこの部分ですが、 --------------- document.forms[txt_submit].submit(); --------------- ではなく、send()の中で指定しているのと同様、 --------------- document.txt_submit.submit(); --------------- にする必要があると思います。 これにより、ChromeとIE11での動作は手元でも確認できました。 ただ、FireFoxだと「window.event.keyCode」の値が取れないようでエラーになります。 eventをKey_onの関数に渡すやり方はいくつか在るかとは思いますが、簡単な方法としては、 ■HTML --------------- <input type="text" id="ctxt" name="ctxt" size="20" value="" onkeydown="Key_on(event.keyCode)"> --------------- event.keyCodeを引数として渡す。 ■Javascript --------------- function Key_on(keyCode){ if(keyCode == 13){ document.txt_submit.submit(); document.getElementById('ctxt').value= ''; alert('ん？'); } } --------------- keyCodeで受けて判定する。 という形にすれば期待の動作になるかと思うのですがいかがでしょうか・・・？ 確認しているブラウザはFireFox
特別な処理を必要とせず単にinputのテキストを消したいだけであれば <input type="text" name="ctxt" size="20" value=""> を <input type="text" id="ctxt" name="ctxt" size="20" value=""> のようにIDのある形に変更し、 フォーム送信後 document.getElementById('ctxt').value= ''; のような記述を行うのはいかがでしょう。 ただし、getElementById は ページ全体がレンダリングされる前に呼び出すとうまくデータを取得できない場合があるので、その場合は <script> window.onload = function(){ : : } </script> のような形で ページがロードされたらscriptが評価されるように記述する、または </body> の直前にscriptを置く 等の工夫が必要です。
ループを2重にするだけ。 var a=[2,9,8,4,3,5,7]; var b=[9,2,4,5,7,3,8]; var i,j; for(i=0;i<a.length;i++){ 　for(j=0;j<b.length;j++){ 　　if(a[i]==b[j]){ 　　　document.write("a["+i+"]とb["+j+"]が等しい<br/>"); 　　} 　} }
g1.config.decimals = 0; とすることで変更できます。それぞれのイベント内で”g1.config.decimals”を指定してはいかがでしょうか。 ソース <!doctype html> <html> <head> <meta charset="utf-8" /> <title>Donuts, baby!</title> <meta name="viewport" content="width=device-width"> <style> .container { width: 450px; margin: 50px auto 0 auto; text-align: center; } .gauge { width: 450px; height: 450px; } a:link.button, a:active.button, a:visited.button, a:hover.button { margin: 30px 5px 0 2px; padding: 7px 13px; } </style> </head> <body> <div class="container"> <div id="g1" class="gauge"></div> <a href="#" id="g1_pm2.5" class="button grey">PM2.5</a> <a href="#" id="g1_spm" class="button grey">SPM</a> <a href="#" id="g1_temperature" class="button grey">Temperature</a> <!-- <a href="#" id="g1_humidity" class="button grey">Humidity</a>--> </div> <script src="js/raphael-2.1.4.min.js"></script> <script src="js/justgage-1.1.0.min.js"></script> <script> document.addEventListener("DOMContentLoaded", function(event) { var g1 = new JustGage({ id: "g1", title: "項目を選択してください", value: 0.5, min: 0, max: 100, gaugeWidthScale: 0.6 }); document.getElementById('g1_pm2.5').addEventListener('click', function() { g1.config.decimals = 2; g1.refresh(0.03);//値を取得 g1.refresh(g1.originalValue, 100);//最大値 g1.txtTitle.attr({ "text": "PM2.5濃度[μg/m3]"// ゲージラベル }); }); document.getElementById('g1_spm').addEventListener('click', function() { g1.config.decimals = 2; g1.refresh(value=20.5); g1.refresh(g1.originalValue, 100); g1.txtTitle.attr({ "text": "SPM濃度[mg/m3]" }); }); document.getElementById('g1_temperature').addEventListener('click', function() { g1.config.decimals = 0; g1.refresh(value=30); g1.refresh(g1.originalValue, 100); g1.txtTitle.attr({ "text": "気温[℃]" }); return false; }); /* document.getElementById('g1_humidity').addEventListener('click', function() { g1.config.decimals = 2; g1.refresh(value=70); g1.refresh(g1.originalValue, 100); g1.txtTitle.attr({ "text": "湿度[%]" }); return false; }); */ }); </script> </body> </html>
要素を移動するだけなら appendChild() で期待通りに動作するのではないでしょうか。 http://jsfiddle.net/0dzsqj1v/ --- document.querySelector('.b').addEventListener('click', function (event) { console.log(event.type); }, false); document.querySelector('.c').appendChild(document.querySelector('.b')); ---
blur は DOM L2 Events ではバブルしないイベントですが、IE8 ではバブルしているんですかね…。 http://www.y-adagio.com/public/standards/tr_dom2_events/events.html#Events-eventgroupings-htmlevents-h3 event.srcElement の値はどうなっていますか？ event.srcElement の値から処理を分岐できませんか？ # Re: 1050YENさん
まず、aaa.htmlをブラウザで開いて、そのhtml中で入力した値を、JavaScriptの変数に値をセットしておいて、 次に　bbb.htmlをブラウザで開いたときに、aaa.htmlでセットした変数を引き継ぎたいということであれば、 １）aaa.htmlのJavsScriptでブラウザのcookieに値を保存しておき、bbb.htmlのJavaScriptでそのcookieデータを取り込む ２）aaa.htmlからformでサーバーに値を送信し、その次にサーバーでbbb.htmlを動的に作る 　（CGIやPHP等でhtmlを生成するときに JavaSciptのその変数の初期値として、 　　aaa.htmlから送られてきた値を埋め込む) ３）AjaxとセッションIDを使って、aaa.htmlとbbb.htmlのJavaScript変数の値を同期させる 　　（セッションを使うのは、他人のデータと混在させないためです） 等のさまざまな方法があります。
<script src="../js/jquery.flexslider-min.js"></script> $(window).load(function() { $('.flexslider').flexslider({ animation: "slide", pauseOnAction: false, slideshowSpeed: 3000 }); }); </script> --------------------------------- <script src="../js/jquery.flexslider-min.js"></script> と $(window).load(function() { の間に <script> が必要ではありませんか？？
<ul class="slider"> を <ul class="slides"> にしてみてください
まだまだ大規模なサイトではユーザーエージェントで PC版、スマホ版と振り分けているケースも多いですが、 最近は、レスポンシブデザインも多くなってきました。 jQuery Moblieは確かにことモバイルだけ見たら 優秀なフレームワークですが、 1ファイルでPC版のデザインを表現したい場合 PC版にとっては不要な部分がたくさんあります。 また、基本形が整っているサイト構築の場合は フレームワークの自動追加されたclassを流用し指定していくほうが 便利ですが、より自由度が高いデザインをされる場合は 自動追加されたclassが邪魔になったりしますので ケースバイケースだと思います。
Node.jsだけだと出てこないかもしれませんが、htmlタグです。 <p>は仰る通り段落を表すタグ。 idはid="aaa"みたいになってると思いますが、htmlタグのid属性です。 そのpタグのidです。
こんにちは。 回答者1の方がおっしゃっているように単純に「関数」「メソッド」という言葉だけで考えるならば同じであると言えると思います。 ただし、オブジェクトの中のプロパティとして定義されているメソッドというと設計上の意味合いが異なってくるかもしれません。オブジェクトの中で定義することによってオブジェクトの中で定義された変数を外部に公開することなく参照できるようにすることで、うっかり値を変更されることを防いだり(カプセル化)、クラスの共通部分をそのままに拡張することで再利用性を高めたり(継承)、同じ性質のクラスを利用することでプログラミング効率を高めたり(ポリモーフィズム)することができます。 文章で説明するのは少々難しく表現に若干、誤解がある部分はあるかもしれませんが、大体このようなメリットがあります。 どちらかというとJavascriptというよりはオブジェクト指向の話になってしましました。 Javascriptのオブジェクト設計は他の言語と比較して若干、癖もありますので、オブジェクト指向設計などを別途、勉強されてみると良いかもしれません。 ご参考になれば幸いです。
html内で<script>タグを使って外部ファイルを読み込んでおけば、あとは関数の実行自体は一緒です。
使うだけであればソースの中を丸ごとコピーして 使用したいファイルに貼り付ければよいです。 もしくは使用したいファイルと同じ場所にnode.jsファイルを置いて <script type="text/javascript" src="node.js"></script> として読み込んでも良いです。
そんなことはないでしょう。 javascriptで入力待ちなんてあり得ません。 javascriptは実行するだけの処理です。 入力エリアはHTMLで画面上にあります。inputというタグで部品になっています。 そして、そのinputのなかに onKeyPressやonKeyDownというようなイベントが発生したときに実行するjavascriptを指定するのです。 こういうのをイベントドリブンというのです。
> function(){ console.log(argument); }とはどういうことですか このコードは関数リテラル（無名関数、匿名関数と呼ぶこともあります）です。 http://www.ajaxtower.jp/js/function/index5.html > functionオブジェクトとは、自分ルールのオブジェクトを作成するという意味ですか？ 以下のサイトの「第1章」「第9章」あたりを読むと少しイメージが湧くかもしれません。 http://uhyohyo.net/javascript/index.html このあたりは javascript でも中級レベルの知識ですね。
(1) ポート番号とは、サーバの「受付窓口」のようなものです。 https://www.nic.ad.jp/ja/basics/terms/port-number.html (2) 一般的に javascript の質問は『ブラウザで動く javascript』の質問であると解釈されることが多いです。そうでない場合は、きちんと質問文に明示しないと回答者さんが混乱します。 私はたまたま質問者さんの以前の質問に答えているので、これはサーバサイドの Node.js の質問だろうと予想できますが、Web システム界隈でも『新し物好き』の一部の人達を除くと Node.js 自体知らない人が大多数なのです。 > 最後にappとするか8124にするかなのですが、どういう違いなのでしょうか 質問文より前のコードがどうなっているかが不明ですが、app は常識的に考えて数値変数でしょう。数値変数の内容を設定するか、べた書きで数値 8124 を設定するかの差です。コードの意味的にはほとんど変わりません。 (3) > appというのは、CSSのように～ (以下略) 先の回答の通り、app はおそらく数値変数です。CSS だとかファイルだとかは無関係かと。
・サンプルコードはメモ帳などで打ってファイルにしましょう。 　とりあえずファイルの名前を hello.js として C:\Users\**** に保存します。 ・ファイルにしたらコマンドプロンプトで以下のように打ちます 　node "C:\Users\****\hello.js" どうなりましたか？ Server running at http://127.0.0.1:1337/ と表示されたらここまでは成功です。IPアドレス 127.0.0.1 で動きました。 そしたら、ブラウザに以下の URL を打ちます。 http://127.0.0.1:1337/ ブラウザに hello, world! と表示されたら、サンプル実行は成功です。 実験に使用しているPCが Windows の場合は場合によってはここで「正常に接続できませんでした」と出るかもしれません。その場合はファイアウオールの設定をする必要があります。このあたりを見て設定します。 http://wiki.mcneel.com/ja/zoo/window7firewall ※ Node.js は正直言って初心者向けではありません。 　 初めての Web アプリならば、もっと簡単で解説サイトも多い PHP などを使うことを 　 お勧めします…。
＞IPアドレスというのは、その時間、その時開いているページで変わってくるのですか？ 何のIPアドレスですか？サーバーの？クライアントの？ ＞そもそも、IPアドレスってwebアプリ作るのに必要ですか？ ウェブアプリを動かすには、ウェブサーバーが必要でウェブサーバーにはIPアドレスが必要です。 質問に文字通り回答すると、「作る」のには不要です。テストや使うために「動かす」のに必要です。
プログラム(Webシステム)は初心者のかたでしょうか？ いきなりゼロから Node.js でプログラムをするのは至難の業です。まずはサンプルプログラムを入手して遊んでみましょう。Google で "Node.js サンプル" で検索すれば、色々出てくると思います。 サンプルを動かして遊んでみたら、サンプルのプログラムを読んで少し改造してみましょう。わからないメソッドや機能があったら Google 様にお問い合わせすれば良いです。検索しても英語のページしか出てこなくても泣いてはいけません。プログラムは英語は避けて通れませんので。今は Goolgle 翻訳などのお助けサイトがありますので、何とでもなります。 そうしているうちに、どうやって動いているかがわかるはずです。プログラムはまずは動かしてから考えたほうが、挫折しないで済むと思いますよ。
undefinedは未定義値です 関数の処理は別に影響を受けません。 戻り値のない関数の戻り値を受け取るとundefinedだよっていうだけの事なので、特に気にしなくて大丈夫です。 undefinedについて詳しく知りたい場合は検索すると出てくると思います とりあえずトップに出てきたのは↓ですね http://blog.tojiru.net/article/205007468.html
画像の例の場合、画像オブジェクトのプロパティは縦横の長さを変えるプロパティがあれば十分なのでしょうか？ 例えば解像度は？ 明度は？ 彩度は？ フォーマット(JPG とか GIF とか) は？ これらの情報を扱うには、いちいち違うオブジェクトを作らなくてはならないのでしょうか？ 面倒じゃないですか？ おいおいにしてオブジェクトは『最初はこんなもんだろ』と思って作っていても、後から機能追加だとかがしたくなることが良くあります。このような場合に「オブジェクトのプロパティを定義する (プロパティを追加する)」ことによって、プログラムの改造量を少なくしよう、という考え方もある、ということですね。
> 一度コードを書いてみてもらえますか？ 何のための何をするコードを書いて欲しいのですか？
http://qiita.com/shuntaro_tamura/items/ae55b99deb9e2a170754 まずはこちらをごらんになられてwebアプリを作るために何が必要なのかを知られてから、さらに質問されることをおすすめします。
そもそも関数が何故必要かというと、 一続きの長い処理を書くと重複する部分が出てきたり、見づらくなったりするので、分離するためです。 しかし、関数として分離すると、その関数内のコードは分離元との繋がりを失います。 つまり、分離元の変数を利用できなくなるのです。 そのため引数と返り値という仕組みを用いて関数と分離元のコードでやりとりする必要があるのです。 そして引数とは、良く渡す貰うのイメージで用いられますが、 ここでいう渡すとは元の場所から移動させて無くなったりするものではないです。 var a = 1; var b = a; と同じで、 function fn(b) {} ////////////////////////////// var a = 1; fn(a); とは aという名前で定義されていた値1を、関数内でbという名前で使えるようにして、関数内のコードを実行させるという意味です。
回答No.1 です。 > しかし、参考書にはしっかり２つ書かれているので、この本はダメかもしれません… 出版社のホームページへ行って、その書籍の正誤表が出ていないか確認してください。全体的に初心者向けの HTML や javascript の本は誤植・コードの誤りが多い傾向があるので、正誤表をチェックするのが地味に重要です。（コードの誤りくらい出版前にチェックしろよという話もありますが、初心者向けは内容よりも装丁やイラストに力を入れたほうがが売れますからねー）
>>変数もオブジェクトも種類別けする入れ物というイメージなのですが、なにが違うのでしょうか 変数は、数字とか文字など、具体的な値を保管することが多いです。 オブジェクトは、数字や文字だけでなく、それらが多数集まった集合とか、数字と文字の両方を保管した集合、さらに、処理ロジックなどが収容された「もの」っていうイメージでしょうか？ Ｃ言語でいえば、普通の変数が変数にあたり、オブジェクトは、ポインターが指し示している「データやロジックの塊」っていえるかもしれませんね。 ですから、Ｊａｖａは「ポインターがない言語」といわれたりしますけど、私の感覚からすればオブジェクトが多用されるＪａｖａは「ポインターだらけの言語」だというイメージがありますね。
＞ご紹介いただいたページは事前に拝見しておりましたが、bse64デコードされた文字からバイナリに復元する方法がわからなったです・・ バイナリに復元せずとも「テキストの状態（base64でエンコードされた文字列のままの状態）で、ある程度の判定は可能」です。 ANo.1の回答で示されたサンプルプログラムの、２８～３６行目を見て下さい。 このプログラムでは、対象を「バイナリ」で読み込んで ・頭の２バイトが「16進数でFF、D8」ならJPEG画像 ・頭の３バイトが「文字でPNG」ならPNG画像 ・頭の３バイトが「文字でGIF」ならPNG画像 ・頭の２バイトが「文字でBM」ならBMP画像 という判定をしています。 これら「16進数でFF、D8」や「文字でPNG」などは「Base64にエンコードしたら、特定の決まった文字列になる筈」です。 なので「Base64のまま、頭の数文字を見れば、画像『らしい』と言う事は判断できます。 ただし、あくまでも『らしい』としか判りません。 正確に画像ファイルかどうか判定するには「ちゃんとバイナリに戻して、ファイルヘッダーが画像ファイルの仕様に従ったバイナリデータなのかチェックする必要」があります。 なお、以下に「Base64のエンコードとデコード」が説明されています。 http://hakuhin.jp/js/base64.html フリーのライブラリに、javascript用の「Base64のエンコードとデコードをするライブラリ」があるので、ネットで検索してみて下さい。
>Socket IOはnode.jsの機能を搭載してるのではないですか？ いません。 >そもそも、Node.jsは言語ではないのですか？ 違います。 node.jsは、JavaScriptエンジンを使ったサーバープログラムです。JavaScriptでサーバー処理を記述し、JavaScriptエンジンでそれを実行することで、自分で作ったサーバープログラムを実行できます。 Socket IOは、クライアント側技術です。クライアント（平たく言えばWebブラウザ）からサーバーへ常時接続し、リアルタイムな更新を可能にするための技術です。クライアント側技術ですから、当然ですがサーバープログラムであるnode.jsの機能は搭載していません。また逆もしかりです。両者は、ただJavaScriptを使っているという点では同じですが、サーバー側とクライアント側でまったく違うものです。 「通信するアプリをつくるのに、node.jsとSocket IO を使う」というのは、サーバープログラムをnode.jsで開発し、クライアント側の通信部分をSocket IOで実装して、両者の間でリアルタイム通信を行う、ということでしょう。
まあ不可能だと思ったほうがいいです。 例えば１がもし上の方にも伸びていれば1->6->2となるでしょうし、 現状でも1->6->2と絶対ならない理由はないでしょう。 それこそ、2は画像を含んでいるので目が移りやすいとかそういったこともあるでしょう。 ですのでもう単純にy座標だけで決めたほうがいいです。 そしてy座標が同じならxを見ます。 ただしlistはy座標が微妙にずれているので注意がいります。
widthやheightの指定にはpxは不要です。 jsを以下のように書き換えてみてください。 var output = "<img src=" + imglist[selectnum] + " width='1000' height='500'>"; ちなみにCSSで指定してもいいです。
現状で何がうまくいかない、とか、どんなエラーがでる、とか 情報はありますか？ とりあえずは、 各scriptタグ内に定義された以下、 num, nme, exp, cnt は両方のタグ内で共通となります。 片側の関数でcntを1にした場合、もう片側の関数で利用した際には2になります。 これは想定動作ですか？
iosの場合、オプションのoffsetの値を調整してはいかがでしょうか。
もしかしてサーバを立ててとかでなく ローカルファイルをブラウザで開いてますか？ そうであれば以下URLを参考にオプションを変えてみてください。 （XPの古い記事ですが、Win8でもだいたい同じです） http://biw.xii.jp/ie/IEsecurity01.htm ※セキュリティ的には甘くなるので自己責任でどうぞ
そもそも必要になることが少ないから絶対数も少ないだけです。 ですが、必要な場面では大変重宝されています。
こちらのページの下のほうにある『【コラム】Web Storageのデータ内容を確認するには？』を参考にどうぞ。 http://www.atmarkit.co.jp/ait/articles/1108/12/news093.html
JQueryというか通常DOMの要素に戻してstyle属性値を取得してはいかがですか？ $("#hoge")[0].style.width
技術的な問題以前に・・・ ここに表示されいる画像は、以下のサイトのコンテンツのようですが、これはあなたが作成中のサイトではないですね。 （あなたのサイトであればこんな質問は出ないでしょう） http://www.a-nob.com/engine-type.html 　　　　 あなたが提示された画像の著作権は？ 勝手に他のサイトの画像を使ってはいけません。
WebSocket を使えば、CORS の制約内で可能だと思います。 http://www.hcn.zaq.ne.jp/___/WEB/RFC6455-ja.html#section-5.5.2 https://developer.mozilla.org/ja/docs/HTTP_access_control # Re: muuming2001さん
正規表現で大文字を変換すればいいのでは？ _とか任意の文字に変換してからsplitする。 キャメルケースとスネークケースの変換は以下の http://blog.kengo-toda.jp/entry/20081130/1228026182 や http://qiita.com/ryo0301/items/7c7b3571d71b934af3f8 が参考になると思います。
>バックエンドとして、parse.comの利用を検討しています。 そのサービスは知らなかったので、ざっと見てみました。以下から配布されているスクリプトが見られます。 http://www.parsecdn.com/js/parse-1.4.2.js やはり、XMLHttpRequestを使い、Ajaxでparase.comのサーバーにアクセスし、データを保存したり必要な情報を取得しているようですね。アクセスするサーバーはhttpsでセキュアなものを使っており、ログインに必要なアクセスはpost送信されています。またユーザを識別するセッションは毎回トークンを変更し、追跡不可にしています。一般的なセキュア対策はひと通りされており、心配することはないと思いました。 JavaScriptを使っているということで不安を感じるのかもしれませんが、GoogleやFacebookのログインフォームもAjaxも、きちんとセキュアな対策を取っていれば安全の上ではそれほど違いはないと思いますよ。 それより問題は、ユーザー情報などを自社でなく外部に委ねていいのか、そっちのほうじゃないでしょうか。ログイン処理などの不安より、サイトに外部から攻撃がされてユーザー情報が流出、なんてことのほうが今は不安だったりしますから。 GoogleやFacebookぐらいになればさまざまな攻撃に晒されてきたので大抵の対応はできますが、新興の小さな企業だとそうした経験が少なく、思いがけない弱点を露呈してしまうことがあります（parase.comがそうだということではありません、念のため）。そのへんをどこまで信頼するか、ですね。
本題ではないですが、"This is a test" になっていないのが気になります…。 --- var word = 'this is test. this is test.', words = word.split(' '); // [this, is, test] for (var i = 0, l = words.length; i < l; ++i) { words[i] = {index: i, value: words[i]}; } words.sort(function (a, b) { return a.value > b.value; }); console.log(words); --- 実際に "This is a test" にすると期待通りに動作しないので、大文字を含むなら String#toLowerCase で小文字化するなり、String#charCodeAt を回す等の対策は必要になります。 # Re: donutshopさん
質問したいのは、 「どのようにリクエストを送ればいいか？」 （ブラウザ側・iPadなど） なのか 「どのようにレスポンスを受け取ればいいか？」 （サーバー側・Servletなど） のどちらでしょう？ ----- 「どのようにリクエストを送ればいいか？」 で、いえば <form action="送るサーバーのURL" method="post" enctype="multipart/form-data"> <input type="file" name="upload_file"> <input type="submit" value="アップロード"> </form> などでいいと思います。 > jspの引数に、バイナリで乗せるということだけは、 > インターネットで調べてわかりました。 正確には引数というより、パラメータとしてリクエストボディに付与する、ですかね。 ----- 「どのようにレスポンスを受け取ればいいか？」 で、いえば Apache Commons の FileUpload などを用いて、サーブレットでの実装にしたほうがいいですね。 https://commons.apache.org/proper/commons-fileupload/ 以下などが参考になると思います。 http://www58.atwiki.jp/chapati4it/pages/154.html http://www.ne.jp/asahi/hishidama/home/tech/apache/commons/fileup.html ----- ※どちらかといえばJavaのカテゴリですね。
jsp詳しくないですが、jspはJavaServer Pageの文字の如くサーバで動きます。 javascriptはクライアント（ブラウザ）で動きます。 値をやりとりするには以下のサイトにあるようなフォーム送信に関する知識が基本として必要です。 ここではjavascriptは必要ありません。 https://ssl.aiosl-tec.co.jp/java-start/chap08.html 発展してjavascriptで行うこともでき、実現するにはajaxという知識が必要になります。
まず onChange の値ですがダブルコーテーションが閉じられていませんが転記ミスでしょうか、それとも実際のHTMLでも閉じていないのでしょうか。 ダブルコーテーションを閉じたら、関数が呼ばれていることは確認できました。 あとは、document.zip_form.address1.value では目的の値を取得できません。 （コンソールを確認したら分かると思います） document.forms.zip_form.address1.value とすれば目的の値が取得できるでしょう。
> １）クライアントから、郵便番号を送られてきて、それをJSPで（html画面を表示せずに）、 この　最初のクライアントが郵便番号を入力するフォーム上の段階で ajaxzip3.jsを使って郵便番号→住所にしたものをHiddenデータとして自動で作っておけば そのあとのJSPでは、変換済みの住所データ（Hidden ）を単に取り出すだけで 済むんじゃないですか？ もしも、どうしてもブラウザ上でなく、JSP上で郵便番号→住所に変換したい事情があるのなら 郵便番号→住所を行ってくれる外部APIを HttpURLConnection でコールして それの結果（JSONとかCSV）をパースすることになるでしょうけど。
こんな感じでしょうかね。jsonの仕様がわかりませんのであってるかはわかりません。 もっと見るボタンをクリックするごとにjson/1.jsonの1を+1するようにして、クリックするごとにjson/(n).jsonを取ってくるようにしています。 クリックした時の挙動を制御する書き方はわかりますよね。 $("もっとみるボタン").click(function(){}); の「もっとみるボタン」は適宜変更してください。 <script> $(function() { // jsonの番号 var json_num = 1; $("もっとみるボタン").click(function(){ $.ajax({ url: "json/" + json_num + ".json", dataType: "json", error: function(jqXHR, textStatus, errorThrown) { $("#content").text(textStatus); }, success: function(data) { var dataArray = data; $.each(dataArray, function(i){ $("#content").append("<div><p id='" + dataArray[i].id + "'><a href='" + dataArray[i].link + "' target='_blank'><img src='" + dataArray[i].image_url + "'></a></p></div>"); }); } // 次のjson番号 json_num = json_num + 1; }); }); }); </script>
"abc" を例にするなら次のようなコードでしょうか。 --- function abc (string) { return /^([^a]*)(a)[^b]*(b)([^c]*)(c)[\s\S]*$/.exec(string); } console.log(abc('abdec')); console.log(abc('abcdef')); console.log(abc('defgabc')); --- "abc" を任意の文字列にするなら searchString.split('') で配列化して new RegExp で正規表現オブジェクトを生成する仕組みが必要になりますが、原理的には可能だと思います。 # Re: muuming2001さん
IE, Chrome, Firefoxで実行しましたが、すべてで動きます。 STARTボタンを押して数字が動きっぱなしになるだけですが、 少なくとも「script が実行されない」という現象は発生しません。 コードには問題はないようです。あなたの環境に何か問題があるのでしょうね。
細かな構成（PHPバージョンやら実行サーバやら）がわからないので、 適当な環境にご指定のソース（当方環境用に少し変更）で試しましたが、動作しました。 ===== index.php <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script> <script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script> <script> var url = '/read1000.php'; $.get(url, function(data){ var content3_sql_name = $(data).find('.class3_sql_name').text(); $("#read200").load("/read2222.php?name="+content3_sql_name+" #news200", function(data1) { if(data1 == null) $("#read200").append("faild."); }); }); </script> <input type="text" name="ca2_stock_name" value="" /> <div id="read200"></div> =====read1000.php <table border="1"> <tr> <td class="class3_sql_name">takahashi</td> </tr> </table> =====read2222.php <div id="news200"><?php echo $_GET["name"]; ?></div>
まず <a id="mypage" href="stock.php">個人ページに移動</a> と識別可能なid(なりclassなり）を設置する。 var link = $("#mypage").attr("href"); // stock.php として、リンク文字列を取得します。 var link += "?name=" + content3_sql_name; で新しいURLにします。 $("#mypage").attr("href", link); で設置しなおします。
該当ページのHTMLの65行目などにある、 .addIndicators({name: "1 (duration: 300)"}) // add indicators (requires plugin) がそのままあったりしますか？ debug.addIndicators.min.jsは ScrollMagic.Sceneを拡張して、 addIndicators(options)と removeIndicators()の関数を追加しているようです。 なので、上記の関数を利用している箇所があれば、エラーになるとおもいます。
$.fn.basicTabs =ってとこが上でも下でも同じじゃそりゃ上書きされます $.fn.basicTabs1 = $.fn.basicTabs2 = とでもしてやりゃいいんじゃないでしょうか あと、結局上と下の違いはオブジェクトのキー値と引数の初期値だけなんですよね？ じゃあ引数を変えて２回実行すればいいんじゃないでしょうか 下のは消して $.basicTabs({ active_class1: "current2", list_class1: "tabs2", content_class1: "tab_content2", starting_tab1: 1 }); とかくとか でも、それ以前にこの設計だと.tabs2とか.tab_content2とかが複数ある場合に両方動いてしまうことになります （そもそもこれ自体その問題に対処しようとした結果なのかもしれませんが） $('.tabs2#tabs2A'). basicTabs($('.tab_content2#tab_content2A'),options); みたいな感じで、タブとその操作対象を指定できる使い方ができる方向を目指すべきだと思います
送信元で&を&amp;に変換する。
あなたの検索結果で答えは出ていますよ。 「JavaScriptライブラリである」なのですから、「ライブラリ」がどういうものなのかを調べるだけです。 もはやjQueryが何なのかという話ではなく、もっと言えば、JavaScript特有の話ですらありません。 http://www.sophia-it.com/content/%E9%96%A2%E6%95%B0%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA その二択であるならば、考え方としては「JavaScriptの一部」の方がニュアンスとして近いです。
document.form1.submit(); で送信を実行した場合は、form の onsubmit イベント ($('#form1').submit に指定した関数) は動きません。form の onsubmit イベントは type="submit" のボタンがクリックされたときに動く仕様ですから、自動実行JS をこの仕様に沿うような実装にしなくてはなりません。 具体的には、 1. <button class="button8">登録</button> を 　<button type="submit" id="submitbutton" class="button8">登録</button> 　になおす。 2. document.form1.submit(); を 　document.getElementById('submitbutton').click(); 　になおす。 で行けると思います。
アルゴリズムはそんな得意じゃないですが、思いついた処理手順だけ 斜めを無視していいなら成立した魔法陣は 列・行を入れ替えても必ず成立することになります また、その入れ替えをしても各列・行の数字の組み合わせは変わりません １行目・１列目を入れ替えなければ左上の数字は変わりません なので 「0～15を合計が３０になるような４つの数字へのグループ分けパターンを求める」 「これらのパターンのうち片方が行の組み合わせで片方が列の組み合わせとして成立する組み合わせを求める」 （つまりどのグループも相手パターンのどのグループをとっても同じ数字が一つだけあるというパターンの組み合わせ） これらのパターン同士の組み合わせの数に 「３列の並び替えパターン数」×「３行の並び替えパターン数」 をかければ組み合わせの数がもとまると思います あと、斜めを無視するなら多分どの数が左上に来る魔法陣も数が同じです
jQuery mobileですかね？ ならばrefreshが必要です。 http://u999u.info/lCin
既に回答がありますが、通常は複数のバージョンを同時に読み込むような使い方はしません。 操作に支障がないのだれば、最新のjQueryを利用することを強くお勧めします。 jQueryは2系と1系で大きく分けること出来ますが、分かりやすく言うと「古いブラウザをサポートするかどうか」の違いです。1系は古いブラウザをサポートします。2系は古いブラウザをサポートしませんが、1系よりも高速に動作します。 さて、その「古いブラウザ」ですが、主にバージョン8以下のInternet Exlploerを指します。 ご存知の通り、今やWebサイトのアクセスはの半数はスマホ・タブレットPCです。 その中で全体に対してのInternet Exlploerの割合は1割程度でしょう。さらにバージョン8以下に絞ると更にその1割程度だと言われます。つまり、全体の1%です。参考までに。
(function($){ ・・・ })(jQuery) No.1の回答の通り、無名関数を即時実行しているので、 その場で処理が実行される点はfunctionで包んでも包まなくても同じです。 違いとしては、この書き方なら、グローバル空間の$が未定義（もしくはjQuery以外が代入されている）でも、jQueryさえ定義されていれば、 function内では$でjQueryを参照できます。 また、このfunction内でローカル変数を定義すれば、 グローバル変数を作らずにすみます。
二進数で書くと分かるかと思います。二進数の定数は、先頭に二進数であることを示すためにゼロとbを書きます。 console.log(0b1010 | 0b1010); ⇒ 0b1010 ⇒ 10 console.log(0b1010 | 0b1001); ⇒ 0b1001 ⇒ 11 console.log(0b1010 | 0b1000); ⇒ 0b1010 ⇒ 10 console.log(0b1010 | 0b0111); ⇒ 0b1111 ⇒ 15 console.log(0b1010 | 0b0110); ⇒ 0b1110 ⇒ 14 console.log(0b1010 | 0b0101); ⇒ 0b1111 ⇒ 15 console.log(0b1010 | 0b0100); ⇒ 0b1110 ⇒ 14 console.log(0b1010 | 0b0011); ⇒ 0b1011 ⇒ 11 console.log(0b1010 | 0b0010); ⇒ 0b1010 ⇒ 10 console.log(0b1010 | 0b0001); ⇒ 0b1011 ⇒ 11 console.log(0b1010 | 0b0000); ⇒ 0b1010 ⇒ 10 二進数で表示したいときは、 console.log((0b1010 | 0b1010).toString(2)); のようにします。 二進数と十進数の変換は中学で学びますが、忘れているようなら、 Windows付属の電卓でも変換できます(表示メニューでプログラマを選ぶ）。
一個一個バラバラで送るよりもvalueにカンマ区切りで入れる方が良さげに思います。 　<option value=”三重,静岡,岐阜”>東海地方</option> このようにして、受け取り側でバラせばよいです。
jQuery(JavaScript)のプラグインを利用しているのが多いんじゃないかな？ http://matome.naver.jp/odai/2132616911530364801 好きなの見つけて使ってみるといいよ。 一からJavaScriptで作るのはものすごく大変。
>僕が起動していたのは「node.exe」というものでした。これじゃだめですか？ それはnode.js本体じゃないですか？　node.jsはJavaScriptランタイムですので、これを起動してもnodeコマンドは動かないと思いますよ。node.jsの使い方は理解されていますか？ まず、コマンドプロンプトかターミナルを起動して、そこでnode -vを実行してみてください。
/common/js/base.js にパララックス効果周りの設定の記述があるように思います。 該当サイトにおいては細かい制御がされているようですので、 そのようなレベルですとプラグイン導入のみの対応は難しいのではないでしょうか。。
このサイト全部をまかなえる特定のプラグインはありません。 どの部分の「画像を動かす機能」なのでしょうか？ 特定の処理のみなら、jQueryというよりcss3のアニメーションと合わせてできないことはないと思います。 背景画像が回転してるとことかですかね？ それならjQueryRotateという画像を回すプラグインはあるようなので、 特大画像をゆっくり回してみれば似たような効果は出るかもしれません。 下記リンクなどを参考にしてみてください。 http://smileworks.biz/jquery/1363 http://uzmk.jp/blog/tips/entry-229.html http://htmlnavi.com/?p=122 ※jQueryRotateの本家サイトは今アクセスできなくなってるようですね。
まず、1行目は次のタイプミスですね。 aaa=key.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]"); 逐語的な説明をすると、keyという変数に入っている文字列の、[ を\[ に、] を \] に置換します。 次に、regexというRegExptオブジェクトを作ってその正規表現として、 \または?または& の後にさっきの aaa の文字列、その後に = があって、さらに後に&と#以外の文字が続いたもの を設定しています。 何をするためにそうしているのかは、前後関係によりますので、これだけの情報では不明です。
localStorage.setItem("checkbox1_checked",document.getElementById("checkbox1").checked);
> var cont = $('.wrap');//コンテンツの横サイズ > var contW = $('.section').outerWidth(true) * $('div',cont ).length; 上の２行がわかりませんね。 > var cont = $('.wrap');//コンテンツの横サイズ これは $('#secWrap') ですかね？ > var contW = $('.section').outerWidth(true) * $('div',cont ).length; $('.section').outerWidth(true)って一番最初のしかとれてない気がします。 $('div',cont ).length は.sectionの中にdivタグがあっても取得してしまいます。 なので、 var contW = 0; $('#secWrap').children(".section").each(function(){ contW += $(this).outerWidth(true); }); のようにして個々のdivを足していく必要があるのではないでしょうか？
var h = day.getHours(); var mi = day.getMinutes(); var s = day.getSeconds(); で、時・分・秒 が得られるので、後は同様に。
> <script src="//code.jquery.com/jquery-1.11.3.min.js"></script> この書き方をした場合、 HTMLファイルに http:// でアクセスした場合は http://code.jquery.com/jquery-1.11.3.min.js から https:// でアクセスした場合は https://code.jquery.com/jquery-1.11.3.min.js から jQueryがダウンロードされます。 そして、httpでもhttpsでも無いところにHTMLがある場合（例えばfile://とか）は jQueryはダウンロードできなくなりますが、 ちゃんとhttpでアクセスできる場所にHTMLをおきましたか？ おいていないなら、httpでアクセスできるようにするか、 jQueryをダウンロードしてくるか、jQueryのURLにhttp:を明示するとかしましょう。
ほとんど作成依頼ですので https://coconala.com/categories/231 こちらで好きなサービスを選択して頼んでくださいな。
＞onclic clickのスペルが間違っているから
inputEventListenerなんてないと思いますがどういういみでしょうか？ document.getElementById('input').addEventListener('click', function(){ とか？ document.getElementById('input').onclick = function(){ とか？
z-indexの確認はされましたか？ フッターメニューのCSSにおそらくz-indexが設定されていると思いますが、 それがlightboxのz-indexより大きいのでは？ z-indexについては下記を参考にしてください http://www.htmq.com/style/z-index.shtml http://cafe.76bit.com/creative/web/web-design/html-css/css/enable-z-index-on-css/ http://no1026.com/archives/104 (←上級者向け)
WebkitではUTC基準の値を返す仕様（バグに近い）だからです https://bugs.webkit.org/show_bug.cgi?id=4363 Chromeではもう治っていますし、Androidも4系の終盤からはほぼChromeが標準ブラウザですから あまり気しなくとも時が解決してくれます。
画面上に表示させるにはHTMLダグを生成（または既存に挿入）する必要があります。 リンク先のスクリプトを利用した場合、で以下が３番目のSELECTなら <select id="SEL3"> <optgroup label="x1"> <option value="x1-1">x1-1</option> ・・・略 </optgroup> </select> 表示用のHTMLタグを用意しておいて、 <div id="result_text"></div> 以下のようにスクリプトを実行すれば、テキストを表示できると思います。 var lastSelectTag = document.getElementById("SEL3"); var value_text = lastSelectTag.options[lastSelectTag.selectedIndex].text; document.getElementById("result_text").innerHTML = "《あなたの選んだものは "+value_text+" です》"; 実行させるタイミングは自由ですが、 SEL3にonchangeをつけても動かしてもいいと思います。
＞　【javascript:void(0);】と表示されるページのファイル内にはscriptの記述はないです。 ＞　このページのリンク元（html）等にはscriptの記述はあります。 ＞　他ページのscript等が影響することもありますか？ ソース全体を見てみないと正確な事は判りませんが、別ページが影響することは無いでしょう。 他には、サーバサイドで何らかのシステム（CMS等）が動いていて、クライアントへHTMLを返す際に何らかの置換処理を行っている可能性も考えられます。
私はそう思います。肝心なのは動機づけで、やりたいと思う気持ちが自然と技術を付けていきます。 私は職業プログラマですが、一つの言語をマスターすれば、他の言語を覚えるのも比較的容易です。 ただ、やはり一つくらい専門書を持っていた方が、慣例や指針を早く覚えることが出来ると思います。いい指導があれば効率良く覚えられますよ。
hoverをclickに変えただけじゃ動かないわよ hoverの第１引数は、マウスオーバーしたときの処理 第２引数は、マウスアウトしたときの処理を記述しているの でもclickはそもそも第２引数がないの 第１引数に、クリックしたときの処理を書くだけなの なので、第１引数のfunction内に 画像を切り替える処理を書かないとダメ もしもclickするごとに入れ替えるのなら 現在の画像がどっちかを確認するようなことも必要ね このつくりならsrc属性とdata-image-sourceを入れ替えるだけで よさそうだけど
曜日の取得についてはDate.getDay()で取れるとおもいます。 http://dqn.sakusakutto.jp/2008/05/javascriptgetday.html などにあるようにDate.getDay()で0-6の数値が帰ってくるので、曜日の文字を配列にしておいて、表示すればいいだけ。 その前に、記載された内容では、「どのタイミングで曜日を変化させるのか」が意図した通りになっていないとおもいます。 > <select name="selectWeek" onchange="setSelectyear()" onchange="setSelectMonth()" onchange="setSelectDate()"disabled> > <OPTION>日曜日<OPTION>月曜日<OPTION>火曜日<OPTION>水曜日<OPTION>木曜日<OPTION>金曜日<OPTION>土曜日 > </select> onChangeイベントはその対象が変更されたときに動作します。 記載された関数が動作した時に発生するものではありません。 なので、↑のソースの場合はonChangeはイベントは動作しません。 タイミングを整理すると、 ・年を変更したとき＞setSelectyear()と曜日変更 ・月を変更したとき＞setSelectMonth()と曜日変更 ・日を変更したとき＞setSelectDate()と曜日変更 というようにしたいのだと思うので、別途曜日変更用の関数を作成して、 各setSelect*のイベントの最後に動作させればよいのではないでしょうか。
Firefox の独自機能「分割代入」のようですね。 https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Grammar_and_types https://developer.mozilla.org/ja/docs/Web/JavaScript/New_in_JavaScript/1.7#.E5.88.86.E5.89.B2.E4.BB.A3.E5.85.A5 MDNの JavaScript から [Mozilla における ECMAScript 6 のサポート] -> [合意や安定性が確立していない機能] と辿っていけば見つかります。 https://developer.mozilla.org/ja/docs/Web/JavaScript # Re: shining330さん
■書き方 jQueryを使うかつjavascript初心者でしたらjavascriptの書き方ではなくjQueryの書き方で統一されることをお勧めします。 もちろんどちらでも書けるのですが、jQuery流のほうがまとまりやすいとおもいます。 document.write() → $(セレクタ).append() document.getElementById() → $('#アイディー') など ■データの扱い方 なるべくHTMLは書き出さず、中身だけ扱うようにします。 でないとHTMLを見た時にどこに出力されるかわからないからです。 ■例 <div id="name">高橋</div> <input typy="text" id="text44" value=“"> // 名前取得 var username = $('#name').text(); // 名前をフォームにセット $('#text44').val(username);
回答No.1です。 捕捉読みました。条件をまとめると 1. document.write 出力は HTMLの『読み込み前』に 　 実行する必要があります 2. HTML内に書かれている特定のクラスを読むためには、 　 HTML の『読み込み後』である必要があります 3. 2.の処理で特定のクラスを読みこみ、1. の処理を実行 　 したいです となり、この方法では実現不可能です。 実現するには、1. の document.write を使う方法を諦めて、 HTMLの『読み込み後』でも実行可能な処理方法、例えば 『出力用の <div> 要素を作って、その InnerHTML に動的に 出力する方法』などに変更する必要があるでしょう。 その上で、元の質問に戻ります。 まず、質問者さんの window.onload を使用する方法では 『戻り値を返す』ということはブラウザの仕組み上、実現 不可能です。戻り値を返す先がありません。 『ここから別の関数を呼び出す』ことは可能ですから、HTML の出力処理を関数化し、その関数の引数に aaa の内容を渡 すようにすれば良いかと思います。
> var postData = {id: $('#id').val(), name: $('#name').val()}; これじゃ取れないですね。失礼しました。 ちょっと冗長な書き方ですが var postData = {id: $('#form1 input[name=id]').val(), name: $('#form1 input[name=name]').val()}; みたいにすれば値は投げられると思います。
<script> url = 'http://hoge.ne.jp/index.html'; $.get(url, function(data){ var content4 = $(data.responseText).find('.class3').text(); $("#text4").val(content4); }); </script> <input type="text" name="tx" id="text4" value=""> </html>
HoverDirってやつっぽいです。 https://github.com/webmandesign/jquery.hoverdir http://tympanus.net/TipsTricks/DirectionAwareHoverEffect/
データ部分を共通化するなら、関数の外で postData = { 'aaaaa':'あああああああああああ', 'bbbbb':'いいいいいいいいいいいいいいいい', 'ccccc':'うううううううううううううううううううう', 'ddddd':'えええええええええええええええええ' }; という定義をしておいて jQuery.ajax({ type: "POST", url: "/hoge.php", data: postData }); とすれば行けますし、urlを引数として関数にまとめるなら function hoge (postUrl) { jQuery.ajax({ type: "POST", url: postUrl, data: { 'aaaaa':'あああああああああああ', 'bbbbb':'いいいいいいいいいいいいいいいい', 'ccccc':'うううううううううううううううううううう', 'ddddd':'えええええええええええええええええ' } }); } という関数を用意して hoge("/hoge.php"); hoge("/test.php"); って感じで呼び出す方法もあります。
いまから作るならJavaScriptでいいんでない？ PHPはサーバ上で動かすものだから適さないというか無理。 あなたがどの程度の技量なのかわからないんだけど、完全なソースが欲しいの？ それともあたりがわかれば、そこから自分でつくっていけるの？
あれ、新しく質問立てたのか。 無理だよ。 何行目なんて取れない。
Webページ内全体というのが、1ページ(1つのHTML)のことを仰られているのでしたら、そのHTMLに以下のようなJavaScriptを埋め込めばカウントできると思います。 -- var html = document.getElementsByTagName('html')[0].innerHTML; var count = html.match(/りんご/g).length; alert("" + count); -- 任意のURLからページを取得してカウントしたいという要望でしたら、 PHPでHTMLを取得し、preg_match_allなど使えばカウントできると思います。
window.open( url, name [, features] )はJavaScriptでポップアップウィンドウを表示するための命令です。 https://developer.mozilla.org/ja/docs/Web/API/window.open url以外の引数は開いたウィンドウを制御する目的なので、 url直打ちでアクセスできるはずです。 ・・・ただ、そのページに書いてるのはwindow.openではないでしょう。 > open('ajax10544','iframe','/maaaaat.cfm?id=10544','ネーム''フィーチャー') 別のメソッドだと思います。 引数から察するに、ajaxで「'/maaaaat.cfm?id=10544'」にリクエストを送って 結果を「'iframe'」に反映する感じでしょうか？ なのでおそらくは「'/maaaaat.cfm?id=10544'」に対してリクエストを投げれば帰ってくると思います。 ただ、ajaxで投げてるとしたら、 リクエストヘッダにX-Requested-With: XMLHttpRequestをつけないと返却してくれないものもありますし、 SameOriginPolicyで引っかかる可能性もあります。 対象のページは「.cfm」なのでColdFusuionですかね。 動的サイトなのでCSRF対策用のTokenとかも必要になるかもしれません。 いずれにせよ、スクレイピングで取得しようとしても、 動的なサイトの多くは認証が必要になりますので、 その辺をクリアしないとVBAでは難しいと思います。
コードはよく読んでませんがif elseifなので通ってない可能性があります。elseを追加して試してみては。 width()の戻り値はintegerなのでparseIntは不要です。
chromeでやってみたら真ん中に移動したよ。
実装次第ですね～。 クライアント側がデータの変更を常に監視する（ポーリング）場合、クライアントが画面遷移したりブラウザ等実行環境を一度閉じてまた開いたりすると、当然受信待ち状態は解除されます。それを考慮して、クッキー等何らかの形でポーリング中であることを同期リクエスト毎に伝えて、それをトリガーとしてクライアント側から非同期通信の再開を行う、といった形になりますかね。 pub/subのような形とする場合、サーバ側でデータの変更を常に監視し、クライアント側はポーリング中である、ということを意識せず常に非同期通信するようにする。そして、データ変更をトリガーとしてサーバは必要なクライアントの非同期レスポンスにのみ結果を乗せる、といった形ですかね。こちらの場合なら、ユーザが画面遷移しようが関係なくなります。
回答します 全てjquery.validationEngine-ja.jsに確認ルールとエラーメッセージを登録すればできます 124行目あたりに // --- CUSTOM RULES -- Those are specific to the demos, they can be removed or changed to your likings という記述があるので、その中に追加します "ルール名": { //←validate[xx]の「xx」部分 // ルールの説明 "regex": チェックする内容, "alertText": "* 表示するメッセージ" }, > (1) 入力された文字が全角文字であること > 　　エラーメッセージ：全角文字で入力してください "zenkaku": { "regex": /^[０-９－ａ-ｚＡ-Ｚぁ-んァ-ー一-龠　]+$/, "alertText": "* 全角文字で入力してください" }, とりあえず「zenkaku」というルール名で、全角英数字とハイフン、ひらがな、カタカナ、漢字、全角空白を許しています(必要に応じて記号などを足すなり、JavaScriptにするなり替えてください) > (2) 入力された文字が全角カタカナであること > 　　エラーメッセージ：全角カタカナで入力してください "zkana": { "regex": /^[ァ-ー]+$/, "alertText": "* 全角カタカナで入力してください" }, 「zkana」というルール名でカナを許可しています(同様に改変してください) > (3) 項目１か項目２のどちらかに必ず入力があること > 　　エラーメッセージ：どちらかの項目に入力してください 「groupRequired[group name]」というルールが定義されています エラーメッセージは英語で定義されているので、「alertText」の内容を書き換えれば使えます。 「group name」で同一の組み合わせとなるので、これを「grp1」、「grp2」…と複数作れば、複数の組み合わせを作ることができます
JavaScriptが --> を解釈しないように // を用いてコメントアウトする手法が昔は取られていたので、間違いではないですよ。 ただ、他の方が仰るように今は必ずしも必要ではないですかねー… 質問とは関係ありませんが、要素(script)や属性(type)は小文字で記述するのが一般的だと思います。
スクラッチを動かした時のコールバック関数内で、percentが60より大きくなった場合にアラートを出して遷移という感じでいけると思います。 scratchMove : function(e, percent){ if(percent > 60) { alert('おめでとう'); location.href = ''; } }
＞　return Math.PI * this.radius * this.radius; ＞　上記のreturn で値を返していると思うのですが、これは間違っているということでしょうか？ それは、Circle という関数の中の area という変数に入っている関数がreturnしています。 area を実行する処理はどこにも書かれていないので実行されません。 Circle 内の処理を以下のようにすると値が返って来ると思います。 function Circle (radius) { this.radius = radius; this.area = function () { return Math.PI * this.radius * this.radius; }; // define a perimeter method here this.perimeter=function(){ return Math.PI * this.radius *2 }; return this.area(); };
anythingSliderのオプションにはランダム再生はなさそうです。 http://www.fsfield.info/develop/javascript/011/ ランダム再生が可能なプラグインに切り替えてみるのはどうでしょう？ http://on-ze.com/archives/409 http://www.webdesignleaves.com/wp/jquery/843/
＞　質問３についてですが、friends[key].firstNameが何を表しているのか分からないです。 ＞　例えば、friends.fistNameではだめなんですか？ friends には「steve」と「bill」の2つのオブジェクトが入っていますが、「fistName」というプロパティは入っていないので「friends.fistName」は存在していません（undefined になります）。 friends の中の steve の fistName、friends の中の bill の fistName をそれぞれ取り出したいのだからfriends["steve"].firstName、friends["bill"].firstNameを指定しなければいけません。 for (var key in friends) で key に「steve」と「bill」を順に入れているので friends[key].firstName で目的の値を取り出せるのです。
今回のあなたのコードを実行しても、 「OK」も「else」も絶対に表示されません。 どちらかを表示させるためには 「nap();」と実行する部分が必要です。 また「nap();」と実行する部分を加えただけのコードであれば 「OK」が表示されます。 ですので、「else」を表示されたのであれば、「nap();」 と実行する部分があり、かつそれ以外にも異なる部分があるはずです。 しかし、あなたが実際に実行したコードが質問のコードと どこがどう違うのかはあなたにしか分かりません。 今回の限らず昨日の質問もそうでしたので、あなたは実際に実行したコードと 質問する際のコードで異なるものを使うクセがあるように思います。 質問が間違っていれば適切な回答は得られにくくなります。 質問をする際には、実際に実行したものを使うようにしたほうがいいですよ。
「下記のようになり」の「下記」の指し示す内容が存在しないので、 よく分かりませんが、単に毎回2を足していることが問題なのでしょう。 普通にこう書けばいいのではないでしょうか。 for (var i = 0; i < 3; i++) { console.log("it" + i); };
間違ってます。 Math.random() は、0以上1未満の数を返します。これを5倍するので、0以上5未満になり、さらに1を足すので、1以上6未満の数になります。これのMath.floorなので、1から5ですね。 randomは1を返さないので、最後の答えが6になることはありません。
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/search searchは正規表現でマッチを行うので?はエスケープする必要があります。 'abcd?efg'.search('abcd\\?e') https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf indexOfというのもあります。 こちらは、文字列マッチなのでエスケープする必要ありません。
元のtrim関数はすべての空白を削除していますが、削除するのが前後の空白でよければそれで良いです。 回答したものに変更してください。 (元の処理ではこうなっている：" a b c "→"abc") // 私なら以下のようにします。 function trim(nameTXT) { 　　return nameTXT.replace(/^[\s　]+|[\s　]+$/g, ""); } function check() { 　var nameTXT = document.formMerchandise.name.value || ""; 　nameText = trim(nameText); // 前後の空白除去 　if(nameTect === ""){ 　　alert("商品名を入力してください"); 　　document.formMerchandise.name.focus(); 　　return false; 　} 　if(nameTXT.length > 25){ 　　alert("商品名は25文字までです"); 　　document.formMerchandise.name.focus(); 　　return false; 　} 　document.formMerchandise.name.value = nameText;　// 空白を除去したものを入れなおす 　return true; } // 半角空白はつぶれるので、インデントは全角空白を使っています、コピペする場合はインデントの全角を半角に変えてください
jQueryは、JavaScriptで書かれたプログラムです。 JavaScript：ブラウザ上で動く言語 jQuery：よく使われる機能を簡単に使えるようにあらかじめ定義されたJavScript関数群
まず、言語はjavaではなくjavascriptなので間違わないようにしましょう。 （javaとjavascriptは別物です） (1)枠線の色を変えたい style.borderColor = "#FF0000"; (2)枠線の太さを変えたい style.borderWidth = "10px"; (3)枠線内（ボックス）を一定の時間で、任意の色で点滅させたい setInterval と clearIntervalについて調べてみると良いと思います
document.getElementById("selfile").onchange=function(){ var r=new FileReader(); r.onload=function(e){ Img.src=e.target.result; Img.onload=function(){ ConMode.drawImage(this,-ImgWidth/2,-ImgHeight/2,ImgWidth,ImgHeight); } } r.readAsDataURL(this.files[0]); }; とりあえず選択したローカルファイルをキャンバスに描画するコード これでやりたいことの具材はそろうはず 上下左右の移動については今書いてるコードで やってることの範囲でできるだろうからあんまり言いません ただ、拡大縮小も移動も、画像一枚の表示しかしないcanvasでなら translate()とscale()でやったほうがスマートだろうなとは思います 全面クリアが面倒にはなりますが
Delete()を呼んでる処理はどうなってるの？ <input type="submit" onclick="Delete()"> とかやってるなら、飛んでいくよ。 <form onsubmit="return Delete();">とか <input type="button" onclick="Delete();">にしないとじゃない？
関数にしている理由は『色を変える条件が同じ』だと思ったからです 関数にする事で条件を後で変更する場合１ヶ所の修正ですみます それぞれで条件が違う場合、関数にする必要はありません。 以下のように修正してください var ans1 = keisan1(d1.value, d2.value); var calc1 = document.fk.calc1; calc1.value = ans1; // changeColor(calc1, ans1);　// これをやめる 　　if(ans1 >= 100) calc1.style.color = 'blue'; 　　if(ans1 >= 200) calc1.style.color = 'red'; // calc2も3も同じような感じで
>ラジオボックス 一般にはラジオボタン、チェックボックスですね。 HTMLとJavaScriptは見通しを良くするために記述を分けることをお勧めします。 すわなち、onclickなどは書かずに$(セレクタ).on('click', function(){}); などと書くべきです。 // name属性がaのラジオボタンのチェッ変更時 $('[name="a"]').change(function(){ //$(this).val()はチェックしたラジオボタンのvalue $("#text1").val($(this).val()); }); 動作確認していませんが、このような感じかと。
http://egapool.hatenablog.com/entry/2013/12/11/230457 これでいいのでは？ >PHPのみですと、postで渡すリファラー、トークン照合などあると思うのですが、 Jqueryを使おうが何も変わらないと思うのですが？ 何が違うのでしょうか。
res += '伝票発行を行います。伝票種を選択してください。' + '<form method="post" action="/printSrip" onsubmit="return choiseFormId();">' // ★変更 + '<select name="choiseSlipName">' + '<option value="111">佐川急便</option>' + '<option value="112">佐川急便　個数タグ</option>' + '<option value="113">ヤマト運輸</option>' + '<option value="114">ヤマト運輸　コレクト</option>' + '</select>' + '<input type="hidden" name="slipFormId" />' // ★追加 + ' <input type="hidden" value="伝票発行" /> // ★追加 + '<input type="submit" value="選択" >'　// ★変更 + '<form>'; //★の部分を変更(追加)すればよいのではないでしょうか？（変更２箇所・追加２箇所） 伝票発行の選択時にsubmitしたいわけですよね？ でしたら、その場所でsubmitすれば良いだけなのではないでしょうか？ それとも何か戻さないといけない理由があるのでしょうか？
＞が080-1234などにもヒットしてしまうのかを教えていただけると嬉しいです 08-0-1234 の最初のハイフンを省略したものと解釈されてます。
ポップアップウィンドウからは、opener(window.opener)プロパティを使って親ウィンドウを操作できます。 参考URLにもありますが、ポップアップウィンドウのリンククリックで以下のような関数を呼び出すようにすれば、親ウィンドウのページが切り替わるかと思います。 動作確認まではしておりませんので、一部誤りなどあるかもしれません。 -------------------------------------------- function closeAndRefresh(url){ opener.location.href = url; window.close(); // or self.close(); } --------------------------------------------
独自で使うフィールドとして、playerに追加しているようです。 ベースはJavascriptなので、変数の使用には宣言が必要ないのです。 独自の使い方なので、自分で読み解くしかないです。 読み解いた方によると http://www.ideaxidea.com/archives/2011/04/rpg_3.html http://wise9.github.io/enchant.js/doc/plugins/ja/symbols/enchant.Sprite.html
// id=year(id名がyearに入る)のvalue値を10進数で数値型に変換 var y = parseInt(document.getElementById(year).value,10); // 上記と同様に var m = parseInt(document.getElementById(month).value,10); // 閏年判定　特に説明はいらないかと。 if (2 == m && (y % 400 == 0 || (y % 4 == 0 && y % 100 != 0))) { //月の最終日の変数 // こっちがうるう年だと判定された場合 // 最終日を29日にする var last = 29; } else { // うるう年じゃないと判定された場合は // 配列[月-1のインデックス]の値を最大とする // 例えばうるう年じゃない2月の場合は lastday[2-1]となるのでindex=1の28が選ばれる var lastday = new Array(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31); last = lastday[m-1]; } // 要素取得と初期化 // 日付用のプルダウンの中身をすべてクリア var obj = document.getElementById(day); obj.length = 0; // 日の要素を追加 for (var i = 0; i < last; i++) { // 日付用のプルダウンに1日～最大日数までのoptionを追加していく obj.options[obj.length++] = new Option(i + 1, i + 1); }
id は画面の要素1つに対して１つ それはラジオボタンも同じ なので、 ・ラジオボタンのidは全部別のものにする ・JavaScriptで取得するときはgetElementsByNameを使う こんな感じ？
こんな感じでしょうか。出来なくはないけど処理の意図はハテナです。 $(function(){ //キャッシュする var $el = $('.target'); // 元あるやつは削除 $('.target').remove(); // headerクラスと同じ番目のtargetクラスをheaderクラス内に記述 $('.header').each(function(index){ $(this).html($el.eq(index).prop('outerHTML')); }); });
HTML5のほうが速いようですね。 以下の記事では、速度面でHTML5を推奨しています。 http://bazubu.com/how-to-add-facebook-likebox-23418.html
チェックしたチェックボックスの数とチェックボックスの総数が 同じかどうかというフラグで判断すると記述が短くて済みます。 $(".foo").click(function(){ var disabled_flg = $(".foo:checked").length !== $(".foo").length; $(".bar").prop("disabled", disabled_flg); });
return false と書くとその要素処理自体しないと思います。 最後の要素は削除せずに unwrapだけしたいのであれば、 //「name='tblList'」のテーブルが残り1つの場合 if($("table[name='tblList']").length == 1) { // tableの親要素「div#wrap1」を除去 $(this).unwrap(); } else { // 「name='tblList'」のテーブルを削除 $(this).remove(); } とかけばいいんじゃないですか？
文字列をつなぐのは、+ です。 var url = 'http://yahoo.co.jp'; var str = queryselector('[href*="' + url + '"]');
すごい単純にやるなら、 ・JSの4行目「$('#slide_panel').width(btn_DefW);」をトル　＜　開いた状態に ・CSS「#slide_panel」の4行目「right:0;」を「left:0;」にする　＜　左始点に だけでいけると思います。 --- leftでやってスライドさせるとかでもいいのかなー 「right:0;」を「left:0;」にするをした上で、 <script type="text/javascript"> $(document).ready(function(){ //隠れたときのleftの値 var panel_DefLeft= -200 $('.menu_off').click(function() { var left; if($("#slide_panel").position().left < 0){ left = 0; }else{ left = panel_DefLeft; } $("#slide_panel").animate({left: left}, "slow", function(){ $('.menu_off').toggleClass('active'); } ); }); }); </script>
後々見直すためにソースとしてはスペースやインデントを入れて記述。 リリース時には難読化やファイル容量削減のため、不要なスペースや改行、コメントは除去。 って感じじゃないでしょうか。
単にそとにだせばそうなるんじゃないでしょうか？ var flg; flg = 0; $(window).on('scroll',function(){
javascriptにおいて$はただの文字です。ですので変数名や関数名にも使えます。 jQueryという大変優秀で人気なライブラリがあります。 jQueryを使う時はjQuery() という感じで関数名として使いますが、省略形として$()と書くことができます。 $functionの$は$functionがjQueryオブジェクトですよというのをわかりやすくするために使われているだけでただの文字です。 $('#hoge')の$は関数名として使われていて、#hogeがセレクタと呼ばれるものです。 document.getElementById('hoge')に近いです。
まず、c2.innerHTML に入れているinputタグのidがユニーク値では無いのでHTMLとしてNG。 datepicker をセットしている「$('datepicker'+count)」というセレクタは「'datepicker'+count」タグと言う意味になっているので間違い。 $('.datepicker'+count) か $('#datepicker'+count) にしなきゃいけないので、inputタグのidがユニークに成るようにして $('#datepicker'+count) のような指定にするのがいいと思います。
phpで配列内に結果の配列を入れてるのと コンソールで0:objectになってるので js側でdata[0].time で取れるんじゃないかな。
そのような使い方はできません。 2のほうはデフォルト値を設定したいようですね。 カスタムフィールドテンプレートに関しては詳しくありませんが、 下記の記事によると出力の設定時にdefault値を設定できるようですよ。 http://kotori-blog.com/wordpress/customfieldtemplate/ また、addClassはおそらくスタイルを当てるためかと思いますが、 CSSのセレクタをうまく設定すればいいのではと思います。
#1の読み込んじゃダメってのは乱暴 れっきとしたCDNというサービスを利用している。 何ら悪いことじゃない。 説明の一例 http://bost.bostudio.co.jp/2013/03/jquery-on-cdn.html
他のページからページ内のJavaScriptコードを書き換えることは出来ません。 ところで、「ご丁寧にサンプルコードを惜しげもなくご自身の時間を裂いて作って提供されている回答者」はお望みではなかったのでは？ # Re: hage_1000さん
onreadystatechange イベントは xhr.send(null) 呼び出し後でなければ発火しない為、(2) は必ず、(1) の後に呼び出されます。 ローカル変数は通常、関数処理後にGCが開放しますが、クロージャが発生している場合はその限りではありません。 xhr のHTTPリクエストが完了した時に xhr は役目を終える為、実装が不要と判断した任意のタイミングでGCがxhrを開放します(実装依存)。 # Re: Mol10keさん
最初にも記載しましたが、選択色を覚えておいてhair関数内で対応する色の関数を呼べば良いのではないでしょうか？ 具体的には以下でどうでしょう var currentColor = 0; // currentIndexの下についか ----- black関数内でcurrentColor = 0; brown関数内でcurrentColor = 1; red関数内でcurrentColor = 2; ----- image2関数のctx.drawImage(img, 0, 0);の次の行に switch(currentColor){ case 0: black(); case 1: brown(); case 2: red(); }
#1さんのご回答の通り PHPはサーバーでの事前処理、JavaScriptはクライアント（ブラウザ）での処理です。 よって、コーディングの順番に実行される訳ではなく、 また同じメモリ（同じ変数）にアクセスできる訳ではありません。 なので、ブラウザで実行するJavaScript内でclicked = obj.id;　　としても PHPでそれをそのまま、if($i===$clicked)なんていうように　使うことはできません。 ★もし、サーバー側でないと処理できない内容であるなら １） function pusharea(obj)の中で、jQueryの$.ajax　でパラメータにobj.idを渡して Ajax手法で画面の推移とは非同期にPHPを実行し、その戻ってきた値で 動的にHTMLを変更するというが簡単だと思います。 ★Ajax的に画面を随時更新したいのではなく、別途 次の画面に進むための submitボタンなりがあって、そのときにクリックしていた場所を一緒に送りたい　ということなら ２） function pusharea(obj)　のなかで、document.cookie = "clicked="+obj.id +";"の ようにしてcookieに値をセットしておけば、 それをPHP側で $_COOKIE["clicked"] で取り出すことができます。 ３） 大きめのデータの場合、cookieは向きませんので、 PHPに送信するためのform内にHiddenデータを JavaScriptで追加するという手法もあります。 この場合、PHP側では $_GET[なんちゃら] か$_POST[なんちゃら]で取り出すことになります。 ４） 項目が多いなら、Ajaxとセッションを使ったほうが簡単かもしれません。 （Ajaxは非同期なので復数のAjaxの実行が並行することがあるので 　サーバー側でセッションファイルをロックしないようにするテクニックが必要なようです） ５） 画像なりテキストをクリックした場所でなくて、 チェックボタンなり　ラジオボタンなりを　設置しほうが、利用する側にも どれを選択しているかが、わかりやすいかも。 ★サーバー側のPHPでないと処理できない内容でないなら ６） PHPでなく、JavaScriptで作るだけ。 ということになるかと。
check()メソッドの最初に document.form.four.value = ""; を入れてみてください。 ※変数を宣言するときは最初の変数名の前にvarをつけましょう。 ex) var len = document.form.three.options.length;
>全部callされる事になります。 functionの定義をしているだけで、実行されません >例えば、search.loginだけを呼び出したい。 var API = new GETAPI(); API.login(); で呼べます。
基本的には以下の様な感じでOKなはず。 ━ ココから ━━━━━━━━━━━━━━━━━━━━━━━━ <div>今日は<a href="./test.html" id="my-button">？曜日</a>です。<div> <script type="text/javascript" defer="defer"> /*<![CDATA[*/ var my_date = new Date(); //現在の日付を取得 var my_weekday_dat = my_date.getDay(); //取得された日付データから曜日を取得 var my_weekday_str = "X曜日"; if ( my_weekday_dat == 0 ){ my_weekday_dat = "sun"; my_weekday_str = "日曜日"; } if ( my_weekday_dat == 1 ){ my_weekday_dat = "mon"; my_weekday_str = "月曜日"; } else if ( my_weekday_dat == 2 ){ my_weekday_dat = "tue"; my_weekday_str = "火曜日"; } else if ( my_weekday_dat == 3 ){ my_weekday_dat = "wen"; my_weekday_str = "水曜日"; } else if ( my_weekday_dat == 4 ){ my_weekday_dat = "thu"; my_weekday_str = "木曜日"; } else if ( my_weekday_dat == 5 ){ my_weekday_dat = "fri"; my_weekday_str = "金曜日"; } else if ( my_weekday_dat == 6 ){ my_weekday_dat = "sat"; my_weekday_str = "土曜日"; } else { alert("データが異常です."); } if ( document.getElementById("my-button") ) { my_button = document.getElementById("my-button"); my_button.href = "./"+ my_weekday_dat +".html"; my_button.innerHTML = my_weekday_str; } else { alert("データが異常です."); } /*]]>*/ </script> ━ ココまで ━━━━━━━━━━━━━━━━━━━━━━━━ P.S. Javascriptで日付を操作するには var foo = new Date(); の形で現在の日付を取得し、それを必要に応じて加工して使うと言う形が基本になります。この場合、注意点としては「曜日のデータは "0～6" の数字で返される」と言う点です。例文では文字列に変換してますが、最初からファイル名を「0.html」などとして置けばそのまま代入してもOKです。
サンプルを作りました。 参考にどうぞ。 src配列に適当な画像パスを入れてください。 (jsfiddle : http://jsfiddle.net/3wnwztf1/ ) window.onload = function() { 　image1(); }; var src = [ 　'test1.jpg', 　'test2.jpg', 　'test3.jpg' ]; var currentIndex = 0; var currentImage; function image1() { 　var img = currentImage = new Image(); 　img.onload = function() { 　　if(currentImage === img){ 　　　var cnvs = document.getElementById('canvas1'); 　　　var ctx = cnvs.getContext('2d'); 　　　ctx.clearRect(0, 0, cnvs.offsetWidth, cnvs.offsetHeight); 　　　ctx.drawImage(img, 0, 0); 　　} 　}; 　 　img.src = src[currentIndex]; } window.back = function() { 　currentIndex = (currentIndex - 1 + src.length) % src.length; 　image1(); } window.foward = function() { 　currentIndex = (currentIndex + 1) % src.length; 　image1(); }
01function A(){ 02　var x = 0; 03 04　function B(){ 05　　　var x = 2; 06　　　console.log(x); 07　} 08 09　function C(){ 10　　　console.log(x); 11　} 12 13　x = 1; 14　B(); 15　C(); 16　x = 3; 17　B(); 18　C(); 19} B/C関数を定義・・・4行目.9行目 B/C関数を実行・・・14行目.15行目.17行目.18行目 さて、各関数のxは何が表示されるでしょうか？ B関数は、A関数のxとはB関数のxを使用します。 対してC関数はxの宣言が無いので、A関数のxを使用します。 その為 14行目のB関数は2を表示 15行目のC関数は1を表示(13行目で1を入れている) 17行目のB関数は2を表示 18行目のC関数は3を表示(16行目で3を入れている) これを理解したら、質問の内容に戻って(2)を少し分解してみましょう。 $(function){ 　function A(index, element){ 　　var td=$(elem); 　　function B1(){ td.css('background-color','red'); } 　　function B2(){ td.css('background-color','');} 　　td.mouseover(B1); 　　td.mouseout(B2); 　} 　 　$('td').each(A); }; B1/B2関数のtdはA関数のtdが使われるのは理解できると思います。 A関数は$.each関数で何度も実行されますが、 B1/B2関数で使われるtdは各A関数が実行した時のtdなので、正しく動くわけです。 eachではなく、以下のようにA関数を実行したと考えると分かりやすいかもしれません。 var $td = $('td'); A(0, $td[0]); A(1, $td[1]);
よく分からないわね 具体的に何をしたらだめだったというの？
<a href="#aaa" onclick="x = 100;"> ただし、IE で試したところ、var での変数宣言はできませんでした。
回答がないみたいなので、想像での回答を… 通常で考えればそのようにスクリプトが作成されているだけなので、それを修正すればよいだけと思いますが、実際のスクリプトがどのような構成になっているのかまったく不明なので、具体的なことはほとんど言えません。 想像では、スクリプトは大きく分けて、 　1）地図を表示する部分 　2）検索窓の値を読んで、ルートを表示する部分 とからなっていると思います。 さらに想像では、初期の表示で上記の1）2）が連続して処理されるようになっているのではないかと思われます。 対処法としては、初期表示では1）のみを実行するようにすればよさそう。 2）の部分は、想像では 　var searchRoute = function(){～～～} とか 　function searchRoute(){～～～} などで定義されていると思います。 1）の部分はどうなっているか不明ですが、その最後で 　searchRoute(); みたいにして、2）の処理を呼び出しているのではないかと想像します。 なので、その処理を行わなければ良いのではないかな・・・ ※読んでお分かりのように、想像に次ぐ想像に基づいた回答ですので、当たるも八卦です。
他の HTML がわからないので適当に付け加えて開発者ツールで確認してみたのですが、moveLayerTo() の if (_dom == 1) { 　document.getElementById(layerName).style.left = x + scrollX; 　document.getElementById(layerName).style.top = y + scrollY; } で scrollX は定義されていません と表示されます。というか、F12 を押すと開発者ツールが使えるので何らかの問題が起きたならこれで確認しましょう。 あと、透過度の設定を DX フィルターを使って行っているようですが、それも IE10 から使えなくなっています。 https://msdn.microsoft.com/ja-jp/library/ie/hh801215(v=vs.85).aspx IE10 以降ではかわりに CSS の opacity を使ってください。 https://developer.mozilla.org/ja/docs/Web/CSS/opacity
ためしてませんが for (var i=0; i<dataLengh; i++) { の部分で0をn(もちろんdataLengthより小さい)に変えれば foi(var i = n; i<dataLengh; i++) { n件目から取れるとおもいます。
こんにちは。 ＞colorboxで非表示になっていたdivが表示になったときに地図をきちんと ＞読み込まれるようにするにはどのようにすればよいのでしょうか？ なんか誤解がありそうに感じますが・・・ ご提示のHTMLの<div id='inline_content'>の要素をcolorboxで直接に表示/非表示の制御ってできましたっけ？（見た目で同様のものが見えるとかではなく、その要素の表示/非表示） 記憶なので正確ではありませんが、colorboxは表示用のbox（div要素等）を別に設定していて、そちらの内容を書き換えたり、サイズを変更したりしていたと思いますが？ 直接の回答にはならないかもしれませんが、個々の部分に対して・・・ ＞非表示にしていたdivにgooglemapを読み込んでいるので～ それはその通りなのですが、読み込ませるには非表示にする方法を変えれば可能です。 display:noneを用いずに、 ・visibility:hiddenで非表示にする ・リバースマージン等で画面外に表示（見えないので非表示状態） ・他の要素の下に入れて隠す（これも見えない） ・透明度を0にして見えなくする などの方法をとれば、見えない状態でもgoogle mapを読み込むことが可能だったと記憶しています。 ＞～～のあたりも無理な記述になっています。 jQueryを用いているようですので、bodyの中に無理に入れなくても、document readyで実行させればよろしいかと思います。 通常よく用いられている方法ですね。 　$(function(){ initialize(); }); colorboxの枠内にmapを表示させるのは少し面倒かも知れません。 一番簡単そうなのは、colorboxの枠を先に表示させてからcolorboxの表示用要素に直接google mapを表示させるという方法でしょうか？ colorbox側にイベント用のフックが用意されているようですので、loadやcompleteのタイミングでmapを表示させるという方法になるかと思います。 ただし、これだと実際に表示されるまでに少しだけ時間がかかる可能性がありますが、表示内容をajaxで読み込む場合と似たようなものと言えるのでは・・・。 全体像がよくわからないので何をなさりたいのかちゃんと把握できてませんが、『リンクをクリックしたらmapがフェードインする』というようなものでしたら、フェードの部分だけ自作してあげればmapを先行して読み込んでおくことも可能と思います。 でも、jQueryのfadeIn/Outをそのまま利用したりすると、非表示時にdisplay:noneになりますので注意が必要かもしれません。
そもそもurlというメソッドはjQueryにありません。 おそらく、その書き方からすると、jQuery-URL-Parserというプラグインを使うのではと思います。 http://www.webopixel.net/javascript/416.html そのプラグインを読み込んだらこんな感じで書けば良いと思います。 $(function() { var catg = $.url().param(”catg”), load_url = "http://www.test.com/" + catg; // load_url 内のdummy_idブロック内の要素を取得 $('#sample').load(load + ' #dummy_id'); }); javascriptの開発にはfirefoxのfirebugかchromeの開発者ツールのコンソールを見るとよいです。
読み込む場所はhead・bodyのどちらでもOKですよ。 <!-- ～ -->は、HTMLタグ内ではコメントアウトとして使用されますが、 条件付きコメントというものもあります。 http://ja.wikipedia.org/wiki/%E6%9D%A1%E4%BB%B6%E4%BB%98%E3%81%8D%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88 Javascriptが動作しない場合は、まずブラウザのデベロッパーツールで確認してみて下さい。 エラー発生時にはエラー情報がコンソールに表示されるのでそれでデバッグできます。
<input type=checkbox> に onclick は不要 関数 remove_row に必要な以下の処理が不足 * 表 table1 内の全ての行を取り出す * 行内の checkbox が checked となっている対象行のみを抽出 * 対象の行のみ繰り返しで削除処理実行 関数 remove_row の引数は this ではなく "table1" が適切 おまけに 要素の属性 id が同じ値で複数存在するのは大変よろしくない。 解決案として以下のどちらかをオススメします * class と name だけで処理する * id=gyoumuname_1 などと数値を振る
要は『HTML で入力規則を設定しているから』『Javascript で入力 チェックしているから』と言って、『サーバ側でのPHPでのデータ 受け取り時の入力チェック』を省略するのはダメですよ、ということ です。 HTMLの入力規則や Javascript の入力チェックは、質問者さんが質問 文に書かれているような「抜け道」があるため、これだけに頼るのは セキュリティ上大変危険です。必ずサーバ側 (PHP) で入力チェックを 実施して、チェック漏れが発生しないようにしなくてはなりません。 チェック漏れさえ発生しないようにシステムを作れば、ボタンなどを 使用するのは問題ありません。
『同時に』というのが、どのレベルでの同時性を求めているの かがわかりませんが、単純に考えれば if 文の中にふたつとも 入れれば良いのでは？ if (str == 1) { // Aに関する処理 document.form.A.style.visibility = "visible"; for (i=0; i<menuItem[0].length; i++) { document.form.A.options[i] = new Option(menuItem[0][i],menuItem[0][i]); } // Bに関する処理 document.form.B.style.visibility = "visible"; for (i=0; i<menuItem[1].length; i++) { document.form.B.options[i] = new Option(menuItem[1][i],menuItem[1][i]); } ｝
同じ JavaScript であっても、ブラウザ上での実行とローカルでの実行とでは実行環境が全く異なり、片方で簡単なことがもう片方ではどうあがいてもできないというケースが多々あります。 hoge.js の内容にもよりますが、その hoge.js のうち CasperJS および PhantomJS に依存している部分を削除する方向で書き換えなくてはならないでしょう。また、ブラウザからではセキュリティの観点からローカルにあるファイルへのアクセスに制約がありますので、そのようなスクリプトは大幅な設計変更が必要になると思われます。 もっと簡単に言いましょうか? 「できません」
wordpressはPHPで作られているので、wordpressを使ってサイトを作るのであればPHPを知っている必要がありますね。 あなたが特定のサービスを提供している会社でプログラムを書くとか、個人の趣味でプログラムを書くのであれば特定の言語だけ学んでもいいでしょうが、サイト開発を請け負うような仕事の場合はプロジェクト毎に要件が異なるので、どんな言語でも使いこなせるよう勉強した方がいいと思います。
通常のブラウザはリサイズすればレイアウトし直すと思いますので、何をなさりたいのかよくわかりませんが… HTMLのload時に条件判定でdisp()が実行されるような状態の時は無限ループになる可能性があります。 個々のブラウザの挙動を確認してはいませんが、location.href = location.href;でリロードされるようなブラウザであれば、ロードする毎に再ロードすることになるのでは？ 簡略化すれば以下のスクリプトとほぼ同じになるので… 　window.onload = disp; load時のイベント処理として実行するのをやめれば、とりあえず無限ループにはならないと思いますが？（リサイズ時のみ動作するようにするという意味です） しかしながら、そもそもが再読み込みする必要が無いのではないかと思いますけれど…
<!DOCTYPE html> <script>(function(){_=0; _ ; var E = function(p,n){return p.appendChild(document.createElement(n))}; _ ; var R = function(d,s){for (var i in s)d[i]=s[i]; return d}; _ ; function addRow() { _ ; _ ; var tbody = document.querySelector('#table1 tbody'); _ ; _ ; var tr = E(tbody,'tr'); _ ; _ ; var td = E(tr, 'td'); _ ; _ ; R(E(td, 'input'), {type:'checkbox', name:'d', checked:false}); _ ; _ ; R(E(td, 'input'), {type:'text', name:'title', value:''}); _ ; _ ; R(E(E(tr, 'td'), 'input'), {type:'text', name:'content', value:''}); _ ; _ ; R(E(E(tr, 'td'), 'input'), {type:'text', name:'status', value:''}); _ ; } _ ; function delRows() { _ ; _ ; var rows = document.querySelectorAll('#table1 tbody tr'); _ ; _ ; Array.prototype.slice.apply(rows).filter(function(row){ _ ; _ ; _ ; return row.querySelector('input[name="d"]').checked; _ ; _ ; }).forEach(function(row){ _ ; _ ; _ ; row.parentNode.removeChild(row); _ ; _ ; }); _ ; } _ ; addEventListener('click', function(ev){ _ ; _ ; var b = ev.target; _ ; _ ; if (!b || b.tagName != 'BUTTON') return; _ ; _ ; if (b.name == 'table1add') addRow(); else if(b.name == 'table1del') delRows(); _ ; }, false); })()</script> <table id=table1 border> <thead><tr><th>title<th>content<th>status <tbody> </table> <button type=button name=table1add>add 1 line</button> <button type=button name=table1del>delete checked lines</button>
ANo2です。　こんにちは。 ＞他ページからのアクセスで、指定したパネルを開いた状態にすることは可能でしょうか？ 原理的には可能と思います。 考え方や方法は検索すればたくさん見つかると思いますが、ご提示のHTMLソースの場合、各H3.targetあるいはDIV.contentの要素に個別の識別子が設定されていないので、通常よく用いられている方法は使えないですね。 ソースを修正するか別の方法で行うかということになりそうです。 別の方法の案の一例として… 「location.hashで指定する内容はアコーディオンの順番を示す」というようなルールを決めて、#menu0、#menu1・・・などという指定の仕方にしておくなら、そこから0、1・・・部分を取得して、それに対応するh3要素をクリックしてあげればよくなります。 この処理をonload時に行うようにしておけば良いでしょう。 （hashの指定がなければ0を指定されたことにする） スクリプトをOFFにしている閲覧者に対して、できるだけ機能を損なわないようにすることを考えるなら、通常のページ内リンクが効くように、HTML内に識別子を設けておくほうがよろしいかと思います。
confirm の戻り値を参照せずに if(true) としているので、 かならず「ありがとうございます」になってしまいます。 正しくは var confirmResult = confirm(...); if (confirmResult) { ... } else { ... } 余談ではありますが JavaScript にて null/undefined/0/'' の比較は、面倒くさい問題が起きがちです。 今回の範囲では大丈夫なのですが、できれば以下の様にすることをオススメします。 if (num === null) { // 厳格に null と判定する ... } else if (num === '') { // 厳格に 空の文字列と判定する ... } else { ... }
たとえばこんなかんじ <script> var list={ "---":["",""] ,"aaa":["111","xxx"] ,"bbb":["222","yyy"] ,"ccc":["333","zzz"] }; function select2textbox(obj){ var f=obj.form; if(typeof list[obj.value]!=="undefined"){ f.elements["t1"].value=list[obj.value][0]; f.elements["t2"].value=list[obj.value][1]; } } </script> <form> s1:<select name="s1" onchange="select2textbox(this)"> <option value="---">---</option> <option value="aaa">aaa</option> <option value="bbb">bbb</option> <option value="ccc">ccc</option> </select> </div> <div>t1:<input type="text" name="t1" value=""></div> <div>t2:<input type="text" name="t2" value=""></div> </form>
ページを戻る場合はイレギュラーな処理なのでブラウザごとに 対応が違うようです。 どうしてもということであればクッキーなどにデータを保存しておき ロード時にクッキーの値をみて表示を調整するのが妥当ですが 「戻れない」と考える方が合理的です。
window.onload = function() { ins( 'content1' ); ins( 'content2' ); } もしくは window.addEventListener('load', function() {ins( 'content1' );}, false); window.addEventListener('load', function() {ins( 'content2' );}, false);
＞一人だけたまにCookieが取得できない そのくらいの頻度であれば、そのユーザーのブラウザに問題があると 考えたほうがよいかも 別のブラウザを使ってもらうか、ブラウザをなんらかの方法で初期設定状態に するなどで対処するのが妥当です。 またクッキー自体はブラウザ側に保存されるものですので 不具合があったときにブラウザでクッキーを消す処理をすれば 一時しのぎになるかもしれません。
ins( 'here' ); をオンロードイベントで実行すれば動作します。 <html> <head> <script> function ins( id ) { var output = document.createElement( 'span' ); output.className = 'ins'; output.innerHTML = '<p>content</p>'; var element = document.getElementById( id ); element.appendChild( output ); } window.onload = function() { ins( 'here' ); } </script> </head> <body> <div id="here"></div> </body> </html>
思った結果ってのがなんだかわからないし、どういった結果になってるか知らないけど output.innerHTML = <p>content</p>; これが転記ミスじゃなかったら output.innerHTML = '<p>content</p>'; こうしないとエラーだよね。
そのドメイン名でwhois検索すると、有限会社シェルウェアが所有しているようです。 http://whois.ansi.co.jp/swcs.jp ここは検索順位をチェックするツールを開発している会社のようですね。 このツールを利用しているかどうか確認してみましょう。 http://seopro.jp/
<body onLoad="n()"> とするか、問題の <SELECT> 要素よりも下の位置に <script type="text/javascript">n();<script> と記載すれば良いかと思われます。 ※間違えたほうの質問は、回答が付く前に削除されることを 　お勧めします。
こんにちは こんなかんじですね。 HTMLボディ内の特定の位置にユニークなid名をつけたタグを置きます。 あとはscriptでそのid名のタグをgetElementById()で抽出して、テキストを置き換えます。 ※ブラウザがfirefoxの場合はテキストの置き換えに、innerTextでなく、textContentを使用します。 ------------------------------------ <html> <head> <title>test</title> <script type="text/javascript"> function user(){ var str = prompt("名前を入力してください。"); switch(str){ case "": str = "入力欄が空です。"; break; case null: str = "キャンセルされました。"; break; } document.getElementById("name").innerText=str; //document.getElementById("name").textContent=str; // firefoxの場合 } </script> </head> <body> <a onclick="user()">ここをクリックして名前を入力してください。</a><br> <hr> <!--ここのテキストを置き換えます。--> <span id="name">名前</span>さん<br> 入力ありがとうございます。 </body> </html>
こんばんは HTML5のオーディオタグを使う方法もありますが、 いろいろな場面で利用が出来る方法を紹介します。 但しあまりレスポンスはよくありません。 ＃セレクトボックスをフォームタグで囲みます。 ＃フォームタグに適当な名前を付けます。 ＃セレクトボックスにも名前を付けます。これでjavascriptでセレクトボックスの値を受け取れます。 ＃num=document.js.selct.selectedIndex;でセレクトボックスのインデックスを取得できます。 ＃<div id="snd" onclick="sound()">ボタン</div>でボタンを付けます。 ＃<div>タグですのでいろいろな形や色などを付ければボタンと同じになります。 ＃javascriptのなかに音源の名前を配列にしておきます。 ＃音源を鳴らす<embed>タグをまるごとDOMを使って書いてしまいます。 ＃書いた<embed>のsrcに取得したセレクトボックスのインデックスを使って配列の要素を入力します。 以下サンプルです。但し音源は5個しか用意してません。 <body> <form name="js"> <select name="selct"> <option value="">1</option> <option value="">2</option> <option value="">3</option> <option value="">4</option> <option value="">5</option> </select> <br> </form> <div id="snd" onclick="sound()">ボタン</div> <script type="text/javascript"> //セレクト番号の変数 var num; function sound() { // 音源を配列にする var ar=new Array("m1.mp3","m2.mp3","m3.mp3","m4.mp3","m5.mp3"); //セレクトボックスの値を取得 num=document.js.selct.selectedIndex; //embedタグをDOMで<div id="snd"に書き込む document.getElementById("snd").innerHTML= "<embed src='"+ar[num]+"' hidden=true autostart=true loop=false>"+"ボタン"; } </script> </body> 多分いろいろなブラウザに対応すると思います、実験はしてません。
ローカル変数：(1), (3), (5) グローバル変数：(2), (4), (6) > 関数の中は全てローカル変数になる のはあいにくながら JavaScript 以外の言語の話です。 JavaScript の場合は、以下の場合のみローカル変数となります。 （１）以下の二つをどちらも満たす。 　(a) 何らかの関数の中で定義されている。 　(b) var キーワードを付加して定義されている。 （２）関数の宣言時の引数。 あなたが番号を付けた変数は（２）ではありませんが、いずれも（１）-(a)を満たします。 したがって、（１）-(b)で言う var の有無でグローバルか否かが決まります。 ……「でも (1) と (2) は関数の外にありますよね」と思われましたか? 1 行目に function(){ という記述があって、その鍵括弧が閉じる前に (1) と (2) が定義されてます。つまりこれらはその一番大外の関数の中で定義されています。したがってこれらも（１）-(a)を十分満たしています。
『JavaScript圧縮の処理内容』、『圧縮に入れようとしている PHP記述の内容』によります。 1. JavaScript圧縮の処理内容 　JavaScript圧縮の処理が『JavaScript コード内の空白や改行 　を削除して文字数を減らす』処理であれば、後述の 2. の問題 　に抵触しなければ PHP記述があっても大丈夫です。 　JavaScript圧縮の処理が「難読化」や「エンコード」などの 　処理も実行している場合は、PHP記述が壊されるのでダメです。 　(PHPとして動かなくなりますので) 2. 圧縮に入れようとしているPHP記述の内容 　JavaScript圧縮は、対象文字列が「JavaScriptのコード」で 　あることが大前提です。従って、PHP記述を含んだコードが、 　そのまま JavaScript コードとして成立するか (PHP記述を 　含んだまま動かしても構文エラーにならないか) が鍵になるで 　しょう。 　質問者さんの例の場合は、PHP記述は ” で囲まれて文字列に 　なってるので、これは構文エラーになりません。なので圧縮 　できます。 　以下のような場合は、動かすと構文エラーになります。従って 　このようなPHP記述が記載されたコードは圧縮できません。 　<script> if (foo == <? PHP処理 ?>) {/*省略*/} </script>
if (n == "aaaa"){ // n に「aaaa」が入った場合の処理 } else if (n == "bbbb"){ // n に「bbbb」が入った場合の処理 } else if (n == "cccc"){ // n に「cccc」が入った場合の処理 } else { // n に「aaaa」、「bbbb」、「cccc」以外の不特定の文字列が入った場合の処理はここに書く }
実行時の画面解像度とか
（グローバルオブジェクト以外の）どの～ です グローバルオブジェクトに入っていると言っても、グローバルオブジェクトはwith文でやるようにEnvironment Recordが露出したようなものなので、グローバルに存在するからといって、グローバルオブジェクトに結びついているでしょというのは微妙です。 それを言うとあらゆる変数はJSではオブジェクト的なものに格納されていますからね。本質はそれが触れられるか、触れられないかの違いしかないです。 ＞特定のオブジェクトを参照すること無くとは、所謂メソッドというものはそうするけれど、単発の関数のevalは違うということでしょう。
ひとつは以下で十分かと function kakunin(frm){ flag = confirm("本当に削除しますか?"); return flag; } どうしてもいまの処理でいきたいなら onClick="void(kakunin(this.form));return false;" とするか formのonsubmitを常にreturn falseにするかですね
＞１個のテキストボックスに入力された文字列により、その後の１個の ＞セレクトメニューの選択肢を変更することってできるのでしょうか？ HTML構造とか条件がいまいちはっきりしませんが、できると思われます。 ＞当方、只今javascriptを勉強しており、条件式に苦戦しております。 とのことなので、苦戦なさっている条件分岐について、とりあえず思いつくものを… と言っても、ご質問の内容であれば普通に条件分岐すればよいだけですが・・・ テキストボックスの値が、変数textValeに取得できているとして、 ◇例1（ifによる分岐） 　if(textValue=""){ 　　// 文字列が入力されていない場合の処理　 　}else if(textValue="あいうえお"){ 　　// あいうえおの場合の処理 　}else if(textValue="かきくけこ"){ 　　// かきくけこの場合の処理 　}else{ 　　// 他の文字列の場合の処理 　} ◇例2（switch文で振分け） 　switch (textValue{ 　case "": 　　// 文字列が入力されていない場合の処理 　　break; 　case "あいうえお": 　　// あいうえおの場合の処理 　　break; 　case "かきくけこ": 　　// かきくけこの場合の処理 　　break; 　default: 　　// 他の文字列の場合の処理 　　break; 　} ◇例3（ループで処理：場合分けが多いけれど処理が類似している時など） caseData = [ { value:"あいうえお", data:"hoge1" }, { value:"かきくけこ", data:"hoge2" } ]; for(var i=0; i<caseData.length; i++){ if(textValue == caseData[i].value){ 　　hogehoge(caseData[i].data); // 該当する場合の処理（引数は個別データ） 　　break; } } if(i==caseData.length) hogehoge("hoge0"); // どれにも該当しない場合の処理 ※例3は分岐の選択肢が多くて、処理内容が類似して一般化できる際に有効かと思います。 　ご質問の場合も「セレクトボックスの内容を変える」という処理が同じなので、応用は可能かと。
英語はよくわかりませんけれど… 作者のサポートページに「カスタマイズも受け付けます」みたいなことが書いてあるような気がするのですが・・・？（違ってたらすんません）
こんな感じで良いのでしょうか。 <html><head><title>タイトル</title> <script type='text/javascript'> function ChangeText(){ document.Form.Text.value = document.Form.SelectMenuA.value + document.Form.SelectMenuB.value + document.Form.SelectMenuC.value + document.Form.SelectMenuD.value; } </script></head> <body><form name='Form'> <select name='SelectMenuA' onchange='ChangeText()'> <option value='あい'>あい</option> <option value='うえ'>うえ</option> <option value='おか'>おか</option> <option value='きく'>きく</option> <option value='けこ'>けこ</option></select><br /> <select name='SelectMenuB' onchange='ChangeText()'> <option value='あい'>あい</option> <option value='うえ'>うえ</option> <option value='おか'>おか</option> <option value='きく'>きく</option> <option value='けこ'>けこ</option></select><br /> <select name='SelectMenuC' onchange='ChangeText()'> <option value='あい'>あい</option> <option value='うえ'>うえ</option> <option value='おか'>おか</option> <option value='きく'>きく</option> <option value='けこ'>けこ</option></select><br /> <select name='SelectMenuD' onchange='ChangeText()'> <option value='あい'>あい</option> <option value='うえ'>うえ</option> <option value='おか'>おか</option> <option value='きく'>きく</option> <option value='けこ'>けこ</option></select><br /> <input type='text' name='Text'><br /> </form> </body></html>
watchPosition メソッドは、ある程度の速度で移動して いないと(位置情報が変わらないと) コールバック関数が 呼び出されないようですが、検証時の移動速度が遅すぎ るとか、そういうことはないですか？ http://www6.ocn.ne.jp/~wot/web/html5/geoapi/wp.html パフォーマンスの問題は『どこで時間がかかっているかを 把握する』のが一番重要な作業です。まずは処理のポイント ごとに時間を出力するようにして、状況を正確に確認して みてください。
「次の要素」というのが「次の兄弟要素」という意味で良ければ、基準とするelementに対して 　element.nextSibling で取得可能です。 自分の子要素を意味する場合は、「最初の子要素」ということでしょうから 　element.firstChild で取得してください。 いずれの場合もinput要素とは限りませんので、「最初に現れるinput要素」という意味であるなら、 順次チェックしていって、最初のものを特定すれば宜しいかと。 （存在しない場合の処理もお忘れなく） 要素がinputであることの確認は、element.nodeName又はelement.tagNameなどで要素名が取得できます。 また、typeのチェックはelement.typeでtypeが取得できますので、チェック可能でしょう。 削除する場合は、対象elementに対して、 　element.parentNode.removeChild(element); で削除できます。
配列変数に「あいうえお,かきくけこ,さしすせそ」と「たちつてと,なにぬねの,はひふへほ, 」を作ります。 次にselectboxA～Dのvalueを取得してif elseを使用してselectboxEのvalueに「あいうえお,かきくけこ,さしすせそ」か「たちつてと,なにぬねの,はひふへほ, 」を入れてあげればいいと思いますよ。 イメージ的には以下のような形だと思います。 selectboxA～Dのvalueがチェンジされた場合のイベントハンドラ { if(～～～) { selectboxE.value = 「あいうえお,かきくけこ,さしすせそ」 } else { selectboxE.value = 「あいうえお,かきくけこ,さしすせそ」 } }
属性のセレクタが用意されていますので、それで対応可能かと思います。 　http://api.jquery.com/attribute-equals-selector/ でも、独自属性を作らなくても、大抵のことなら通常のクラス設定で対応できるように思います。CSSでの指定なども考え合わせるとその方が便利ではないのかな・・・
ちなみに#4例で、0年1月-1日後でよければ以下 <script> var startDay = new Date(2014,0,31);// 1月31日 var endDay = new Date(2015,2,2);// 3月2日 function ddiff(s,e){ if(s > e) return false; var y1=s.getFullYear(),m1=s.getMonth(),d1=s.getDate(); var y2=e.getFullYear(),m2=e.getMonth(),d2=e.getDate(); var y0=y2-y1,m0=m2-m1,d0=d2-d1; y0-=(m1>m2 || (m1==m2 && d1>d2))?1:0; m0=(12+m0-(d1>d2?1:0))%12; d0+=d1>d2?(new Date(y2,m2,0)).getDate():0; return y0+"/"+m0+"/"+d0; } document.write(ddiff(startDay,endDay)); </script>
>・ボタンを押す度に既存の画像の下側に随時読み込まれていく。 ボタンを押すたびにimgタグを追加すればいいでしょう 追加すべきsrcのファイル名はなんらかのサーバー側のプログラムで ajaxで受け渡ししてもらえばいいでしょう。 逆にファイル名がわかっているなら、あえてajaxを使う必要はありません。
ANo1です。 ＞とりあえず動くことは確認できるかと思うのですが とりあえず、コピペで動かすと手元のIE８では途中で止まるようです。 少しだけ調べてみると、どうやら7行目の document.getElementById('div2') でnullが返されているようです。（原因はパッと見ではわかりませんでした。一見問題ないようなのですが…） 後で fx34で確認したところ、動作しました。 勝手に雰囲気から想定した「表示を切り替える」ものの簡略サンプルをご参考までに。 ・HTMLの書き換えはしていません。 ・簡略化のためページ内リンクも省きましたが、残しても良いかも。 ・項目の数は可変です。（メニュー順とdiv順は整合しているものとしています） ・表示中メニューにはactiveクラスを設定しているので見え方等はCSSで制御可能。 （インデントが全角空白になっていますので半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #menu li{ color:black; cursor:pointer; background-color:#CCC; border-bottom:1px solid white; } #menu li.active{ color:blue; cursor:auto; background-color:#CCE; } #tabs>div{ display:none; } #tabs>div.active{ display:block; } </style> </head> <body> <ul id="menu" onclick="hoge(event)"> <li>メニュー1</li> <li>メニュー2</li> <li>メニュー3</li> <li>メニュー4</li> </ul> <div id="tabs"> <div>test1</div> <div>test2</div> <div>test3</div> <div>test4</div> </div> <script type="text/javascript"> var hoge = (function(){ 　var i, e, tabs=[]; 　var menus = document.getElementById("menu").getElementsByTagName("li"); 　var tmp = document.getElementById("tabs").childNodes; 　for(i = 0; e = tmp[i++];) if(e.nodeName=="DIV") tabs.push(e); 　return function(evt){ 　　var i, t = evt.target || evt.srcElement; 　　for(i=0; i<menus.length; i++){ 　　　var e = menus[i], f = e==t?"active":""; 　　　e.className = f; 　　　if(tabs[i]) tabs[i].className = f; 　　} 　} })(); document.getElementById("menu").getElementsByTagName("li")[0].click(); </script> </body> </html>
はっきり依存コンポーネントと書かれているのに、それを入れずに評価すると言うのも乱暴な話ですね。 jquery.cookie.js は超有名なプラグインなので、今さら説明などしないでしょう。 > 見てみたもののリンク切れなのかダウンロードボタンはありませんでした。 これGitHubのサイトですよ？　見たことなかった？ 「src」を開けばjsのソースがあるし、右側の「download zip」をクリックすればプロジェクト全体をzipで固めたものがダウンロードできるはず。 まずは jquery.cookie.js を入れてみてからですね。 WordpressはjQueryプラグインの読み込みに関していくつか問題があるのですが、そこはまあ後の話ということで。
Google で 『javascript 文字数 表示』をキーワードにして 検索すれば、サンプルコード付きの解説サイトがたくさん 出てきます。
ちょっと気になったのですが、間違えて選択しても取り消さないという仕様でよろしいのでしょうか？ 複数の画像選択ボタンを配置するという発想ではいかがしょうか。 複数回目は動的に表示するという感じで。
2行目で定義した変数は excelApp で、3行目で使用している変数は excel です。 excel はどこにも定義されないまま使用されているので、そのエラーが出ます。
ANo5です。 ＞ご推察の通り、自分の力量として、自作というのはハードルがかなり高いのです。 スクリプトで処理する以上は、ある程度の理解は必要となります。 ほとんど知らなくても使えるもの（=ライブラリ等）で、可能な範囲で我慢するか、少しだけ覚えるかのどちらかですね。 読み込みからテーブル表示までを何らかのライブラリでできたとして、その後で表示だけ変える例をご参考までに。 　・表の形式を標準的なテーブルにしていますが、 　　実際の表示の構造と合わせる必要があります。 　・便宜上ボタンのクリックで表示を変えるようにしてありますが、 　　実装は表示後続けて処理することになるでしょう。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> function change(tbl){ var bdy = tbl.getElementsByTagName("tbody")[0]; var i = 0, rw, cell, indent, pre; while(rw = bdy.rows[i++]){ indent = +rw.cells[1].innerHTML; if(indent){ indent--, pre = indent==0?"―":"∟"; } else { indent = 0, pre = ""; } cell = rw.cells[0]; cell.style.paddingLeft = indent*2.5 + "em"; cell.innerHTML = pre + cell.innerHTML; } } </script> </head> <body> <table id="hoge" border=1> <thead><tr> <th>コード</th><th>レベル</th><th>品名</th><th>規格</th> </tr></thead> <tbody> <tr><td>1234</td><td>1</td><td>AAA</td><td>aaa</td></tr> <tr><td>2345</td><td>2</td><td>BBB</td><td>bbb</td></tr> <tr><td>3456</td><td>3</td><td>CCC</td><td>ccc</td></tr> <tr><td>4567</td><td>3</td><td>DDD</td><td>ddd</td></tr> <tr><td>5678</td><td>3</td><td>EEE</td><td>eee</td></tr> <tr><td>6789</td><td>4</td><td>FFF</td><td>fff</td></tr> <tr><td>7890</td><td>3</td><td>GGG</td><td>ggg</td></tr> </tbody> </table> <div> <p><input type="button" value="change" onclick="change(document.getElementById('hoge'));this.disabled = 'disabled'"> ← クリックで表示を変更 </div> </body> </html>
スマホのスクリプトは知りませんけれど… マーカー作成時に座標を指定しているので、その値を記録しておけばよいのではないでしょうか？ 直前のものを覚えていれば良いのであれば、単純に変数 oldLatlng（←なんでも良い）に代入しておいて、常に更新してゆくようにしておけば宜しいかと。 あるいは、配列に時間と座標をセットで記録していって、〇〇秒前（に近い）データを探して利用するなどといったことも考えられます。 配列に記憶する場合は、容量が増加して行くでしょうから、使わないことが明らかな古いデータは削除するようにしておいたほうが宜しいでしょう。
URLの#AAAに当たる部分は、ページロード時に location.hash を参照することで取得できます。 　http://mdn.beonex.com/en/DOM/window.location.html 該当するsectionは（↑）に基づいてIDで取得可能でしょうから、その子要素の中でご質問のdivを取得するには、 　・div class="toggle"に該当するもので2番目の要素を取得 　・label要素の親要素を取得 　・div class="row"の親要素を取得 などの方法が考えられると思いますが、全体の文書構成を考慮して適切な方法で取得してください。 何かのライブラリを用いていて、要素選択のメソッドがあるならそれによっても良いですし、querySelector()などが使えるブラウザであればこれを利用、あるいはgetElementsByClassName()やgetElementById()等を組み合わせることでも取得可能なはずです。 ＞.addClass('active')というものを見つけたのですが～ おそらく何かのライブラリのメソッドだと想像しますが、それが、要素にクラスを追加するメソッドであるのなら、それを用いるのも良いでしょう。 構文などに関しては、そのライブラリの説明をご覧になってください。 （何のライブラリかわからないので、これ以上はわかりません） activeクラスが重複することがないことがわかっているのなら、直接に 　element.className += " active"; でも宜しいかと。
showModalDialogは非推奨のAPIです。 Chromeではもう廃止されましたし、他のブラウザ用でも使うべきではありません。
良く見てないけどddのdisplay: none;が無いからじゃないの？ 自分でカスタマイズしたいなら、まずは全部をコピーしてきてからカスタマイズしたほうがいいよ。
prevが押された時の処理でページを対象の-1 nextが押された時の処理でページを対象の+1 するような処理にして、 <span class="now">は現在のページを表示するように <span class="total">はページ数を表示するようにすれば良いと思います。
こんにちは。 ＞(1)小数点第２の動きがおかしい。 少数2位（＝1/100秒）を表示するのに、計算の頻度を100msec（＝1/10秒）で行っているので、第2位の数値は成ゆきになります。 最小単位と同等（できれば半分）くらいの頻度で計算を行いたいところですが、5msecでは負荷が多すぎるかもしれませんね。 実際の表示はほとんど読み取れないので、10msecくらいがいいところでしょうか。 (setTimeoutやsetIntervalの時間間隔は必ずしも正確ではありません） ＞(2)一度リセットボタンを押さないとタイマーが動かない。 ところどころで変数などを表示させてチェックするか、ブラウザ組み込みのデバッグツールを利用なさると良いと思います。 　var statTime,　⇒　var startTime,
要素のstyle属性のdisplayをnone/block/inlineなどに指定し直すことで表示/非表示を制御できます。 レイアウトを維持したままであれば、visibilityをhidden/visibleでも同様になります。 （見えなくするだけなら、要素の透明度を0（=透明）にするという方法もあります） ＞このような形でチェックボックスを置き、チェックすると チェックボックスのchangeイベントを取得して、チェックされていたら上記の様な方法で非表示になさるとよろしいでしょう。
1. onmouseover と対になる onmouseout が指定されていない 2. 単引用符(U+0027)で囲まれた文字列の中に単引用符を使用するなら、エスケープが必要 例: '<img ... \'MAPsenntaku.png\' ... ' お節介ではありますが 3. 複雑なHTML要素を生成するなら、document.createElement を使いましょう 4. フォーム要素以外への属性 name の乱用は危険です。id/class で代用しましょう 5. <body> 内の <script> で実行するより、<head> 内で DOMContentLoaded するのがオススメです
食べ物をはずして、ロード時にchangeFuncを実行してみては？ <script> window.onload=function(){ changeFunc(document.getElementById("genre")); } function changeFunc(obj){ var v=obj.value; var f=obj.form; var food={ "grain":["rice","soba"] ,"fruit":["apple","orange"] ,"meat":["pork","fish"] ,"hot":["rice","soba","pork","fish"] ,"cold":["apple","orange"] ,"red":["apple","pork"] }; for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ f[i].checked=false; if(v=="") f[i].disabled=false; else f[i].disabled=true; } } if(typeof food[v] =="undefined") return false; for(var j in food[v]){ for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ if(f[i].id==food[v][j] ) f[i].disabled=false; } } } } </script> <form> <select name="genre" id="genre" onChange="changeFunc(this)"> <option value="meat">生き物</option> <option value="fruit">果物</option> <option value="grain">穀物</option> <option value="hot">温かい</option> <option value="cold">冷たい</option> <option value="red">赤い</option> </select><br> <input type="checkbox" value="お米" id="rice">お米<br> <input type="checkbox" value="りんご" id="apple">りんご<br> <input type="checkbox" value="みかん" id="orange">みかん<br> <input type="checkbox" value="さかな" id="fish">さかな<br> <input type="checkbox" value="豚肉" id="pork">豚肉<br> <input type="checkbox" value="そば" id="soba">そば<br> </form>
セレクトボックスで別の項目を選ぶたびにチェックをはずされるというのは ユーザービリティがかなり悪いとおもいます。 やるならこんな感じ <script language="javascript"> function changeFunc(obj){ var v=obj.value; var f=obj.form; var food={ "grain":["rice","soba"] ,"fruit":["apple","orange"] ,"meat":["pork","fish"] ,"hot":["rice","soba","pork","fish"] ,"cold":["apple","orange"] ,"red":["apple","pork"] }; for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ f[i].checked=false; if(v=="") f[i].disabled=false; else f[i].disabled=true; } } if(typeof food[v] =="undefined") return false; for(var j in food[v]){ for(var i=0;i<f.length;i++){ if(f[i].type=="checkbox"){ if(f[i].id==food[v][j] ) f[i].disabled=false; } } } } function uncheck(f){ } </script> <form> <select name="genre" onChange="changeFunc(this)"> <option value="">食べ物</option> <option value="meat">生き物</option> <option value="fruit">果物</option> <option value="grain">穀物</option> <option value="hot">温かい</option> <option value="cold">冷たい</option> <option value="red">赤い</option> </select><br> <input type="checkbox" value="お米" id="rice">お米<br> <input type="checkbox" value="りんご" id="apple">りんご<br> <input type="checkbox" value="みかん" id="orange">みかん<br> <input type="checkbox" value="さかな" id="fish">さかな<br> <input type="checkbox" value="豚肉" id="pork">豚肉<br> <input type="checkbox" value="そば" id="soba">そば<br> </form> 実際には、別途「全チェックをはずす」ボタンなどをつくって それが押された時に作用するような方法が妥当だと思います
<form name="ffa" method="post" action="abc.php"> <select name="sel1" onChange="document.forms['ffa'].submit()" > <option value="ni">日本</option> <option value="ame">アメリカ</option> <option value="igi">イギリス</option> <option value="su">スウェーデン</option> </select> </form> htmlがわかるなら<script></script>の間はscirptを書くのであろうと予想がつかないかな？ なのでその中にhtmlタグが出てきてはおかしい
他の方も言われるようにget、cookie、ヒドゥンパラメーターで渡すのが一般的と思います。
>・書き方が違うだけで同じことを出来るのでしょうか javascriptのbindの事がFunction.bindの事を指しているのであれば jQueryのbindとは機能が違います。 Function.bindに相当するのはjQuery.proxyになります。 逆に、jQuery.bindに相当するのはEventTarget.addEventListenerになります。 >・bindが記述されているとき、それがJavaScriptなのかjQueryなのかどうやって判断するのでしょうか？ 関数を呼ぶときにxxx.bind(...)と書くと思いますが。 xxx部分のオブジェクトが何かで判断します。 jQueryオブジェクトであればjQuery.bind functionであればfunction.bindとなります。 var $button = $('#id'); $button.bind('click', function(){ console.log('click'); }); ^^^^^ ここがjQueryオブジェクトなので、jQuery.bind var click = function(){ console.log('click'; )}; click.bind(this); ^^^^^ ここがFunctionなので、Function.bind --------------------------------------------------- ではなぜ,Funcion.bindやEventTarget.addEventListenerがあるのに、jQueryはそれに相当するjQuery.proxyやjQuery.bindを作るのか？ それは、Funcion.bindやEventTarget.addEventListenerはすべてのブラウザーで動かないのが原因です。 https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Function/bind 上のURLはFunction.bindの説明ですが『Polyfill』にこのような記載があります ＞bind 関数は ECMA-262 第5版に最近追加されたので、すべてのブラウザに存在するわけではありません。 https://developer.mozilla.org/ja/docs/Web/API/EventTarget.addEventListener addEventListenerの説明も『古い Internet Explorer と attachEvent』の部分でこのような記載があります ＞IE9 より前の Internet Explorer では、標準の addEventListener ではなく、 attachEvent を使わなければなりません。 このようにブラウザー毎に、関数がなかったり、名前が違ったりします。 この挙動の違いをjQueryが吸収するように作れられていて。 jQuey.proxyでは、Function.bindが無くても問題ないように jQuey.bindは、addEventListenerとattachEventどちらを呼ぶか振り分けたりするよになっています。 ---------------------------------- 予断ですが、jQuery.bindは古い書き方で、今はjQuey.onに置き換わっています、 http://tacamy.hatenablog.com/entry/2013/03/03/213113
やろうとしていることはとても簡単なことです。 説明するのも簡単です。 しかし、そもそも論で恐縮ですが、「<div id="View4"></div>で表示できるjavascript」を修正するのが本筋であり、しかもその結果をサーバー認証というセキュアな仕組みに使用するのは、いくらなんでもやってることが無茶苦茶です。 質問者さんの技術・知識レベルに対し、やろうとしていることが果てしなくミスマッチしています。 それともスパム的な何かを作ろうとされているのでしょうか?
> ・HTML描画を待たずに開始して良い処理は、DOMContentLoaded内ではなく、<script>タグ直下階層に書いても良いのでしょうか？ 良い。 > ・HTML描画を待たずに開始して良い処理、とは具体的にどのような処理でしょうか？ その時点で読み込まれているDOMに対しての処理、もしくはDOM以外の処理です。 > ・DOMが絡まない処理は全て、<script>タグ直下に直接書いても良い？ 複数のWebページで共通処理なら外部JavaScriptにすべきです。 > ・例えば、.alertは、DOMContentLoaded内ではなく、<script>タグ直下に書いても動作しますが、なぜでしょうか？ > ・windowオブジェクトはDOMではない？ script要素が読み込まれた時点では window が既に読み込まれているからです。 window は HTML5 からイベントバブリングの対象となり、正式に DOM となりました。 # Re: re97さん
こんな感じでしょうか？ <script> function onButtonClick(f){ var num = f.elements["textBox1"].value==="" ? null :(parseInt(f.elements["textBox1"].value)); var mylist=[ {name:"項目A",s_num:1,e_num:100}, {name:"項目B",s_num:60,e_num:100}, {name:"項目C",s_num:30,e_num:70}, {name:"項目D",s_num:1,e_num:40}, {name:"項目E",s_num:50,e_num:50} ]; var div=document.getElementById("display_mylist"); while(div.firstChild){div.removeChild(div.firstChild);} var ul=document.createElement("ul"); for(var i=0;i<mylist.length;i++){ if(num==null || mylist[i]["s_num"]<=num && mylist[i]["e_num"]>=num){ var li=document.createElement("li"); li.appendChild(document.createTextNode(mylist[i]["name"]+"("+mylist[i]["s_num"]+"～"+mylist[i]["e_num"]+")")); ul.appendChild(li); } } div.appendChild(ul); } </script> <div id="display_mylist"></div> <form> <input type="text" name="textBox1" value=""> <input type="button" value="決定" onclick="onButtonClick(this.form);"> </form>
unloadbeforeから即座に（同イベントループ内で）beforeが起きるかどうかでわかるでしょう。
＞JavaScriptでajaxというものを用いてPHPを実行させ このケースはajaxは必要ないかと <img src="loadimage.php?id=xxx"> 的な表記をしておき、別の画像を表示したいときは該当するimgの srcを書き換えるだけでよいでしょう なおloadimage.phpの中では、httpヘッダをつけた上で、 dbにアクセスして該当するidの内容を出力すればよいでしょう
>この行が2行以上になると、ランダムになるはずなのに、なぜかなりません。 なぜって、2行以上になったら動かないもんこれじゃ。 document.saikoro.src=sai[rr]; これだとname="saikoro"のものしか変更できない。 だから、単純に行を増やしただけじゃダメ。 var sai=new Array("sai0.png","sai1.png","sai2.png","sai3.png","sai4.png","sai5.png","sai6.png"); var imgs = document.querySelectorAll('.saikoro'); for (var i = 0; i < imgs.length; i ++) { var r = Math.floor(Math.random()*sai.length); imgs[i].setAttribute('src', sai[r]); } こんな感じじゃないの？ こうすれば<img class="saikoro">がいくら増えても動く
"行番号"ってどこのこと言ってるの？ <tr>が1行ってこと？ $('.rd').change(function(){ var line = $(this).parents('tr').index(); });
(1) keisanが呼ばれて dataが=以外だったらope = dataになってるから。 dataにはonclickで指定した値が入っている。 (2)いちいちonclickが面倒となると、こんな感じかな。 ただhtmlに書くものは増える <input type="text" name="line" value="0"> <button type="button" value="C">Ｃ</button> <button type="button" value="7"> ７ </button> <button type="button" value="8"> ８ </button> <button type="button" value="9"> ９ </button> <button type="button" value="/">÷</button> <button type="button" value="4"> ４ </button> <button type="button" value="5"> ５ </button> <button type="button" value="6"> ６ </button> <button type="button" value="*">×</button> <button type="button" value="1"> １ </button> <button type="button" value="2"> ２ </button> <button type="button" value="3"> ３ </button> <button type="button" value="-">－</button> <button type="button" value="0"> ０ </button> <button type="button" value="."> ・ </button> <button type="button" value="+"> ＋ </button> <button type="button" value="=">＝</button> <script> var total = 0; var input = ""; var ope = "+"; var flg = 1; document.addEventListener('DOMContentLoaded', function(){ var elems = document.querySelectorAll('button'); for (var i = 0; i < elems.length; i ++) { elems[i].addEventListener('click', function(){ var value = this.value; if (value.match(/[0-9]+/)) { flg = 0; input += this.value; document.dentaku.line.value = input; } else if (value === 'C') { total = 0; ope = "+"; input = ""; document.dentaku.line.value = total; } else { if (flg == 0) { flg = 1; cf = total + ope + input; total = eval(cf); input = ""; document.dentaku.line.value = total; } if (value == "=") { total = 0; ope = "+"; } else { ope = value; } } }, false); } }, false); </script>
ファイルはinput.filesに入っています。 var file = input.files[0] if (file) とかで分かります。
決定的な間違いは3箇所ありました。yの大文字小文字が1箇所と、「{}」の対応が2箇所間違っている。 <!DOCTYPE html> <html> <head> <title>SnakeBite</title> <meta http-equiv="X-UA-Compatible" content="IE=edge" /> <script type="text/javascript"> var W, H, S = 20; var snake = [　], foods = [　]; var keyCode = 0; var point = 0; var timer = NaN; var ctx; // pointオブジェクト function Point(x, y) { this.x = x; this.y = y; } //初期関数 function init() { var canvas = document.getElementById('field'); W = canvas.width / S; H = canvas.height / S; ctx = canvas.getContext('2d'); ctx.font = "20px sans-serif"; //蚊の初期化 snake.push(new Point(W / 2, H / 2)); //餌の初期化 for (var i = 0 ; i < 10 ; i++) { addFood(); } timer = setInterval(tick, 200); window.onkeydown = keydown; } //餌の追加 function addFood() { while (true) { var x = Math.floor(Math.random() * W); var y = Math.floor(Math.random() * H); if (isHit(foods, x, y) || isHit(snake, x, y)) { continue; } foods.push(new Point(x, y)); break; } } //衝突判定 function isHit(data, x, y) { for (var i = 0 ; i < data.length ; i++) { if (data[i].x == x && data[i].y == y) { return true; } } return false; } function moveFood(x, y) { foods = foods. filter(function (p) { return (p.x != x || p.y != y); }); addFood(); } function tick() { var x = snake[0].x; var y = snake[0].y; switch (keyCode) { case 37: x--; break; //左 case 38: y--; break; //上 case 39: x++; break; //右 case 40: y++; break; //下 default: paint(); return; } //自分or壁に衝突 if (isHit(snake, x, y) || x < 0 || x >= W || y < 0 || y >= H ) { clearInterval(timer); paint(); return; } //頭を先頭に追加 snake.unshift(new Point(x, y)); if (isHit(foods, x, y)) { point += 10; //餌を食べた moveFood(x, y); } else { snake.pop(); //食べていない→しっぽを解除 } paint(); } function paint() { ctx.clearRect(0, 0, W * S, H * S); ctx.fillStyle = "rgb(256, 0, 0)"; ctx.fillText(point, S, S * 2); ctx.fillStyle = "rgb(0, 0, 255)"; foods.forEach(function(p) { ctx.fillText("+", p.x * S, (p.y + 1) * S); }); snake.forEach(function (p) { ctx.fillText("*", p.x * S, (p.y + 1) * S); }); } function keydown(event) { keyCode = event.keyCode; } </script> </head> <body onload="init()"> <canvas id="field" width="400" height="400" style="background:#cccccc"> </canvas> </body> </html>
やりたいことは伝わるんだけど・・・ チェックされたらデータを取得してきて・・・っていうなら根本的に作り方を変えたほうがいいと思う。 だってチェックボックスはたぶん複数になる予定だろうし、それをidで引っ張ってたら無駄が多すぎるし作りにくい。 実際のAjax通信はjQueryとか使うの？ それだったらjQueryを利用してイベントとか実行するようにしたほうがいいよ。 あとck()の外に document.getElementById('shop').innerHTML= url; とかがあるけど、これ本当に動いているソース？
概ね、#1の方が仰るとおりですが、一つだけ訂正事項があります。 [] は "\" と "]" と "^" (先頭に限る) 以外はエスケープせずともメタキャラクタとして扱われません。 ただし、文字列リテラルとして扱う場合は "\" がメタキャラクタとなる為、new RegExp 内で "\\" を表現する為には "\\\\" と記述する必要があります(文字列リテラル、正規表現で2回エスケープが発生する為)。 従って、new RegExp('[\\?&]') は "?" または "&" にマッチする正規表現となります。 console.log(new RegExp('[\\?&]').test('\\')); // false console.log(new RegExp('[\\?&]').test('?')); // true console.log(new RegExp('[\\?&]').test('&')); // true 文字クラス内の "\\" は後続文字をエスケープする意味しかもたず、この場合はなくても結果が変わりません。 コード製作者のミスと思われます。 # Re: re97さん
参考までにどうぞ http://javatechnology.net/ajax/jsonp-callback/
ANo7です。 手元にあるIEがたまたまIE8なのですが、確かにご指摘のようになりますね・・・ （fx、chromeでは予定通りの表示になります） どうやら、親要素が高さを正しく認識してくれないみたいですね。 スライドが終わってから、親のタブをクリックしてみると、高さを再認識して予定の表示になるかと思います。 …ということから考えると、スライドが終わったところでブラウザに強制的に再レンダリングさせればよさそうに思えます。 slideDownのcallbackを利用すればタイミングをとることは可能ですが、実際にどのような処理をすればいいのかがすぐには思いつきません。（いずれにしろ、何かを変更したふりをするという無意味な処理になると思いますが…） 一方で、最初に提示したfloatでレイアウトする方法ならこのような事象は起きないようですので、これでラッパーの幅を指定するという方法に切り替えるか、上述の再レンダリングを何らかの方法で実現するか、はたまたIEは切り捨てるか（笑）・・・ 申し訳ありませんが、すぐにはお役に立てないようです。 ついでながら、HTMLでcategoryクラスなどを指定するのであれば、スクリプトでもそれを利用したほうが簡潔な記述になりますし、可読性もよくなると思います。 （ANo1のスクリプトを再確認願います）
Node.jsを使ってサーバサイドもJavaScriptで作ることが出来ます。 この記事で紹介されてるMeteorもNode.jsとクライアントサイドのコードを一緒に書けるようにしたようなものです。 ただチャットサーバを建てたいのであれば使う必要はありません。 Node.jsで2,30行も書けばできるでしょう。
#1 です。 連想配列ではありませんが、ES6 規定の Map が re97 さんの求めるものに近いかもしれません。 Object と違い、「定義順で反復処理」できますし、「key を追加すれば length に反映」されます。 https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Map --- うすうすお気づきだと思いますが、ECMAScript の new Array は数値添字配列(かつオブジェクト型ですし、new Object は key と value を定義できるだけで「配列」としての機能はありません。 あくまで「連想配列」を求めるのなら var a = [{key1: '佐藤'}, {key2: '鈴木'}]; のように定義して for, forEach で走査するのが現実解だと思います。 ES6 が普及したら Map に移行すればいいでしょう。 # Re: re97 さん
ANo2です。 ＞それは知っていたのですが、APIを利用したものでできるかどうか ＞考えております。 ANo1様もおっしゃっている様にAPIで可能です。 検索すれば似たようなものはいくらでも出てくると思います。 全部が全部apiをそのまま利用しているかどうかまでは不明ですが… ここの過去の質問でも似たようなものはあります。 （クリックでなくホバーで情報ウィンドウを表示するタイプです） 　http://oshiete.goo.ne.jp/qa/7894323.html その他の一例 　https://www.google.com/maps/d/viewer?oe=UTF8&ie=UTF8&msa=0&mid=zlNXdog7N0XE.kFp8TDNbF8Tc
これ、きっと頻出ですね。 jQuery.validate は keyDown や change イベントを監視しているので、DateTimePicker などの「外部投入」型の もジュールでは値の変化を検出できない、と。 DatePicker終了時に強制的にフォーカスを当てるとか。 <script type="text/javascript"> $(function(){ 　$("#datepicker").datepicker({ 　　onClose : function(){ 　　　this.focus(); 　　} 　}) }); </script> ひょっとしたら一部のブラウザでonCloseのタイミングが合わないかも。ならば、 <script type="text/javascript"> $("#datepicker").datepicker({ 　　onClose: function() { 　　　setTimeout(function(){ 　　　　$("#datepicker").focus(); }, 500); } }); </script> でもいいかな。
#1,2,4 です。 #4 の補足を読みました。 > 実現したいことは、ユーザーに正規表現か単純置換かを選択させ実行させるというものなのですが、正規表現を使ってエスケープシーケンスなどと認識させずに置換することができればそれでもOkです。 正規表現を使って良いなら、検索文字列のメタキャラクタをエスケープすれば new RegExp, String#replace で実現できます。 https://gist.github.com/think49/7691225 正規表現を全く使わないなら、#4の方法ですね。 # Re: nshoesさん
ご提示のURLは、apiから吐き出された結果のデータじゃないの？ そのまま見ても、データ構成の想像はつくかと思います。 でも、想像なんかしているよりも、説明ページがあるみたいですね。 （質問に貼るのもこちらの方が適切でしょう） 　http://twitcasting.tv/indexapimoviestatus.php jsonデータを持ってcallback関数を呼ぶようになっているので、そちらで内容を取得すればよろしいかと。 取得の具体的な方法は、ANo1様がすでにご回答なさっている通りです。 （keyは説明サイトの「結果のパラメータ」に記されています。） ＞例えば１つ目の項目のmovieidの値を～ ご提示の例はid指定でリクエストしているようなので、返されるのは1項目分のデータみたいですが・・・？ それとも、「項目」とは属性（↑のパラメータ）のことを意味なさっているのでしょうか？ jsonデータなので属性の順番は基本的にほとんど意味がないものと思います。
＞if(a >= b >= c >= d >= 1){ 入門書を読んで、比較演算子の意味を理解しましょう。 if(totalPoint >=0 && totalPoint <= 1){ resultNum = 0; } else if(a >= b && a >=c && a>=d){ resultNum = 1; } else if(b >=c && b >=d && b >=a){ resultNum = 2; } else if(c >= d && c >=a && c >= b){ resultNum = 3; } else { resultNum = 4; }
参考になるかな？ http://kinsentansa.blogspot.jp/2010/05/youtube-data-api_27.html
基本的な考え方として、元データを走査して結果用の配列（またはオブジェクト）に記録して行けば良いのではないでしょうか？ ＞また、元データが配列だった場合、同じ結果を求めるのはどうすれば良いでしょうか オブジェクトなら 　for(var key in array){ ～～ 配列なら 　for(var i=0; i<array.length; i++){ ～～ で走査する感じ。 配列であれば forEach() で処理する方がより簡単かと思います。 ご提示のオブジェクトの場合、key("0","1","2"…)は使わないみたいですので、その値（配列）の[0],[1]のデータのみを利用することになりそうですね。 keyの「"0","1","2"…」が保証されているのなら、連番のindex(=key)を用いて配列と同様の処理を行うこともできるでしょう。 重複を確認するには、結果のデータをオブジェクトにしておいて、 　{ 　 '東京': [13, 3], 　 '大阪': [3, 2], 　 '京都': [3, 1], 　　・・・・・ 　} のようにしておく方が、重複のチェックが簡単だと思います。 　・keyがすでに存在すれば、配列[0]の値に加算、配列[1]の値を+1 　・keyが存在しなければ、配列[0]に値をセット、配列[1]=1 として処理してゆけばよさそう。 結果を配列に直接収める場合は、 重複のチェックは、その時点での結果データをスキャンして同じものがあるかをチェックするという方法が異なるだけで、あとは上記のオブジェクトの場合と同様の処理を行うことでよいのではないでしょうか。
>回答してくださった所を直してみたのですが、それでもだめでした。。。 どんな仕様なのかわからないから、ダメだったダメだった言われても何がダメなんだかわからない。 こういうところでプログラムの質問するときは、こうこうこうなるはずなんだけど、こうなってしまっている。 って書くようにしたほうがいいよ。 何を持ってF12でうんぬん言っているかわからないけど、 提示されたソースをコピーして実行したらエラー出てるじゃん。(Chromeで実行) まず初期状態。(行数は見やすくしたりしてるからちょっと違うかも。) ncaught SyntaxError: Unexpected end of input t.html:1 Uncaught ReferenceError: init is not defined t.html:112 SyntaxErrorとかinitが定義されて無いとか出たら大体かっこの相違。 ってことでインデントをつけてみていけばaddFoodの閉じかっこが無いことが見える。 なので}を入れる。 そうすると次に Uncaught TypeError: Cannot read property 'lenght' of undefined 　t.html:47 47行目でエラー。 for(var i=0;i<data.lenght;i++){ dataにlengthなんてプロパティは無いって言われてる。なみせんとxが表示されている。 んじゃあそれが何かというとisHitの引数にdataがあるので呼び出し元を見てみる。 そうすると4か所から呼ばれているけど、その中のaddFoodで呼び出しているところの if(isHit(foods,x,y)|| isHit(snake.x,y)){ がおかしいことがわかる。 snakeを渡すはずなのにsnake.xを渡している。 なのでここをisHit(snake,x,y)に修正。 そうすると次は Uncaught TypeError: number is not a function t.html:41 41行目でエラーが表示される。 そこを見てみるとPointっていう関数名なのにpointでnewしようとしていることがわかるので foods.push(new Point(x,y)); とする。 そうすればエラーが出なくなるんだけど、それ以降、どういった動きになれば正解なのかは前途したように俺にはわからない。 同じ動きでエラー表示がどうなるか試してみて。 違うエラーが出たりするなら、何か修正を間違えている。
イベントハンドラ・匿名関数と外部関数定義のタイミングが変じゃないですか？ <!DOCTYPE html> <html xmlns="http://www.w3.org/1999/xhtml"> <head> <title></title> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script> <script type="text/javascript"> $(function () { $('.alphabet').click(function () { // 直接指定 alert($(this).attr('id')); // 関数経由 alertAlphabet($(this)); }); }); function alertAlphabet(obj) { // objはjQueryオブジェクト alert(obj.attr('id')); }; </script> </head> <body> <a class='alphabet' id='a' href='' onclick="return false;">A</a> <a class='alphabet' id='b' href='' onclick="return false;">B</a> <a class='alphabet' id='c' href='' onclick="return false;">C</a> </body> </html>
多分、もう終わってるんだろうけれど閉じていないみたいなので… ＞～の部分をもっと簡略化できないでしょうか？ 不要と思われるものを省いて、少し短くしてみました。 ＣＳＳは記載がないので適当に設定しています。 （違う方法も考えられるけれど、ご提示のままにしてあります） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <style type="text/css"> #s1 ul, #s1 li{ list-style-type:none; } #s1 ul{ position:relative; } #s1 li{ position:absolute; top:0; } #s1 li img{ width:300px; height:300px; } </style> <script type="text/javascript"> $(function(){ var ul = $("#s1>ul"), first = ">li:first-child"; $(">li", ul).hide().eq(0).fadeIn(3500); setInterval(function(){ $(first, ul).appendTo(ul).fadeOut(1500); $(first, ul).fadeIn(1500); }, 5000); }); </script> </head> <body> <div id="s1"> <ul> <li><img src="A.jpg" alt=""></li> <li><img src="B.jpg" alt=""></li> <li><img src="C.jpg" alt=""></li> </ul> </div> </body> </html>
> プログラム作成で利用しているサイトはこちらです。 > http://code.9leap.net/codes/edit/83463 ……ごめん、そのページ見るにはそのサイトへの登録とログインが必要だから見れないや。 おまけに Amazon.co.jp のリンクは検索結果一覧のページだから、何を参考書にしているのかわからないし。 さらに言えば、「このソースの15行目」って > this.x=x; にしか見えないんだけど。 とりあえず気になったのが、あなたがマークが出ているという行の少し前の > this.staus++; って行（変数名が変じゃね?）ですけど、「黄色の三角マークが出ている」という行から離れているのでこれが原因かどうか……。 その「プログラム作成で利用しているサイト」には問題のある個所にマークをつけるだけじゃなくってその問題の詳細をどこかに表示するか、マークにマウスカーソルを合わせると問題の詳細を出すくらいしてそうなんだけど、何か出ていませんか?
No.1さんの回答がスマートですね。 私の回答はスマートではないですが、いろいろやり方はあるということで。 $("#"+X.join(",#")).css("color","red"); ただ、配列演算子を使いたいという質問にも受け取れるので、その場合は、ループで回すほうがスマートですね。一回で済ますという意味ではなくなりますが。 for(var i in X) $("#"+X[i]).css("color","red"); 配列内のID名に対してcolor:redを設定するという意味合いにおいては、結果はどちらも同じです。
・リスナーについて http://e-words.jp/w/E383AAE382B9E3838AE383BC.html var listener = function(){ /*ボタンが押された時の処理*/}; var button = document.getElementById("buttonのID"); button.addEventListener("click", listener , false); ボタンクリック時のイベントを登録した所です、 addEventListenerの2番目の引数が、clickしたときに呼ばれる関数です。 この関数の事をリスナーという別の言い方をしているだけで リスナーとは関数の事です。 --------------------------------------- ・「bind の付いたリスナーを削除」しないと何がマズいのでしょうか？ イベントを解除するにはremoveEventListenerを使います https://developer.mozilla.org/ja/docs/Web/API/EventTarget.removeEventListener removeEventListenerの第2引数は、addEventListenerに登録した関数（リスナー）を指定します。 removeEventListener("click", /*addEventLisnerに登録した関数*/, false); ---------- var button = document.getElementById("buttonのID"); button.addEventListener("click", function(){/*ボタンが押された時の処理*/ } , false); このように登録した場合、解除したいけどできません。 (removeEventListenerの第2引数に何をいれれば・・・ってなります) var listener = function(){ /*ボタンが押された時の処理*/}; var button = document.getElementById("buttonのID"); button.addEventListener("click", listener , false); このように関数を変数に『(参照を)覚えておく』事で、登録解除ができるのです。 button.removeEventListener("click", listener , false); -------------------------------------------------------------------- ・「リスナーへの参照を残しておく」って、具体的にどういうことなのでしょうか？ bind関数の戻り値は関数なので、上記の通り変数に覚えておかないと解除できないということです。 https://developer.mozilla.org/ja/docs/Web/API/EventTarget.addEventListener この説明で以下のような処理があります。 element.addEventListener('click', this.onclick1, false); element.addEventListener('click', this.onclick2.bind(this), false); さて、イベント解除することを考えてみましょう 上はthis.onclick1関数を指定したので、以下のように解除できます。 element.removeEventListener('click', this.onclick1, false); (onclick1メンバー変数に関数を覚えている) 下はthis.onclick2.bind(this)で『戻ってきた関数』を登録していますが覚えていません その為、どこかの変数に覚えておかないと解除できません。 var listener = this.onclick2.bind(this); element.addEventListener('click', listener , false); ------------------------------------------ 余談ですが、ローカル変数は関数から抜けるとなくなるので、実際はメンバー変数なりに覚える事になります。 this.xxxx = this.onclick2.bind(this);
やりたいことがよくわからないのと、他の方のおっしゃるように疑問点やおかしな（？）点がありますが・・・ ◇インプット要素のnameを制御しているおつもりだと想像しますが、ご提示の制御だと同じ名前の要素が複数できる可能性がありますが予定通りでしょうか？ 例えば入力欄が3個ある状態から、中央のものを削除（_2を削除）して1個追加すると、_1、_3、_3の名前になりそう・・・ ◇変数countで入力欄を記憶しているのだと思いますが、DOM要素を数えていまうという方法もあります。（若干の時間ロスですが、いちいち制御する必要がないので簡単かつ確実です） なさりたいことがわからないので、勝手な想像で単純化した例を・・・ （hiddenの要素は確認のため表示にしてあります） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> #tbl1 input{ width:320px; } span.add, span.delete{ margin:0 10px; color:blue; cursor:pointer; } </style> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1");</script> <script type="text/javascript"> $(function() { var tbl = $("#tbl1"); var row = tbl.find("tr:first-child").clone(true) .append("<td><span class='delete'>Delete</span></td>"); tbl.on("click", "span.add", function(){ tbl.find("tbody").append(row.clone(true)); adjust(); }).on("click", "span.delete", function(){ $(this).parent().parent("tr").remove(); adjust(); }); function adjust(){ var inp = $("#tbl1 input"); inp.each(function(i, e){$(e).attr("name", "emailAddress_" + (i+1));}); $("#cnt").attr("value", inp.length); } }); </script> </head> <body> <div> <h1>メールアドレス登録</h1> <form name="multi" method="put" action=""> <table id="tbl1"> <tbody> <tr> <td><input type="text" name="emailAddress_1"></td> <td><span class="add">Add</span></td> </tr> </tbody> </table> <p>count：<input type="text" id="cnt" name="cnt" value="1"> <p><input type="submit" value="次へ"> </form> </div> </body> </html>
http://write-remember.com/program/javascript/date_add/ 上記を参考に。 JavaScriptのコンソールで、 var x = new Date("2014/11/04"); x.setDate(32); x.getMonth().toString() + " " + x.getDate().toString() と入力してEnterを押すと、 11 2 って感じで表示されます。つまり、日がオーバーフローしたら自動的に月が加算されるのですよね。 つまり、細かいことは気にせずに、日を足しておけばOK！ってことで。
アプローチはいろいろ考えられますが、画像保存を目的とした時、必ずしもキャプチャに限定する必要はないのではないでしょうか。 たとえば、組み合わせ数が少ないのであれば、あらかじめ全組み合わせの画像を用意しておき、組み合わせの結果に応じて、その画像を表示あるいはダウンロードさせればよいだけです。また、組み合わせ数が膨大な場合は、組み合わせの結果をサーバーに送信して、サーバー側で画像を生成するという方法も考えられます。更に、現在のサンプルはDOMレベルでアプリケーションを実装されていますが、最初からCanvasでつくることで、いわゆる画像を保存する作業はグッと楽になる、というよりCanvasにそういう機能が提供されています。 どうしても、今の状態でキャプチャを取りたいのであれば、html2canvasをカスタマイズする、あるいはhtml2canvasが使えるようにアプリケーションの実装を改修したほうが早いと思います。要するにjsによるレンダリング結果は考慮されないということでしょうから、jsからのレンダリング後にhtml2canvasが実行できるように修正するだけです。 もし、jQueryのプラグインの組み合わせのみでアプリケーションを実装しようとしてるならば、おそらく完成は難しいでしょう。質問者さんの制作レベルを超えていると考えるべきです。
1度しかできない理由は、onの箇所はページが読み込まれた時に実行されるためです。 つまり、最初に生成したa.helloに関してはonが定義されていますが、2度目以降に生成したa.helloにはonが定義されていません。 以下のようにjQueryのlive機能を使って、永続的にa.helloに対してonを定義することができますが、 $(document).on("click",".hello",function(){ 　alert('hello"); }); それ以前に、毎回a.helloを生成するという箇所に問題があると思います。 全体的な目的が分からないのでなんとも言えませんが、a.helloを一度だけ生成する仕組みにした方が明らかにスマートですし、そうすることで、今回の問題は解決されます。
ANo3です。 質問者様にはわかっている情報でも、私にはわからない情報がたくさんあります。 それは回答中に質問の形式で記述してはいますが、まったくお答えをいただけません。 例えば、タイミングの制御をどのような考えで行おうとしているのかが不明です。（そもそも何をしたいのかがよくわかりませんが・・・） ただ、タイミングを制御したいのだろうと推測して、制御可能な方法の例を提示したつもりですが ＞試してみたんですが、上手くいきませんでした。 とのお答えだけなので、動作しなかったのか、動作したけれど欲しいものとは違っていたのか、違っていたのならどのように違うのかなどなどがまったくわからないので、補足のしようがない状態です。 それなので、質問に対するお答えだけ・・・ 1）googleのサイトからjQueryをロードしています。 　コピペでも動作するように（こちらでは質問者様の環境がわかりませんので）、ネットに繋がっているブラウザであれば間違いなくjQueryをロード可能なように記述しています。 　それなので、普通に自分のサーバからロードする記述に変えても同じ動作をするはずです。 2）items.each(function(i, e){ $(e).css("zIndex", n-i);}); の記述のことではないかと推測しますが、この部分は 　function(i, e){ 　　$(e).css("zIndex", n-i); 　} という関数を一行に書いているだけなので、i、eは通常の関数の引数です。 ただし、jQueryのeachメソッドに渡す関数になっていますので、iには要素のindexが、eには要素が渡される約束になっています。 　http://api.jquery.com/each/ jQueryに関しては（↑）が公式サイトですので、調べたいことがあればここで調べるのがよろしいかと思います。 ＞本ではこれをオブジェクトなんて書いてあるやつもありますが、 通常オブジェクトといわれるものは 　object = new Object()や　object = {} などで生成されるものを言うと思います。 　functionを用いてユーザ定義し、new演算子で生成することも可能です。 「これ」が何を指しておっしゃっているのか不明ですが、オブジェクトは用いていません。iやeは単にローカルの変数（引数を受け取る変数）です。 ＞何分指導者いませんので 　私も暇つぶしの独学者です。 　最近はネット環境が発達しているので、大抵のことはネットで調べることが可能です。ただし、情報の真偽については自分で確かめる必要はありますが… 3）var c = 0, sequence = [1000, 3000, 4000, 5000];　は 　var c = 0; 　var sequence = [1000, 3000, 4000, 5000]; と同等で、変数の定義と初期値を設定しています。 提示したスクリプトでは、sequence（配列）が、リストの画像の表示時間（正確にはfadeの所要時間）を示しています。 簡単に書くと、 　1.画像Ａが1秒かけてフェードアウト（画像Ｂが見える） 　2.画像Ｂが3秒かけてフェードアウト（画像Ｃが見える） 　3.画像Ｃが4秒かけてフェードアウト（画像Ｄが見える） 　4.画像Ｄが5秒かけてフェードアウト（画像が見えなくなる） という順序で実行される際の 　「1秒、3秒、4秒、5秒」をデータにしたものです。 そのようになっていないでしょうか？ もしも、全部が同じ時間で良いのであれば単一の処理で良くなるので、スクリプトももっと簡略化できるでしょう。 ＞後にlenngthを使ってますが、苦手なハッシュのところですよね 文章の意味が分かりかねますが、lengthではあらかじめリストの項目数を調べているだけです。 提示したスクリプトは、項目数が変わってもHTMLに画像を付け足して、それに応じて上記の時間（fadeの所要時間）のデータを付け足しさえすれば動作するように考慮してあるつもりです。 ＞たぶんこれだと時間のコントロールができないのでは？と思います 何の時間をコントロールなさりたいのかが私にはわかりませんので、fadeの所要時間を個別に指定できるものを一例として作成してみたのですが・・・ 違う時間をコントロールなさりたい場合も、同様の方法で可能ではないかと想像します。 ＞.animate()とかsetInterval()とか今まで自分が ＞カールセルなんか作ってきましたが、これをフラッシュみたいにしたいのです 何をなさりたいのかよくわかってませんが、ANo2の補足のスクリプトから想像するものに比べると、『カールセルのスライドショー』を作成する方がものすごく大変だと想像しますけれど、違うのでしょうか？ フラッシュとはAdobe Flashのことでしょうか？ Flashもスクリプトでいろいろなことが実現できますので、フラッシュのようといわれてもどのようなものなのかまったく想像がつきません。
直接的な回答ではありませんが、以下のようにした方がスマートですよ。 html <div id="hoge"> gifを背景に表示する </div> css .animation{ 　background-image : url(animtion.gif); } js document.getElementById("hoge").className = "animation"; ところで、実際にはどのようなコードで指定したのですか? おそらくコードの記述に問題があります。
CSS3のtransformですね。超シンプル。 transform: scale(0) rotate(720deg); 0.5秒で2回転。
http://okwave.jp/qa/q8810003.html で回答したコードですね。 > th = th.cloneNode(true); th要素ノードを複製しています。 https://developer.mozilla.org/ja/docs/Web/API/Node.cloneNode オブジェクトは参照なので同じオブジェクトを使い回してappendChildしたら要素が移動するだけで複数の要素を生成できません。 createElementから作り直すのが一般的だと思いますが、同じような要素を何度も作るのは無駄なので雛形となるth要素ノードを生成しておき、cloneNodeで複製しています。 --- http://okwave.jp/qa/q8810003.html の件。 > ・innerTextを使用するようにしますー innerText はIEの独自拡張であり、全てのブラウザで使用できません。 innerTextを実装されている他のブラウザもありますが、標準化されていない為に挙動が同じ保証もありません。 似たプロパティとして textContent がありますが、innerText とは挙動が異なります。 http://d.hatena.ne.jp/cou929_la/20110517/1305644081 代入する分には textContent, innerText を使い分ければ問題ないかもしれませんが、仕様を追ってないので私からはお勧めできないですね。 IE8- を保証するなら createTextNode が最も無難な選択肢だと思います。 何度か仕様にまつわる質問をされていると思いますが、調べ方を工夫してみて下さい。 仕様のURLをブックマークしておくとか、Google検索でサイト検索してみるとか。 innerTextの件は少し検索すれば分かると思うのですが、おそらくまともに調べていないのではないでしょうか。 http://www.quirksmode.org/dom/html/ https://developer.mozilla.org/ja/docs/Web/API/Node.textContent http://msdn.microsoft.com/en-us/library/ie/ms533899.aspx # Re: re97さん
thisは基本的にはスコープチェーンに入っていないので thisのプロパティに設定しても this.AAAAAAAQWEとしないと参照できないですね。 （thisがグローバルオブジェクトの場合は、参照可能になります。） withを使えばオブジェクト名を省略して プロパティを参照できるようになります。 var array = ['AAAAAAAQWE','BACDCFRF','VZAAAWW']; var obj = {}; for(var i=0; i<array.length; i++) obj[array[i]] = array[i]; with(obj){ 　alert(AAAAAAAQWE); //withの中では、obj. を省略できる } withは非推奨なのであまり使いたくないですけどね。 > ・既存コード調整なので、存在意義はとりあえずおいといていただけると有難いです 変数を全部文字列に置換するような調整はできないのでしょうか？ （AAAAAAAQWE → 'AAAAAAAQWE' みたいに置換すれば、変数宣言自体不要。）
正直、コードに意図が不明な点がいくつかあります…。 初心者だからいろいろ間違えてるだけなんでしょうか。 そうだと仮定するならば、以下にすればいいんじゃないでしょうか。 var bar = $(foo).text().match(/>>(\d+)/);
table要素にはAPIが用意されているので活用してみてください。 http://www2u.biglobe.ne.jp/~oz-07ams/prog/dom-ref/HTML/HTMLTableElement.html http://jsfiddle.net/6gjfbj9w/ > th.innerHTML = '見出1'; ただの文字列挿入に innerHTML を使用するのは好ましくありません。 # Re: re97さん
何種類か考えてみました。 基本的には最後のfieldsetを選択してafterで追加します $('.a > fieldset:last').after('<fieldset class="b">新規挿入</fieldset>') $('.a').children('fieldset:last').after('<fieldset class="b">新規挿入</fieldset>') $('.a').children('fieldset').last().after('<fieldset class="b">新規挿入</fieldset>') $('.b:last').after('<fieldset class="b">新規挿入</fieldset>') $('.b').last().after('<fieldset class="b">新規挿入</fieldset>') $('.c').before('<fieldset class="b">新規挿入</fieldset>')
ANo1です。 簡単なサンプルを作りましたので、どう違うかを確認してみてください。 （クリックすると共通の処理で色が赤になります） （インデントは全角空白になっています） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>Sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> h3{ margin:2em 0 0 0; } ul{ margin:0; } li{ cursor:pointer; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script> <script type="text/javascript"> $(function(){ //初期要素にバインド $("#hoge1 li, #hoge3 li").bind("click", handler); //上位要素（ul）でイベントをキャッチ $("#hoge2").on("click", "li", handler); //ボタンクリック時の処理 $("#switch button").bind("click", function(){ 　append1("#hoge1"); //#hoge1に単に要素を追加 　append1("#hoge2"); //#hoge2に単に要素を追加 　append2("#hoge3"); //#hoge3にイベントをバインドした要素を追加 }); //単純に要素を追加 function append1(id){ 　var li = $("<li>追加内容</li>"); 　$(id).append(li.clone(true)).append(li.clone(true)); } //イベントをバインドした要素を追加 function append2(id){ 　var li = $("<li>追加内容</li>"); 　li.bind("click", handler); 　$(id).append(li.clone(true)).append(li.clone(true)); } //クリック時の処理（共通） function handler(){ $(this).css("color", "red"); } }); </script> </head> <body> <div id="switch"><button type="button">要素を追加</button></div> <h3>要素を単に追加する</h3> <ul id="hoge1"> <li>内容1</li><li>内容2</li><li>内容3</li> </ul> <h3>上位要素でキャッチ</h3> <ul id="hoge2"> <li>内容1</li><li>内容2</li><li>内容3</li> </ul> <h3>イベントをバインドして追加</h3> <ul id="hoge3"> <li>内容1</li><li>内容2</li><li>内容3</li> </ul> </body> </html>
ブラウザはHTMLを最初から順に解釈していきます。 <script>タグがあればスクリプトを読み込んで実行しますが、ご提示のHTMLだと、 　<script type="javascript" src="JS練習.js"></script> 　　　・・・・ 　<script src="ttp://code.jquery.com/jquery-1.11.0.min.js"></script> の順になっています。 従って、「JS練習.js」を読み込んで実行しようとする時点ではjQueryが読み込まれていない状態です。 この状態で 　$(function(){ 　　$('p').css('color' , 'red'); 　}); を実行しようとすると、最初の行でエラーとなり実行が中断されていると推測されます。 ＊ファイル名等はできるだけ英数半角にしておいた方が、いろいろな意味で確実かと思います。
組んでみたよ。参考までにどうぞ。 $('#button').click(function(){ $(this).val($('#input').children().toggle().is(':visible') ? 'hide':'show'); }); ここまでシンプルにできるよ。 #buttonがクリックされたら #inputの子要素の表示非表示を切り替えて(toggle()) 要素が表示だったらvalueにhide 要素が非表示だったらvalueにshow こんな動きになってる。
> 質問1 案1: tr 配下の td の内容を書き換える 案2: 内容を書き換えた td を tr 配下に加える なので、結果的にはほぼ同じ意味になります。 ブラウザによる画面描画タイミングは、スクリプトの実行が終わった後が多いため、 表示に差異が出ることも無いでしょう。 > 質問2 マイクロソフト社が独自実装した機能なので、いわゆる "DOM Level 0" に分類されます。 標準仕様とされている "W3C DOM API" ではありませんので、 厳密にやるなら以下の様になるでしょう。 tr.appendChild(td).appendChild(document.createTextNode("内容")); ただ innerHTML は、互換性のために各社のブラウザにも搭載されているので、 あまり気にせずともよい気がします。
＞<input type="image" src="rtp/migi.jpg" onClick="this.form.submit()"> こいつのonclickがいらないだけでは? <input type="image" src="rtp/migi.jpg">
それだったらその回答にあるscriptに document.getElementById('name').innerHTML=name; document.getElementById('desc').innerHTML=desc; を追加して htmlは <span id="name"></span> <span id="desc"></span> のようなものがある前提 うるせーって思うかもしれないけど、何をどうしたい、ってのを詳しく書かないと 何回質問を繰り返したって回答付かないからね。
ANo1です。 ＞サービス提供者がアフィリエイトタグをいじって云々は技術的に無理です。 状況がまったくわかりませんが、質問者様が作成を依頼されているのではないのでしょうか？ （ご質問文からはそのように読み取れますが・・・） サービス提供者とは質問者様への依頼者のことだと思いますが、なぜわざわざタグをいじる必要があるのかわかりません。 質問者様はここで方法を質問をしてみただけで、実際の作業は全てサービス提供者が行うということなのかな？ それなら、仮に方法がわかったところで、先方にスクリプトがわかる人がいなければ無理ですね。 しかし、ご質問文を読む限りそのようなケースである印象は受けないのですが？ 仮に、質問者様がしくみを構築するのだとして・・・ 対象とするエリアがかなり限定的なのか広範囲なのかによって、若干、対応方法の選択に違いが出る可能性がありますが、とりあえず一般的に動的な対応をするものとして、 1）自社紹介の店舗をプロットしたマップを初期画面として表示 2）表示画面のエリア内の施設を楽天APIを利用して検索 3）検索結果をマップにプロット（リンク先をアフィリエイトURLにセット） のような処理をするスクリプトを組み込んでおけば良いのではないかと考えたのですが、そういう内容ではないのでしょうか？ なお、検索の際にIDを送信しておけばURLはアフィリエイトURLとして取得できると書いてありますよね？ また、閲覧ユーザが地図のエリアを変えたなら、2）、3）の処理を繰り返すようにしておけば宜しいかと。 マップのエリアが限定的な場合は、都度検索する必要もないので、あらかじめ検索しておいて常にその結果のデータを利用するようにしておくという方法もありかと。
こういうこと？ だけど質問２の制御法は適当。 とりあえずgroup1以外が来たら終わる。 var html = ''; for(var i in hoge){ html += i + ' '; for( var j in hoge[i]) { html += hoge[i][j] + ','; } html = html.slice(0,-1) + '<br>'; } document.getElementById('test').innerHTML = html; var html2 = ''; for(var i in hoge2){ if(i !== 'group1') break; html2 += i + ' '; for( var j in hoge2[i]) { html2 += hoge2[i][j] + ','; } html2 = html2.slice(0,-1) + '<br>'; } document.getElementById('test2').innerHTML = html2;
よくわかりませんが、こういうことでしょうか <!DOCTYPE html> <script type="text/javascript" src="https://www.google.com/jsapi"></script> <script type="text/javascript"> function 株価変数が取得できる関数() { var form = document.forms['rohsoku']; var inputData = [], V = function(n){return parseInt(n)}; for (var i = 0; i < 256; i++) { var g = form.elements[ i + 't' ]; if (!g) break; var d = form.elements[ i + 'a' ].value.split(/,/); inputData.push([g.value, V(d[0]), V(d[1]), V(d[2]), V(d[3])]); } return inputData; } google.load("visualization", "1", {packages:["corechart"]}); google.setOnLoadCallback(drawChart); function drawChart() { function 株価チャートを引く関数() { var data = google.visualization.arrayToDataTable(株価変数が取得できる関数(), true); var options = { legend:'none' }; var chart = new google.visualization.CandlestickChart(document.getElementById('chart_div')); chart.draw(data, options); } 株価チャートを引く関数(); document.forms['rohsoku'].addEventListener('submit',function(ev){ev.preventDefault(); 株価チャートを引く関数()}, false); } </script> </head> <body> <div id="chart_div" style="width: 900px; height: 500px;"></div> <form name=rohsoku> <table> <tr><td><input name=0t value=Mon><td><input name=0a value=20,28,38,45> <tr><td><input name=1t value=Tue><td><input name=1a value=31,38,55,66> <tr><td><input name=2t value=Wed><td><input name=2a value=50,55,77,80> <tr><td><input name=3t value=Thu><td><input name=3a value=50,77,66,77> <tr><td><input name=4t value=Fri><td><input name=4a value=15,66,22,68> </table> <button type=submit>株価を変化させて再描画</button> </form>
+は単項プラス演算子です。 var now1 = +new Date(); var now2 = new Date(); alert(typeof now1); alert(typeof now2); で何となく分かると思いますが、+を付けることで数値に変換しています。 【JavaScript】単項 + 演算子で数値にする at softelメモ http://www.softel.co.jp/blogs/tech/archives/4396
ANo1です。 方法論よりも実例なのかなと思い、googleのサイトを見ながら作成してみました。（詳しくはありませんので…） プリミティブな計算方法にしていますので、効率は悪いと思います。（例えば計算済みの距離データを利用していないとか） また、とりあえずの書きっぱなしなので、要領が悪いのと読みにくい点はご容赦願います。 ＊スタート地点とゴール地点はドラッグ可能です。 ＊（例として）中間点は全体の4分割地点とし、マーカー表示しています。 ＊中間地点のマーカーをクリックするとその地点の座標が表示されます。 ＊マーカーはこの回答欄では記述しにくいため、googleさんのアイコンを利用しています。 ＊各種のデータチェック等は全て省略しています。 （全角空白は半角に：長いので分割になっています）） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script> </head> <body> <div style="width:860px;"> <div id="map" style="float:left; width:640px; height:600px;"></div> <div id="route" style="float:right; font-size:11pt; width:220px;"></div> </div> <!-- 以下 つづく -->
自分も映像関係は門外漢なのですが、After Effects のような動画編集ソフトを使っているのではないかと思われます。 ちょっと検索してみたところ、以下のページのエフェクト例にあるものの組み合わせでできそうに見えます。 http://ae-style.net/tutorials/ 逆にプログラムでどうこうしているように思えるところは映像中に見受けられませんでした。 どうやって作るのかについては、こちらよりも「その他Adobe」カテゴリの方が適切な回答が得られるのではないかと思われます。 http://oshiete.goo.ne.jp/category/1040
んー、jquery.zip.jsを読み込んで $(function(){ $.get('test.zip', function(archive){ console.debug(archive.files); for (var i in archive.files){ var file = archive.files[i]; console.log('========='); console.log(file.name); console.log(file.filesize); console.log(file.inflate()); }}) }); これを試しただけでfile.inflate()でcsvの中身が表示されたけど。
こんにちは。 start_locationのlat、lngはそれぞれメソッドですから、値を求める場合は 　start_location.lat() 　start_location.lng() として実行してください。 　start_location.lat、start_location.lngとして使うと、メソッドそのもの（実体としてはfunction)を意味することになります。
jqueryにもeq()はあるようですよ alert($("[name=nn]").eq(2).val()); // (3) for(var i =0; i < $("[name=nn]").length; i++){ 　　alert( $("[name=nn]").eq(i).val() ); }
A1 undefinedという値が返されることになります。 A2 はい。ただし何も意味が無い（戻り値を利用しない）のにfalseを返したりするのは良くはないです。 A3 呼び出し側が返り値をどう利用しているかによります。 A4 関係ないです。 falseを返した時デフォルトの動作が無効になるだけであって、バブリングが無効になるわけではありません。 ただしjQueryで同じようにやるとバブリングまで止まります。 A5 全般です。 ただし、これは elem.onclick = function() { または <elem onclick="function(){ とかいた場合に限る、古い仕様なので、今ではあまり頼るべきではありません。 代わりに evt.preventDefault() を使ってください。 A6 特にないです。
jQuery1.3を読み込んでいるようだけど、ふるすぎる。 $('xxx').on('click',function() { }); を使いたいならOver 1.7
hoge.txtは勝手に更新されていくということで良いでしょうか？ document.write()を使うと、すべて上書きされてしまいますのでDOMを操作する必要があります。 至極簡単な例ですと document.getElementById('hoge').innerText='更新したい文字列'; 1秒ごとに取得してきたいのであればAjaxを利用してバックグラウンドで取得しに行けば良いと思います。
>if (url2.value != "") { parent.f1.location.href=url2.value } >else { alert("URLを入力してください") } >だったら分かるのですが、引数としてgoをあえて入れる意味が解らないです。 url2ってなに？？？ってエラーになるけど。 エラーになるってわかったらおのずと答えが見えてこない？ goに何が入ってくるかというとthis.form 自身のフォームにあるurl2のvalue こうすればurl2ってなに？とはならないでしょ。
#1さんの回答にもありますが、いったんsessionStorageに保存して 遷移先でその値を取得しスクロールさせます。 //遷移元のjavascript jQuery(function($){ $('a[href^=#]').click(function() { // アンカーの値取得 var href= $(this).attr("href"); smoothScroll(href); return false; }); $('a:not([href^=#])').click(function(e) { //通常の動作をストップ e.preventDefault(); // アンカーの値取得 var href = $(this).attr("href"); var tmp = href.split("#"); var url = tmp[0]; var hash = "#" + tmp[1]; //アンカーリンクを一時保存 sessionStorage.setItem("hash", hash); //遷移 location.href = url; }); }); function smoothScroll(href){ var speed = 400;//スクロール速度（ミリ秒） var target = $(href == "#" || href == "" ? 'html' : href);//移動先オブジェクト console.log(target); var position = target.offset().top;//移動先のY座標 /* スムーススクロール */ //$($.browser.safari ? 'body' : 'html').animate({scrollTop:position}, speed, 'swing'); var body = 'body'; if (navigator.userAgent.match(/MSIE/)) { /*IE6.7.8.9.10*/ body = 'html'; } $(body).animate({scrollTop:position}, speed, 'swing'); return false; } //遷移先 jQuery(function($){ var hash = sessionStorage.getItem("hash"); if(hash){ sessionStorage.removeItem("hash"); smoothScroll(hash); } }); function smoothScroll(href){ var speed = 400;//スクロール速度（ミリ秒） var target = $(href == "#" || href == "" ? 'html' : href);//移動先オブジェクト var position = target.offset().top;//移動先のY座標 /* スムーススクロール */ //$($.browser.safari ? 'body' : 'html').animate({scrollTop:position}, speed, 'swing'); var body = 'body'; if (navigator.userAgent.match(/MSIE/)) { /*IE6.7.8.9.10*/ body = 'html'; } $(body).animate({scrollTop:position}, speed, 'swing'); return false; }
こんにちは。 方法はNo1様が回答した通りと推測します。 ごく簡単な例を・・・ ＜test.js＞ (function(){ 　var s = document.getElementsByTagName("script"); 　var obj = JSON.parse(s[s.length-1].innerHTML); 　var i, txt = ""; 　for(i in obj) 　　txt += i + " = " + obj[i] + "<br>"; 　document.getElementById("result").innerHTML = txt; })(); ＜html＞ <!DOCTYPE HTML> <html lang="ja"> <head><title>TEST</title></head> <body> <div id="result">result</div> <script type="text/javascript" src="test.js"> { "hoge": "hogehoge", "fuga": 111, "piyo": 222 } </script> </body> </html>
indexOfの戻り値は、検索した文字が最初に見つかった位置を返します。 また、文字が見つからなかった場合は-1を返します。 indexOf !=-1は、検索文字があるか判定しています。 https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf "aiueo".indexOf("ai")の場合先頭に一致するので戻り値は０(先頭は1では無く0から数えます) "aiueo".indexOf("iue")の場合2番目に一致するので戻り値は1 "aiueo".indexOf("kkk")の場合一致しないので戻り値は-1
argumentsは引数の配列です。 jQuery.extend({ merge : function(){} }) extendを呼び出している部分は上記のようになっているため argument[0]はmerge関数をもったオブジェクトとなります。 それを踏まえて、extend関数を読むと 176行目　target = arguments[0] // targetはmerge関数を持っているオブジェクト 177行目　i = 1 178行目　length = arugments.length // 1 (引数は一つしか与えていないので) 196行目　if(i === length) // ↑よりifの条件に一致 197行目　target = this; // thisはjQueryのオブジェクト 198行目　i--; 　　　　　　　// i=0 201行目　if ( (options = arguments[ i ]) != null ) { // optionsにmerge関数を持っているオブジェクトが入る 205行目　for ( name in options ) { // optionsのプロパティー名でループ // mergeの場合は、name="merge"が入っている 206行目　src = target[ name ]; // targetはjQueryオブジェクト // jQuery["merge"]はまだないのでsrc=undefined 207行目　copy = options[ name ]; // copyにmerge関数が入る 229行目　target[ name ] = copy; // target["merge"] = merge関数　ここでjQueryオブジェクトにmerge関数が入る 難しいのはthisがjQueyオブジェクトだということだと思いますが javascriptのthisは関数を呼び出したオブジェクトが入ります。 extend関数はjQuey.extend({...})と呼び出されている訳ですから jQuery.extend ↑extendはこのjQueryが呼び出しているわけですから、thisはこのjQUeryオブジェクトという事になります。
まず、 ＞onclickイベントでjavascript とupdatMemo($sid)という、PHP関数をコールしているのですが、 onclickでPHP関数を呼び出すのは不可能です。 updateMemo($sid) の部分は、HTMLページを生成する時点で実行されます。 ブラウザでそのページのHTMLソースを見てください。 それ以降の補足内容は意味がよくわからないのですが、最初のところで勘違いしているので、おかしな方向に考えが行ってるのではないでしょうか。
=演算子の左辺はReference内部型として評価されなければなりません。 （実装が仕様にキッチリ従っていれば）CallExpressionでReference内部型が帰ってくることはないので、必ずReferenceErrorになります。
まず、li が ul ないし olに囲まれていないのがよくないです。 きちんと記述しないとブラウザによっては崩れますのでね。javascriptも正常に動きません。 jQueryは要素の指定の方法がいろいろあるので、それだけ体得すれば割といけます。 もし、お書きになったようなhtmlの場合なら、 全てチェックのcheckboxにclass="all"を追加して、以下のようなjQueryを書けばよいと思います。 未検証です。 $(function(){ $('.all').click(function(){ //対象のチェックボックスはclassにallを指定したチェックボックスの //親のtrの次のtr内にあるinput要素 var $target_input = $(this).parents('tr').next().find('input'); if(this.checked){ $target_input.attr('checked','checked'); }else{ $target_input.removeAttr('checked'); } }); });
こんにちは。前回の回答者です。 ＞具体的にどう累計していけばいいかも分かりません。 考え方を理解できないと、コーディングまでには程遠いことになってしまいますが… 簡単な原理として、経路が直線の区間の集合になっているものとして、各区間の距離と座標がわかっているとします。 　区間1：{始点座標：x1,y1, 距離：d1} 　区間2：{始点座標：x2,y2, 距離：d2} 　区間3：{始点座標：x3,y3, 距離：d3} 　　　・・・・・・・・・・・・ 　区間n：{始点座標：xn,yn, 距離：dn} d1からdnを加えたトータルが全区間の距離になっていることはわかると思います。 スタート地点からルートに沿って指定距離行ったところを求めたければ、実際に移動しながら測るのと同様に、始点から順に距離を計測していけばよいことになりますよね？ 仮に、d1+d2＜指定距離＜d1+d2+d3になったとすれば、求めたい地点は（x2,y2)と(x3,y3)の間にあることがわかり、この間は直線で近似していますので、補間して求めればよいということになります。 前回の回答時には、DirectionsServiceのレスポンスの各stepが直線になっていると勘違いしていましたが、実は、よく調べてみると、どうも各stepもポリラインで構成されているようです。 それなので、正確に求めたい場合は、結局このポリラインデータを解析することになりそうです。 （かなり大雑把でよければ、各stepを直線近似してしまってもよいかも） 　https://developers.google.com/maps/documentation/directions/#JSON ポリラインデータを解析するには、Google Mapsのgeometry libraryを利用するのが便利です。 パスの取り扱いや距離・面積の計算などが簡単にできるようになっています。 とはいえ、ここまで詳細に経路を追いかけるとなると、DirectionsRendererを利用する意味も薄れてしまうので、経路表示も直接ポリラインで記すようにしても大した手間ではなくなりますね。 　https://developers.google.com/maps/documentation/javascript/geometry
~ はビット反転（NOT）演算子。 ~~ だと反転を2回行うので元に戻る（ビット演算としては何もしてないのと同じ）。 ただし、演算対象が整数でなかった場合は ビット演算の前に32ビット整数に変換することになっているので、 整数変換の目的で何もしないビット演算を使うことができる。 ↓参考 javascriptの文字列→整数変換で最速な方法は? - プログラミングのメモ http://konbu13.hatenablog.com/entry/2014/01/08/220427
＞ルートを表示することはできるのですが～ ルート検索と表示は、DirectionsServiceやDirectionsRendererを利用することで比較的簡単にできるようになっているかと思います。 　http://oshiete.goo.ne.jp/qa/8159078.html 質問者様がどのようになさっているのか不明ですが、(↑)に類する方法でなさっているのではないかと想像します。 ご質問のように一定区間ごとにマーカーを表示したいのであれば、DirectionsServiceのレスポンスにあるルートの情報を順に辿ることで可能だと思われます。 試してはいませんが、各ステップ毎に、 　distance: 当該区間の距離情報 　start_location: 当該区間の始点座標{lat,lng} 　end_location: 当該区間の終点座標{lat,lng} の情報が得られるようですので、距離を累計していって指定距離を超えたところで、その区間内を補間して座標を求めるといった感じでいかがでしょうか？ 詳しいDirectionsServiceに関する情報は以下にあります。 　https://developers.google.com/maps/documentation/directions/ 位置の算出は通常のjavascriptで、マーカー表示はmap apiを利用なさればよろしいかと。 　https://developers.google.com/maps/documentation/javascript/reference#Marker
-- javascript $(function(){ var overcells = $("table td"), overrows = $("table tr"), hoverClass = "hover", current_r, current_c, rowIndex; overcells.hover( function(){ var $this = $(this); (current_r = $this.parent().children("table td")); rowIndex = $this.parent().parent().children("table tr").index($this.parent()); (overrows.filter(":nth-child("+ (rowIndex + 1) +")")).addClass(hoverClass); //$("#a").text(rowIndex + 1); (current_c = overcells.filter(":nth-child("+ (current_r.index($this)+2) +")")).addClass(hoverClass); }, function(){ (overrows.filter(":nth-child("+ (rowIndex + 1) +")")).removeClass(hoverClass); current_c.removeClass(hoverClass); } ); }); -- css table td.hover {background:#cffbfb;} table td.hover:hover {background:#84f4f4;} table tr.hover {background:#cffbfb;} こんな感じで。 クロスする部分の色は切り替えていませんが。 色が濃くなっている箇所はクロスしているかどうかではなく、 オンカーソル（td.hover:hover）で判定しているようです。
1.hogeを4で割た余りを求める 2.その結果を!(論理ＮＯＴ)する 結果が0ならばtrue、それ以外ならばfalse 要するにhogeが4で割り切れる数字であればtrue,それ以外はfalse 3.それに6をかける trueは1,falseは0として扱われる 結論 hogeが4で割り切れる数字であれば6、そうでない場合あ0を求めている
Firefoxにはプロファイラーと言うものが付いているのはご存知でしょうか？ これを使うと、呼び出された関数に使用した時間がわかるので どの関数が重たいのか調べられます。 詳しくは以下のサイトを参照 http://smellman.hatenablog.com/entry/2013/05/16/012020
これはIEEE 754といって結構面倒な話なのですが、手っ取り早くは一度整数化してから 小数点に戻すことです。 (これも完全ではないですが、命題の例であれば正しくなるはずです) function keisan(){ var price1 = document.form1.goods1.selectedIndex * 29.99; document.form1.field1.value = price1.toString(); var price2 = document.form1.goods2.selectedIndex * 6; document.form1.field2.value = price2.toString(); var price3 = ((price1 || price2) ? 7: 0).toString(); document.form1.field3.value = price3; var total = (price1*100+price2*100+price3*100)/100; document.form1.field_total.value = total; } 興味があれば以下のサイトを参照ください http://pc.nikkeibp.co.jp/pc21/special/gosa/eg4.shtml
クライアント側のMIME-typesはUA設定依存なのでマイナーなフォーマットになるとあまりあてになりません。 MIME Sniffingを読む限りではbinaryのMIME-types判定に重きを置いているようです。 http://www.hcn.zaq.ne.jp/___/WEB/File_API-ja.html#dfn-type https://mimesniff.spec.whatwg.org/ 正しいファイル名が付与されているという性善説に立つなら、簡易的には「拡張子」が適切だと思います。 ただし、拡張子だけでは不十分なので、最終的にはサーバサイドでファイル内の文字列をパースしてCSVフォーマットであることを確定させる必要があります。 サーバサイドの負荷を減らすためにJavaScriptでパースすると更に良いと思います。 # Re: suffreさん
以前まではＰＣ、スマホ、携帯に対応したウェブサイトがちょっと特別でしたけど、 今ではどれも当たり前になっていて、しかもｗｐでサイトを作るのも非常に簡単。 ｗｐのレスポンシブルテーマも無料でＤＬ出来るくらいですし、 ウェブサイト制作だけでは厳しくなるとおもいます。 そもそもウェブサイトをつくるのはブランディングをかねた集客がメイン。 サイトを作るだけでなく、ＳＥＯやＰＰＣ、ＳＮＳをつかった 包括的な提案が出来ないと厳しいと思います。
引数は座標変換のマトリックスを表していますので、単純な伸縮率とはちょっと違うかと思いますが… ご提示の引数は以下として処理されます。 　｜-1　0　0｜ 　｜0　 1　0｜ 　｜0　 0　1｜ 結果的に、 　Ｘ'= -x 　Ｙ'= y に変換されることになりますので、Ｙ軸に対する鏡像変換（ミラー）になるかと。 CANVASの解説は以下にありますのでご参考までに。 　http://www.html5.jp/canvas/ref.html 仕様書 　http://www.w3.org/TR/2dcontext/#transformations
今回の例をなるべく流用するとして price1もしくはprice2に金額がはいっているときだけprice3に500円を入れればいいのでは？ （さすがに何も選ばないのに送料だけかかるのはちょっとあれなんで・・・） <style type="text/css"> table {border-collapse: collapse;} table, th, td {border: 1px #808080 solid;} th, td {padding: 3px 10px;} th {background-color: #d3e9fa;} td {background-color: #ffffff;} td strong {color: #ff0000;} </style> <script> function keisan(){ var price1 = document.form1.goods1.selectedIndex * 500; document.form1.field1.value = price1; var price2 = document.form1.goods2.selectedIndex * 1000; document.form1.field2.value = price2; var price3 = (price1 || price2) ? 500: 0; document.form1.field3.value = price3; var total = price1 + price2 + price3; document.form1.field_total.value = total; } </script> </head> <body> <form action="#" name="form1"> <table> <tr> <th>商品名</th> <th>単価</th> <th>数量</th> <th>金額</th> </tr> <tr> <td>商品サンプル1</td> <td align="right">500円</td> <td><select name="goods1" onChange="keisan()"> <option>0</option> <option>1</option> <option>2</option> <option>3</option> <option>4</option> <option>5</option> </select></td> <td><input type="text" name="field1" size="8" value="0"> 円</td> </tr> <tr> <td>商品サンプル2</td> <td align="right">1,000円</td> <td><select name="goods2" onChange="keisan()"> <option>0</option> <option>1</option> <option>2</option> <option>3</option> <option>4</option> <option>5</option> </select></td> <td><input type="text" name="field2" size="8" value="0"> 円</td> </tr> <tr> <td>送料</td> <td align="right">500円</td> <td>&nbsp;</td> <td><input type="text" name="field3" size="8" value="0"> 円</td> </tr> <tr> <td align="right" colspan="3"><strong>合計</strong></td> <td><input type="text" name="field_total" size="8" value="0"> 円</td> </tr> </table> </form>
<form name="js" value="Mapion" onsubmit="textbox(); return false"> <input type="text" name="txtb" value="" size=50> <input type="button"> </form> これでどうでしょう？確認してないけど大丈夫だと思います。
イベントで処理したほうが自然では $('#basicModa').on('show', function () { // }); 消した時は $('#basicModa').on('hide', function () { // });
ブラウザは何を使っていらっしゃるでしょうか。 IE,Chromeで動作確認しました。 IEはローカルのscriptはブロックされるので、 私のサーバーに置きます。 確認ができたら返信をください。 http://pro.mnas.0am.jp/TMP/q8780599.html //HTML完全(head内は省略) <HTML> <head></head> <body> <form id="post" name="post" method="post" action="post.php"> <textarea id="text" class="text-edit" name="text"></textarea> <input id="submit" name="submit" type="submit"> </form> <!--(<div id="keyword-counter"></div>をここに追加)--> <div id="word-counter">文字数:</div> <script type="text/javascript"> //初期作業 //ノード追加 tmp = document.createElement("div"); tmp.id = "keyword-counter"; document.body.insertBefore(tmp, document.getElementById("word-counter")); /*onkeyupはキーが上がると発生するので文字数を正確に取得できる。しかしながら、キーを押しっぱなしにすると取得できない。 そのためonkeydownにもできるけど、文字数を正確に取得できない*/ onkeyup = (function KeywordCounter() { var input_text = document.getElementById("text").value; var word = input_text.split('キーワード').length - 1; document.getElementById("keyword-counter").innerHTML = input_text; document.getElementById("word-counter").innerHTML = "文字数:" + input_text.length + "<br />word =" + word; }); </script> </body> </HTML>
HTMLフォームのsubmitは、完全な「遷移」ですので、サーバ側に制御が移り、しかもサーバサイトノプログラムはローカル側への遷移指定ができないので、ご希望の動作を実現することはできません。 画面遷移と非同期に動作できるのは、submitではなく、Ajaxによる送信です。 サーバサイドのプログラムは、処理結果画面ではなく、処理レスポンス（処理結果）を返すように変更し、クライアントサイドは「コールバック」でそれを受け、画面を遷移させます。 なお、localhostから外部サーバへの送信となるため、JSONP形式での送信か、サーバサイド側でクロスドメインアクセスを通すような処理も必要になります。
振り分けを全部PHPでやるなら、こんな感じでしょうか。 <div id="header"> <?php if (isset($_COOKIE['ken']) && $_COOKIE['ken'] === 'kyoto'): ?> <?php include (TEMPLATEPATH . '/kyoto.php'); ?> <img src="test.html/kyoto.jpg" alt="京都" /> <?php else: ?> <?php include (TEMPLATEPATH . '/zenkoku.php'); ?> <img src="test.html/zenkoku.jpg" alt="全国" /> <?php endif ?> </div>
さらっと見た感じだとoptionにbeforeっていうコールバック関数を指定できるから、そこで現在の枚数を取得して 8枚目になったらSkipボタンを非表示とかすればまずは消せると思う。 んでSkipボタンのclickで最後のスライドに行けばいいんだけど、nextとprevはあっても先頭に戻るとか一番後ろとかは無い気がする。 function handleArguments ここの中が外から呼べるメソッドの定義だから case 'last' を追加して 最後の画像を表示、そしてstopするように作ればいいんじゃないかな？ $('#skip').click(function(){ $('#slide').cycle('last'); }); みたいな感じ
$.each(json, function(index) { console.debug(index+'番目'); console.debug(this.fields.kamoku); console.debug(this.fields.kamoku_hira); console.debug(this.fields.kamoku_alpha); }); こうじゃないの？ jsonを対象にeach それは何かというと {"pk":1} この単位のループ pk3まで。 だからその中のfieldsのxxxを取得 単純にこうじゃない？
jsの$(functionの中を以下のように $(function() { $('body').sparkleh(); }); $.fn.sparkleh = function( options ) { の中にある $this.on({ "mouseover focus" : function(e) { sparkle.over(); }, "mouseout blur" : function(e) { sparkle.out(); } }); これをコメントアウト 変わりに sparkle.over(); これでずっときらきらしてる。 これ、環境によっては足かせにしかならんよ重くて
＞　グーグルマップAPIはサイトを持たないと利用できないのですか？ 利用する場合は、だれでもアクセスできる環境で使用して下さいと、 グーグルは言っています。 しかし、実際には、ローカルＰＣでも動作します。 ＞　APIキーの取得はできますが 私は、一応サイトで利用していますが、キー無しで使っています。 以前はAPIのV3はキー無しで利用できましたが、あるとき取るように 言ってきました。でも、無しで全然問題なく動作します。 ＞ サイトを持たずにグーグルマップAPIを使用する方法、手順 V2の時は、動きのあるようなものが実行できませんでしたが。 V3になってからは、そういうことはありません。 まず、普通にスクリプトを書いて、実行してみてください。 たぶん、問題なく動作するはずです。
ここでの『*=』はJavaScriptではなくCSSセレクタの構文で、 『[src*="_on"]』で『src属性に_onを含む要素』という意味です。
c.value+=v 足すからだめ。 c.value = v; 今のままじゃc.valueにどんどん追加するから追加されていく。
document.locationてはなくてlocation.hrefではないですか？ document.form01.url.selectedlndex = 0; は意味がないような気がします。
JavaScriptというかjQuery? そのまま日本語で書いてあることをやってみればいいんじゃない？ 一つずつ考えてみたら？ //タイトルタグから取得 var title = $('title').text(); // id=titleのdivに反映 $('#title').html(title); // input name="titleにタイトルを反映 $('input name="title"を指定するセレクタ').val(title); // ぼたんをボタンに $('ボタンを特定するセレクタ').val('ボタン'); ま、全部書いたら練習もクソもないから。 セレクタについて調べてみるといいよ。 idは'#id' classは'.class' タグ名なら'tag' 属性なら[name="name"] ま、いろいろあるよ
Chromeの場合、「name」という名前を使うと意図しない動作になる事があるようです。（window.nameと干渉してるのかな？） IEなどでは、どちらの場合も正しく動作しますね。 参考までに、 Chrome上でnameという名前にした場合、"あだち,いのうえ,うえだ,えんどう,おおの" という1つの文字列に変換されています。 name1など他の名前にすると、 ["あだち", "いのうえ", "うえだ", "えんどう", "おおの"] という状態で格納されています。 細かい原因は分かりませんが、とりあえずnameという名前を使うのはやめておいた方が良さそうですね。
トップページのアドレスがどうのこうのっていうか onChange="linkMenu(this.selectedIndex);" でコンボ変更時に 選択されたオプションのインデックスを引数にlinkMenuを呼び出す。 linkMenuはそのインデックスを受け取って動作する。 if ( m == 0 )は０のとき、すなわち一番上の「クリックして選択してね」 が選択されたらなにもせず終了 if ( m == 1)は１のとき、すなわちe-supportが選択された時 そしたら http://www.k-support.gr.jp/index.html%22 がリンク先となる。 だからこの部分を http://homepage3.nifty.com/mtaiyo/9%E2%96%B3ABC.JPG にすりゃいい
どのようなマークアップを想定しているのかも不明なので、ひとつの考え方の例として簡略化したサンプルを… クッキーは考慮していませんが、その時の状態を保存する部分と、初期表示を追加する感じ。 ご質問文にいろいろと書いてはありますが、例えば『エリアＡ（非表示）、エリアＢ（表示）』の状態で、ボタンＢを操作するとどうなるのかなどが不明です。とりあえず、常にその時の状態の反転（トグル）になると仮定。 （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> body{ width:800px; } div.articles{ width:700px; float:left; } div.article{ height:250px; position:relative; border:1px solid gray; } #A, #B, #C { width:500px; height:100px; position:absolute; 　　　　　　right:10px; bottom:10px; background-color:#DDD; } div.buttons{ width:95px; float:right; } div.buttons button{ width:100%; display:block; margin-bottom:10px; } </style> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script> <script type="text/javascript"> $(function(){ 　$("div.buttons button").click(function(){ 　　$(this.value).slideToggle(); 　}); }); </script> </head> <body> <div class="articles"> <div class="article"> 　記事 　<div id="A">（area A）</div> </div> <div class="article"> 　記事2 　<div id="B">（area B）</div> </div> <div class="article"> 　記事3 　<div id="C">（area C）</div> </div> </div> <div class="buttons"> 　<button type="button" value="#A">area A</button> 　<button type="button" value="#A,#B">area A&B</button> 　<button type="button" value="#B,#C">area B&C</button> 　<button type="button" value="#A,#C">area A&C</button> 　<button type="button" value="#A,#B,#C">area A&B&C</button> </div> </body> </html>
イベントをキャンセルするには (1)：<button onClick="return false"> と書かなければなりません。 (2)：<button onClick="false"> ではダメです。 あなたのコード <button onClick="df3();df4();"> は(2)と書いているのと同じなのです。 …ということは、ここまで書けばあとはどう書けばいいかわかりますよね。
括弧というか、ブロックです。 letで宣言した変数はブロックスコープなのでそのブロックの中でのみ使えます。
for(var i = 0; i <recs.length - 1; i++){ body += "<table width='100' border='3'><th>あああ</th><th>いいい</th>"; レコード数分の繰り返しの中に入ってるからでしょ。 しかも生成されるタグが間違えてる。<tr><th>じゃないと。 body += '<table width="100" border="3">'; body += <tr><th>あああ</th><th>いいい</th></tr>''; for(var i = 0; i <recs.length - 1; i++){ }
お勉強中ということでヒント。 JavaScriptには指定場所から指定場所までを取得する関数がある。 ある文字列の1文字目～３文字目を取得して改行を追加して４文字目～最後までをくっつければいいんじゃないかな？ var str = "ああああああああああああ"; var after = (strの1文字～３文字) + CR + (strの4文字～最後) こうすればafterの文字列は あああCR あああああああああ となるの
return rec.split (/\t/g); を return rec.split (/,/g); にでもしましょうか？ ^^; いい加減な回答で申し訳ない。以下を理解しないと私は先に進めません。そろそろ忙しくなってもきましたし・・・。 http://www.ietf.org/rfc/rfc4180.txt
開発者ツールは試してみてくれたのかな？ 呼び出されているだろうjsとformの部分があれば大体追えるけど、 変に省略されるとかえって難しくなる。 まずはエラーが出ているのか出ていないのか。 出ているならそこら辺を見直すだけで済むし。
$('#hoge').parents('td'); でない？ 実際のところどんな構造になってるか見てみないとわからないけど。
ざっと見ただけですが・・・ ご質問のようなことが起こる可能性は、 　img.splice(n,1); としているので、配列要素数が段々減少していって、空配列になった時点で「該当要素がない」というエラーになって止まっているのではないかと想像します。 類似するエラーが出ていないでしょうか？ 全体で何をどうしたいのかよくわかりませんが、とりあえずそのあたりをチェックしてみてはいかがでしょうか。
すでにANo1様が回答なさっていますが、ご質問の通りにやるなら、 $("#hoge1,#hoge2,#hoge3").click(function(){ 　 var n = this.id.replace(/^hoge/, ""); 　$('#piyo').load("puyo" + n + ".html"); }); とでもすれば可能です。 （数字であることのチェックはしてませんが、正規表現を変えれば可能です。） 使う目的にもよりますが、 1）まとめて処理しているのに個別IDによっている 　（ボタンの増減によってスクリプトを変更せざるを得ない） 2）URLがIDの連番に固定されていて汎用性に欠ける 　（外部リンクなどを含ませようとしても無理） などが気になります。 1)は連番のIDであれば、 　$("input[id^='hoge']")～～ のような識別方法も考えられますが、IDによらずクラスなどを利用することで汎用化できるでしょう。 2)はスクリプト側でURLの配列を持っておく方法もありますが、ANo1様もご指摘のようにHTML側に記述しておくのがわかりやすそうです。 inputのvalue値を使いたいところですが、表示値に利用されてしまうので、inputの代わりにbutton等を利用すれば表示値、URL(value)を個別に指定することができるのではと思います。 結果的に、 $("div.hoge button").click(function(){ 　$('#piyo').load(this.value); }); のようにすることでIDも不要になりますし、ボタンの増減にも対応可能になります。 ボタンが散在している場合は、 $("button.hoge")～～ とか。 クラスと機能が一致するので、理解しやすくなるのではないでしょうか。
後者は構文エラーですね。 Webコンソールを見ると『ReferenceError: goo is not defined』って出てるので、gooなんて知らね～よって怒られています。
あまりお勧めできませんがクロスドメインのajaxで処理してみては？ 他人のふんどしってやつ？
ざっくり過ぎますでしょうか？ エラー処理も無視。 querySelectorAll、Array#forEach が使えること。 <!DOCTYPE html> <meta charset="utf-8"> <title>jQueryがなんだって？</title> <body> <h1>Test</h1> <h2>Test2</h2> <script> function $ (q) { 　return new Q (document.querySelectorAll (q)); } function Q (es) { 　this.es = Array.prototype.slice.call (es, 0); } Q.prototype.css = 　function (p, v) { 　　this.es.forEach (setCSS, arguments); 　　return this; 　}; function setCSS (e) { 　e.style[this[0]] = this[1]; } $('h1, h2').css('color', 'red').css('borderBottom', '2px pink solid'); </script>
JavaScript側の形式はJavaScriptの組み込みの配列記述方式そのままなので，PHPからはJSONとして渡せばよいと思います。 PHP側のデータがおかしいですね。 配列の要素に複数のデータを直接入れることはできません。 PHP側のデータが， Array(Array('hoge', 4.3), Array('piyo', 5.6)) ならば，そのままjson_encodeすればよいでしょう。 # PHPでも [ [ 'hoge', 4.3 ], [ 'piyo', 5.6 ] ]と書けますが，話を単純にするためにArray関数を利用。
mapを使いましょう。 function A(ary) { return ary.map( (a, i) => a.map( (v, j) => ary[j][i] ) ) }
こんにちは。 手元のIE8.0で試してみましたが表示されるので再現できませんね。 ＞IEではzero_resultsとメッセージが表示され表示がされません。 スクリプトの中でエラー処理を行っています。 geoResultCallbackの処理中の 　alert(status); が実行されていると思われます。要はサーバーからエラーが帰って来ているということです。 （原因はブラウザのセッティングや通信環境などにあるかも知れません） スクリプト中の送信データ 　var req = { 　　address: "新宿三丁目駅", 　}; の後ろのカンマを取り除いても表示されませんか？ 　　address: "新宿三丁目駅",　⇒　address: "新宿三丁目駅" なお、googleの各種サービスの説明はgoogleサイトに詳しく説明されていますので、そちらを参照するのが一番確実です。 　https://developers.google.com/maps/documentation/javascript/reference 　https://developers.google.com/maps/documentation/javascript/geocoding
ざっと見ただけですが・・・ ＞　$(location.hash).next(".bbb").slideToggle("slow"); が、クリックイベントの処理定義の中に書かれていますが、これだとクリックする度にこの処理が走ります。また、クリックしないとこの処理は実行されません。（初期設定として実行されない） ご質問の内容からすれば、この処理は読込後1度だけ初期設定として実行されれば良いはずですので、クリック時のイベントハンドラからは外す必要があります。 次に、 ＞　$(location.hash).next(".bbb") ですが、location.hashはidに相当する文字列になると想像しますが、対象としたいクラスbbbの要素はこの兄弟要素ではなく子要素になっているのではないでしょうか？ それなので、nextではなくfindなどを用いて取得する必要があるでしょう。 　$(child, parent)～～ の書式で取得しても同様の結果が得られると思います。 以上を修正したとして、 ＞　$(location.hash).next(".bbb").slideToggle("slow"); １回だけの処理なので、必ずしもToggleの必要はないでしょう。show（又はslideDown）などで良いと思われます。 また、クリック時の処理内容を見てみると、title要素にactiveのクラス設定/削除が行われていますが、最初の時にはこの処理はしなくても良いのでしょうか？ （Toggleで設定されているので、以降のクリック時に期待とは違う結果になる可能性がありそうです） もし、必要な場合は処理を追加する必要がありますね。 同じことをする別の方法として、『該当するtitle部分をクリックしたことにする』という考え方もありそうです。 　$(location.hash).find(".title").click(); のようにしておくことで、実際の処理は設定したイベントハンドラに渡すという仕組みにしておくのが簡単かも知れません。 （イベントの処理内容がいろいろとある場合は、この方が効率的な記述になるでしょう。）
img.src は場合によっては絶対パスに自動変換されます なので、一概には言えませんが直すとしたら 誤: if(img.src == arguments[i]) { 正: if(img.src.indexOf(arguments[i]) > 0) {
アコーディオン:（折りたたんで開く）というより、プルダウンメニューと言うほうがよいかも。 　別にjavascript使わなくてもできます。CSS2.1ならoverflow、CSS3を使うなら:target擬似要素 ＞dtにフロートをかけ並べ＜ddをwidth100%にしてみたのですが、下記のURLの様にくずれてしまします。 　ddをabsoluteで他から切り離せばよい ＞position:absolute;で設定したところdtの内容が、下のアコーディオンが優先されてしまい切り替わりません。 　z-indexでレイヤを指定すればよい どう表現（プレゼンテーション）しようかではなく、文書構造を示してください。 ナビゲーションのリスト <nav> 　<ul> 　　<li> 　　　<ul> 　　　　<li></li> 　　　　<li></li> 　　　　<li></li> 　　　　</li> 　　　</ul> 　　</li> ・・・ 定義リスト <dl> 　<dt></dt> 　<dd></dd> 　<dt></dt> 　<dd></dd> </dl> 本文 <section> 　章 　<section>項目</section> 　<section>項目</section> 　<section>項目</section> 　<nav>目次</nav> </section> ・・・・プレゼンテーションにHTMLが引きずられたらダメです。
とりあえずその文は途中で切れています。その下のリンクも文の一部で、 The jQuery illuminate plug-in can be freely used or modified. If you would like to share your updates and contribute to the plug-in, please feel free to Send Me a Message. がプラグインのライセンスに関する規定の全文です。だから、この文にしたがって利用してください。 ……という答では満足されないでしょうから、簡単に訳すと 　この jQuery illuminate プラグインは自由に利用・改変できます。もしあなたがこのプラグインに対するあなたの改良や記述を共有したいのならば、どうか気軽に私にメッセージを送ってください。 となります。 ですので、ライセンスやらなんやらを気にせずに自由に使って大丈夫でしょう。むろん作者には敬意を払うべきで、これをあなたが一から作ったと言うなどの行為は論外ですが。
＞わかんないことがあるたび、１日以上かけて考えそれでもわかんなければ、教えてgooで聞いてました。 基本はそれでいいんです。 ただし解決するまで他のことを一切やらないのはもちろんダメです。 何事も正しく分かりやすい説明さえあればすぐ理解できると思ってはいけませんし、正しく分かりやすい説明が必ずしもこの世に存在するとも限りません。 逆に言えばすぐ理解できないからといって、勉強の仕方や、参考情報が悪いと決めつけてはいけないということです。 分からないことは頭の片隅に置いておいて、機会のある度に繰り返し繰り返し何十回も何百回もそれに触れて、調べて、使ってくうちに馴染んでようやく分かってくることも数多くあるのです。 もし良い参考書さえあればすぐ理解できるようになると思っているのなら、考えを改めたほうがいいです。 もしくは義務教育の教科のように、誰でもやさしく体系立てて習得できるような教科書が存在すると思っているのなら、考えを改めてください。 プログラミングは、独学が基本です。 自分は分からないことをどうやって調べて、どのように取り組んでいったら理解できるのか。 それもプログラミングの勉強の一部なのです。 あなたはまだ、基礎をやらないといけない段階です。 望むゲームを作るため、というかゲームを作るための参考情報を理解するには、何年分もの力と経験が足りません。それが分かったということは収穫だと思います。 まず、色んな入門サイトの基礎サンプルでも見て、いろんな知識を少しずつ付けて行ってください。 そしてまた望みのゲームを作ろうとしてみればいいです。必ず前回より良く作れるようになっています。 それを繰り返していけば、力もついて、ゲームも完成させることができるようになります。
> ■下記コードで、hogeは配列でしょうか？ 配列です。 　alert( hoge instanceof Array ); はtrueになります。 > ・配列のコピーはどうやるのでしょうか？ 新しい空の配列を作って、 配列hogeの全要素を新しい配列にコピーすれば良いです。 var hoge2 = []; hoge2[0] = hoge[0]; hoge2[1] = hoge[1]; //普通はループを使う。 自分で処理を記述するなら上記の通りですが、 concatに何も指定しないと要素が同じ新しい配列が返ってくるので var hoge2 = hoge.concat(); でも同じことができます。
値が半角数字の場合、本来JavaScriptでは「文字列」と「数値」どちらとしてでも扱えるようになっています。 ですから、通常はそのまま計算しても、ちゃんと計算できる場合がほとんどです。 ところが、計算式の演算子が「＋」だけであった場合、この演算子は文字列の連結にも使用されるため、スクリプトエンジンは「文字列」なのか「数値」なのか判断できず、本来の型である「文字列」として計算（文字連結）してしまうわけです。 この場合、値を「数値」に変換する必要があります。 例1：整数変換「parseInt」や、数値型指定「Number」を使う var f1 = parseInt(document.form1.c1.value); var fi = Number(document.form1.c1.value); 例2：文字連結に使用しない演算子を使用し、数値と思わせる。 var f1 = document.form1.c1.value * 1; var f1 = document.form1.c1.value / 1; var f1 = document.form1.c1.value - 0; f2、f3も同様にします。 あと、フォーム要素から値を取得した後に、同じ値を同じフォーム要素に書き戻しているのは、何か意図があっての事でしょうか？ もし分からず書いているなら、その行は不要です。 var f1 = (document.form1.c1.value);　 document.form1.c1.value = f1 ;　←ここは不要 それと、「f1 = (document.form1.c1.value)」と（）で囲まれていますが、これも何の意味がありません。 それらを踏まえたうえで書き換えたのが以下です。 ※追加されたC行部分のみ記載します。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ var f1 = Number(document.form1.c1.value); var f2 = Number(document.form1.c2.value); var f3 = Number(document.form1.c3.value); document.form1.ctotal.value = f1 + f2 + f3; ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ 最後に、要素をフルネームで記述するのは、最近のWebページではほとんど使用しないので、書き換えてみました。 各セルの値を配列に代入し、セルと配列を対応させて管理する方が、項目増えた時など編集が楽になると思うのですが、今回は省略。 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝ <BODY> <FORM name="form1"> <TABLE width="473" border="1"> <TBODY> <TR> <TD align="center">&nbsp;</TD> <TD align="center">A</TD> <TD align="center">B</TD> <TD align="center">C</TD> <TD align="center">D</TD> </TR> <TR> <TD>1</TD> <TD><INPUT type="text" id="A1" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="B1" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="C1" onchange="keisan()" style="width:25px"></TD> <TD><INPUT type="text" id="D1" style="width:100px" value="0"></TD> </TR> <TR> <TD>2</TD> <TD><INPUT type="text" id="A2" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="B2" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="C2" onchange="keisan()" style="width:25px"></TD> <TD><INPUT type="text" id="D2" style="width:100px" value="0"></TD> </TR> <TR> <TD>3</TD> <TD><INPUT type="text" id="A3" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="B3" onchange="keisan()" style="width:50px"></TD> <TD><INPUT type="text" id="C3" onchange="keisan()" style="width:25px"></TD> <TD><INPUT type="text" id="D3" style="width:100px" value="0"></TD> </TR> <TR> <TD colspan="3" align="right">C合計</TD> <TD><INPUT type="text" id="ctotal" style="width:25px" value="0"></TD> <TD>D合計<INPUT type="text" id="total" style="width:100px" value="0"></TD> </TR> </TBODY> </TABLE> </FORM> </BODY> <SCRIPT type="text/javascript"> function keisan(){ // 計算に使用するデータの行数（1～3なので3行） var gyou = 3; // C列合計 var goukei_c = 0; // D列合計 var goukei_d= 0; // 以下計算を行数分繰り返す for(i = 1;i <= gyou;i++){ // 行計算 var keisanti = document.getElementById('A' + i).value * document.getElementById('B' + i).value * document.getElementById('C' + i).value; // 計算した行の値をD行合計に加算 goukei_d += keisanti; // 現在の行のC列の値をC行合計に加算 goukei_c += Number(document.getElementById('C' + i).value); // 計算結果をフォームに出力 document.getElementById('D' + i).value = keisanti; document.getElementById('total').value = goukei_d; document.getElementById('ctotal').value = goukei_c; } } </SCRIPT>
ユーザー毎にサブドメインで分けてください。 それ以上の解決策はありません。
#1さんの言う通り、一瞬しか変わらない原因はリロードされてしまうことですね。 なので、 <input type="submit" … とするのではなく <input type="button" … とすればOKでしょう。 submitは送信なので、結果的にリロードされるのは当然。 buttonはデフォルトでは何もしないので、こういう場面で使えます。 return false; して、クリックをキャンセルして送信を防ぎ(結果的にリロードも防ぐ)方法もないではありませんが、buttonというタイプがあるのにわざわざsubmitを使ってわざわざ後からキャンセルするのは美しくはない。 今後、<input>ではなく、たとえば<a>リンクを使って切り替えたいという場面があるかも知れないので、return false;でキャンセルできるということを覚えておくのはいいかな。 onClick="view('contents1','contensGroup');return false;"
scrollspyというjQueryプラグインが有用です。 http://plugins.jquery.com/scrollSpy/
HTMLソースを参照するところ、top.jsが該当のスクリプトのようです。 しかしこれは伊藤忠のオリジナルのスクリプトと思われます。となると著作権は伊藤忠にあり、無断使用はできません。 「コンテンツの縦移動」　→　縦移動するスライドショー 「画像の切り替え」　→　ギャラリー（フェードで切り替え） 「ホバーの表示」　→　ツールチップ でjQueryのプラグインを探して組み合わせるか、独自に開発するしかないかと。
http://ogre.mx/1232 上記のページの方法は使えないですか？ htmlのh4にあらかじめクラスをつけておいて（<h4 class="trigger">とか）、それに対してクリックイベントをつける。 上記ページの方法で、 $('iframe').contents().find('h4.trigger')で、以下を.removeClassとかに変えて、クリックイベントをつけたh4からクラスをとってしまう。 同じ方法でdisplay:noneにしたところを.findで取得して、.show()で表示させる。 これでアコーディオンは解除されるのではないでしょうか。 試してないのでなんともいえませんが。 あと、わざわざiframeを使うよりは.load()でhtmlだけ呼び出したほうがきれいに作れそうな気がしますが。 cssは新たに必要かもですが。 http://semooh.jp/jquery/api/ajax/load/+url,+data,+callback+/
ANo.2です。 たまたま手元にあるＩＥが8なのですが… 例えば、 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <style type="text/css"> iframe.test { width:90%; height:90%; } </style> </head> <body> <div>Header</div> <iframe src="hogehoge.html"></iframe> <div>Footer</div> </body> </html> を読み込むと、iframeの高さはご質問文のようにデフォルトの300程度のものとなります。 CSSを html, body { height:100%; } iframe.test { width:90%; height:90%; } とすれば、ウィンドウの90%の高さとなります。 ANo2はまったくの推測で書いていますので、ご質問文からは読み取れない別のところに原因がある可能性も十分にあります。 ・・・と書いて、お礼のところをよく見たら、 『div.inlinef iframe』となっているようですが、ANo2にも書きましたようにサイズの相対指定の基準となるのは親要素のサイズです。 それなので、親要素のDIV（さらにその親があればそちら）を90%になるようにしておいて、IFRAMEは100%として指定する必要があるのでは？
これでいいんじゃないかな。使ったことありませんけど。 http://www.jquerystudy.info/reference/effects/interval.html
あったりなかったりするfunction()というのがよくわからないのですが・・・ メソッドはすべて記述方法が同じなわけではなくて、それぞれ（ある程度種類に分けられますが）記述方法が違ってきます。 function()はざっくり言うと、その直前に書いてあるメソッドが発動したら、「これ」をするという「これ」の関数を呼び出すものという感じかな～・・・ それで、たぶん例がhover()だから混乱するのだと思うのですが、 hover()は特有の記述方法を持っていて、hoverメソッドひとつでマウスが乗ったときと外れたときの両方のイベントを一気に記述できるという特徴があります。 参考http://semooh.jp/jquery/api/events/hover/over,+out/ hover(マウスが乗ったときのイベントハンドラ,マウスが外れたときのイベントハンドラ) 例のhoverと同じ動きをする記述としてわかりやすいのが、 $(function() { $("#foo").mouseenter(function(){ $(this).stop().animate({'marginBottom':'60px'},150); }).mouseleave(function(){ $(this).stop().animate({'marginBottom':'0px'},120); }); }); これは mouseenter()←マウスが乗ったら と mouseleave()←マウスが外れたら とがそれぞれ発動したらfunction()配下の関数をを呼び出しています。 $(document).ready(function(){}もドキュメントの読み込みが終わったら、function()以下を呼び出してねという感じです。 以上でわかりますかね？？？ ちなみにメソッドによって記述がちがうと言いましたが、 たとえば　.css()などのcss系メソッドなどは発動も何も、.css()の括弧内のパラメータどおりに操作するというメソッドなのでfunction(){}は.css(のあとにはつづきません。 またアニメーション系のメソッドのコールバック記述の際も直前にメソッドが当然こないのですが、その説明は割愛します。 メソッドの種類によって記述方法にルールがあるので、まずはそれを確認してみてはいかがかなと思います。
(1) > 下記で、property1はどこに存在しているのでしょうか？ > ・Hoge？ それとも、Hoge.prototype？ method1 を呼び出す時の呼び出し方によって this が変わります。具体的には■■.method1() と呼び出した時、this は ■■ となります。通常は var hogeInstance = new Hoge; hogeInstance.method1(); // …(i) などと呼び出しますので、this は hogeInstance になります。つまり、this.property1 は hogeInstance.property1 という事です。所で、もし仮に Hoge.prototype.method1(); // …(ii) 普通はしない とすると this は Hoge.prototype になりますので、this.property1 は Hoge.prototype.property1 を意味する事になります。普通はこの様な使い方はしませんが。また、 Hoge.method1(); // …(iii) Error の様な呼び出し方はできません。従って、普通の使い方 (i) をしている限りは、hogeInstance.property1 などを意味すると考えて下さい。 因みに、以下の3つは全て異なる物ですので区別して下さい。 ・Hoge ・Hoge.prototype ・hogeInstance などの様な Hoge のインスタンス (つまり、new Hoge で作成したオブジェクト) (2) > ・宣言していなければ自動的に作成される？ それともHogeまで遡る？ hogeInstance.property1 が定義されていない時、 ・値を読み出す時は Hoge.prototype.property1 が代わりに読み出されます。(Hoge.prototype.property1 も定義されていなければ undefined) ・値を代入する時は hogeInstance.property1 が新しく自動的に定義され、そこに値が設定されます。 (3) > ・そもそも、this.property1はどういう意味でしょうか？　これで宣言？ 「this に入っているオブジェクトの property1 という名のプロパティ」という意味です。宣言ではありません。 ※オブジェクトのメンバは明示的に宣言する事はありません。強いて言うならば代入の際に自動的に定義されます。従って、this.property1 = ～; と書いた時点で、未だ property1 メンバが this に定義されていなければ自動的に定義されるという事です。そういう意味で言えば "宣言+代入 と似たような効果" を持っているとも言えるかも知れません。"宣言" とは呼びませんが。
一例として、以下のような感じでできると思います。 指定地点の緯度と経度を指定して、そこから指定距離以内に ストリートビューデータが存在するかを見ています。 var svs = new google.maps.StreetViewService(); var py = 35; //緯度 var px = 140; //経度 var le = 30; //緯度経度からの距離（ｍ） svs.getPanoramaByLocation(new google.maps.LatLng(py, px), le, function(result,status){ if (status == google.maps.StreetViewStatus.OK){ ストリートビューが存在する } else { ストリートビューが存在しない } });
こんにちは。 ＞ただ、btn_upについてはどのように記述すれば良いかがわからず ほとんど、btn_downの処理と同じではないでしょうか。（方向が逆になるだけ） 簡単に整理すれば 　1）リストの最後から移動コマ分の複製をリストの前に追加 　2）リストの表示位置を調整（追加する前と同じになるように） 　3）リストの表示を移動（アニメーション） 　4）（コールバックで）リストの最後から移動分のリストを削除 みたいな感じ。 ＞var clone = target.find('li').slice(0,moveLength).clone(true); ＞このtarget.find('li')を変数に格納しているtargetListにすると ＞動作しなくなってしまいます。 最初にtargetListを定義したときは初期状態の要素構成で定義されています。 その後、アニメーションをするとクローン（初期の要素とは別要素）が追加され、もとからあった要素は削除され、順序も変わってしまいます。 それなので、後からtargetListを参照しても該当する要素がすでになかったり、その時の表示状態とは順序が変わっていたりするのでうまくいかないのではないでしょうか。 カルーセルの方法として、ご提示のように個々のリストをコピーしながら順次入れ替えてゆく方法と、初期設定で表示コマ分だけリストに追加しておいて、後はUL要素全体を移動することで表示位置を変えるだけ（LI要素は入れ替えない）という方法が考えられます。 後者の方法であれば要素が入れ替わることがないので、仮にtargetListを参照しても実際の構成と同じものが得られるはずです。 検索すると、先人たちのサンプルがいろいろ見つかると思いますので、考え方の参考にすると良いのではないでしょうか？ また、上記の両方の方法で作成してみるというのも勉強に役立つかもしれません。
何をなさりたいのかよくわかってませんが・・・ タブ形式の表示が複数あるHTMLに対してスクリプトでタブとして機能するようにしたいのではないかと想像しました。 ご質問に対する直接の回答にはなっていませんが、 まず、ご提示の様な番号を振る考え方から脱却したほうがよさそうに思われます。 （ご提示のHTMLだとidが重複しているので、文法違反にもなっています） ざっと見たところ、<ul class="tab_menu">とそれに続く<div class="tab_box">がセットになっていて、タブの要素を構成していると見受けました。 タブ的な切替表示ができれば良いだけであれば、要素の位置関係を利用して処理するようにすればよいと思われます。例えば、2番目のタブ（LI要素）をクリックしたら、2番目のコンテンツ（DIV要素）を表示するといった感じです。 これによって、idや番号は不要になりますし、li要素内ののリンクタグも不要にできます。(href属性の参照はしなくなるので） 制御で必要になるのは要素の意味を示すクラスだけで充分ですし、それは同時に、レイアウトや表示を制御するためにCSSで必要とする識別子としても（多分）十分なのではないでしょうか？ 現状のままでも良いですし、わかりやすくする意味でtab_menuとtab_boxをセットにして（例えばtab_setで）ラップしておいても良いかと思います。 スクリプトは『同じtab_set内で対応する順序の要素を表示する』といった内容で作成すれば、セットの数によることなく処理が可能ですし、タブの数がそれぞれで違っていても問題ないでしょう。 tab_menu内のLI要素数とtab_box内のDIV要素数が異なっている場合（通常はないはずですが）にスクリプトのエラーがおきる可能性がありますが、対応する要素が存在しない場合は処理しないようにするなどで、HTMLがおかしな場合でもエラーを回避することは可能と思われます。
１ページ内にタブボックスをたくさん設置 - JavaScript - 教えて！goo( http://oshiete.goo.ne.jp/qa/8743314.html ) との関連だと思いますが、できません。 ・HTML内に同じIDは複数置けません。 　class名にしても、異なる動作をさせることはできません。 　　一番目のボックスと二番目のボックスは異なる動作になります。表示位置などが違う 　そのjavascriptで動作させるページ。画面を上にスクロールさせてから、リンクを押したら元の位置に戻るでしょ!!!。なぜならリンク先のターゲットの位置がウィンドウ左上を原点にしているからです。 　ですから、二つの理由で、複数のタブボックスを一つのページには不可能なのです。 ★HTMLが文書構造だけを明瞭にマークアップされていれば、スタイルシートで行なうほうが簡単でしょう。それでもタブボックスとして機能するボックスは一箇所だけです。 　羅列されている異なるsectionについて、ひとつのビュー枠に表示させることになるでしょう。 　わからやすいようにHTML5風に書くと <section> 　<section> 　　<section> 　　</section> 　　<nav></nav> 　</section> 　<section> 　　<section> 　　</section> 　　<nav></nav> 　</section> 　<section> 　　<section> 　　</section> 　　<nav></nav> 　</section> を、 <section> ┌<section> ┐ │　 <nav>　│次のsub sectionへのリンクも含む ├─────┤ │<section> │ └─────┘ 　　以下のsub sub sectionは見せない。 　
　１ページ内に　複数のタブボックスを設置するために・・・ 　あの～何が問題なのか判りかねますが、私なりに解釈して回答してみますが、一枚のウィンドウにタブを表示させたいのでしょうか？OSもわかりません。もし、WIN７でしたら Internet Explorer を起動してツール、インターネットオプションをクリックするとプロパティダイアログの中心にタブとあります。これをクリックして、内容をよくみて「常に新しいタブで開く」にチェックを入れると新しいウィンドウが開かない代わりに新しいタブが開きます。質問の主旨はこういったことでしょうか。 　仲々お詳しいようなので、HTMLタグは私にはさっぱりです。
こんにちは ＞ while文のなかで番号に連番を振るやり方がわかりません って、ご提示のスクリプトにはwhile文がはありませんけど・・・？ 普通に番号付けしたいのなら、こんな感じ？ var start = 1; var end = 10; var data = [], i = start; while(i<=end){ 　data.push("連番：" + (i++)); } alert(data.join("\n"));
jquery を使えるのであればもっとみじかくかけます。 一行です。 http://webhako.net/jquery/select-set-value/
意図的な物か忘れた物かわかりませんが、return falseがifブロックに入っていません。 もう一つ、focusは括弧を付けてfocus()と書かないと実行されません。 必須ではありませんが、return falseとの対照を明確にするため、return trueしておくのが良いと思います。 function submitStop(e) { if (!e) var e = window.event; if (e.keyCode == 13){ pic.focus(); return false; } return true; } デフォルトでは画像にフォーカスを当てることはできませんので、tabindexを指定する必要があります。 <img id="pic" src="img/img.png" tabindex="0" />
$(document).ready(function(){ var 一定時間 = 5000, 指定時間 = 8000; $('.slideImg img:gt(0)').hide(); var f = function(){$('.slideImg :first-child').fadeOut(1000).next('img').fadeIn(1000).end().appendTo('.slideImg')}; setTimeout(function(){f(); setInterval(f, 一定時間)}, 指定時間); });
　CSS3のtransformを使うととっても簡単ですよ。ホーバーではなくクリックでしたら:target擬似クラスを使いましょう。javascriptじゃないのでjavascriptを禁止しているユーザーにも仕えます。(ただし古いブラウザには無効ですが、それこそJSで対処する。)
軽くリファレンスを見ましたが、文字列操作関連が見当たらなかったので、 愚直に JavaScript のやり方で実現 // titleに「あ」が含まれてるやつだけ抽出 Enumerable.From(array).Where('$.title.match(/あ/)')
■A.html------------------------------ <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>A.html</title> <script> /** * バリデーション */ function _check(){ var name = document.getElementById("name").value; if(name.length < 6){ alert("名前は6字以上でお願いしますだ。") return false; } return true; } /** * 送信 */ function _submit(){ var name = document.getElementById("name").value; // セッションストレージに一時保存 sessionStorage.setItem("formdata",name); alert("送信データ:" + name); return true; } </script> </head> <body> <div> <form action="B.html" method="post" onsubmit="return _submit();"> 名前：<input type="text" id="name" name="name" value=""><br> <input type="submit" value="送信" onclick="return _check();"><br> </form> </div> </body> </html> ■B.html--------------------------------- <!DOCTYPE html> <html> <head> <meta charset="UTF-8"> <title>B.html</title> <script> function _load(){ var name = sessionStorage.getItem("formdata"); alert("受信データ:" + name ); //受け取ったら消す sessionStorage.removeItem("formdata"); } </script> </head> <body onload="_load()"> <div> B.html </div> </body> </html>
まず、ご質問の内容についてですが・・・、 実際のコードを示せば、すぐに的確な回答がついたかもしれません。 本題に戻ります。たぶんどこかで構文ミスをしているのでしょう。 私もよくやってしまうのですが、NaN や undefined が出ます。 内容が複雑ではないので、私なりに作成してみました。 入力フォームということで、テキストボックスで良いでしょうか。 <html><head> <script type='text/javascript'> function keisan(){ var price1 = (document.form1.tanka1.value) * (document.form1.suryo1.value); document.form1.kingaku1.value = price1 ; var price2 = (document.form1.tanka2.value) * (document.form1.suryo2.value); document.form1.kingaku2.value = price2 ; var price3 = (document.form1.tanka3.value) * (document.form1.suryo3.value); document.form1.kingaku3.value = price3 ; document.form1.total.value = price1 + price2 +price3; } </script></head> <body> <form name='form1'> <table border='1'> <tr><td align='center'>商品</td> <td align='center'>単価</td> <td align='center'>数量</td> <td align='center'>金額</td></tr> <tr><td>商品1</td> <td><input type='text' name='tanka1' onChange='keisan()' style='width:100px' />円</td> <td><input type='text' name='suryo1' onChange='keisan()' style='width:50px' /></td> <td><input type='text' name='kingaku1' style='width:100px' />円</td></tr> <tr><td>商品2</td> <td><input type='text' name='tanka2' onChange='keisan()' style='width:100px' />円</td> <td><input type='text' name='suryo2' onChange='keisan()' style='width:50px' /></td> <td><input type='text' name='kingaku2' style='width:100px' />円</td></tr> <tr><td>商品3</td> <td><input type='text' name='tanka3' onChange='keisan()' style='width:100px' />円</td> <td><input type='text' name='suryo3' onChange='keisan()' style='width:50px' /></td> <td><input type='text' name='kingaku3' style='width:100px' />円</td></tr> <tr><td align='right' colspan=3>合計</td> <td><input type='text' name='total' style='width:100px' />円</td></tr> </table> </form> </body></html>
>・JavaScriptでページングやテーブルソートを書くと、サーバ言語で書く場合と比較して、重くなる可能性があるのでしょうか？ ネットワークとCPUやメモリが関係してくると思います。 可能性があるかどうかといわれればあります。 >・クライアントに依存するということでしょうか？ そうですね >・件数が多い場合、スマートフォンでの表示切替は厳しい？ 古い機種ほど重くなると思います。 一画面に件数の多いテーブルを表示するということ自体を見直すべきではないですかね
こんな感じかな //画面内クリック $(document).click(function(){ $("#backnumbers").slideUp(); }); //backnumbers内クリック $("#backnumbers").click(function(e){ //イベントバブリングの停止 e.stopPropagation(); }); http://blog.neo.jp/dnblog/index.php?module=Blog&action=Entry&blog=pg&entry=3107&rand=226e7
クリックする対象は「メニュー3」ですよね？ ならば $("#header-bn") ではなく $("#header-bn > a") ですよね。 現状では<li id="header-bn">内をクリックしたら イベントが発火するようになってしまっています。
文字列以外でも代入できるなら保証できません。 value = { toString: function(){ alert('hoge'); return '何らかの値'; } }; alert("valueは"+value+"です"); doucment.write("valueは"+value+"です"); str = "valueは"+value+"です"; .toString()の代わりに.prototype.valueOf()を使ってもいいかもしれません。 valueに代入できる物を文字列に限定するなら、 value = 'alert("hoge")'; eval() を使わずにスクリプトとして実行させる方法があったはずですが、 「alert("valueは"+value+"です");」 この書き方の方をごちゃごちゃさせなきゃ行けなかったはずなので、普通はセキュリティーホールにはならないと思います。
配列の配列です。 配列の中の各要素が配列という構造になっています。 二次元配列、または多次元配列と言います。 配列の中に配列があるというのは 電車の車両と座席をイメージすれば解りやすいかと。
下記の方法が思いつきました。 詳しい実装方法はググれば見つかります。 sessionStorageが簡単かと思いますが、注意としては古めのブラウザは非対応です。 方法1. URLパラメータに持つ 方法2. クッキーに持つ 方法3. sessionStorageに持つ
記述箇所はどこでも良いはずですが、特定のページでのみbxsliderを使うのなら、そのページの<head>内に記述するのが一般的です。 呼び出すというのは、<body>部分のスライドショーにしたい画像のリスト部分のことを言います。 ・jquery.js 　　　　　 （jQueryのファイル） ・jquery.bxslider.js　（bxsliderのjsファイル） ・jquery.bxslider.css（bxsliderのcssファイル） この3つがあればローカルでも動作しますよ。 jQueryファイルはバージョンによっては動作しないことがあるかもしれません。ご注意ください。 ●記述例 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> <html xmlns="http://www.w3.org/1999/xhtml"> <!--- ↓ここからhead部分↓---> <head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /> <title></title> <script type="text/javascript" src="jquery-1.8.1.js"></script> <script type="text/javascript" src="jquery.bxslider.js"></script> <!--- ↓ここがbxsliderを呼び出す記述↓---> <script type="text/javascript"> $(document).ready(function(){ $('.bxslider').bxSlider({ auto: true }); }); </script> <!--- ↓bxsliderのcssファイル　スライダー部分のレイアウトが記述↓---> <link href="jquery.bxslider.css" rel="stylesheet" /> </head> <!--- ↑ここまでhead部分↑---> <!--- ↓ここからbody部分↓---> <body> <!--- ↓ここがbxsliderの画像↓---> <ul class="bxslider"> <li><img src="pic1.jpg"></li> <li><img src="pic2.jpg"></li> <li><img src="pic3.jpg"></li> <li><img src="pic4.jpg"></li> </ul> <!--- ↑ここまでbxslider部分↑---> </body> <!--- ↑ここまでbody部分↑---> </html> ざっくり説明すると、body内に　<ul> と <li> タグで画像を並べたら、<ul>タグにクラス「.bxslider」をつけて、それを 　　　$(document).ready(function(){ 　　　 $('.bxslider').bxSlider(); 　　　}); と呼び出すことでスライダーとして動作するというものです。 「 $('.bxslider')」の部分には<ul>タグにつけたクラス名が入ります。 <ul>タグにつけたクラス名を変更したときは、この呼び出し部分の記述も同様に変更します。 「auto: true」はオプションです。 自動でスライドさせたいときにつけます。 bxsliderの配布元サイトにcssファイルを含めたファイルが一式あったように思います。 そちらは参考にされましたか？ オプション（いろいろな動作）についてもサンプルがありますよ。 ●配布元 http://bxslider.com/
126行目 _this.$elem.wrapInner('<div id="'+_this.config.page_id+'" />').find("#"+_this.config.page_id).before('<div id="build-menu" />'); ↓ _this.$elem.wrapInner('<div id="'+_this.config.page_id+'" />').find("#"+_this.config.page_id).after('<div id="build-menu" />'); before→afterに変えただけです。 検証はしていませんがどうでしょう？
Ajaxがどうのこうのという話ではなく、そもそも単純にSQLがきちんと書けていないだけではないかと思いますけど。 「SELECT * FROM usr WHERE `userId`=$userId_e AND `pw`=$pwd_e」 というコードだったら「$pwd_e」の値が「p3kchds243j5」の場合 「SELECT * FROM usr WHERE `userId`=$userId_e AND `pw`=p3kchds243j5」 になりますよ。 「SELECT * FROM usr WHERE `userId`=$userId_e AND `pw`='p3kchds243j5'」 にはなりませんよ。 以下のようなコードにするのがいいのではないかとPHPの公式マニュアルには書いてあります PHP: mysql_real_escape_string - Manual http://php.net/manual/ja/function.mysql-real-escape-string.php $query = sprintf("SELECT * FROM users WHERE user='%s' AND password='%s'", mysql_real_escape_string($user), mysql_real_escape_string($password));
問題ないと思いますよ。 と、言われても心配は拭えないと思うので、ご自分でしっかり検証はしてみてくださいね。 check.phpは複数人の発言？を登録したDBから30秒ごとに取得します。 ここに個人は関係ないですね。 tableに作成日時や更新日時は持ってますか？ 持ってなければレコードのidでもいいと思います。 ただし、このままの実装では自分の発言に対しても、アラートが発生しますので、その辺りが問題なら考慮してあげてください。
＞if(document.form1.text_1.value.match(/[^0-9]+/)){ if(document.form1.elements["text_"+i].value.match(/[^0-9]+/)){ ちなみに「match(/[^0-9]+/)」で「文字である」という判断は微妙ですね たんに数字以外の文字が含まれているというだけです また含まれているだけのチェックなので、この場合は「+」はなくても大丈夫です
アコーディオンですかね。
ANo2です。 ＞ご指摘通りhtmlファイルが複数出来ますが私のスキルの限界でhtml ＞のファイル名を決めるだけで中身に手を入れず、ファイル名と同じ ＞フォルダを用意し中に１～のpngファイルとdata.jsを放り込むだけ ＞でページ作成が可能になるように考えた結果であります サーバサイドのプログラムは使わないにしても、ANo2でも書きましたように、HTMLファイルを複数作成しなくても良いのではないでしょうか？ 　hogehoge.html?date=20140623 のようなアクセス方法が可能であれば、HTMLファイルは一つのものですむと思います。 ご質問でご提示の方法で「HTMLファイル名（URL）から参照データを作成する」部分を「URLのクエリ部から参照データを作成する」といったように変えればあとは同じで済むと思います。 後者はlocation.searchから取得することが可能ですし、データファイル名を作成した後はまったく同じ処理で済むと思います。 ＞理想は、data.jsに該当する物は一つで配列名を可変出来れば・・・ ＞もっとシンプルになるのですが このイメージがどのようなものなのかよくわかりませんが、dataファイルが一つということは全情報が1ファイルになっているということでしょうか？ 無理やりやるなら、 　window["fuga"] で、グローバル変数fugaにアクセスができるので、できないことはないと思いますが、document.writeと同様お勧めはできません。（グローバル変数に限っています） 変数名を変えたいような場合の解決法の一つとして、変数を配列にしておいてそのindexを変えることで対応可能かと思います。（変数名は固定、indexが可変） （ご提示の変数がすでに配列ですので、配列を配列化することになります） それによって、indexを渡せばそれに応じたデータを取得することが可能になります。 でも、1ファイルにある全てのデータを一旦読み込んでから、その（ごく）一部のみを利用するのでは、無駄な通信を増やすことになりませんか？ その意味からも、データは別ファイルにしてあるほうが宜しそうな気がしますが… ＞ちなみに、メニューのスクロール機能のためにajax？は利用していますが～～ であれば、その関数を利用することでデータファイルの形式もかなり自由にできますね。 実行順序の制御も、コールバックを利用することで確実になります。 まぁ、このあたりはデータをどのように作成しているかやそのデータを他に利用しているかといったことも関係してきますので、ご質問の文章だけでは判断はできませんが…
String の replace 関数は、 置換後の値として関数を受け付けますので、 高度な変換を行いたい場合に便利です。 var 置換関数 = function(s, g1, g2){ var url = 'file://' + g1 + (g2? g2.replace(/\\/g, '/'): ''); return '<a href="' + url + '">' + s + '</a>'; }; var 新しいHTML = str.replace(/\\\\([^\s\/\\]+)(\\[^\s\/\\]+)*/gi, 置換関数); 余談ながら UNC 形式のファイルリンクを表す正規表現は、 ホスト名とパス名でルールが異なるので、 分離して記述したほうが良いと思います。
#1です すみません、曲解していたようで単なるjavascriptの話でしたね nameで要素にアクセスするとロクなことがないので 手っ取り早く処理するならidを振ることです。 ざっくりこんな感じで <script> function go(){ var get = 1; for(var i=1;i<5;i++){ var answer=document.getElementById("a"+i.toString()); var start_time=document.getElementById("s"+i.toString()); answer.value=parseFloat(start_time.options[start_time.selectedIndex].value)-get; //answer.value=parseFloat(start_time.value)-get; //これでもいけるはず } } </script> <?php $day = 1; while ($day < 5){ ?> <form> <tr> <td><select name="<?php echo $day ?>[start_time]" id="s<?php echo $day ?>" onblur="go()"> <option value="1" >1</option> <option value="2" >2</option> <option value="3" >3</option> <option value="4" >4</option> </select> </td> <td><input type="text" name = "<?php echo $day ?>[Answer]" id="a<?php echo $day ?>" readonly value="" style=width:40px></td> </tr> </form> <?php $day++; } ?>
動くと思うんですがね・・・ nameCとnameDが逆になってるのかも？ 下記と比較してください。 function copyToC() { var nameC = document.getElementById("nameC"); var nameD = document.getElementById("nameD"); nameD.value = nameC.value; } function copyToD() { var nameC = document.getElementById("nameC"); var nameD = document.getElementById("nameD"); nameC.value = nameD.value; } ※余談 スクリプトをシンプルにしたいなら下記でもOK タグ <input name="name" id="nameA" onkeyup="copyTo('nameA','nameB')"> <input name="name" id="nameB" onkeyup="copyTo('nameB','nameA')"> <input name="name" id="nameC" onkeyup="copyTo('nameC','nameD')"> <input name="name" id="nameD" onkeyup="copyTo('nameD','nameC')"> スクリプト function copyTo(fromId, toId) { var fromTag = document.getElementById(fromId); var toTag = document.getElementById(toId); toTag.value = fromTag.value; }
修正したところだけ、書きますね。 <script type="text/javascript"> var prod_name=["リラックスチェア","リラックスデスク","ブックスタンド"]; var prod_price =[4000,12000,800]; </script> ↑まず、この部分は、中かっこ「{」ではなく、大かっこ「[」で囲います。 　また、文字列はダブルクォーテーション「"」で囲います。 <script type="text/javascript"> document.open(); document.write("<tr>"); document.write("<td>"+ prod_name[0]+"</td>"); document.write("<td>"+ prod_price[0]+"</td>"); document.write("</tr>"); document.close(); </script> ↑次にこの部分、documentを使う場合、open()、close()を書きましょう。 　あとは、ダブルクォーテーションにするだけです。 　ループして、配列の他を表示する等、いろいろ練習してください（＾＾）
生のjsは苦手ですが、bodyのonLoadにinit()を指定。 <body onLoad="init()"> init()は下記のようにすると良いでしょう。 function init(){ var sel = document.getElementsByName('url'); sel[0].getElementsByTagName('option')[1].selected = 'selected' loadFeed(sel[0]); }
> element.click(function(){ >　～ > } > > ↑これはエラーが出てしまいました。 ん～、ぬるぽだったんじゃないか？　一度elementが設定されたらそんな事はないはずだけど。例えば、<head>内に以下のように書いたとしよう。 var element; // クリックしたinputの要素をelementに代入 $(function(){ 　$("input").click(function(){ 　　element = $(this); 　}); }); // elementを利用する function alertEx(){ 　alert($(element).val()); } element.click(function(){ // ・・・(1) 　alert("hoge"); }); これは明らかにミスだ。なぜならば、(1)の時点ではelementはnullだからだ。だがしかし、 var element; // クリックしたinputの要素をelementに代入 $(function(){ 　$("input").click(function(){ 　　element = $(this); 　}); }); // elementを利用する function alertEx(){ 　element.click(function(){ // ・・・(2) 　　alert("hoge"); 　}); } これは即座にはエラーにならない。このページがロードされた後、一度もinputタグをクリックせずにalertEx()を呼び出して(2)に到達した時だけエラーになる。IE10、jquery 1.8.3で確認。これもエラーにならないようにするには function alertEx(){ 　element && element.click(function(){ 　　alert("hoge"); 　}); } などとnullチェックを追加すれば良い。ところが、これだとalertEx()が呼び出された時にelementに入っているinputにどんどんどんどんイベントハンドラが追加されていってしまう。画面をロードしてinputをクリック→alertEx()を3回呼び出す→inputをクリックするとhogeが3回アラートされるようになる。これはフラグを持つなりで自分で対処しないといけない。 「エラーが出る」というのは具体的に書いた方がいいだろう。そのコードを書いた後、どのブラウザで、どうした時に、何というエラーメッセージが表示されるのか。
window.open("test.html","win","menubar=1 toolbar=1"); open()はメソッドであり代入される対象ではないと思います。 １行目のこの時点で画面が開いてしまいます。
#2 です。補足を読みました。 > 前の補足にも書いたのですが、第1引数がなぜ０なのかわかりません。 index なのだから配列と同じように 0 から始まるものだと思いますが、「どういう理由で何が入るはず」とお考えなのでしょうか？ # Re: tezzo047さん
結局、parents, children(find), siblingsなどを使って目的のタグを指定すれば良いのです。 以下、未検証ですがこんな感じかと。 $(this).toggleClass('active'); $(this).parents('ul').find('dt').not($(this)).removeClass('active');
jqueryのセレクタはidが高速なので、なるべくidを使ってます。 右ラジオボタンにid="rightbtn"をつけます。 ラジオボタンはキーボード操作もあるのでchangeのほうが直感的に良さそう。 checkedの判定はtrue, falseを返すpropを使ってます。 検証してないですが、下記参考までに。 $("[name='sample1']").change(function(){ if($('#rightbtn').prop('checked') ){ $("[name='sample2']").attr("disabled", true); } else { $("[name='sample2']").attr("disabled", false); } });
http://okwave.jp/qa/q8700647.html オーソドックスな方法がNo.3で詳しく書かれていますのでご参考にどうぞ。 >var times = [2, 10, 8, ・・・] この部分をMySQLから取り出した値にすればいいです。
これが使えるのではないでしょうか。 http://triflejs.org/ PhantomJSとIEコンポーネント（.Net WebBrowser Class）を使うライブラリらしいです。
直接エラーが出ているのはthis.ctx.fontですが、そのメソッドを呼び出している部分が異なります。 setInterval(drawAnime, 1000); /* 1秒ごとにエラーが出る部分 */ drawAnime(layer1, lay1ctx); /* テストです という文字を表示する部分（プログラム開始時に1回だけ実行） */ -------------- >setInterval(drawAnime, 1000); この書き方でのsetIntervalから呼び出されるdrawAnime()には引数が渡りません。 そのため、 drawAnime関数のコード >function drawAnime(layer1, lay1ctx){ >var SSESocArc = new SocArc(lay1ctx); >SSESocArc.drawArc(50); >} この時のlay1ctxはundefinedですので、 >var SocArc = function (ctx){ >this.ctx = ctx; >} このコンストラクタで生成されるthis.ctxはundefinedとなります。 ------------------------------ 修正案 なお、同じ内容で描画するだけですので、1回しか描かれていないような見え方になります。 var SSESocArc; /* グローバル変数に変更 */ onload = function() { var layer1 = document.getElementById('layer1'); if ( ! layer1 || ! layer1.getContext ) { return false; } var lay1ctx = layer1.getContext('2d'); SSESocArc = new SocArc(lay1ctx); /* オブジェクトを生成して描画の準備 */ drawAnime(); /* 最初の描画 */ setInterval(drawAnime, 1000); /* 1秒ごとに描画を繰り返す */ }; /* インターバルで呼び出す関数ではオブジェクトの生成は行わずに、描画だけを行う */ function drawAnime(layer1, lay1ctx){ SSESocArc.drawArc(50); } var SocArc = function (ctx){ this.ctx = ctx; } SocArc.prototype.drawArc = function(){ this.ctx.font = "20px 'Ariel bold'"; ← エラーはココ this.ctx.fillText("テストです", 100, 100); }
ifの条件がわかりにくいので、外に出してフラグ用の変数や判定用の関数を定義したほうが見やすいです。 同じ物も繰り返しが多いのでなるべくひとかたまりにしたいですね。 あんまりいいとは思えないけど、実装例です。 contentとnavを対応付けるようにマークアップして、関数で紐付けるというようなイメージです。 if(inView($obj)){ var nav_selector = getNavSelector($obj); changeNavStatus(nav_selector); } こういうのは一般にScrollSpyというようですね。 自分の場合は、こういうのは自前で実装しないでライブラリを使っちゃいますねー。 http://iaarchiver.net/post/2012-03-14-1550 https://github.com/uikit/uikit/blob/master/src/js/scrollspy.js
IE9 以上なら <script> addEventListener('DOMContentLoaded', function(){ var checkAgree = function(ev) { var agreed = document.forms['chbox'].elements['cBox'].checked; if (!agreed) { ev.preventDefault(); alert('同意して'); } } var Q = function(s){return Array.prototype.slice.apply(document.querySelectorAll(s))}; Q('a.agreed').forEach(function(a){a.addEventListener('click', checkAgree, false)}); Q('form.agreed').forEach(function(f){f.addEventListener('submit', checkAgree, false)}); }, false); </script> <form name="chbox"> <label><input type=checkbox name="cBox"> 上記、「システム利用規約」に同意します。</label> </form> <a href="page1.html" class=agreed>リンクで遷移する場合</a> <a href="page2.html" class=agreed>複数でも大丈夫</a> <form method=GET action="page3.html" class=agreed> <button type=submit>サブミットで遷移する場合</button> </form> <form method=GET action="page4.html" class=agreed> <button type=submit>複数でも大丈夫</button> </form>
別にjavascript使わなくても・・ 普通にHTML書いて、スタイルシート記述するのが簡単。 ナビゲーションリストを様々にデザインしてみよう。( http://www.ichiya.com/WebService/Howto/sample/HTML/nav/navigation1.html ) 　にて、ブラウザの表示メニューから、スタイルシートを選択してみる。 ・画像下 ・テスト 　がそれに当たる。 　javascript使わないので、javascriptが無効なブラウザでも動作するし・・・ 　要はHTMLさえちゃんと書いてあれば、どうにでもなる。
#3 です。 > 「javaを使わない」という条件だと、XMLのリクエストのみで実現は可能でしょうか。 DB上にあるデータを全てXML化して置いておけば出来なくはありません。 ただ、その場合は静的データ(XML)で管理することになるので、DBを使用する意味がなくなると思うのですが…。 DBを利用するならサーバサイドスクリプトの存在は必須です。 1. DBの内容をサーバ意サイドスクリプトで出力 2. 出力データを JavaScript で受け取り、カレンダーに描画する このような処理が必要になります。 出力データのフォーマットは JSON, XML 何でも良いですが、JavaScript で認識しやすいデータが望ましいですね。 DBデータがあらかじめキャッシュして置ける内容なら初めからJavaScriptに全データをObjectとして渡しておくのが理想だと思います。 月が変化する毎にリクエストを発行する必要がなくなりますので、コードを単純化できます。 その場合は、カレンダーを出力するHTMLをサーバサイドスクリプトで書いて、JSONを出力しておくのが楽な実装ですね。 # Re: mifu223さん
Canvasで可能です。
新規ドキュメントで調べてみたところ、スウォッチ９個（「なし」含めると１０個）に対して、colors.lengthは14。 つまりスウォッチになってないColorオブジェクトが５つほどあるみたい。 そういうColorオブジェクトを取得して、duplicate()してから各プロパティを変更するってのはどうでしょう。
前に確か回答したと思いますが……。 ２つのセルに日付のフォーマットが設定されているのでしたら、それをもとにDateオブジェクトを作成し、そこからgetTimeでミリ秒換算した値を取り出して引き算すればいいです。得られた結果を１日のミリ秒数で割れば日数が得られます。 function testfunc(e) { var sheet = SpreadsheetApp.getActiveSheet(); // とりあえずアクティブシートを指定 var r1 = sheet.getRange(1, 1); // １つ目のセル var r2 = sheet.getRange(2, 1); // ２つ目のセル var d1 = new Date(r1.getValue()); // Dateを作成 var d2 = new Date(r2.getValue()); // Dateを作成 var dt = Math.abs(d1.getTime() - d2.getTime()); // ミリ秒数値を引き算 var d = dt / (1000 * 60 * 60 * 24); // １日のミリ秒数で割り算 Logger.log(d + "日 "); // ログに出力 }
http://stackoverflow.com/questions/12562118/elastic-image-slideshow-autoplay-resume-after-thumbnail-clicked によれば _self.options.autoplay = false; の後に setTimeout( function() { _self.options.autoplay = true; _self._startSlideshow(); }, 5000); //restart autoplay after 5 seconds を追加すれば5秒後に再スタートするようです。 5秒後が嫌なら追加したコードの5000を変更してください。ミリセカンドです。
>JavaScriptを始めたばかりで本を見ながら作って見ました そういうことでしたら、Google MapsやGPS云々の前に、まずJavaScriptの基本文法からしっかりと学ばれたほうがよいと思います。いきなり、面白そうな機能に飛びついても、基礎がないと何一つ身になりませんから。 今回の質問も、関数の定義、配列の操作といった基本がわかっていればおそらく自力で解決できたでしょう。基礎はあまり面白くありませんが、基礎がないと面白いものは作れません。がんばってください。
原因はコンソールを見るとわかると思います。 <!DOCTYPE html> <title>audio test</title> <input type="file" id="input"> <script> document.getElementById('input').onchange = function () { new Audio(URL.createObjectURL(this.files[0])).play() } </script>
>どの様な、スクリプトを記述すれば、 >実現するでしょうか？ 質問文にあったスクリプトと基本的には大差ないと思いますよ。 var ss_copyFr = SpreadsheetApp.openById( コピー元のID　); var ss_copyTo = SpreadsheetApp.openById( コピー先のID　); var sheet_copyFr = ss_copyFr.getSheetByName(　シート名　); var sheet_copyTo = ss_copyTo.getSheetByName(　シート名　); var d = sheet_copyFr.getRange(　範囲指定　).getValues(); sheet_copyTo.getRange(　範囲指定　).setValues(d); こんな感じでできるはずです。
セレクタがクラス指定だけなので、全部に反映されてしまうのはご推察の通りでしょう。 APIなどから処理中の要素が取得できれば簡単なのですが、このプラグインはその様には作成されていないのかも。 （thisは自分を返すみたいだし、ドキュメント情報が見つからなかったので不明ですが） とりあえずの方法として、個別に設定することにすればなんとかなるのではないでしょうか。 ANo1様と同様の発想ですが、jQuery利用なので繰り返し記述する必要はないでしょう。 （classは現状のままで、id等は不要です） （全角空白は半角に） $(document).ready(function(){ 　$('.gallery').each(function(){ 　　var obj = $(this); 　　obj.touchSlider({ 　　　mode: 'index', 　　　center: true, 　　　prevLink: 'a.prev', 　　　nextLink: 'a.next', 　　　single: true, 　　　onChange: function(prev, curr) { 　　　　$('.counter', obj).html((curr+1)+'/'+ obj.get(0).getCount()); 　　　} 　　}); 　}); }); ※ start時にはchangeのイベント処理も呼ばれているようなので省略。 ※ ご提示のサンプルで要素idが重複しているのは文法違反ですのでご注意。
ANo3です。 書き忘れました。 (^_^;) ANo3は、右上を基準にスタンプを押す場合を想定しています。 getPageBox()でそのページのサイズを取得していますので、スタンプの位置が左上、右下などの場合は計算を修正すれば同様の方法で可能かと思います。
>１行目の「jquery.min.js」は読み込む必要ありますでしょうか？ wookmarkはjQueryのプラグインという位置付けですので、「はい」 ただし、wordpressがもともと読み込んでいるものがあれば新たに読み込む必要はありません。 >またその下に下記のような記述があるのですが、これはヘッダーに 貼付ければよろしいのでしょう？？ そうですが、optionsでところどころオプション的な自分で設定する記述もありますので、ご自分の環境にあうように設定してください。
> resetCategoryとrequestCategoryにはどういった構文の意味があるのでしょうか？ 関数の名前です。 どういう処理を行う命令なのかを明記すべきでしょう。 > あと、なぜresetCategory、requestCategoryのCは大文字なのでしょうか？ キャメルケースと呼ばれる命名記法です。 言語によって利用する記法セオリーが異なりますが、JavaScriptはキャメルケースです。 http://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%A1%E3%83%AB%E3%82%B1%E3%83%BC%E3%82%B9 確認してたときのコードが混じってました。 console.log(val); は不要です。
No.4 の補足に対して querySelectorAll('body *') <p id=kara> の内部を全部対象とするなら → querySelectorAll('p#kara, p#kara *') <p id=kara> の内部に<a>とか<span>とか<script>があって、 そちらは対象外にしたいなら → querySelectorAll('p#kara')
成功したときに出力するphpでscriptを記入して openerに対して処理すればいけるはずですが・・・・ たとえば //main.htm <script> function pop() { wobj = window.open("sub.htm", "pop","scrollbars=yes,width=480,height=360"); wobj.focus(); return true; } </script> <input type="button" onclick="pop()" value="open"> <textarea id="hoge"></textarea> として、 //sub.htm <script> window.opener.document.getElementById("hoge").value +="test\n"; </script> とし、mainのボタンをおす度またsubをF5で更新するたびに mainのテキストエリアに追記されますよね？ （そういうことじゃない？） ただしポップはなにかと制限があるのと、死ぬほど嫌う人がいるので 自分や仲間内だけしか使わないサイトなど以外で運用するのはやめた方がいいでしょう
// JS1.6 or ES5 or IE9 function uniq(a) { var compare = function(x,y){ for (var i in x) if (x[i] !== y[i]) return false; return true }; var makeCondition = function(o){return function(x){return compare(x,o) && compare(o,x)}}; var callback = function(p,c){if (!p.some(makeCondition(c))) p.push(c); return p}; return a.reduce(callback, []); } 重複がまとめられた配列A = uniq(配列A);
その手前まで、散々ieを操作してきながら、なぜいきなりlocation.href？　これは、JavaScriptといっても、Window Script Hostのスクリプトですよね？ その手前で、ie.navigateで表示をしているのですから、location.hrefのところも同様にie.navigateすればいいと思いますよ。
myFunction()を呼び出してdocument.test.data1.valueに値を入れてから、その値を取り出してください。
>hh:mm形式にするには 得られるのは秒数換算された値です。値を１時間の秒数（60 * 60）で割れば時数が得られます。そのあまりを１分の秒数（60）で割れば分数が得られます。
質問文を素直に実行するのなら。 $("span:not([class])").each( function(i){ var childNodes = this.childNodes; $(this).replaceWith(childNodes); }); 検証データ 動作前 <div> <p> <span class="a">あいうえお</span> <span>かきくけこ</span> <span class="b">さし<span>す</span>せそ</span> <span>たち<span>つ</span>てと</span> なに<span>ぬ</span>ねの </p> </div> 動作後 <div> <p> <span class="a">あいうえお</span> かきくけこ <span class="b">さしすせそ</span> たちつてと なにぬねの </p> </div> 改行コードは半角スペースとして表示されます。（HTMLの文法に準拠。） .children()にtextNodeが入っておらず、意外と苦労しました。
>一覧の表示の禁止を記述した方がいいのでしょうか？ サーバー初期設定で行われている物をわざわざ書く必要はありませんが、書きたければ書いてもいいです。 「明記」を目的に書く事もあります。 ファイル一覧を表示する事はほとんどないと思いますが、 リファラーによるアクセス制限をするのであれば、上位ディレクトリの.htaccessを書き換えた場合の不意のトラブルを避けるためにも書いておいた方がいいとは思いますけどね。
なんかつっこみどころがかなりあるのですが とりあえずsize.htmlのbody(?)関数をこんな風にしてはどうでしょう？ function body(n) { opt=window.opener.document.myForm.selection01[parseInt(n)-1].checked=true; window.close(); }
必ずしもダウンロードを防ぐわけではありませんが， jQueryによるアクセスであれば X-Requested-with: XMLHttpRequest というヘッダが送られるので (大抵のライブラリでも送られますが)， これを条件に.htaccessで制限をかける，という方法があります。 ref) http://api.jquery.com/jQuery.ajax/ (jQueryのajaxメソッドのマニュアル) https://www.google.co.jp/search?q=X-Requested-with+.htaccess&lr=lang_ja (X-Requested-with .htaccessによるgoogle検索結果) クロスドメインでのアクセスの場合，これでは対応できないのですが， Originあたりのチェックをすればよい気はします。
<div id="area_hoge2"> のところに style="display:none;" を追加。 <a ～>表示</a> のところの style="display:none;" を削除。 <a ～>非表示</a> のところに style="display:none;" を追加。
前にどこかのサイトで書かれていたものの受け売りですが。。。 //　ここから　 var w = window.innerWidth; var x = 900; if( w <= x) { viewtype = 'sp'; } else { viewtype = 'pc'; } //　ここまで 　 あとは目的の場所に書き込めばOKだと思います。 たぶん。
No.1 の補足について > 値が代入されませんでした。 スクリプトは特に問題はありません。 実際のJSONデータですが、もしかして全角スペースが混入されていませんか? ブラウザの開発者ツールなどで、エラー内容をご確認ください。 http://www.htmlhifive.com/conts/web/view/study-room/devtool-whatis
どのブラウザのどのバージョンで確認されているのでしょうか。 記憶では、質問の挙動は、ブラウザによって異なると思いますよ。 仮に、質問の挙動に限定するならば、初回の送信時に、cookieやLocal Storageに保存すれば参照できます。 また、複数回の送信をされたくない場合は、明示的にJSで値をリセットするか、あるいは、ajaxで通信すれば、そもそも履歴に残らないので、「戻る」では送信前のページには戻りません。
ためしてませんがこんなかんじではなかろうか。 divでeachで回した後に各div内のinputに対してeachでまわす。 $.each('div', function(){ $(this).find('input').each(function(i){ $(this).attr('name', 'hoge' + i); }); });
まとめてやる方法もあるけど、今のHTMLとスクリプトそのまま使うなら HTMLの方の　matchNum()　を全部、matchNum(this) として、 function matchNum()　を　function matchNum(objNum) とでもして、 n = eval(document.myFORM1.myTEXT1.value)　を　n = eval(objNum.value) にしたら、どう？
Ajaxでデータを取得するための処理が、どちらもajax_search関数になっています。おそらくそれで1つ目のajax_search関数が、2つ目のajax_searchで上書きされているのでしょう。 2つ目のajax_search関数と、これを呼び出している部分の名前を変更すれば動くと思います。 それと、直接は関係ありませんが、できれば$(document).readyの処理は１つにまとめたほうがいいと思いますよ。メンテナンスもしやすいですし。
こんにちは。 プラグインを利用する際はそのjsを別途読み込む必要があります。 さて、提示いただいたソースで試すとこちらの環境では動いているように見受けられます。 １．textボックスとaddボタンが表示されている ２．Addボタンを押下すると2つめのtextボックスが表示、さらに1番目と2番目のtextボックスの横にDeleteボタンが表示される ３．Deleteボタンを押下するとその行のtextボックスが削除される IE11,GoogleChromeで確認しています。 開発者ツールでエラー等が出てないか見てみてください。
.show() ではなく .toggle() を使用する。
非標準のメソッドが使われています。 Fileを扱うためには基本FileReaderを使わなければなりません。 それよりもっといいのが、BlobURL化することです。 写真を指定してください： <form> <input type=file onChange="this.form.disp.src=window.URL.createObjectURL(this.files[0])"> <br><img name=disp> </form>
こんにちは。 良く見たら上のほうに$(id){ return document.getElementById(id);} ってありましたね。 No.1の回答は忘れてください。 まずはイベントが登録出来ていないのか、ほかにエラーがあるのか切り分けてみたらいかがでしょうか。 $('btn_add').onclick = function() { alert('btn_add'); }; これでalertが表示されていないならどこかにエラーがあるはずです。 Firefox等の開発者ツールでデバッグしてみてください。
s1 = eval(document.form01.txt01.value); s2 = eval(document.form01.txt02.value); s3 = eval(document.form01.txt03.value); 　↓ s1 = document.form01.txt01.value * 1; s2 = document.form01.txt02.value * 1; s3 = document.form01.txt03.value * 1; でどうでしょう。
No.6 の補足 > 展開されないことがあります。 こういうことでしょうか? 左の #title1 リンクを押す → 展開 右の #title1 見出しを押す → 閉じる 左の #title1 リンクを押す → 展開されない ならば function open(hash) { $(hash).parent('li').find('.content').show(300); location.hash = '#opened'; //【追加】 }
他の型が回答されている用に「(?:)」で１つです。何にもマッチしない空の正規表現と等価です。 RegExp.prototypeはES5.1では空のRegExpオブジェクトということになっています。 ""+RegExp() // "/(?:)/" で分かるように、空のRegExpオブジェクトはRegExp.prototype.toStringを通して結局"/(?:)/"になります。 これはtoString()された時、ちゃんとした正規表現リテラルになったほうが望ましいだろうということからです。 もし"//"だとコメントの用になってしまいます。 因みにChrome等で、/\//が"///"と表示されるのは誤りです。Firefoxの用に"/\//"か、"/\u002F/"を返さないといけません また、ES6ではRegExp.prototypeは通常のオブジェクトなので、RegExp.prototype.toString()は今のところエラーです。 ここで問題提起がされています http://esdiscuss.org/topic/standard-builtins-prototypes-and-tostring 要するに、このあたりは微妙な問題を抱えている部分ということです。 そんなに気にしないでいいでしょう。
３点修正が必要 (1)load後の処理になるのでwindow.onloadで処理する (2)element.options[i]ではなくelement.options[i].value (3) 'tantou'ではなくtantou ざっと、こんな感じ <script> window.onload=function(){ var tantou = "山本　太郎"; var element = document.getElementById("sagyounm"); for (var i=0; i<element.options.length;i++) { if(element.options[i].value === tantou){ element.options[i].selected = true; break; }; }; } </script> <select name="sagyoutantou" id="sagyounm" required> <option value=""/>---作業担当者選択---</option> <option value="山本　太郎"/>山本　太郎</option> <option value="山下　清"/>山下　清</option> <option value="岡本　次郎"/>岡本　次郎</option>
ブラウザ間のござをなくそうとされているのでしたら、当然 HTMLはstrictで作成し、Docymentスイッチも標準モードで動作するように指定されていると思います。 1999年の勧告以来、「HTML文書を作る場合には、この仕様における、他のDTDセットではなく strict DTD に適合する文書を作るよう推奨する。」-- http://www.asahi-net.or.jp/~sd5a-ucd/rec-html401j/conform.html#h-4.1 DOCTYPE スイッチ( https://www.google.co.jp/search?q=DOCTYPE%20%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81&hl=ja ) <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> ・最低限、これを守られていると思いますが、それをまず確認してください。 Another HTML Lint - Gateway( http://www.htmllint.net/html-lint/htmllint.html ) でチェックすると早い。 　javascript一部は確かにIE7で動作しないものもありますがjQeryは対処されているので大丈夫でしょう。
コメントを読んだだけですが… ＞// 移動を変数に入れる。引数がtrueなら-lw,falseならlw と書いてあるので、slide()の呼び出し側で引数をfalseにしておけばよいのでは？ timer = setInterval(function(){ //　slide(true) 　　slide(false) // 書き換え }, options.interval); 未検証です。
どんなスクリプトを書いてるの？　それをさらさないと回答は受けにくいじゃろう。 タッチを検知するのみだったら（以下のコードはC#です） void Update () { 　// ↓マルチタッチ対応のため全タッチを順番に確認する 　foreach (Touch touch in Input.touches) { 　　switch (touch.phase) { 　　case TouchPhase.Began: 　　　// タッチが初めて検知された（タッチダウン） 　　　// touch.positionとScreenとか見比べて左右を判定 　　　// 右に2つタッチされたらどうする？ 　　　break; 　　case TouchPhase.Moved: 　　　// ここでタッチダウン→指を動かして左から右へとかやってもいいだろう 　　　// touch.fingerIdをキーにタッチダウン時のtouch.positionを覚えておく事で追跡可能 　　　break; 　　case TouchPhase.Ended: 　　　// ここでタッチダウン時と同じエリアを指さしていたら 　　　// そちらのパドルを動かす動きにすればいい 　　　// touch.fingerIdをキーにタッチダウン時のtouch.positionを覚えておく事で追跡可能 　　　break; 　　case TouchPhase.Canceled: 　　　// なぞり途中でトラッキング不可能になったとかだと思われる 　　　break; 　　} 　}　 } みたいな構造でそれぞれの「イベント」を適当に処理すれば余裕のよっちゃんだろう。 同じ指でなぞり続ける限りfingerIdが変わらないのでそれをHashMap的なもので管理すると良かろう。 JavaScriptにHashMapがあるのかは分からんが、C#の場合はHashMapを自作するのは簡単なので合わせて検討されたい。
意味は「piyo[b][a]に入っている数値を安全に返したい」です もしpiyo[b]が未定義ならpiyo[b][a]にアクセスしようとするとエラーになってしまいます そのためまず、piyo[b] && piyo[b][a]で、piyo[b]が真、つまりオブジェクトならば、piyo[b][a]を評価します。 つまりpiyo[b] && piyo[b][a]はundefinedか、piyo[b][a]になることが期待できます 次に||0で、偽ならば0を返します つまり、piyo[b]が未定義のときのundefinedや、piyo[b][a]が未定義のときのundefined、また、piyo[b][a]が0のときは偽と評価されるので0になります。 以上より、piyo[b] && piyo[b][a] || 0はpiyoの構造がある程度しっかりしてなくとも、安全に数値（初期値0）を返すことができます。 ただし、完璧に保証できるわけではありません。 例えば、piyo自体がnullやundefinedになる危険性がある場合はさらなるチェックが必要です。 よってこのコードからは、piyoは二次元数値配列であってほしいのだけど、添字が事前にわからないため、最初は一次元配列としてしか初期化していなくて、あとから追加していく形、でも取得するときは、まだ追加されていないときでも、安全に0を返したいのだと分かります。
デフォルトでは ajax() は指定されたデータに基づきファイルを非同期に読み込みます。 この「非同期に」というところがミソで、これは要するに読み込み処理を現在の処理とは別の流れで行います。そのとき現在の処理は ajax() を行った箇所以降を即時に実行します。 現実世界にたとえるならあなたがやりたいのは、どこかに資料の郵送を要求してその資料が届かないうちにその資料を読みたいということです。どう考えても無理ですよね。 ですので、同期的に読み込むように指示する必要があります。 パラメータに 　async : false を追加すれば ajax() は同期的にファイルを読み込むことになります。 ただし、上記の修正を行った場合は、ファイルの読み込みが終わるまでブラウザの操作ができなくなります。
最初のulにある、先頭のliを指定するということでしょうか？ $("ul:nth-of-type(1) li:nth-of-type(1)") それぞれのulにある先頭のliの場合は $("ul li:nth-of-type(1)") cssの話ですが、nth-of-type(n)でn番目の要素を指定できます。 IE8以下では使えません。
this と ".class_td"が逆です 入れ替えても直らない場合は、正しくthisが指しているかも確認して下さい
http://www.atmarkit.co.jp/ait/spv/1002/12/news101_2.html この辺使えばいけるでしょう
方法はいろいろあると思いますが、簡単そうなのは… 1）一度クリックしたら他のボタンをdisabledにする 2）「次に進む」ボタンが表示されている時は、スクリプト側で判別して 　　処理を行わない などなど・・・ 閲覧者にわかるという点で、1）のような方法がよいのではないでしょうか。
タグは .prop("tagName") で取れるのでそれで条件分岐してもいいかも。 その他、prev()のカッコ内でタグを指定してもいいと思います。
ご使用のものはライブラリというわけではなさそうなので、作者にお尋ねになるのが一番よさそうですが… 表示位置の計算は 　function resize(){　～～　} で行っています。 考え方はほぼそのままでよさそうですが、通常なら親要素（div#slider10）のサイズを基に位置を計算すべきところをwindowサイズから計算しているようです。 親要素をウィンドウ幅いっぱいに定義している場合は、結果的にほぼ同様になりますが、divのmargin、paddingの分だけ計算がずれることになりそうです。 ご質問のずれの原因は、デフォルトのpaddingにあると思われます。 ＣＳＳの最初で、marigin、padding等をクリアしておくことで、中央に表示されるのではないでしょうか。 また、layer（左右の薄墨半透明の部分）の幅は、計算では画像と同サイズと想定されていると想像できますが、ご提示のサンプルでは画像の幅が970pxに対してlayerの幅が1000pxになっているので、上記の修正をしてもその差分のずれが残ることになると思います。
こんな感じじゃない？ <script> var d=new Date(); var d1=d.getDate();//今日は何日 d.setDate(14);//14日にセットして var d2=21-d.getDay();//今月の第3日曜 d.setMonth(d.getMonth()+(d1<=d2?0:1));//第3日曜日以降は月に1日たす for(var i=0;i<2;i++){ document.write(d.getFullYear()+"年"+(d.getMonth()+1)+"月"+(21-d.getDay())+"日 (日曜日)"); d.setMonth(d.getMonth()+1); } </script>
こんにちは。 呼び出し側で var count = getAccessCount(); alert ( count ); getAccessCount()側で // このcountの値を・・・ return count; のような感じで作っているなら値は入ってきません。 非同期で通信処理を行っているのでgetAccessCount()を呼び出してもカウント値を取り終わる前に処理がすすんでいます。 やるとしたら以下のように同期通信にて取得するようにすれば値は入りますが、 通信開始から通信終了までブラウザはほかの処理を受け付けなくなります。 function getAccessCount() { var returnCount = -1; $.ajax({ type: 'post', url: '取得用.php', cache: false, async: false, data: {}, success: function(count) { returnCount = count; }, error: function() { alert ( 'error' ); } }); return returnCount; } どこか画面上に値を表示するとかであれば非同期通信にしたうえでsuccessの中に処理を書くことをオススメします。 $.ajax({ type: 'post', url: '取得用.php', cache: false, data: {}, success: function(count) { $('#count').html(count); }, error: function() { alert ( 'error' ); } });
こんにちは。 カレンダーが複数ある場合はclass属性で指定してあげれば、全てのカレンダーに適用できます。 こうすれば、それぞれの希望日ごとの処理を記述しなくても動作させることが出来ます。 この書き方であれば、たとえ第10希望まで増えたとしても、JavaScriptは何もいじる必要がありません。 (減っても同じです) (詳細はコメントを見て、読み解いてください) 肝となるのは カレンダーを適用する要素は$(id)で指定せず、.datepickerとしてクラスで指定する $(id)で返却日を指定せず選択された要素から対象となる返却日を取得する dlタグまでさかのぼり・・・と書いてある部分が「選択された要素から対象となる・・・」という部分ですが この場合、HTMLの構成によって、要素を探す方法は変わりますのでご注意ください。 ==== JavaScript <script type="text/javascript"> $(function() { // class="datepicker"にDatePickerを適用する $('.datepicker').datepicker({ defaultDate: '+1w', minDate: '+3', maxDate: '2014年12月26日', dateFormat: 'yy年mm月dd日', changeMonth: true, beforeShow:function(){ // 選択されたDatePickerからdlタグまでさかのぼり、 // その中のselect[name="kyoten"]の値を取得する var kyoten = $('select[name="kyoten"]',$(this).parents('dl')).val(); try{ if(kyoten == ''){ throw new Error('販売店を選択してください'); } }catch(e){ alert(e.message); return false; } }, beforeShowDay: function(day) { // 選択されたDatePickerからdlタグまでさかのぼり、 // その中のselect[name="kyoten"]の値を取得する var kyoten = $('select[name="kyoten"]',$(this).parents('dl')).val(); kekka = kyoten.split('_'); var result = new Array(true,'',''); var day = day.getDay(); if ( day === 0 || day === 6 ) { // 土曜日と日曜日の処理は選択不可としツールチップは定休日 result[0] = false; result[2] = '定休日'; } else if ( day === 2 && kekka[1] === '1' ) { // 火曜日で拠点が1の場合は選択不可としツールチップは // 「1販売店のお休みです」とする result[0] = false; result[2] = '1販売店のお休みです'; } else if ( day === 3 && kekka[1] === '2' ) { // 水曜日で拠点が2の場合は選択不可としツールチップは // 「2販売店のお休みです」とする result[0] = false; result[2] = '2販売店のお休みです'; } return result; }, onClose: function( selectedDate, obj ) { // 日付が選択されていない場合は何も処理をしない if ( selectedDate === '' ) return; // 選択されたオブジェクトを取得 var $obj = $(this); var toDate = $obj.datepicker('getDate'); var toMin = $obj.datepicker('getDate'); var toWeek = toDate.getDay(); // 規則性があったので条件式を簡略化 // 1の場合は4加算,2の場合は2加算,3の場合は2加算,4の場合は1加算 // すなわち5から選択された曜日を引いた数が加算する数 toMin.setDate(toMin.getDate() + (5 - toWeek)); // 5以外は1を加算 // 1は選択された曜日を5で割って切り捨てて1を引いた絶対値 // 2は選択された曜日を5で割って数が1であるかの否定 // 3は選択された曜日が5の場合は0、それ以外は1を加算 // いろいろ条件を考えてみると楽しいですよ。 //toDate.setDate(toDate.getDate() + (Math.abs(Math.floor(toWeek/5)-1))); // 1 //toDate.setDate(toDate.getDate() + !(toWeek/5===1)); // 2 toDate.setDate(toDate.getDate() + (toWeek === 5 ? 0 : 1) ); // 3 // 選択されたDatePickerからdlタグまでさかのぼり、 // その中のinput[name="to"]を返却日のオブジェクトとして取得して // 日付の設定を行う $('input[name="to"]', $obj.parents('dl')).datepicker('option',{ minDate: toDate, maxDate: toMin }); } }); }); </script> ==== HTML <dl> <dt>販売店</dt> <dd> <select name="kyoten"> <option value="">選択してください</option> <option value="0_1">1</option> <option value="0_2">2</option> </select> </dd> <dt>第一希望日</dt> <dd><input type="text" class="datepicker" name="from" readonly="readonly"></dd> <dt>第一希望返却日</dt> <dd><input type="text" class="datepicker" name="to" readonly="readonly"></dd> </dl> <dl> <dt>販売店</dt> <dd> <select name="kyoten"> <option value="">選択してください</option> <option value="0_1">1</option> <option value="0_2">2</option> </select> </dd> <dt>第二希望日</dt> <dd><input type="text" class="datepicker" name="from" readonly="readonly"></dd> <dt>第二希望返却日</dt> <dd><input type="text" class="datepicker" name="to" readonly="readonly"></dd> </dl> <dl> <dt>販売店</dt> <dd> <select name="kyoten"> <option value="">選択してください</option> <option value="0_1">1</option> <option value="0_2">2</option> </select> </dd> <dt>第三希望日</dt> <dd><input type="text" class="datepicker" name="from" readonly="readonly"></dd> <dt>第三希望返却日</dt> <dd><input type="text" class="datepicker" name="to" readonly="readonly"></dd> </dl>
FLEXNAVはダメそうですね。プラグインを紹介しているサイトのトップページがそもそも動かないとか、論外だと思います。 Bootstrapは広く使われているのでいいと思います。メニューだけをケチ臭いことを言わず、ページレイアウト全体をレスポンシブWebデザインにしてくれます。 IE7だとわずかに崩れますがほぼ問題なく動きます。IE8以降であれば全く問題ありません。 Bootstrap http://getbootstrap.com/ Components · Bootstrap http://getbootstrap.com/components/
見ましたが、サーバー側のプログラムはどうなっていますか？　そっちの問題ではないですか？
document.writeはページが新たに生成される際に書き出すものです。既にできあがった内容を書き換えることはできません。これは、表示させるタグのオブジェクトを取得し、そこにテキストをせっていする、というやり方をします。例えば、こんな感じです。 <p id="msg"></p> <button onclick="a()">書込</button> <script type="text/javascript"> <!-- function a(){ var b=prompt("入力",""); var obj = document.getElementById('msg'); obj.innerHTML = b; } //--> </script> これで<p id="msg">タグ内にpromptで入力したテキストが表示されます。
　リンクによって個別に色を変えたい場合は、属性セレクタ( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/selector.html#attribute-selectors )で指定するのが楽です。いちいちidを振るのは馬鹿げています。後々メンテナンスで困るのが目に見えている。 　なお、製作する立場になるとホムペなんて変な略語は使わないようにしましょう。 　ウェブサイトとかウェブページとか・・ ホームページとは、ブラウザを最初に起動した時に表示されるホーム(基点)のページです。「私はホームページはgoogleにしています。」と使います。 　ホームページ - Wikipedia( http://ja.wikipedia.org/wiki/%E3%83%9B%E3%83%BC%E3%83%A0%E3%83%9A%E3%83%BC%E3%82%B8 ) 　まだ、始めたばかりのようですから、アドバイスを まず基礎となる仕様書 HTML 4.01 仕様書邦訳( http://www.asahi-net.or.jp/%7Esd5a-ucd/rec-html401j/cover.html ) CSS 2.1仕様（日本語訳）( http://momdo.s35.xrea.com/web-html-test/spec/CSS21/cover.html ) 　は一応、目を通しておきましょう。巷には本当にたくさんの？？？？のマニュアルサイトがたくさんあります。基本を身につけていれば、無駄なおかしなものを身につけて、本堂に戻るのに苦労するなんて事は減ります。 　DIVやSPANはclassやidを併用して文書構造を補完するためのものでデザインのためじゃない。その文書構造に基づいてスタイルシートでデザインする。という基本中の基本すら説明されていないことが多い。
とりあえず、navigator.userAgent
eval使うとか・・・・。 /*下記のやり方で取得可能ですが、物凄く冗長な為、簡素に記述したいのです for (var i in data.IMG) { var imgsrc = data.IMG[i].src.url1; alert( "imgsrc="+imgsrc ); } for (var i in data.IMG) { var imgsrc = data.IMG[i].src.url2; alert( "imgsrc="+imgsrc ); } for (var i in data.IMG) { var imgsrc = data.IMG[i].src.url3; alert( "imgsrc="+imgsrc ); } */ ↓ for (var i in data.IMG) { for (var j = 1; j <= 3; j++) { var imgsrc = eval("data.IMG[i].src.url" + j); alert( "imgsrc="+imgsrc ); } } 試してないけど。
理想のものを探してもそっくりそのままのものを誰かが用意してくれているとは限りません。 とは言え、こんなのは？ http://blog.net-king.com/downloads/imagenavigation/ デモだけ見て違うとか判断するのでなく、ご提示の二番目の参考ＵＲＬのものには、止めたい人のためのpauseする方法の説明があるようですよ。（下の方） http://webdeveloperplus.com/jquery/featured-content-slider-using-jquery-ui/ 最初の参考ＵＲＬのものが理想なら、それを参考に作成するという方法もあるかと。
VS2013 update2をインストールしてください。 http://www.microsoft.com/ja-jp/download/details.aspx?id=42666
ようわかりませんが、 console.log(result.date[fish[i]]); これでいいのではないかと思います。
>ver respawn var respawn 変数の宣言はvarでは。
そもそもいきなりサブミットするのはよくありません。 まず、クライアントサイドでチェック＋もしDB参照がいるならAjaxで問い合わせをして、それでOKならサブミット、NGならそのページのままでエラーを表示します。 そうすればサブミット時にNGになるのは、故意に無理矢理不正な値を送信した場合のみですので、単にエラーページを表示するだけでよくなるのです。 ページの遷移やはなるべく抑えなければなりません。抑えれば抑えるほど構造が簡単になります。
jquaryではなくjQueryです。 カラーをアニメーションするには別途プラグインが必要です。 以下は古いバージョンのjQueryで言及してますが、色のアニメーションについて述べています。 http://h2ham.seesaa.net/s/article/107837321.html 質問1 突然マージンと言われてもなにがしたいかわかりません。 marginLeftではなくmargin-leftでは？ 質問2 数値ならばいりません。px, %などがある場合は文字列となるので必要です。基本的にはくくっておけば問題ありません。
消したい（親）要素に class="del" にする querySelectoAll, classList, Array.map が使えること 配列はちょっと変更す。 <!DOCTYPE html> <meta charset="utf-8"> <body> <ul> 　<li class="del"> 　　<a href="http://example.com ">A</a> 　<li class="del"> 　　<a href="http://example.net/subdirectory/post.html ">B</a> 　<li class="del"> 　　<a href="https://example.org ">C</a> 　<li class="del"> 　　<a href="http://example.jp/subdirectory/post.html ">D</a> </ul> <a href="https://subdomain.example.org" class="del">E</a> <script> var ary = [ 　"http://example.com/", 　"http://example.net/", 　"https://subdomain.example.org", 　"http://example.jp/subdirectory" ]; function makeSelectorString (href) { 　return 'a[href^="' + href + '"]'; } function getParentByClass (e) { 　if (! e) throw new Error; 　 　return e.classList.contains (this) 　? e 　: getParentByClass.call (this, e.parentNode) } function delChild (e) { 　e.parentNode.removeChild (e); } Array.prototype.map.call ( 　document.querySelectorAll (ary.map (makeSelectorString).join (',')), 　getParentByClass, 'del' ).forEach (delChild); </script> </body>
関数内の this は、関数を実行する方法によって、指し示す値が異なります。 Container1.drawPicture(); と実行された場合、 関数 drawPicture 内の this は Container1 を指し示します。 img.onload がイベント発生時に呼び出されて実行される場合、 関数 onload 内の this は img を指し示します。 というわけで、関数 onload にて実行する this.ctx は、 Container1.ctx ではなく img.ctx と解釈され、 その様なプロパティが存在しないエラーが発生します。 対処方法はいろいろありますが、二つほど例示します // this の値を変数 that に格納して onload から参照する var that = this; that.img.onload = function(){ that.ctx.drawImage(...) }; // this を束縛した関数を onload として使用する var handler = function(){ this.ctx.drawImage(...) }; this.img.onload = handler.bind(this);
こんにちは。 リファレンスを見れば引数として渡せるものがわかります。 http://js.studio-kingdom.com/jquery/effects/animate 1.animate( properties [, duration] [, easing] [, complete] ) 2.animate( properties, options ) という二つが準備されていることがわかります。(jQuery1.9) 同ページ内の引数の説明を見てください。 どちらのメソッドも第一引数が必須となり、 「最終的に変化させるCSSのキーと値のマップ値を指定します。 」 となっています。 よって $(object).animate({ opacity: 1 }); と指定する必要があります。 .css()については http://js.studio-kingdom.com/jquery/css/css 1.css( name ) 2.css( names ) 3.css( name, value ) 4.css( name, function(index, value)) 5.css( map ) といろいろな引数をもらうメソッドが用意されています。 ｃｓｓだと({ backgroundColor:"#00ffff" }) {}がない.css("backgroundcolor","#00ffff") が出来るのは前者が5番目のメソッド、後者が3番目のメソッドを使うように出来ているからです。 >時間を記述する時に,1500とか書く場所が後者はどこに書いて解らないです。 こちらは1のメソッドの場合は第二引数、2のメソッドの場合は第二引数へオプションとして渡します。 １の場合 $(object).animate({ opacity: 1 },1500); ２の場合 $(object).animate({ opacity:1 }, { duration: 1500 }); のような書き方です。 リファレンスを見ることが出来るようになるとほかのメソッドでも迷うことがなくなると思います。
間違えて説明無しで回答してしまいました。 まぁアレだけでもわかると思いますが、 「df」では引数は数値なのでクォーテーションは要りません。 しかし「df1」は、引数がもじれるなので、クォーテーションが必要です。
　javascriptでも良いですが、javascriptが無効にしている場合は当然動作しません。CSS3だとCSS3に対応していないブラウザでは無効です。 　スタイルシートではidはあまり使わなくてできるので簡単・・
サンプルページを見ましたが、肝心のjquery.illuminate.0.7.min.jsファイルが壊れているようですよ。それ以外は問題なさそうです。 それと、このプラグインはブラウザを選ぶようですね。 Chromeでは動作を確認できましたが、Firefoxではイルミネーション効果を確認できませんでした。 jqueryの場合かもしれませんが、オープンソースであれば、元の著作権をjqueryファイル内などに明記されてあれば問題なかったかと思います。（MITライセンスで調べてください） 商業利用可能かどうか、著作について明記があればそれに従います。明記がなければMITライセンスと考えていいと思います。 有料の場合は更にお金を著作者に支払う義務があります。
１．　jQuery のライブラリの記述が重複している場合は、問題があります。 一番最後の、1.9.2のライブラリがすべてに適用されているかもしれません。 1.6.2 1.8.3 1.3.2 1.9.1が重複しています。 1.9からは大幅にjQueryは変わっていますので、使えなくなった命令もありますので 注意してください。 jQuery 1.9 でgoogle検索すれば変更点が検索できます。 重複については下記を参照 http://oshiete.goo.ne.jp/qa/5347698.html 尚、重複していても、最後のjQueryライブラリでないものを使う指定の方法もあります。 https://www.google.co.jp/#q=%28function%28j%29{j%28function%28%29{$%3DjQuery%3Djs}%29}%29%28$%29&spell=1 ３．ローディング画像（ http://craigsworks.com/projects/qtip/images/throbber.gif )は 自分のホームページにアップロードして、その画像を使うようにしてください。
>No.1補足 そのソースコードを見てください。 私が知る限りでは全てsetTimeout()が使われています。
