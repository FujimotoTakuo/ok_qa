そもそもXMLHttpRequestはHTTPプロトコルを使用するので、戻りをHTTP以外にすることはできません。 HTMLで返したくないと言う事であれば、単純に数字だけ書かれたテキストとして返すだけです。 プログラムとしては print 1; みたいな返し方をするだけです。
普通javascriptを書くときにそれらの文字列を変数名、関数名としては使いません。 プラグインを作る人もわかっていることですので殆どの場合は気にすることはありません。 (pbcdは馴染みがありませんがよっぽど出ない限り変数名関数名が被ることはないでしょう。) ※prototypejsとjQueryでは同じ$を使っており”コンフリクト”を起こすことがありますが、jQuery側で対応できます。
参考まで。 <!DOCTYPE html> <html xmlns="http://www.w3.org/1999/xhtml"> <head> <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/> <title></title> <script type="text/javascript" src="jquery.js"></script> <script type="text/javascript"> $(function () { $(".button").mousedown(function (e) { var border_width = parseInt($(this).css('border-width')); if (e.offsetX < border_width || e.offsetX > $(this).innerWidth() || e.offsetY < border_width || e.offsetY > $(this).innerHeight()){ $("#message").text("マウスのボタンが押されました。"); } }); $(document).mouseup(function (e) { $("#message").empty(); }); }); </script> <style> .button { border: solid 10px #0094ff; background-color: #e1e1e1; width: 200px; height: 32px; } </style> </head> <body> <div class="button">枠</div> <div id="message"></div> </body> </html>
JSP内のスクリプトレットからJavascriptを実行したい、というニュアンスでしょうか？ であるならば無理です。 JSPはサーバサイドで処理されますので、 クライアント実行のJavascriptは実行できません。 サーブレット側で郵便番号から住所を取得（どこかのAPI利用等で）し、 JSPに吐き出すのが妥当と思われます。
jspといったって出力するのはhtmlだから html上で使うのとなんら変わらないよ。 そのリンク先にある通り。
それをさせないがためのjsonpなんじゃないのかな？
HTML5 であれば、ブラウザの履歴を変更する機能があるのでそれを使います。 HTML4の場合は History.js あたりのライブラリを使うと良いかと。 http://blog.b0ne.me/html5/window-history
だいぶわかりにくいですが、多分通常のajax的な動作を言ってますよね。 jQueryはご存知でしょうか？jQueryを使用すると簡単に実装できますよ。「jquery ajax」「jquery post」などで検索するとたくさん情報出てきますので見てみてください。 一応参考URL載せときます。 http://raining.bear-life.com/jquery/ajaxを使用してpost送信でデータ取得 http://qiita.com/FiNGAHOLiC/items/e226478c854aa76f0a0e
以前の記述でも1.11なら大丈夫だと思います。 それで動かないんだったら何かしらエラーが出てると思います。
JSONデータは ・シングルクォートは使えません ・objectオブジェクトのプロパティも文字列として設定します（ダブルクォートで囲む）。 ・文字コードは「UTF-8」 というルールです。 こちらの実験として、 CGIでの、Content-Type: application/json; charset=utf-8　を出力しないように　して JavaScriptのsuccess: function()内を alert("path=1:"+result); var gdata = $.parseJSON(result); alert("path=2:" + gdata); var plot = $.jqplot('Graph', gdata, options).replot(); alert("path=3"); としてから １）CGI側の出力をキーをダブルクォートのままだと alertのボックスにはそれぞれ path=1:[[["a",1],["b",4],["c",7],["d",11]],[["a",45],["b",33],["c",14],["d",37]],[["a",45],["b",24],["c",17],["d",45]]] path=2:a,1,b,4,c,7,d,11,a,45,b,33,c,14,d,37,a,45,b,24,c,17,d,45 path=3 とどれも表示されて、 "path=2:～"のアラートの後にグラフ描画（縦積の棒グラフで実験）もできました。 ２）CGI側の出力をシングルクォートに修正してみると alertボックスでは、 path=1:[[['a',1],['b',4],['c',7],['d',11]],[['a',45],['b',33],['c',14],['d',37]],[['a',45],['b',24],['c',17],['d',45]]] のみで、次の$.parseJSON(result)で止まりました。 このとき、ブラウザのデバッグツール（私は FireFoxのブラウザコンソールのJSで確認）では SyntaxError: JSON.parse: unexpected character at line 1 column 4 of the JSON data とエラー表示されていました（４文字目が違反文字） なので、 >キーの部分を、’　’　で囲んで、全体を”　”で囲んで、Perlから送ると、グラフ描画のところで止まって、グラフは表示しないのですが、 >キーの部分を、”　”で囲って、全体を’　’で囲んで、Perlから送ると、$.parseJSON(result);　のところで止まって、その先に進みません。 という現象は、反対ではないですか？（キーを' 'で囲むと$parseJSON()で止まるということでは？）
グラフデータ部分を入れた新しいJSファイルを作成するのではなく、データだけをAjaxで取得してデータの入れ換えを行うような実装にすれば問題は無くなると思います。
テキストボックスの内容をsessionStorageに入れてはどうでしょう？
送信側の文字コードが間違えているとかは？
php側でid=>alphabetという配列を作らないで、id=>id:alphabetという配列を作ればいいんじゃないかな。
>HTML側でもうすでにあるMySQLのデータを表示する方法と、 JSONを受け取ってhtmlを生成するfunction 取得または更新時に呼ばれるfunction を作ったほうが無駄が少ないかも。 $(function() { $.getJSON('read.php',function(json){ console.debug(json); }); }); JSONの受け取り方はこれ。んで送出側(read.php)は取得したデータをJSONにする。 post.phpのjson_encode($result);の$resultはなんだかわからないけど、そんな感じ。 受け取ったJSONは開発者ツールで中身を見てみよう。 そうすれば、どうやったら特定の項目が表示できるか見えてくると思う。 >HTMLからPHPにデータを送信して、MySQLにデータを追加したあと、続けて新しく追加したデータのみをPHPでMySQLから受け取り、HTMLに返し、元々表示しているデータに追加して表示させるところがわかりません。 まずは追加した後は全取得して書き換えでいいんじゃない？ それが出来たら現在あるものに追加ってのを考えてみると良い。 お勉強しているんだろうから直接の答えはまだ書かないようにするから、レッツトライ。
jQuery.noConflict(); var $ele = jQuery('#crop_img'); var x1 = $ele.offset().left + $ele.innerWidth();
cssで .bg{ background: no-repeat center 50%; } を指定して、addClassで指定してあげればよいのではないでしょうか。
検索すればたくさんでてきそう… 例えば http://php-archive.net/php/ajax-chat/ http://confetto.s31.xrea.com/php/chat/ http://hain.jp/index.php/tech-j/2007/11/19/p195 とか、 http://www.moongift.jp/2009/07/lace/ http://web2driver.com/ajax/index.php?Ajax%A5%C1%A5%E3%A5%C3%A5%C8%28Ajax%20Chat%29
jQueryのAJAXを使っているなら、async フラグを false にすれば同期モードになります。
HTTP には中断のプロトコルはないので、何も送りません。 HTTP より下位レベルの TCP ソケットにて、切断の通信(FINとかRST)が行われます。 もし停電や断線などで通信が途絶した場合は、 サーバー側のタイムアウト設定や死活監視機能などで、そのうち強制切断されます。 サーバー側ではソケットの切断時に割り込み(シグナルとか例外)が発生するので、 おそらくは実行中の無限ループも中断されるとは思います。 が、これはサーバーソフトウェアの実装次第なので、一概にはなんともいえません。
基本的にhttpでの接続は厳密なログイン状態は認識することができません。 どうしてもというのであればログインにセッションを利用します セッションの生存期間を設定し、ログイン後定期的にログイン情報の交換を 行えば、最終更新時間から現在までの時間が生存期間をこえていれば ログアウトしているとみなせます。 もちろんログアウト処理を併用して任意でログアウトした場合は生存期間を 無視してよいでしょう。
普通に ・・・ var data = { comment : $('#comment1').val(), comment_no : $('#comment_no').val() }; ・・・ var data = { comment : $('#comment2').val(), comment_no : $('#comment_no2').val() }; ・・・ でいいと思う。これで、send1やsend2が押された時にsend.phpは$_POST["comment"]と$_POST["comment_no"]で受け取れるはず。 この「data」なるデータはJSON形式と呼ばれる記法で、この書き方によりJavaScript中では連想配列に似た動作を行う。こいつを$.ajaxに食わせると適切なリクエストでPOSTしてくれるわけだ。大雑把かつ不正確に言えば、 var data = { hoge : "hogehoge", fuga : "fugafuga", miyo : "miyomiyo", tako : "takotako" }; が$.ajaxのdata引数として使われると、左側がリクエストパラメーター名として右側に指定された値をWebサーバーにPOSTする。最後の行の最後にはカンマが無い事に注目。そして$.ajaxメソッドの引数もJSON形式だ。 余談だが仮にこの画面がAJAXオンリーなのであればあえてFORMは作らない方が良いかもしれない。 comment_noを盛り込んで、かつ大幅にはソースを変えずにちょっと汎用的にしてみたのが以下だ。jQueryの「セレクター」という機能をフルに活用している。submitにcommentsubmitというCSSのクラスを付け、$('.commentsubmit')というクラスセレクターでクリック時の動作を制御する。さらにクリック時に実行されるfunction中でthisは押されたsubmitを表すので、$(this)は押されたsubmitを表すjQueryオブジェクトになる。 次に$(this).closest('form')は押されたsubmitから最も近いformのjQueryオブジェクトをさすため、今度はformの中にあるinput[type=hidden]とtextareaをname属性で引っ張って来るのだ。 ちょろっと書いただけで全然試してないので動くかどうかは分からん。 ～～～～ <!DOCTYPE html> <html lang="ja"> <head> <meta charset="EUC-JP" /> <title></title> <script type="text/javascript" src="/jquery/js/jquery.min.js"></script> </head> <body> <script> $(document).ready(function() { $('.commentsubmit').click(function() { $form = $(this).closest('form'); var data = {comment_no : $('input[type=hidden][name=comment_no]', $form).val(), comment : $('textarea[name=comment]', $form).val() }; $.ajax({ type: "POST", url: "send.php", data: data, success: function(data, dataType){ }, error: function(XMLHttpRequest, textStatus, errorThrown){ alert('Error : ' + errorThrown); } }); return false; }); }); </script> <form method="post"> <INPUT type="hidden" name="comment_no" id="comment_no1" value="1"> <p> <textarea name="comment" id="comment1" style="width: 400px; height: 20px; padding: 6px 5px; font-size: 13px; overflow: hidden; vertical-align: text-bottom;" onkeyup="resize(this)"></textarea> </p> <p> <input id="send1" value="送信1" type="submit" class="commentsubmit" /> </p> </form> <hr> <form method="post"> <INPUT type="hidden" name="comment_no" id="comment_no2" value="2"> <p> <textarea name="comment" id="comment2" style="width: 400px; height: 20px; padding: 6px 5px; font-size: 13px; overflow: hidden; vertical-align: text-bottom;" onkeyup="resize(this)"></textarea> </p> <p> <input id="send2" value="送信2" type="submit" class="commentsubmit" /> </p> </form> </body> </html>
>No.2お礼 >今回の質問時、サンプルとして提示させて頂いたのは、index.html、post.js、post.phpの3つのファイルから構成されていますが、今回ご提示頂いたスクリプトは、index.htmlに全て記述し、post.jsは利用しない。という認識で宜しかったでしょうか？ どちらでもいいです。 作りやすい方法で作ってください。 >それと、テキストフォームにnema属性としてsomethingが与えられていますが、このフォームの値はどのようにして取得したら宜しいのでしょうか？ 全部jQueryがやってくれます。 PHPの話であれば、通常の<form>送信と同じです。
xhr.sendメソッドで送信しないと意味がありません。
jQueryを使わずにJavaScript（DOM）ネイティブのinnerHTMLを使えば最速です。 フォームフィールドのinnerHTMLはブラウザ依存がでる可能性があるので、 <select>のinnerHTMLではなく、<select>の親要素のinnerHTMLに、"<select 略><option>～</select>"として入れる方がいいと思います。 イベントハンドラを登録された要素を削除するとメモリリークになる可能性があるので注意してください。 イベントハンドラを削除してからinnerHTMLに代入すると問題ありません。
すみませんがあなたの言う「同じディレクトリ」というのはどこを指しているのでしょうか。 サーバーのHTMLファイルのある個所? ページを開いているブラウザ/端末のどこか? それともローカルに置いたHTMLファイルを直接開いたときの話でしょうか?
できないかと思います。
use CGI; use JSON qw/encode_json decode_json/; my $query = CGI->new; my $data = $query->param('POSTDATA'); <-今回の質問の肝はおそらくこちらです my $json_array = $json->decode( $data ); <-JSONデータをPerlで解釈できるように変換 $json_arrayから、扱いたいデータが扱えると思います。 全て英語ですが…参考URLです。 https://metacpan.org/pod/CGI#HANDLING-NON-URLENCODED-ARGUMENTS CGI.pmのparam('POSTDATA')について http://stackoverflow.com/questions/908113/how-can-i-get-the-entire-request-body-with-cgi-pm http://stackoverflow.com/questions/15899616/jquery-ajax-to-perl-json-module-decode-of-data JSONモジュールについて http://d.hatena.ne.jp/perlcodesample/20100427/1270894115
sortableを使うときのコードは結構使い回しができるので、パターンさえ覚えて作ってしまえば、流用が可能です。 まず、PHPで受け取れているのであれば、そのデータを配列に変換してやる必要があります。 parse_str($_POST['file']); としてやれば、Query Stringのような文字が$fileという変数に配列変換されて入ると思います。 これで並び替えされたID順に配列が設定されると思うので、あとはこの順でDBに設定してやるだけです。 foreach ($file as $key => $val) { $sql = "update テーブル名 set orderby = :orderby where id = :id"; $stmt = $db->prepare($sql); $stmt->bindValue(':orderby', $key); $stmt->bindValue(':id', $val); $stmt->execute(); } 上はPDOで書いていますが、mysql_query()等を使っても考え方は同じです。 foreach ($file as $key => $val) { $sql = sprintf("update テーブル名 set orderby = '%d' where id = '%d'", mysql_real_escape_string($key), mysql_real_escape_string($val)); $result = mysql_query($sql); } これで並び替えされた順に、orderbyフィールドに「0、1、2、・・・」と順番に数字が入っていきます。
たびたび失礼します。#1、#3です。 debug()の中で使用している「str」という変数がどこにも定義されていないためにエラーになってるはずです。 ＞function debug(){ ＞document.getElementById("debug").innerHTML += "</br>" + str; ＞} これ、「function debug(str)」だと思うんですが。 関数定義時の括弧内に書かれた変数は引数といって、呼び出し時に何らかの変数を受け取った際にその変数に当てはめます。 例では「debug(globalVar)」と呼んでいますから、globalVarが関数に渡され、strに代入された状態になるわけです。 くりかえしになりますが、JavaScriptはブラウザ内で動くプログラムなので、何かあればたいていのことはブラウザが教えてくれます。 もしWindowsXPだからIE9以上が使えないということなら、FirefoxやChromeのようにデバッグがしやすいブラウザを導入したほうがいいです。
alert(xmlhttp.responseText); 　　↓ document.getElementById("text").value = xmlhttp.responseText; という感じでしょうか。
XMLHttpRequest.prototype.overrideMimeType は IE10 からの実装となる為、IE9- では使用できません。 https://connect.microsoft.com/IE/feedback/details/757225/xmlhttprequest-prototype-overridemimetype-is-not-implemented > 読み込むtest.htmlも親のindex.htmlもshift-jisでして、この文字コードは変更できず困っております。 文字コードを変更せずともサーバサイドで「Content-Type: text/html;charset=Shift_JIS」を指定する事は出来ないでしょうか。 そのWebアプリをどこで使うのかによりますが、特定環境のみであればクライアント側を IE10 に更新する事は出来ないでしょうか。 私には他に対策は思い浮かびませんが、環境を明らかにしたほうが良いと思われます。 - IEのバージョンはいくつなのか - OS は何なのか - サーバサイドを変更できない理由は何なのか 背景がわかれば、直接的な解決策でなくとも代替案を提案してもらえるかもしれません。 # Re: yukipontaさん
Ajax以前にHTMLの問題ですね…… ・文字化け HTMLソースはUTF-8で保存していますか？ 　<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> で書いている文字コードとHTMLソースの文字コードが食い違っていると文字化けします。 ・本文が表示されない scriptタグが閉じられていないのが原因だと思われます。
例外を投げても200 OKのままでしょうから、 header関数で任意のコードを返しましょう。 <?php header("HTTP/1.1 503 Service Unavailable"); ?>
方法１ （３）のあとにaddEventListenerする 方法２ jQueryを使ってonでイベントを追加する
第一に回答から。 他の方がおっしゃる通り、 >1 >(A)IEなどのブラウザ >(B)IEなどのブラウザ です。 第二に、回答の理由です。 一番単純な理由を挙げると、 「IEなどのブラウザ」はJavascript機能を自分自身で持ち、 他のプログラムを呼び出さない設定になっています。従って、正解は1番です。 他例を挙げると、画像ファイルも同様で、IE自身が画像ファイル表示機能を持ち、 画像のあるサイトを訪問した場合でも、他のプログラム(画像ビューア)を呼び出しません。 # なお、世の中には、コマンドプロンプトで動くブラウザ(文字表示のみ)もあり、 # そんなブラウザは画像のあるサイトで他のプログラムを呼び出してしまいます。 >今使用しているパソコンはwindows7で、[関連付けを設定する]の項目を見ると、 >java scriptファイルを実行するプログラムは、Microsoft (R) Windows Based Script Host となっています。 前述の通り、「IEなどのブラウザ」は自分自身でJavascriptを実行する設定のため、 ブラウザ内に限り、[関連付けを設定する]設定は一切無視されます。 逆にデスクトップ上のJavascriptファイルを「開く」操作する場合は、 「関連付けを設定する]設定に従い、4番(Microsoft (R) Windows Based Script Host)の動きになります。
#1です。 時間が経ちましたが、まだ晒されてるようなので。 キャッシュについては、クライアント側だけでなく、サーバサイドや、経路中のプロキシサーバ等にも存在するので、一括で有効な方法というものはありません。 対策１： メソッドを"POST"にする。 対策２： リクエストオブジェクトに{ ticts = 時刻シード乱数 }等を追加し、毎回異なったクエリが出るようにする。 対策３： サーバが返答するResponseで、LocalCacheやProxyCacheを切るパラメータを加える。 対策４： サーバキャッシュの設定を適当な値に調整する（QueryByParamやCachePeriod等）。 Ajaxで応答値が更新されない問題なら、１か２で解決すると思います。 更新系のリクエストでGETを使う事は少ないので。。 更新リクエスト内容が丸見えになるのは、少々危ない気がします。
こんにちは。 一応、サンプルを作ってみましたが、いまの作りにそのまま使えるかはわかりません。 あくまで参考例として見てください。 http://hppg.moe.hm/okwave/qa/q8209142/ No.1で回答した通りの動きで作ってあります。 (アップロード後のファイル名は固定で、排他処理等も考えてないので、同時アクセス時の動作で不具合があるかもしれません。ご了承ください。) また画像処理は特に行っていなく、sleepによりレスポンスを遅らせて、ブロック中の表示がわかるようにしてあります。
a、b、c、dの配列を作っておいて、シャッフルして、順にdivに表示するとか… 逆に、表示の対象をシャッフルしても同様ですけど。 いずれにしろ、どちらかを混ぜればよいのではないでしょうか。 シャッフルの具体的な方法に関しては、検索すればいろいろと見つかるはずです。
こんにちは。 Ajaxがいろいろ出来て便利なものでも出来ないこともあります。 ブラウザからローカルのファイルにアクセスされたら怖くないですか？
infoWindow.setContent()を利用して書き込むと、ちらついてしまうようですね。 google.mapの処理を追いかけてはいませんが、どうやら要素そのものを作成し直しているのか、一時非表示にして処理をしているのかわかりませんが、さらに、一旦スクリプトの処理が開放されているかして起こっているのではないでしょうか？ ご提示のコードでは、一つだけのinfoWindowを利用しているようですので、初期設定でcontent内に<div>や<span>などを作成しておいて、内容を書換える際は、google.mapのメソッドを利用せずに、直接その要素の内容を修正するようにすればちらつきは出なくなるようです。 ごく簡単なスクリプトでＰＣで確認しましたが、スマホでは確認していません。 （多分いけるのではないかと）
普通に、 myObj.myValue = 'hoge' ; ではだめなのです？
こんにちは。 $('#send').click(function() { }); ですと、動的に生成されたid="send"にイベントを設定できません。 $(document).on ( 'click', '#send', function() { }); にする必要があります。 参考URL http://tacamy.hatenablog.com/entry/2013/03/03/213113
こんにちは。 以下のような感じになると思います。 以下のスクリプトの場合、markerStartというマーカーを選択するとinfoWindow1が開きます。 setIntervalを利用して1秒ごとにinfoWindow1のcontent(内容)を再表示しています。 var infoWindow1 = new google.maps.InfoWindow ({ content: '', positon: centerLatLng }); google.maps.event.addListener ( markerStart, 'click', function() { infoWindow1.open ( map, markerStart ); }); //　きもとなるのは以下の部分 var targetDate = Date.parse('2013/07/07 00:00:00'); window.setInterval ( function() { var now = new Date().getTime(); var diff = targetDate - now; var day = Math.floor ( diff / 86400000 ); diff -= day * 86400000; var hour = Math.floor ( diff / 3600000 ); diff -= hour * 3600000; var minute = Math.floor ( diff / 60000 ); diff -= minute * 60000; var second = Math.floor ( diff / 1000 ); // google.maps.InfoWindow#setContentで内容を設定する infoWindow1.setContent ( '七夕まで' + day + '日' + hour + '時間' + minute + '分' + second + '秒' ); },1000);
ちょっと面白そうだったので、かなりいい加減ですが作ってみました。 とは言っても、ほとんど A No２様の回答そのままなので、説明は省略です。 独自マーカーは回答欄のコードだと表示しにくいので、googleさんのchart iconを利用して、これまたテキトーです。 参考にもならないかも知れませんが… （マーカーのアニメーションが無い方が良さそうですが、draggableにすると、なってしまうみたい） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type='text/javascript' src='http://maps.google.com/maps/api/js?sensor=false'></script> </head> <body> <div id='map' style='width:800px; height:600px;'></div> <script type="text/javascript"> (function(){ //地図表示 var mapDisp = function(lat, lng, id){ 　return new google.maps.Map(document.getElementById(id), { 　　zoom: 13, 　　center: new google.maps.LatLng(lat, lng), 　　mapTypeId: google.maps.MapTypeId.ROADMAP, 　　scaleControl: true, 　　scrollwheel: false 　}); } //マーカー作成（仮マーカー） var createMarker = function(lat, lng, mark){ 　var icon = { 　　anchor: {x:0, y:37}, 　　url: "http://chart.apis.google.com/chart?chst=d_bubble_icon_text_small_withshadow&chld=glyphish_walk|bb|" + mark + "|000000" 　} 　var marker = new google.maps.Marker({ 　　position: new google.maps.LatLng(lat, lng), 　　map: map, 　　draggable: true, 　　icon: icon 　}); 　google.maps.event.addDomListener(marker, 'dragend', route); 　return marker; } //経路検索 var route = function(){ 　var request = { 　　origin: start.getPosition(), 　　destination: goal.getPosition(), 　　travelMode: google.maps.DirectionsTravelMode.DRIVING 　}; 　directS.route(request, function(response, status){ 　　if (status == google.maps.DirectionsStatus.OK){ 　　　directDisp.setDirections( response ); 　　} 　}); } var map = mapDisp(35.68, 139.75, "map"); var directS = new google.maps.DirectionsService(); var directDisp = new google.maps.DirectionsRenderer(); directDisp.setMap(map); directDisp.setOptions({markerOptions: { visible:false }}); var start = createMarker(35.71, 139.76, "%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88|00CCFF"); var goal = createMarker(35.65, 139.76, "%E3%82%B4%E3%83%BC%E3%83%AB|88FF00"); })(); </script> </body> </html>
そもそもAjaxは　Asynchronous　というくらいで非同期通信が前提ですから、処理1の結果を確認する前に処理2が走って当然です。 $.ajax({ async: false, ・・・・・ }); として、非同期通信を無効にするといいと思います。
自分のサイトを参考にしてくれていらっしゃるようで、ありがとうございます。 お困りの内容についてはサイトを修正する範疇ではなさそうですので、こちらでお手伝いさせて頂きますね。 「ie select 幅 可変」とGoogle検索してみると以下のようなサイトが出てきました。 http://sevenseas.moo.jp/sp/2013/04/ie8%E3%82%84ie9%E3%81%A7%E5%8B%95%E7%9A%84%E3%81%AB%E7%94%9F%E6%88%90%E3%81%97%E3%81%9F%E9%A0%85%E7%9B%AE%E3%81%AE%E8%A1%A8%E7%A4%BA%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AB%E3%81%8C%E4%B9%B1%E3%82%8C/ サンプルのページ（http://ajax.jlamp.net/samples/sample03.html）では 解説のためのものですので、最小構成で書いています。 自分でこのスニペットを利用する場合にどのようにしているかをお話いたします。 IEについてはご存知のように多くの不具合を抱えていながら、同時に多くの利用者もいるという非常に厄介な存在ではあります。 ただこの場合、セレクトボックスのオプション要素が動的に変更されうる場合には上記に示したような不具合が発生することが存在します。しかも、自分の力の及ばないユーザーのブラウザの設定の問題ですので、オプション要素が動的に変更されても、widthが変化しないように作成しています。つまり、CSSで幅を固定にしてデザインしています。 仮に、IEに不具合がなく、FireFoxのようにボタンを上手く配置してくれたとしても、セレクトボックスの幅は固定にしておくべきかなと思います。 スマートフォンのようにディスプレイの幅が狭いデバイスで表示したときに、セレクトボックスが選択した内容によって大きさが変化することで、いきなりボタンが画面の幅からあふれて行送りになってしまったりしては、ユーザビリティの観点からも望ましくありません。ユーザーからしてみると、「あったはずのボタンが消えてしまう」という不可解な現象が起きてしまいます。 ※固定にしたらしたで、他の問題もあるので本当に困った存在です。IE。 http://black-flag.net/javascript/20090210-102.html こちらはjQueryのプラグインもあるようですので、組み合わせて利用すればよろしいですよね。
No.2です。 > 戻り値として必ず「jsonデータ」を返す ということはあり得ません。返却されているのは、あくまで「json書式のテキスト」です。 そもそも、Webサーバは「.html」なり「.gif」なり、拡張子が登録されている要求URLの場合、自動でContent-typeを付加します。ところが、「.php」のような拡張子は、戻す内容が不明なため、（サーバの種類にもよると思いますが）デフォルト動作でtext/htmlなどのContent-typeを返します。 $.getJSONが、「どうせ戻りはJSONなのだからどんなCOntent-typeが来ても無視」と設計されればそう動作するわけで、事実、初期のjQueryは$.ajaxに"json"の指定がなく、textで受けてjson.parse()するような処理がまかり通っていましたがら、明確な基準はないのです。 ただ、サーバサイドから考えたら、相手は（ひょっとして前はContent-type不要で決め打ちだった？）$.getJSONだけではなく、$.getも$.ajaxもアリで、しかもjQueryなんか勝手にバージョンがどんどん上がっていくし、他にprototype.jsなんかもあり、正しくContent-typwを返すのが鉄則です。
現在行っている実装をベースに回答させていただきます。 (1)もちろんyesです。 Ajaxリクエストであっても、基本的にセッションやクッキーの扱いは同じであり、通常通りの処理を行います。 (2)セッションの有効性チェックで強制リダイレクト、というのは通常の処理だと思います。 FuelPHPやASO.NET MVCでは、アクションの実行直前に必ず呼び出されるメソッド（フィルタ）がありますので、そちらで全部一括して処理します。 (3)Ajaxの利用は、方向性としては間違っていないです。 ただし、一口にAjaxといってもいくつか種類があり、 3-1・スキームをサーバサイドで自動生成するもの（基本JSを書かない） 3-2・ほとんど全部をjQuery等で処理する「ピュアAjax」 3-3・さらにAngularやKnockoutなど、javascriptフレームワークを使うもの。 この中の3-2の場合、javascriptによるインベントハンドラ定義・サーバ送信データのHTMLへの反映、入力値のajax形式送信、という問題をすべてjavascriptで行うと、UI（ユーザインターフェース）にガチガチに拘束されたコードになって、開発効率（生産性）が悪化、バグ耐性も低下して、改変が非常に難しくなっています。 現在、サーバサイド開発は、IDEやMVCフレームワークの台頭で、かなり開発生産性や保守効率が上がっているのですが、Ajaxは開発環境も含めて困難度が高く、対応できるエンジニアも少ないことから、knockoutJSやAngularのようなフレームワークが正しく導入運用できるまで、「力攻めの」javascriptAjax DOM操作は封印です。
こんにちは。 in1,out1,result1～in50,out50,result50があるということでしょうか。 以下のようにすれば良いと思います。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q8048008/ idは一応付けていますが利用していません。またHTMLの構成で変わってきます。 フォーカスが外れた対象のidを取得して数字だけ引き抜いてその数字XをresultXにしても取得出来ると思います。 var index = $('input.out').index(this); としてinputのclass="out"が付いている要素のindex値を取得して$('#result'+index).text ( json.data ); にするとか。 いろいろな要素の取得方法がありますのでいろいろ試してみてください。
forの場合 for (key in check) { $(check[key]).click ( function() { if(this.checked) { thwrite(); } else { thremove(); } for (key in check) { if ($(check[key]).attr('id') == this.id) { $(".cell"+key).toggle(this.checked); } } }); } eachの場合 $.each(check, function(x,y){ $(y).click(function (){ if(this.checked) { thwrite(); } else { thremove(); } $(".cell"+x).toggle(this.checked); }) });
こんにちは。 Firebugなんかを利用してリクエスト内容とレスポンス内容等を確認してみてください。 実際に意図した値が送信されているのか、php側での受け取り内容は意図している値なのか。 それによって返ってくるレスポンスについても意図したものであるのか。 サーバ側でgetで受け取れるようにして直接パラメータを送ったらどうなるか等、何か切り分ける必要があると思います。
どういうシテュエーションかがよく理解できていませんが… 「決められた時間」がマーカーごとに違うとするなら、まず、その残り時間をajaxなどで取得する必要があります。 あるいはHTMLの出力時に、（可変）データとして埋め込んでおけばajaxの必要はなくなりますが、マーカーの数が非常に多い場合はajaxのほうが便利かもしれません。 あとはローカルのタイマーを利用してその残り時間をカウントダウンすればよさそう。 残り時間を取得するには、マーカー毎の基準時がどこかにデータ化されていて、それをもとに計算することになりますが、いずれにしろサーバー側での処理が必要になるので、使用する言語とデータの保存方法（データベースなど）にもよることになります。 スクリプトからのajaxリクエストは、普通に「ajax」で検索すれば方法は見つかると思います。 データを先に出力しておく方式をとるなら、ＨＴＭＬを読み込んだ時のローカルＰＣの時間を最初に取得しておいて、ページ表示からの経過時間とデータ（当初の残り時間）から表示すべき残り時間を計算するようにすればよいでしょう。 この方法の場合はajaxは不要ですが、HTMLの出力自体をサーバ側のプログラム（ＣＧＩなど）で行なうことになります。 マップのinfoWindowの制御方法やそのcontentの表示・変更方法については、googlemapsのapiのドキュメントに出ています。 https://developers.google.com/maps/documentation/javascript/reference#InfoWindow カウントダウンタイマーの考え方は、検索すればたくさん見つかるはず。 何を最初のデータにするかによって、具体的な計算方法は若干変わる可能性がありますが、考え方はほぼ同じでいけるはずです。 （ローカルＰＣの経過時間だけを利用して、時刻の設定には頼らないロジックにしておく方がよいと思います。） http://www.bing.com/search?srch=105&FORM=AS5&q=%e3%82%ab%e3%82%a6%e3%83%b3%e3%83%88%e3%83%80%e3%82%a6%e3%83%b3%e3%82%bf%e3%82%a4%e3%83%9e%e3%83%bc+javascript 後は、これらを組み合わせればできあがり？ あっと、あと、infoWindowが閉じられた時に、タイマーが自動的に停止するようにしておく必要がありそうに思います。 （そうでないと、無駄に動きっぱなしになる可能性がある）
ちょっと混乱がおありなようなので、整理してきます。 ・Ajaxによって、（ページ遷移と）非同期に、サーバに送信されるデータ形式は、POSTかGETいずれかになる。 ・サーバからのレスポンスデータの形式は、xml/html/script/json/jsonp/textなどである。 また、jQueryに関しては、 ・jQueryは単なるjavascriptライブラリである。 ・jQueryを使う目的は、記述の単純化とブラウザ間の差異を吸収することである ・jQueryにはユーザインターフェース専門のライブラリ、jQueryUIがある。 ・jQueryUIのモバイル版がjQueryMobileである（フレームワーク的な要素も少し加えてある）。 なので、 ・jQuery自体の使用と、Ajax機能を使うか否かは無関係である。 ・jQueryUIとjQueryMobileは、UI機能を実現するために、暗黙のうちにjQueryのAjax機能を呼び出している。 ・jQueryUIとjQueryMobileは、データだけでなく、ページ遷移においてもAjaxを使用する（Ajaxがレスポンスとしてhtmlやtextを返す機能を利用）。 jQueryUI / jQueryMobileはデフォルトで、ページ遷移にAjaxを使用する機能がonになっていますので、あんなに派手なページ遷移が可能なのです。 他のjQueryプラグインも同様です。
Ajaxは「Asynchronous JavaScript + XML」の略なので 本来XMLHTTPRequestを使った非同期通信を指す言葉でしたが 言葉の乱用によって今では「JavaScriptで通信を行い動的に表示を切り替えるもの」というくらいのニュアンスのものになってしまいました ですが基本はJSからXHRを用いること（だと信じたい）です XHRを使った通信は、xhr.sendが呼ばれた時に開始されます 通常のページ遷移時のリクエストですと、レスポンスがブラウザによって解釈され、ページが表示されますが、XHRではJavaScriptで受け取ります また、最近のXHRはXMLという名前に反しバイナリでも受信することができます
A.htmlをブラウザがキャッシュしてしまい、opnLoadイベントが走っていない。 ローカル環境(ダブルクリック起動)で試しとられるのと違います？ Webサーバから起動するとまた動作が変わると思いますが、 ・<body onLoad="...">ではなく、jQueryのDOMイベントハンドラ$(function(){...});に変える。 ・<meta>タグでキャッシュを切る ・それでもキャッシュされるようなら、遷移時、Javascriptを使ってurl末尾に乱数パラメタをつける。 location.href += "?" + new Date().tick; など。 などの方策が有効です。 外していたらすいません。
「JavascriptがJQMを使用した途端にエラー」というのは、かなり乱暴な移行処理だと思いますが、JQMの動作モデルは理解しておられますよね？ jQueryMobileのナビゲーション機能 http://dev.screw-axis.com/doc/jquery_mobile/components/pages_dialogs/ajax_hashes_history/ なので、既存ページにあるjavascriptを無修正で動かすことが目的なら、Ajax遷移は頭から全部オフにしないと駄目でしょう。 でも、そうするとJQMの売りである、格好いいページ遷移ができなくなるので、結局、現在HTMLページに打ちこまれているJavascriptは、ほとんど修正することになります。 JQMのイベントモデルは通常のPC用Webページとかなり違いますが、その辺りの理解も大丈夫ですか？
# 当方への補足ではありませんが、勝手に回答しちゃいます。 なるほどなるほど。 どうやら、「アップロード」という言葉の意味について、 質問者さんと回答者側で認識が異なるようですね。 アップロードという言葉は、「ロード」とついているぐらいですし、 通常は送ったデータがサーバー上で(ファイルであるかはともかく) リソースとして利用可能な状態まで行って成立するような呼び方ではないかと思います。 確かに、存在するサーバーに対してPOSTリクエストを送信すれば ネットワーク上にはデータが流れていくと思いますが それだけでアップロードとは通常は言わないと思います。 (送り先が受け取り可能なプログラムでなければ、読み出されないか、 途中でコネクションが切断されるかと思います。) # ちなみにajaxで送信されるのは HTTP のリクエストです。
> (1)ブラウザはHTMLソースを元にレンダリングするのですよね？ JavaScriptでHTMLを書き換えた場合 当然ページの内容は書き換わるわけですが、 「ソースの表示」で閲覧できるのは常にJavaScriptで書き換えられる前のHTML（＝サーバーが送ってきたHTML）なので JavaScriptによる更新内容は確認できません。 Firefoxの「選択した部分のソースを表示」などを使えばJavaScriptで更新された後のHTMLを見ることができます。 > (2)JQueryMobileどうこうの話ではなくて、AJAX関連が関係しているのでしょうか？ JavaScriptでHTMLを書き換えればそうなります。 （JQueryMobileを使うにしても、AJAXなやり方をするにしても、JavaScriptによるHTML書き換えは当たり前にやっているはず。） > (3)今までの質問とちょっと内容が違うのですがAJAXは「非同期通信でXMLデータをやり取りする」 やりとりされるデータはXMLとは限らず、プレーンテキストやJSONでも別にかまわないです。 その場合XMLは関係なくなりますが、AJAXという言葉が便利なのかあまり気にせずAJAXと言われる気がしなくもない。 > XMLファイルはプログラムでは扱っていません。 通信するデータを必ずファイルとして持っていなければいけないとか思ってます？ プログラムがXMLデータを生成→転送→プログラムがXMLデータを受け取って使用 という流れだと、XMLデータがファイルの形態をとることは無いですよ。 > AJAXは一体何の目的のために、どんなことをしているのでしょうか？ 「ページ遷移を発生させず」に、「サーバーとデータをやりとり」し、「ページ内容を更新」する。 （ここで言うページ遷移は、普通にリンクをクリックしたときのようにHTML自体を読み直す遷移のこと。）
SQLサーバやC#で有名なLINQ（統合言語クエリ）のJavaScript版はいかがですか。 集計関数やグループ化関数は非常に強力で、一度使うと手放せなくなりますよ。 linq.js : LINQ for JavaScriptライブラリ http://www.atmarkit.co.jp/fdotnet/dotnettips/1058linqjsbasic/linqjsbasic.html
根本的なところで、錯覚してしまっていると思います。JavaScriptそのものには、$というオブジェクトはありません。 このコードは、単なるJavaScriptではなくて、jQueryというJavaScriptライブラリを利用したコードです。$は、このjQueryというライブラリに用意されているものです。これは、HTMLから必要な要素を指定し操作するための機能を提供するもので、一度慣れるとjQueryなしのコードは書く気がしなくなるほどに便利であるため、非常に広く普及しています。 ◆疑問１ 「$を変数として宣言している」とすれば、以下のプログラムの始まりは var $ = ～～～ のようになりますよね？ ライブラリ内で既に$は定義されているため、実際に書くコードにはそのような文はありません。 ◆疑問２ 3行目あたりに出てくる「$.ajax(」のような記述は、変数$の、下の階層のなんらかのオブジェクト？なのかと思いましたが、$が何かのクラスであったり構造像体である旨は、どこにも宣言されていないので、変数ではない何かかのでしょうか？？ $は関数でありオブジェクトでもあります。JavaScriptでは、関数もオブジェクトであり、自身の中にプロパティとして更に関数やオブジェクトを保管できます。$はそうしたものです。ajaxは、$内にあるメソッドです。 ◆疑問３ いろんなところに、function()とあるのは、なぜなのですか？ 無名関数？とかいうのがあるということはどこかで知りました。 が、 (1)下のプログラムでは、何回もfunction()として、処理を記述していますが、 何の意味があるのでしょうか？ function(){ 　処理内容; }, と書くくらいなら、最初から無名関数としてくくらなくても、良くないですか？ むしろ、無駄な文字数が増えるし、しかもわかりにくいように思いますが、この記載にメリットはあるのでしょうか？ これは、jQuery特有の書き方です。$そのものがjQueryオブジェクトであるため、$(function……)と記述することで、jQueryの引数に関数オブジェクトを引き渡す役割を果たしています。このあたりは、jQueryライブラリについて理解しないとちょっとわかりにくいと思います。いずれにせよ、JavaScriptでそういう書き方に何かの意味があるというのではなくて、使っているjQueryライブラリで「こうやって書くとこう働きます」と定義されている決まりに従って書いている、と考えてください。
textMessage = "(if((sum > 0) { document.write("正の数"); } else((sum <= 0) { document.write("負の数"); } ))"; これだと、textMessageという変数に、(if((sum > 0) {……略……))というテキストを代入する、という意味になりますよ。""で囲んだものはただのテキストです。中にスクリプトを書こうと動きはしません。ただの文字ですから。 if (sum >= 0){ textMessage = "正の数"; } else { textMessage = "負の数"; } 例えば、こういう感じになるでしょう。 ※それと、この質問はAjaxとは関係ないですね。ただのJavaScriptですので、JavaScriptのカテゴリで質問されたほうが回答がつきやすいでしょう。
意味がよくわからないのですが？・・・ <section id="map"> </section> の中に、widthとheight,altを書けばいいのでは？・・・ 閲覧者の環境に合わせるのであれば、ResponsiveLyoutにすればいいのではないでしょうか？・・・ 表示するものは、文章であれ、図形であれ、地図であっても収縮は自在に、閲覧者環境に対応します。
検証してませんが、 HTML要素が表示できれば良いのでしょうから、マップに重ねられるオーバーレイビューが用意されているようですので、そちらを利用する方法がありそうです。 https://developers.google.com/maps/documentation/javascript/reference?hl=ja 確認していませんが、多分、マップにむすびつけられるのでマップの移動に合わせて移動するのではないかと… 移動のイベントに合わせて移動させれば、見た目に固定させることも可能と思います。 違う発想としては、マップの上に単純にposition:absoluteにした要素を重ねて表示するというのがかんがえられ、こちらの方が簡単そうな気がします。 もっとも、マップの直上・直下に配置すれば重ねたのとほとんど変わらないと思いますけれど… こちらが一番簡単ではないでしょうか。
ワーニングによるエラーメッセージがJSON形式のデータに混入してしまったため、JSONとして処理できなかったっという所ではないでしょうか。
setlatはグローバル変数になっているので function successCallback(position)の外でも参照できます。 そのスクリプトの後ろにでも <input type="button" value="表示" onclick="alert(setlat);"> というボタンをおいてボタンを押してみてください。 successCallbackが呼び出された後であれば、取得した値が表示されるはずです。 なお、そのスクリプトで a=setlat; が実行されるのは、successCallbackが呼び出される前なので aに有効な値は入ってません。
前のご質問に似ていますが、こちらのほうが簡単かと思います。 mapが表示されている状態であれば、 　map.getBounds(); で表示領域の境界を取得できます。 これを利用して、各マーカーの緯度・経度がその間にあればマーカーを表示処理、それ以外はスキップするというようにすればよろしいかと。
map api　のreferenceを見てみると、distanceに関連するobjectがありましたので、それで求められるかと思いましたが、 　https://developers.google.com/maps/documentation/javascript/reference#Distance どうやら、ルート上の距離を測ってしまうみたいですね。 サンプルの中を探してみたところ、ギャラリーの中に距離を算出している例がありましたので、参考になるかと。 　http://www.barattalo.it/examples/ruler.html 中を見てみると、単純に緯度、経度の差から三角関数で距離を算出しているようですので、地球表面を正球面として計算しているようです。 ただし、長半径6378kmよりも小さい6371を用いているようですので、地図周辺用に換算してあるのではないかと思います。 対象地域が日本などに限定されていれば、同様の方法でもあまり誤差はないのではないかと推測されます。 そうでないときは、求める精度にもよりますが、地球を楕円体として計算することになるのかも… 　http://ja.wikipedia.org/wiki/%E5%9C%B0%E7%90%83 実際の計算では、全部のデータに対して距離を求める必要はなくて、先に中心点から半径距離に当たる矩形のエリアを求めておいて、まず、緯度・経度がその外側であったら除外、内側の点だけに対して距離を計算してチェックするようにすれば少しは効率が上がるのではと思います。
おそらく表示件数によってスキームを変えている連中が多いんじゃないかな？ 件数が少ない（マップ内に15～6件程度）場合 dragEndでそのままajax取得->表示 件数が多い場合 初期値として、バウンダリの９倍面積のエリア分の物件状況をajaxで内部配列に取得 dragEndで内部配列から表示、同時にバウンダリの９倍のエリア分の物件状況をajaxで内部配列に取得 件数が多い場合、ちょっとしたDragで全件再取得は苦しい。 体感速度を上げるためには、ない知恵を使うしかないです。
> ただ、残念ながらIE８以前のブラウザでは警告文が出てしまいました。 おぅふっ(汗) そうですかぁ…。 > このページのスクリプトが、Internet Explorer の実行速度を遅くしています。 IEももう少し丁寧に教えてくれたらいいんですけどね(笑) > 「いいえ」ですと全く動かず、何度も上記文が表示されてしまいます。 何回も「いいえ」を押しまくってるといつか動きそうな気もしますが(^^; あとは以下の1行を追加してみる…というのもありますが あまり効果は期待しないで下さい。 /*@cc_on _d=document;eval('var document=_d')@*/ ajax.jsの1番上に書くと、IEでの描画速度が速くなる… かもしれないおまじないです。 （稀に爆発的に速くなることもあるんですけどね） 現実的なのはNo.2で回答されているfujillin様の方法だと思います。 （ここまで来て何を言う！） csvファイルのあるサーバの構成がどうなっているか分からないので 先のソースのように詳しくは書けませんが、概要としては １．http通信でサーバにチェックの状態を送る getAjaxData()を以下の内容に書き換えます。 $.ajax({ type: "POST", // GETでもいいですが url: "some.php", // サーバのスクリプトのURL data: "check1=true&check2=false", // チェック状態、実際には動的に変えます success: function(data){ // 通信成功時の挙動 outputSuccess(data) } }); みたいな感じでhttp通信で絞られた状態のcsvを取得 ２．サーバのスクリプト makeArr=function(data)でやってる内容をそのままphpとか シェルとかバッチとかで作る。 チェック状態はgetParamみたいな関数で。 ３．outputSuccess(data)のvar arr=makeArr(data);は消す と言った感じでしょうか。 ここまでくるとさすがにそれなりの知識も必要になってきます。 が、やって損はない技術なので、本件が焦りの作業でなければ やってみるのもオススメします。 ガヤったくせに大してお力になれず…orz
一応、補足。 CGIを使わない静的なファイルであればApacheなどのウェブサーバーが自動的にcontent_lengthを計算してくれますが、 動的な生成ではプログラム終了まで送出サイズがわからないため、content-lengthが計算できません。 そのため、自分で計算する処理を入れなければなりません。 CGI（PHP）からcontent-lengthを送出する方法ですが、以下のような考え方で行ってください。 バッファにすべてのデータを貯めておく。 　　global $buffer; 　　$buffer='<div id="data">'; 　　$buffer.='■'; 　　$buffer.='</div></html>'; バッファサイズを測り、ヘッダを生成する 　　$bytes=strlen($buffer); 　　header('content-length: ' . $bytes); データを送出する。 　　echo $buffer; --------------------- もう一つの方法として、Comet（ロングポーリング）を使う方法があります。 PHP側の処理をsleepさせずに、一旦終了させます。 その後JavaScriptで通常のonreadystatechangeの処理（受信完了処理）を行い、直後（または一定時間おいて）にもう一度サーバーにアクセスします。 こうする事で、アクセス完了処理が何回も行われる事になりますので、（擬似的な）リアルタイム更新が可能になります。 詳しくは「ajax comet」で検索してみてください。 クライアント側で一定時間待機後にアクセスする通常のポーリング （<meta name="refresh" content="10">のAjax版） なら、Cometほどサーバー負荷はありません。 こちらの方がよく使われます。 チャットルームなどがこのポーリングです。 Twitterの「新しい発言」が自動的に増えていくのとか、スクロールするごとに次ページの内容が表示されていくというのも、 画面に追加するという点ではポーリングと変わりありません。 ぶっちゃけ、単発のAjax通信は「Ajax」と呼ぶに対して、連続するAjax通信に違う名前を付けただけです。 ----------------- 純粋な双方向通信を行う方法 ブラウザもサーバーも、両方が対応している必要がありますが、WebSocketを使用する方法があります。 要はブラウザが行っている通信行程を全てJavaScriptで記述し、 サーバー側のプログラムは、Apache（Apache上で動くものではなく、Apacheそのもの）を作るような物です。 そのため、一般のレンタルサーバーでは使えません。 「websocket」で検索してください。
横やりですいません。何か変な回答があるので口を出します。 #1さんの回答が正解です。で、ちょっと追加。 ■AJAX通信すると、SEO的に不利か？ 内部的なデータの読み込みは、SEO的には無関係です。 関係するのは、Ajaxによるページ遷移です。 クローラは<a>タグによる静的なURLリンクだけをクロールします。 Javascriptはいっさい解釈できません。単純なonClickだけでなく、関数呼び出しや外部リンクまで含んだJavascriptの構文を理解できるはずがありません（笑 Ajaxでも通常のフォーム遷移も同じです。 <a>タグからAjaxを呼び出す場合には、xxx.html#param=valueなどとして、hashChangeイベントを起こし、それを捕捉してAjax処理を行うようになっていれば、クロールされます。 ■質問１項目に違いはあるか？ 上記の理由どおり、違いはありません。 ■質問２　Ajax通信で検索ボタンを押したページ結果は、クロールされるか 固定的に存在する検索リンクは対象になります。 （よくある質問などで、決め打ちの回答項目をAjax表示する場合など） ■質問3　Ajax通信の非同期 Ajaxの「Async」と、ここでいう「非同期」はニュアンスが違います。 Ajaxの「A」は、「ページ遷移に同期せずに」という意味です。 jQueryではデフォルトがAsync「非同期」のため、サーバからの戻りを待たずに処理が続行されます。 そのため、通信結果を処理するために、通信完了イベントを待つ必要があり、必ず「コールバック・メソッド」が必要です。 「同期」処理の場合は、サーバからの返答を待つ間、停止することになりますので、「コールバック」は不要で、リニアにメソッドを書けばいいです。（質問主さまの前のトピはこの状態） なので、「同期」「非同期」どちらで書いても、後処理が変化するだけでやれることは同じです。 一般的なフォーム送信や、リンクは、ページ遷移をともなう「同期」処理です。Ajaxとは利用法が全く異なります。 ちなみに、POST/GETというのは単なるクエリの形式で、一般的なフォーム送信にも、Ajaxにもあります。 （参考） AJAXサイトをクローラブルにする http://www.sem-r.com/seo/20100305195304.html
xmlhttp.jsの中身を見ないと何とも言えないのですが、おそらくloadTextFile()関数の中では、ファイルを非同期で読み込んでいるのでしょうね。 そして、まだファイルの読み込みが終了していない時点でoutput_result()が呼び出されてしまい、データは空っぽの状態のまま、出力処理が行われてしまう、と。 loadTextFile()関数の実装を同期に変更するか、非同期でロード完了後にoutput_result();が呼ばれるように変更するか、というところでしょう。 同期に変更すると、ロードが終わるまでは画面が操作できなくなります。 その方が良いのか、とりあえず操作はできるようにした方が良いのかは、画面が求める仕様によります。 これ以上の具体的なことは、xmlhttp.jsのソースを見ないことには、何とも言えません。
>■質問1 http://www.koikikukan.com/archives/2012/10/02-005555.php >■質問2 コールバック関数でデータを受け取れたかどうかの確認は出来ます。 または、サーバーにファイル（ログファイル）として保存しておけば、そのファイルの内容を見る事で確認できます。 >■質問3 jsondataの扱いはtest.phpの受信完了後に処理してますか？ （コールバック関数内に限らず、受信が完了してjsondataに代入できているなら、onclickでもいつでも良いので） 回避するだけなら、 if( jsondata == null ){ if( Number(jsondata.age)>10) { でいいと思います。 null、undefined、''をNumber()で型変換すると0になりますので、.ageがnullかどうかを判断する必要はないと思います。 （0とnullを区別するのでなければ。）
それは無理です。 そもそもやりたいことがなにかを質問されれば解決すると思います。
>やっぱりサーバーを立ててそこから読み込まないと >いけないのですね。ローカルな環境では、 >やはり無理なのでしょうか？ はい。jQueryそのものはローカル環境でも使えますが、Ajaxはサーバーに問い合わせてサーバーから必要な情報をダウンロードしますから、ローカルから直接ファイルを起動したのではうまくいきません。 たいていは、パソコンの中にサーバープログラムをインストールして、パソコン内にサーバーを起動して動作確認をしていると思います。つまり、「外部のサーバー」が必要なわけではありません。ですから、わざわざレンタルサーバーなどを手配する必要はありません。 XAMPPなどはインストール一発でサーバーを動かせるので、けっこう広く使われています。試してみてはいかがでしょう。 http://www.apachefriends.org/jp/xampp.html
その実現できているサイトを解析しましょう。 URLも提示されていないので、ご自分で解析するしか方法はないのでは？
完全に検証してなくて申し訳ないんですが、 １．phpの json_encode() 関数はSJIS未対応 ２．ブラウザの HttpXmlRequest（要するにAjax）もSJIS未対応 の二重苦で、結局全部UTF-8にしないと動作しないんと違いますか？
＞参考にしたのは下記サイトです それらのサイトは、ほとんどご質問にピッタリのサイトではないでしょうか？ ＞どのようにソースを組めばよいのか、 ＞jsonを使ったV3でのソースを教えていただけると助かります。 漠然とした質問への回答としては、ここの限られた回答欄よりも、参照なさっているサイトのほうがよほど情報量が多いと思います。 問題を切り分けてこの部分が不明とかでしたら、JUSTの回答もつきやすいのではないでしょうか。 とりあえず、ご参照なさっているサイト（どちらでも良いですが）の内容を、そのままご自分の環境で再現してみることをお薦めします。 それで、動かなければ再現できていないわけで、多分、「ソースを教えてください」とは違うところに原因があるのだと推測できます。 再現できたなら、御自分がなさりたいことへと部分部分で変えていってみてください。 どこかで動作しなくなったら、その前に行なった内容がおかしいと考えられます。 参考サイトの内容が、ご質問とほとんど同じと思いますので、変えて行くにしてもそれほど大きな変わり方ではないはず。 地道ですが、確実ではないでしょうか？
こんにちは。 $("button").click(function() { }); を $("button").live("click", function(){ }); にしてみてください。 現状ですと、ページ読み込み時にbuttonが無いのでイベントが登録できていません。 liveを利用することで動的に追加された要素へイベントを登録できます。
＞ajaxとか使えば出来るのでしょうか…？ 「ajax」はとりあえず関係なさそうです。 ＞何から調べればいいのかもわからず悩んでいます。 まず、「javascript」を調べて大まかに理解してください。 次に、「javascript drag」あたりをキーにして検索すれば、ドラッグに関しての方法が見えてくるかと。 さらには、これらの知識を元にスクリプトを作成してゆくことになりますが、ある程度のjavascriptの知識がないと難しいです。 手っ取り早く、ご質問のような機能を持ったライブラリを捜すという方法もあります。（あるかないかまでは知りませんが…） （↑これも、検索等で探すことになるでしょう） ＞縦長のテーブルがあって、列をドラッグ… 全体がtableタグでマークアップされている中の列だと、列全体はtrをまたいだ要素集合になってしまうので、そのままで実現しようとするとかなり面倒なことになりそう。 ちなみに、ご提示のサイトでは縦長のdiv要素をドラッグ＆ドロップで入替えることで、ご質問のような機能を実現しているようです。 子要素にはtbodyとかtrといったテーブルの要素をイメージさせるクラス名を用いてはいますが、基本的に縦長のdivで括られています。 （ソースをご覧ください）
質問文に書いてないのでわかりませんが、jQueryでしょうか？ それっぽいので… 　$("div").load("./hoge.php div.test", function(){ 　　$("ul.piyo").remove(); 　}); とかでは？（未検証です） http://api.jquery.com/load/
こんにちは。 何度もすいません。 $('form').submit ( function() { alert ( $(this).attr('id') ); return false; }); スマートにこれでも良いですね。 わざわざeach()を使う必要ありませんでした。
こんにちは。 jQueryの場合いろいろな要素のセレクト方法があるのでこれだ！という回答が難しいのですが、 まずidは同一HTML内で一意でなければいけません。 id="tr-0"とid="rd-0"とかにしないとダメです。 id="0"を2つ使用することは出来ません。 ほかの動きをどのように実装しているかわからないのですが、radioを選択して番号を取得して対応するtrの背景色を変えるなら以下のような感じだと思います。 $('table input:radio').click ( function() { // idはrd-0,rd-1,rd-2・・という感じなので'-'で分割して配列の1番目に番号が入る var id = $(this).attr('id').split('-')[1]; $('#tr-'+id).css ({ backgroundColor: '#fcc' }); }); 他にもradioと対応する行の並びが同じであれば選択されたradioのindexと同じindexのtrの色を変更するとかいろいろ方法はあります。
こんにちは。 HTMLの構成によってセレクタの内容が変わってしまいますが、以下のようなイメージです。 $().ready ( function() { // liのクリックイベントを設定 $('li').click ( function() { // まずは全てのチェックを外す $('input:checkbox').removeAttr ( 'checked' ); // クリックされたリストのindexを取得して同じindexのチェックボックスにチェックを入れる // よって、リスト2の場合はリスト2にチェックが入る $('input:checkbox:eq('+$(this).index()+')').attr ( 'checked', 'checked' ); }); }); 全てのチェックを消して、特定のチェックを入れるという処理は基本的に変わらないと思います。
#1です。 ＞a01.jpgが表示され、カーソルキーかクリックでa02.jpgに移行できたらいいなと思っています 一度に表示されるわけではなくて、順に表示できればよいのでしょうか？ そうであるならば、多くの○○boxはグルーピングに対応していると思いますので、ほとんどそのままの設置で可能と思われますが？
>下記の4ページのサイトで最初に1-2ページだけを読ませ表示し、その後3-4ページを読ませるためには、どのように加工すれば宜しいでしょうか? 見たところ、単に<a>タグのリンクで移動しているだけのようですね。ではなくて、リンクをクリックしたらJavaScriptの関数で処理をさせるようにします。 function doClick(){ $.get'読み込むテキストファイル', {}, function(result, status, xhr){ $('#表示するタグのID').html(result); $.mobile.changePage('#表示するページのID'); }); 例えばですが、こんな具合にAjaxでページデータをロードし、コールバック関数で読み込んだテキストを表示してページ移動する関数を定義しておき、リンクをクリックしたらこの関数を呼び出すようにしておきます。このあたりは、jQueryおよびjQuery Mobileの関数などについて調べてみるとよいでしょう。 参考 http://libro.tuyano.com/index3?id=72001 http://libro.tuyano.com/index3?id=619006&page=2
page.match(/あああ|かかか|さささ/)
こんにちは。 ASP.netは詳しくないのですが、おそらく画面上の制御はASP.netがJavaScriptを生成するような仕組みだと思いますので、同じような動きは他のサーバサイドの言語になっても可能だと思います。
質問者さんがどのようなプログラム、HTMLを書かれているのか分からないので、具体的な回答が難しいですが、やりたいことは以下のようなモノなのではないでしょうか。 <script> $(function() { $("#sel1").change(function () {changeSel1();}); $("#sel2").change(function () {changeSel2();}); $("#btn_reset").click(function () {changeReset();}); changeReset(); }); function changeSel1 () { var selVal1 = $('#sel1').val(); $("#sel2").children().remove(); switch (selVal1) { case "1": $('#sel2').append('<option value="1">選択肢１</option>'); $('#sel2').append('<option value="4">選択肢４</option>'); break; case "2": $('#sel2').append('<option value="2">選択肢２</option>'); $('#sel2').append('<option value="5">選択肢５</option>'); break; case "3": $('#sel2').append('<option value="3">選択肢３</option>'); $('#sel2').append('<option value="6">選択肢６</option>'); break; default: $('#sel2').append('<option value="1">選択肢１</option>'); $('#sel2').append('<option value="2">選択肢２</option>'); $('#sel2').append('<option value="3">選択肢３</option>'); $('#sel2').append('<option value="4">選択肢４</option>'); $('#sel2').append('<option value="5">選択肢５</option>'); $('#sel2').append('<option value="6">選択肢６</option>'); break; } changeSel2(); } function changeSel2 () { var selVal2 = $('#sel2').val(); $("#sel3").children().remove(); switch (selVal2) { case "1": $('#sel3').append('<option value="6">選択肢６</option>'); break; case "2": $('#sel3').append('<option value="5">選択肢５</option>'); break; case "3": $('#sel3').append('<option value="4">選択肢４</option>'); break; case "4": $('#sel3').append('<option value="3">選択肢３</option>'); break; case "5": $('#sel3').append('<option value="2">選択肢２</option>'); break; case "6": $('#sel3').append('<option value="1">選択肢１</option>'); break; default: $('#sel3').append('<option value="1">選択肢１</option>'); $('#sel3').append('<option value="2">選択肢２</option>'); $('#sel3').append('<option value="3">選択肢３</option>'); $('#sel3').append('<option value="4">選択肢４</option>'); $('#sel3').append('<option value="5">選択肢５</option>'); $('#sel3').append('<option value="6">選択肢６</option>'); break; } } function changeReset () { $("#sel1").val(null); changeSel1(); } </script> <select name="sel1" id="sel1" size="10"> <option value="1">選択肢１</option> <option value="2">選択肢２</option> <option value="3">選択肢３</option> </select> <select name="sel2" id="sel2" size="10"> </select> <select name="sel3" id="sel3" size="10"> </select> <input type="button" id="btn_reset" value="リセット">
こんにちは。 jQueryを利用して作ってみました。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7547847/ $('form input:text').each ( function() { alert ( $(this).attr('name') ); }); 上記のような書き方でformにあるtextの名前を全てalert表示します。 参考にしてみてください。
success : function(data){ if(data.id){ alert(data.id); $("#tblh img#image"+data.id).attr("src","/images/noimage.gif"); } の「alert(data.id);」は実行されて、送信したidがアラート表示されていますでしょうか？ (1) また、ブラウザから直接 ｈttp://***.***.***/images/noimage.gif で「noimage.gif」画像が表示されますか？(2) $("#tblh img#image"+data.id).css("display", "none"); とするとどうなりますでしょうか。(3) chromeの「F12」開発ツールやFireFoxの「FireBug」などは利用していますか。 利用していれば、実際に「<img>」タグの「src=」属性が変更されているか確認できるはずです。 src属性が変更されているにもかかわらず画像が変わらないのか、 そもそもsrc属性が変更されないのか・・・ success : のfunctionでエラーなどが起きてないかも開発ツールで確認してみてください。 .htaccessの設定は多分問題ないと思います。 RewriteEngine on RewriteCond $1 !^(index\.php|images|css|js|robots\.txt|favicon\.ico) RewriteRule ^(.*)$ /index.php/$1 [L]
こんにちは。 jQueryを利用しての送信は以下のようにします。 (サーバからのレスポンスはJSONと仮定) $.post ( 'delete.php', { id: id }, function ( json ) { } ); パラメータの部分は { パラメータ名 : パラメータ値 } ですので { id: id }の場合、PHP側では$_POST['id']で取得します。 サーバからJSONを返すとfunction(json)が呼ばれますのでそこにnoimageへの書き換えを記述します。 タグ構成が違うと、一部変更しないといけません (imgタグへのアクセス部分等) が動作サンプルを提示します。 削除ボタンをクリックするとサーバ上へidを送信し、削除処理(ダミー)を実行して成功/失敗をJSONにて返します。 受け取ったJSONのstatusがsuccessの場合はnoimageへの変更を実行します。(偶数番号が成功、奇数は失敗します) ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7545172/
「XMLHttpRequestを構築する」というのが何を意味されてるのか分かりませんが、 こういうのが欲しいということでしょうか。 XAMPP http://www.apachefriends.org/jp/xampp.html
・まず、JavaScriptを一切使わない状態で、全てのページにアクセスできるようなサイトを作ります。 <a href="contents.php?get=something">コンテンツ</a> ・HTMLやCSSを変更せず、JavaScriptを追加するだけでAjaxサイトに改変します。 onload=function(){ document.getElementsByTagName('a')[0].onclick=function(){ /* ajaxロード */}; } 以上です。 こうすることで、 JavaScript対応ブラウザではAjaxとして、 JavaScript未対応ブラウザ（JavaScript停止ブラウザ）は単純HTMLとして表示できるようになります。 検索ロボットはJavaScript未対応ブラウザと全く同じですから、JavaScript未対応ブラウザのためのサイトを作れば問題ありません。 Googleの解説は、その方法をナントカフラグメントなどという表現を使って説明しているだけです。 JavaScript未対応ブラウザで問題なく表示できていれば、<meta name="fragment" content="!">などというワケの分からないものを入れる必要はありませんし、 URL、アドレスに#hashを入れる必要もありません。 以下余談＆私見 こういう特殊な作り方をさせるのは、Google専用サイトを作らせるための一種の囲い込みだと思います。 もちろん、Google専用SEOが施されていなければページランクを下げるような仕組みを作っているかもしれませんし、 Google基準でデファクトスタンダードを作っておいて、W3CやWHATWGに「SEOの仕方」というのを提案するつもりなのかもしれませんが。
こんにちは。 ソースを受け取り後にＤＯＭをいじって内容を書き換えていますので反映することは出来ません。 最初からその内容でＨＴＭＬを書き出してあげる必要があります。
質問者さんは、例えば。 初めて作るみそ汁のレシピ 1)出汁を取る 2)具を入れる 3)味噌を入れる というのを見て、ケチャップやらウスターソースやら酢を入れるタイプですか？ 私はファイルを２つに分けてみてくださいとは言いましたが、includeを使えとは一言も言っていません。 参考サイトを見直して、一字一句、全く同じものを作ってみてください。 もちろん、ファイル名も同じものです。
こんにちは。 何も難しく考えることはなく、読み込んだ対象のみ処理されると考えれば良いのではないでしょうか。 例えば例のPHPであれば<?php　?>内の処理はアクセスされた時にサーバ側で処理をしてHTMLとして返します。 その時外部のCSSやJavaScriptを読み込みます。 次にonclickでAjaxの処理が走った場合、例えばJSONデータを読み込んで<div id="ajax"></div>に表示するような処理の場合はそのJSONのみ読み込みます。 (他は何も変わらない) なのでそのJSONを表示する処理で利用するCSSはそこで同時に任意のCSSを動的に設定するか、もともと読み込んだCSSに含まれていないと適用されないと思います。 上の方でおこなっているmySQLへ接続したりetcは実行されません。 言葉で説明するのが難しく伝わらなかったらすみません。
height:100% を使うにはその親要素にheightの指定がなければなりません。 body { width:100%; height:100%; } #map { width:100%; height:100%; } <body> <div id="map"></div> </body>
No.2です。 apacheのログを見てみて、接続数に引っかかっているようであれば要変更です。 この辺のサイトはいかがでしょう。 http://shoulder.jp/archives/006925.php プログラム的な改善方法としては、Ajaxの処理を減らすというより、 Ajaxの「リクエスト数」を減らす必要があります。 処理ごとにAjaxでデータを引っ張るよりは、出来る限り一度で必要なデータを全部取得して、 Javascript側で成形して必要なデータを取得する方が安定します。 また、クライアント側（ブラウザ側）にも同時接続数制限が存在したと思いますので、 その辺りも注意する必要があるはずです。 基本はAjaxは同時に2つまでしか動かないようにすれば大丈夫だと思います。 また、jQueryとかの機能を使う場合は意識しなくてもうまい具合にやってくれたはずです。 そんな感じで如何でしょうか。
参照渡しの問題ですね。 オブジェクトは変数に格納してもコピーされたものではなく 現在あるそのものを見ているため、そのまま他に表示する指示をすると、 見た目上、元のあった場所のものが移動してしまいます。 クローンを作ってそれを入れ込めば解決しそうです。 var contents = $("div.info ul").clone(true); $("div.hoge").html(contents);
これはjQueryのバージョンとmobileのαバージョンの相性やバージョンの問題といったような記事やコメントがあります。 バージョンを最新版にしてみてはいかがでしょうか。 http://doeswhat.com/2011/03/08/jquery-mobile-error-loading-page/ http://jquerymobile.com/download/
キーを数字ではなく　"p5" や "p9" などの文字にするとどうですか?
２つのファイルにある urlencord 部分を urlencode に修正してみてはいかがでしょうか。 IE以外はエンコードに失敗して日本語のままでも、 文字化けせず表示できていただけかもしれません。
こんにちは。 特に意識したことが無かったので、的外れな回答だったら申し訳ございません。 HTMLの記述がなんであれ、getでもpostでも通信できますので以下のサンプルをご覧下さい。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7423626/ どちらもHTMLのタグの構成は一緒です。 aタグのhrefからパラメータ部分を取得し、ajaxのパラメータに設定しています。 (jquery.url.jsというプラグインを利用しています) ほかの方法としては<img src="" data-keyword="aaaa" data-cate="1" />と、独自の属性にて値を準備してあげてJavaScriptにて取得してパラメータに設定してあげる方法もあります。 他にもいろいろあると思います。
こんにちは。 >もし可能であれば、これの原因や、 >他にもし方法があれば教えて下さると助かります。 ブラウザの仕様で返ってくる値が違うというのが原因です。 取得したパスからURLのみ取得してあげるようにすれば良いと思います。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7410650/ ==== JavaScript $().ready ( function() { $('#box'). append ( $('<img />').attr('src',$('#box').css('background-image').match(/https?:\/\/[-_.!~*'()a-zA-Z0-9;\/?:@&=+$,%#]+[a-z]/g)) ). css ( 'background-image', 'none' ); }); 多分これで動くと思いますが、iphoneを持っていないので確認取れていません。
http://www.ietf.org/rfc/rfc2396.txt #は、fragmentなので、使えないのです。 他にも色々使えない文字はあります。 encodeURIや、encodeURIComponentを使用して、URIエンコードすれば大丈夫だと思います。
こんにちは。 >splitでは、途中に'.'が存在すると、うまくいかないこともあるんですね。 >そっか、indexOfを使えばいいんですね。 >勉強になります。 相対パスであれば画像の拡張子以外に'.'が入ることはほとんど無いと思いますが、URLの場合はドメインに必ず入ってきますのでその数が固定であればsplitかけて、後ろから見ていけばわかると思います。 単純に0と1要素で見ると、ドメインの.で区切られた文字になると思います。 今回は最後の'.'が画像の拡張子前ときめうちでの処理です。 ＊私のandroid端末では動作確認しています。
Apacheを使ってないのでは？ loalhostにアクセスしてみてはどうでしょうか。
こんにちは。 画像の切り替えにAjaxを使う必要はありませんが、2パターン作ってみました。 サンプル1はAjaxを利用せず、画像を変更します。 サンプル2はAjaxを利用してdata.txtよりJSONデータを読み込んで、適切な画像を表示しています。 動作サンプルよりソースを表示して、どういった処理を行なっているか見てみてください。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7364555/ ==== data.txtの中身 {"ringo":{"url":".\/images\/ringo.png","alt":"\u308a\u3093\u3054\u306e\u753b\u50cf(Ajax\u3067JSON\u30c7\u30fc\u30bf\u3092\u53d6\u5f97)"},"mikan":{"url":".\/images\/mikan.png","alt":"\u307f\u304b\u3093\u306e\u753b\u50cf(Ajax\u3067JSON\u30c7\u30fc\u30bf\u3092\u53d6\u5f97)"}}
こんにちは。 すごく簡単に実装するならこんな感じになると思います。 ブランクのliが良いか悪いかはわかりませんが、高さを揃えるとかのほうがスマートな気がします。 ==== 動作サンプル http://hppg.moe.hm/okwave/qa/q7362658/ ==== JavaScript $().ready ( function() { // 左側のリスト var $ul1 = $('div.ul1 ul li' ); // 右側のリスト var $ul2 = $('div.ul2 ul li' ); // 二つの差を求める var s = $ul1.length - $ul2.length; // 差がマイナスの場合は左側が足りないと判断し追加対象となるターゲットを設定 var $target = s < 0 ? $ul1 : $ul2; // 差の絶対値を求めその回数をループ for ( var i = 0; i < Math.abs(s); i ++ ) { $target.parent().append('<li />'); } }); ==== HTML <div class="ul ul1"> <ul> <li>１</li> <li>２</li> <li>３</li> <li>４</li> </ul> </div> <div class="ul ul2"> <ul> <li>Ａ</li> <li>Ｂ</li> <li>Ｃ</li> <li>Ｄ</li> <li>Ｅ</li> </ul> </div>
readyStateは4以外がエラーというわけではなく、通信中はその受信状態に応じて1～４を変動します。 4になっていると思いますが、document.write()のエラーではないでしょうか。 document.write()が使える条件、使えない条件を調べてみてください。
[No.2]さんの回答にちょっと補足 IE は、たしかキャッシュされた画像への onload は、発火しなかったはずなので、 jQuery でそのあたりが対処されているか確認した方がいいかも？ jQuery で対処されてなかったら、 IE 画像 キャッシュ onload あたりのキーワードで検索をかければ対処方法のかかれたページが見つかるよ。
実際の処理がどのような内容になっているのかにもよりますが、keyup changeの両方を指定すると、必ず最後に同じ状態で2回処理をすることになってしまうので、keyupだけで充分かと想像します。 ＞ctrl+vでペーストされた場合に2回処理されてしまうのは ＞仕方のないことなのでしょうか？？ keyupは文字通りkeyup時に発生しますので、ctrlキーだけをキーアップしても発生します。これはshiftやdelやescその他のキーでも同様です。 keyの種類によって処理を実行させたくないのであれば、keycodeを取得して判定するか、あるいは、対象としているテキストエリアの値を記録しておいてその内容が変わっていたら処理を行なうとかにすれば2回実行せずに済むかと思います。 （後者は、リアルタイムでのonchangeに近い感じかも…） ＞テキストエリアが変化したら、１度づつ処理させるには ＞どのようにしたらいいでしょうか？ 例えば、後者の考え方の例。 （例示の対象が'textarea'となっていて、idではないので、複数に対応可能な記述にしています） （インデントは全角空白にしています） $(function(){ 　$('textarea').each(function(){ 　　$(this).bind('keyup', hoge(this)); 　}); }); function hoge(elm){ 　var v, old = elm.value; 　return function(){ 　　if(old != (v=elm.value)){ 　　　old = v; 　　　alert("処理"); 　　} 　} }
$(function()) とか $(document).ready() とかってのは、 ドキュメントの準備ができたタイミングで実行される処理を記述するものです。 ですので、仰っている程度の処理であれば違いはほぼありません。 主な使われ方としては、HPの初期化処理等が最初に動くような場合、 そのまま実行されると、通常のHTMLが表示される前に処理が入ってしまって表示が遅くなってしまいます。 そこで、このファンクションに入れておくと、ドキュメントの準備が出来てから動くので、見た目上は非常にシームレスに見える訳です。 ざっくり言うとこんな感じです。 詳しくはちゃんと調べてみたほうが良いかと思いますよ。
こんにちは。 前回の質問と同様の現象ということでよろしいでしょうか。 確かにこのソースですと再現させることが出来ました。 どうもCSSを設定する際にposition:absolute;を設定すると現象が起きるようです。 最初からabsoluteを設定しておくと再現しませんのでCSSでうまいこと対応できませんでしょうか。 ==== 動作確認サンプル http://hppg.moe.hm/okwave/qa/q7302800/ ※根本の解決でなくもうしわけございません。ブラウザに起因する現象だと思います。
こんにちは。 urlに指定してあるxmlファイルですが自分のサーバ(このスクリプトが動くサーバ)以外のところのファイルじゃないでしょうか。 クロスドメイン制約(とどのつまりほかのサイトのファイル)は読み込めないようになっています。 動作確認サンプルでは自サーバにxmlファイルを用意して実行しましたので正常に動いています。 ※もし過去の質問が解決しているのであればクローズしてくださいね。 ==== 動作確認サンプル http://hppg.moe.hm/okwave/qa/q7293123/ xmlファイルを自分のサーバに用意するか以下のような方法で制限を回避する必要があります。 http://shokai.org/blog/archives/993
正しく動作していますよ。 showメソッドは非表示のものを表示する機能です。 テキストが最初から表示されているので、showメソッドを読んでも変化しません。 ヘッダー部分に <style>#sample-text { display: none; }</style> を追加してみて下さい。 そうすると、最初はテキストが表示されず、ボタンを押下することで表示されるようになります。 ボタン押下で出たり消えたりさせたいのであれば、 $(function() { $('#button').click(function(){ if($('#sample-text').css("display") == "none") { $('#sample-text').show(); } else { $('#sample-text').hide(); } }); }); とスクリプトを書き換えてみて下さい。
http://beauty.geocities.jp/nishihama985/on-off-div.htm たとえば一例ですが　 ページ内に表示領域を作って表示すれば 同一ページ内でも　元データをくずさずに表示できます ＯＮ／ＯＦＦを押すと　DIV要素が表示されます AjaxでTXTデータを表示できます DIV要素などで表示領域を用意して表示 という形でできます 分かりにくい時は再質問を
こんにちは。 出来ないというのは、私が試したスクリプトが動いていないということでしょうか？ それとも動きが違うから出来ないということでしょうか。 >jQuery+PHPにて、POST送信し、 >戻り値の条件分岐でページを遷移させたり、 >更新させたいと思っています。 という仕様であれば先のサンプルで出来ているはずです。 更新の部分が補足で頂いたlist形式で・・・の部分を更新するのであれば、現在どのようなスクリプトで動いているか提示して頂かないとわかりません。 ※一応、作ったサンプルは動作確認しています。
http://api.jquery.com/jQuery.noConflict/ >jQuery(document).ready(function($) { > // Code that uses jQuery's $ can follow here. > }); > // Code that uses other library's $ can follow here. noConflictをつかっても、jQueryのスコープ内における$はjQueryを指します。 jQueryではないライブラリの$（グローバル変数の$）を使う場合は、window.$を使用してみてください。
あっていると思います。xmlはあまり要らないですが。 専用のphpを作って、php内でSQLを使って絞り込み。 あとはajaxでクエリの送信とphpからの結果を取得出来ればOKです。 受け渡しにはjsonを使うと楽ですね。 一番難しいのは、データベースのパフォーマンスの問題ですかね。 それだけの絞り込みを実用的な速度で行うには、そこそこの知識が必要かと思いますよ。
Ajax というのは、Webアプリケーションを作る上での「方法論」です。 一方、jQuery は、Webアプリケーションを作るためのJavaScript「ライブラリ」です。 この二つは並列で較べられるようなものではありません。 jQuery は、さまざまな機能をブラウザ上で簡単に実現できるライブラリであり、 jQueryを使うことで 、Ajaxアプリケーションも容易に作れます。 構造的には、「JavaScriptプログラムで、jQueryを使って、Ajax なWebアプリケーションを作る」ということになります。 jQueryを使わなくてもAjaxアプリケーションを作ることはできますが、かなり手間がかかります。 jQueryを視野に入れているのなら、そんな遠回りをするのではなく、jQueryでAjaxアプリケーションを作るべきです。 ・まずはjQueryについて勉強すべきでしょう。jQueryはJavaScriptのライブラリですので、合わせてJavaScriptそのものについても勉強した方がいいと思います。そうすることで、ブラウザ側で動くプログラムを作ることができるようになるはずです。 ・次に、サーバサイドのプログラム(PHP、Ruby、Perl(CGI)など)の勉強してください。 Ajaxは、ブラウザとサーバとの連携がキモです。jQuery/JavaScriptは、ブラウザ側のプログラムであり、それだけではAjaxは成り立ちません。Ajaxアプリケーションを作るためには、サーバ側のプログラム作成も必要です。 ・最後に、Ajaxについて勉強。 たいていのjQuery入門書には、jQueryを使ったAjaxアプリケーションの作り方も載っているはずです。
img要素のloadイベントを監視すれば判定できるのではないでしょうか。
こんにちは。 質問する際はどのようにうまくいかないかを記入すると回答が付きやすいと思いますよ。 (何に対してうまく行かないのか回答者はわからないです) で、サンプル作ってみました。 これをベースにして自分のものに反映してみてください。 <html> <head> <title>プルダウン内容に応じてラジオボタンをオンオフ</title> <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script> <script type="text/javascript"> $().ready ( function() { // id-c1のchangeに以下の動作を設定 $('#id-c1').change (function() { $('#id-c1 option:selected').each(function() { // 選択されている値を取得 if ( $(this).val() == "0" ) { // 0の場合はr1クラスのラジオにdisabledを追加 $('.r1').attr ( 'disabled', 'disabled' ); } else { // 0以外の場合はr1クラスのラジオのdisabledを削除 $('.r1').removeAttr ( 'disabled', 'disabled' ); } }); }).change(); }); </script> </head> <body> <select name="c1" id="id-c1"> <option value="0">無効</option> <option value="1">有効</option> </select> <br> <input type="radio" name="r1" value="1" class="r1">1 <input type="radio" name="r1" value="2" class="r1">2 <br> <input type="radio" name="r2" value="4" class="r2">3 <input type="radio" name="r2" value="3" class="r2">4 </body> </html>
> 小計値をボタンを押すことにより合算して合計値を出したいのですが、うまくいきません。 現状では、どういう計算をしていて上手くいかないのでしょうか？
$("input[name=nr]:checked").val(); で、いないがチェックされている場合は0、いるがチェックされている場合は1が取得できます。
jQueryは専門じゃないんで、具体的なアドバイスはできませんが。 地道な方法は、ChangeLogやReleaseNoteを追い掛けること、そして、新旧のマニュアルを読み比べることです。 とはいえ、すでのバージョンに開きがありすぎて大変です。 そこで、エラーメッセージを確認します。どこでエラーになっているのか、そこで使われてる関数等をヒントに調べれば、多少は楽になります。 あとは、今はとりあえず旧バージョンのことは忘れて、現行バージョンの勉強をすることです。 ある程度習得できた、と思ったら、旧バージョンのものを「自作したけどどっかに間違いがあって動かないスクリプト」だと考えて、動くようにデバグするつもりで修正しましょう。デバグの勉強にもなります。
tableですよ。 firebugとかのデバッグツール使えばすぐ見れます。 なんなら画面のソース出せば見れます。
#1～#3です。 ＞緯度・経度を取得するロジックを検討いたします #1の回答から、何度も触れているように、google mapは緯度・経度を軸に作成されていると思われます。 それなので、イベントを取得すれば、そのまま緯度・経度を取得できるようになっています。 http://code.google.com/intl/ja/apis/maps/documentation/javascript/reference.html#MouseEvent もう一度、最初から順にゆっくり読み直していただければ、私の言いたいことが通じるかもしれません。
コールバック関数で判別できます。 本家ドキュメントのサンプル：http://api.jquery.com/load/#example-1
追加 まず、<script></script> の中身をみないと判断つきませんねぇ。 if(flag==0){ 　$(".test li:eq(2)").hide(); }else if(settlementflag==1){ 　$(".test li:eq(0)"), .test li:eq(1)").hide(); }else if(settlementflag==2){ 　//何もしない }; が適切なタイミングで実行されていないのが原因のような気がします。
<div id="表示したい箇所"></div> <script type="text/javascript"> $(document).ready(function(){ $.ajax({ url : '***.xml', dataType : 'xml', success : xmlParser }); }); function xmlParser(xmldata){ var tag = "data1"; var elem = $(tag,xmldata).text(); //または //var elem = $(xmldata).find(tag).text(); $("#表示したい箇所").text(elem); } おしいけど凡ミスが多いようです。 「変数名」は'や"で閉じない。「値」は閉じる url : ***.xml, ==> url: "***.xml", var tag = data1; ==> var tag = "data1"; $("tag", ===> $(tag,
IE は　textContent　ダメでしたね。すみませんが以下に訂正。 alert( $item_s[i].tagName +"===>"+ $($item_s[i]).text());
使用条件がよくわかってませんけれど、 ＞ただ<name1><name2><name3>　とタグ名がバラバラなんです。 読込む対象は全て同じxmlに固定されていると考えてよいのですよね？ ＞htmlのどこかに、id="1"と入れて、idが1の時は、<name1>の要素を取得し、～ ＞ちなみのhtmlのbodyタグ自体がテンプレートでできているので、 ＞idをどこかにふるとしたら、head内とかになるのしょうか？ スクリプト部分はファイルごとに違う設定が可能なのでしょうか？ そうであれば、読込む部分は関数にしておいて 　getAjax("name1"); とか　getAjax("name2"); のように指定したい部分だけを、それぞれのhtml内に記載して呼び出すようにしておけばよいのではないでしょうか。 （残りの部分は共通にしておいて、html内にでも外部ファイルにでも…） あるいは、その部分も書き分けるのが嫌なのであれば、urlのファイル名部分とタグ名の対応表を用意しておいて、参照したいタグ名を求められるようにすれば、共通のスクリプトにすることも可能かと。 例えば 　var loc = window.location.href.match(/\/([^/]+)\.html$/); 　var name = loc?{"a":"name1", "b":"name2", "c":"name3"}[loc[1]]:null; 　alert(name); 　//（対応がない場合はundefined又はnull） みたいな方法で。 …あ！（↑）特段 jqueryにはなってませんけど。
> 何故か、東京電力のCSVはダメで、東北電力のCSVは大丈夫です。 HTTPのレスポンスヘッダを確認してみたところ、 東京電力は Content-Type に charset の指定がありませんでした。 一方、東北電力は charset=shift_jis になっていました。 東京電力 Content-Type: text/plain 東北電力 Content-Type: text/plain; charset=shift_jis charset が明示されていないものだから、 実際は SJIS なのにブラウザが UTF-8 とみなして 文字化けしている状況ではないかと思います。 東京電力に意見・要望を送り、東北電力と同じに してもらうのはどうでしょうか。
よくわかっていないので、回答になっていませんが… ＞ある程度の制御はできているのですが、 どのような方法で実現しているのか不明なので、わかりませんが、 その制御を行なっている方法で拡張していくのが良さそうに思いますけれど？ それとも、機能に限界があってその方法では無理とかなのでしょうか？ ＞その場合、言語はやはりJavaScriptになるのでしょうか？ 現在の機能の実現方法が不明なのでわかりませんが、もしjavascriptで行なっているのならその延長でよいのでは？ たまたま、先日見つけたスプレッドシート（？）の多機能版。 機能が複雑すぎてまったくわかってませんけれど、かなりのことができていそう… http://www.treegrid.com/treegrid/www/ …でも、エクセルが目標なら、そのままエクセルを使っちゃうというのは無しなのでしょうか？
こんにちは。 ソースありがとうございました。 拝見しましたがやはり合計を求めるロジックがサーバ呼出し後に呼ばれるメソッド内に無いために起きる現象です。 似たようなのを作って試してみました。 su2の合計だけNaNになりませんか？ サーバ側からレスポンスを返すのをわざと遅くしてみると良くわかるのですが$.ajaxにてサーバ通信を行い、値が返ってくる前に既に合計計算のロジックが動きます。 なので、正確に計算できません。 合計を求める部分のロジックを$.ajaxの中に入れてください。 イメージは success : function ( result ) { if ( result != '' ) { var kekka = result.split(','); su = parseInt ( kekka[0] ); alert ( "from server = " + su ); $('#A2-'+no).val ( parseInt($('#A1-'+no).val())*su); } var su1 = 0; var su2 = 0; for ( var i = 1; i <= 5; i ++ ) { if ( $('#A1-'+i).val() != '' ) { su1 = parseInt(su1)+parseInt($('#A1-'+i).val()); su2 = parseInt(su2)+parseInt($('#A2-'+i).val()); } } $('#kei1').val ( su1 ); $('#kei2').val ( su2 ); } こんな感じです。
HTML要素とインプット要素はそれぞれ以下のように取得できます。 var html = $("#text2_1").html(); var value = $("#text2_2"").val(); なので、以下のようにすれば書き換わるはずです。 $("#text1_1").html($("#text2_1").html()); $("#text1_2").val($("#text2_2").val()); $("#text1_3").val($("#text2_3").val()); $("#text2_1").html(""); $("#text2_2").val(""); $("#text2_3").val("");
jQueryでinputのvalue値を変更する場合は、 $("#text2").html("変更後２"); ではなく、 $("#text2").val("変更後２"); です。
はじめまして、 ちょこっと検索してみたら 財団法人国土地理協会 ↓ http://www.kokudo.or.jp/master/index.html ってとこに、郵便番号をキーにした番地のデータベースがあるみたいです。 詳しいことは分からないので、問い合わせて解決していただきたいのですが、 プログラムとしては、郵便番号をキーにした、番地のＤＢが必要になるのではないでしょうか？ （ちなみに私の住所では町の後は丁はなく、番地なのであまり意味ありませんが・・・） 参考になれば幸いです。
ANo1 です。 サンプルよりもコチラのサイトをご覧になると良いかと。JQuery という割とメジャーなライブラリで、かなり簡単に使えます。 Ajax は技術名であって、実際にはこういうライブラリを使います。 データベース（つまりサーバーサイド）の実装はTomcat とかStruts とかの話ですよね？そちらは実装済みで良かったですよね？
>大きな背景画像のスイッチなので それだけタイムラグが発生するくらいの大きな画像だと枚数が増えれば増えるほどページの表示速度も遅くなるということだと思います。 >div を重ねたほうがいいのですね divで重ねなくても、No1で書いたように、ページを表示させた時に、1ピクセルにして表示するとか、visibility:hiddenで載せておくとかすれば、予め他の背景画像を読み込ませておけるので、すぐに表示されるようになります。 まあ、乗りかかった船。せっかくだから載せておきます。 いろいろ問題あって時間かかりすぎた＞＜ CSS部 #wrapper { position:relative; width: 100%; height:100%; } #container{ z-index:1; position:relative; width:1000px; height:1000px; } #img1{ position:absolute; width:100%; height:100%; background-image:url(img1.jpg); background-repeat:repeat; } JavaScript部 var thisbg = "img1"; $(function(){ $("#nav").find("a").each(function(){ if(this.rel == thisbg){return true;} $('<div />', { id: this.rel, css: { "position": 'absolute', "top": "0", "left": "0", "visibility": "hidden", "width": '100%', "height": '100%', "background-image": 'url('+this.rel+'.jpg)', "background-repeat": 'repeat' } }).appendTo('#wrapper'); }); $("#nav a").click(function(){ var val = this.rel; $("#"+thisbg).fadeOut(500, function(){ thisbg = val; $("#"+val).css({"display":"block","visibility":"visible"}); }); }); }); HTML部 <div id="wrapper"> <div id="img1"></div> <div id="container"> <div id="nav"> <a href="#" id="btn1" rel="img1">background1</a> <a href="#" id="btn2" rel="img2">background2</a> <a href="#" id="btn3" rel="img3">background3</a> </div> </div> 説明 冒頭で書いたように背景画像が多くなればなるほどページ全体の読み込み速度は遅くなります。 デフォルトの背景色以外は効率性も考え、JavaScript部分で読み込ませています。 デフォルトの背景DIVは、レスポンスの為に予め設定しておく必要があります。 指定は、CSS部の #img1{} とHTML部の <div id="img1"></div> の部分です。 <div id="img1"></div> は必ずwrapper下に入れておいて下さい。 あとの必要なDIVは、JSが <div id="nav"></div> の中に入っているa要素を調べて書き出してくれるので、設定は <div id="nav"></div> の中にAタグを入れるだけです。 いくらでも増やせます。 z-indexで切り替えということでしたが、fadeOutにしたら不可視になるので、手間は同じだし、背景画像でもし透過画像（jpgなのでないでしょうが）を使われたりしたらおかしなことになると思うので、z-indexでの切り替えはしていません。 検証 IE7,IE8,FireFox,Safari,Opera,クローム #IE6は背景が縮まったままになります。解消できなかった＞＜ では！
ライブラリについては知りませんが、回答がないみたいなので… サムネイルと拡大画像の名前などに規則性があるのかないのか、キャプション表示があるのかないのかやthickboxでグルーピングをするのかなどによって方法が変わってくるとは思いますが… thickboxは基本的にリンク要素のhrefに拡大画像のアドレスを指定して、class="thickbox"を設定しておけば処理してくれるみたいです。 （グループ表示するのだと、rel属性の設定を使い分けるとかが必要） http://jquery.com/demo/thickbox/ なので、簡単なのはjCarouselだけのときのHTMLソースが ◆（1） <ul class="carousel"> 　<li><img alt="" src="A_s.jpg"></li> 　<li><img alt="" src="B_s.jpg"></li> 　<li><img alt="" src="C_s.jpg"></li> 　　　　・・・・・・・・・ </ul> だとすれば、 ◆（2） <ul class="carousel"> 　<li><a href="A_m.jpg" class="thickbox"><img alt="" src="A_s.jpg"></a></li> 　<li><a href="B_m.jpg" class="thickbox"><img alt="" src="B_s.jpg"></a></li> 　<li><a href="C_m.jpg" class="thickbox"><img alt="" src="C_s.jpg"></a></li> 　　　　・・・・・・・・・ </ul> のようにしておくだけで、個別に（拡大表示だけの）thickboxが適用可能となるようです。 このようなソースでも、jCarouselはそのまま処理してくれるので一番簡単かも。 ＞商品のシリーズごとに同一のHTMLに複数表示させたいのですが ＞やり方がわかりません。 jCarouselを複数設定するのはセレクタで複数の要素をセットするか、あるいは、オプションなどが異なる場合は分けてそれぞれ設定すれば良いだけのようです。 ご提示のサイトの「Static Examples」の一番下に、複数設置の例がでています。 http://sorgalla.com/projects/jcarousel/ サムネイルと拡大画像に規則性があるような場合（上例のような場合）は、スクリプトで◆（1）のソースHTMLから◆（2）のソースに自動変換することができるでしょう。 上の例で言えば 　$(".carousel li img").each(function(){ 　　var src = this.src.replace(/_s.jpg$/,"_m.jpg"); 　　$(this).wrap('<a href="' + src + '" class="thickbox"></a>'); 　}); のような方法で可能です。 jCarouselの設定の後でも大丈夫とは思いますが、jCarouselはいろいろHTMLの構造をいじっているみたいなので、先に変換しておいたほうが無難かも。 サムネイルと拡大画像に関連性がないものをスクリプトで設定したいのであれば、ご提示のスクリプトのように配列でデータを用意しておいて、同じように設定してゆくことになるかと思いますが、メンテナンスを考えると、変更があるたびにHTMLとスクリプトの両方を変更しなればならないので面倒ですね。 また、別々に設定されているので、要素の数が合わないときを考慮した処理なども作成しておく必要がありますので、あまりお勧めとは思えません。 （自由度は一番高いかも知れませんが…）
OnPreRenderはイベントではありません。 PreRenderイベントの記述 Private Sub Page_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreRender
IE8 は onload 未対応だったと思います。 onreadystatechange にしてみたらどうでしょうか？ http://www.w3.org/TR/XMLHttpRequest2/#dispatch-readystatechange-event
試してませんが… 英語はよくわかりませんが、ご提示のセッティング部分のコメントにあるように ＞$('.acc_container').hide(); //Hide/close all containers 『class="acc_container"の要素を全て非表示にする』 ＞$('.acc_trigger:first').addClass('active').next().show();　 ＞//Add "active" class to first trigger, then show/open the immediate next container 『最初のclass="acc_triger"に"active"クラスを追加し、直後にあるコンテナ（container）を開く（表示する）』 となっているのではないでしょうか？ firstの代わりに、eq(2)としてあげることで3番目（最初のindex値が0）の要素が開いたりしませんか？ （確認していませんのであしからず）
よくわかりませんが… 1）mglistを配列で定義しているけれど、対象の画像は全てHTMLソース内に 　あるみたいなので、不要ではないでしょうか？ 2）変数selectを乱数で発生させているけれど、最初の一回だけなので、「表示する 　画像」をランダムに選択していることにはならないのでは？ 3）変数t0にはタグの文字列が入るけれど、jqueryのセレクタにはならないのでは？ 　（そもそも、selectもt0も固定で変化しないみたいだし） 4）画像要素の順序を移動しているみたいですが、表示する画像は1個だけなので 　順序を移動しなくても良さそうに思えますが？ 　（半透明状態だと、前後どちらにあっても透過して見える） setIntervalにはしていませんが（←最初の処理にタイムラグが出るので）、こんなのでは？ （全角空白は半角に） $(function(){ 　var elm = $(".fadein"); 　elm.children("img").hide(); 　(function(){ 　　var img = elm.children("img:hidden"); 　　elm.children("img:not(hidden)").fadeOut(); 　　$(img.get(Math.floor(Math.random() * img.length))).fadeIn(); 　　var id = setTimeout(arguments.callee, 3000);　　 　})(); });
>loadを並列で実行したとしてもそれはキューにたまるだけであり、通信自体はシリアルで行われているのかなという気もしてきました。 $.load()ではなく、No.1で書かれているように$.ajax()を直接呼び出してみるとどうでしょうか。 （引数の指定の仕方などが変わるようです） 手元にあるver.1.42のコードを読んでみると、戻り値がXHRオブジェクトのようですので、場合によってはXHRオブジェクトを直接操作して、動作確認できるかもしれません。 （別途タイマーを用意して、XHRオブジェクトのreadystateが2や3（通信中）になってるかどうかなど） なお、複数のリクエストを同時に行うこと自体は可能です。 私は自作ライブラリを使用していますが、4～8個（この個数はブラウザの設定による）まで、同時リクエストが可能です。 私からの情報はこの辺りまでですね。 $.ajax()で作成したXHRオブジェクトを直接.open()や.send()するなどの方法もあるでしょうけど、 そこまで行くとライブラリを使うメリットが無くなるかもです。
$("#Info1,#Info2,#Info3,#Info4,#Info5").load("/samples/heavy_function_parts"); のようにカンマ区切りで複数指定してみてはどうでしょうか？
フォームのactionに指定したサーバー側のプログラムが、生成したサブネールのURLを返すような仕組みが別途必要ですが、ちゃんと準備してありますか？ こいつ↓とくみあわせれば、楽しいかも.. http://img.simpleapi.net/
＞ネットで探してみたのですが、見つからず ご提示のサイトには、立派なDocumentationがありますよ。 私は英語がわからないため、関係ありそうな最低限だけ斜め読みなので、正しい方法かどうかわかりませんが、とりあえず連続3ヶ月を表示する例を。 きちんとした実装方法については、当該サイトを御自身で御確認ください。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <link rel='stylesheet' type='text/css' href='js/fullcalendar/fullcalendar.css'> <style type="text/css"> #calender { width:960px; } #calender .tabs { width:300px; height:300px; float:left; padding:10px; } </style> <script type="text/javascript" src="js/jquery-1.4.2.min.js"></script> <script type="text/javascript" src="js/fullcalendar/fullcalendar.js"></script> <script type="text/javascript"> <!-- $(function(){ var dt = new Date(); $("#calender .tabs").each(function(){ $(this).fullCalendar({ header:{left:'', center:'title', right:''}, year:dt.getFullYear(), month:dt.getMonth() }); dt.setMonth(dt.getMonth() + 1); }); }); //--> </script> </head> <body> <div id="calender"> <div class="tabs"></div> <div class="tabs"></div> <div class="tabs"></div> </div> </body> </html>
やはり、オリジナルのドキュメント・リファレンスを見るのが確実と思います。 http://code.google.com/intl/ja/apis/feed/v1/devguide.html それ以外でも「google feed」で検索すればいろいろ見つかります http://ascii.jp/elem/000/000/407/407910/ http://www.ajaxtower.jp/googleajaxfeed/ http://weboook.blog22.fc2.com/blog-entry-35.html http://blog.d-spica.com/entry/071016feed.html
>>HTML側には特別な要素を加えずに出来る方法 ※詳しく中身を検証する気はないですが、 矢印画像も含め、方向をごそっと入れ替えたsuperfish.cssを、もう一組作り、 そのCSS中のクラス名sf-menuとかをsf-menu-Rとかに全部書き換えておいて、sf-menu-R を使うsuperfish.jsをコピーして、もう一組superfishR作って、中身を全部書き換えて、 $("ul.sf-menu").superfish(); $("ul.sf-menu-R").superfishR(); とか、あっHTMLもやっぱしそのままじゃなくて、ちょっとなおさなきゃ！ 無理やり禁断のテーブルレイアウト（酷い） <table><tbody><tr> <td> <ul class"sf-menu"> <li> .... <li> </ul> </td><td> <ul class"sf-menu-R"> <li> <li> </ul></td> </tr></tbody></table>
#1です。 ＞必要事項が全て含まれているチュートリアルやサンプルサイトをご存知でしたら どこまで何をご存知かわかりませんが（私もたいして知らないけど）、#1で紹介したjqueryのdocumentationにjquery関連は全て含まれていると思います。でも、その前にjavascriptをある程度理解しないと…　さらにその前に、HTMLとCSSを… となってしまうので、必要そうな情報をぐぐってみてください。 （私も、webだけで覚えました → だからよくわかってない… ??） どのようなソースで、どのような実装をしたいのかまったくわかりませんので、ごく簡単な原理のみのサンプルを… bg_layerが擬似背景のdivで、このdivの背景を対象の背景と仮定しています。 実際のコンテンツを背景の前に表示するために、contentはposition:absoluteで表示させています。（ｚ-indexでもよいかも） wrapperの背景のほうを対象としてbg_layerをマスクにするようにしても、ほぼ同様の処理でいけると思います。 画像を入替えたりフェードアウトするライブラリはいろいろ作成されていますので、そういったものを利用するのもありだと思いますが、まったくそのままで使えるものはなさそうに思われますので、作成するにしろ修正するにしろ、スクリプトに関する知識が必要になることでしょう。 （サンプルなので、ごく簡単にしてあります。） （全角空白は半角に） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>sample</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery","1.5.0");</script> <style type="text/css"> #wrapper { width: 500px; height:500px; position:relative; } .content { padding:30px; position:absolute; } .bg_layer { width:100%; height:100%; background-image:url(A.jpg); } </style> <script type="text/javascript"> <!-- $(function(){ 　$("#buttons input").click(function(){ 　　var val = this.value, layer = $("#wrapper .bg_layer:not(:animated)"); 　　layer.fadeOut(800, function(){ 　　　layer.css("backgroundImage", "url("+val+")").fadeIn(800); 　　}); 　}); }); //--> </script> </head> <body> <div id="wrapper"> <div class="content"> <p> コンテンツのテスト文字列 </p> <p> これは<a href="#hoge">テストリンク</a>です。 </p> </div> <div class="bg_layer">&nbsp;</div> </div> <div id="buttons" style="margin-top:20px;"> <input type="button" value="B.jpg"> <input type="button" value="C.jpg"> </div> </body> </html>
まず、２の質問では、サーバを使ってとありますが、全くサーバを利用していません。 単に、クライアント上でJavaScriptを利用して文字数をカウントして、DOMで結果を表示しているだけです (Webサーバがなくても、とりあえずクライアントで動作させられる)。 Ajaxに対する私の理解は、 「サーバとの非同期通信により必要なデータを最小限で取得すること」 です。非同期通信によりWebブラウザでの操作が止まらず、また、HTMLレスポンスを得ずに、必要なデータのみを 取得し、Webブラウザ内で必要な箇所のみ更新するものです。 Googleのインクリメンタル検索は、ユーザの入力に対し、バックグラウンドで通信を行ってます。 で、サーバ側でリクエストに応じるために使われるプログラムは、別に何でも構いません(Webサーバで処理できる手段なら 何も問われることはありません)。 あと、PHPのみとありますが、これはクライアント側？　サーバー側？　まあ、PHPでクライアントソフトを作って、非同期 通信でサーバ側をPHPで処理して、必要なデータのみを得るのも、広い範囲でAjaxかもしれませんが...　普通は、 クライアント側は、JavaScriptとDOMがに対応したWebブラウザですけどね。
地図が表示されない原因は、DTD宣言やxhtmlとは関係ないと思います。 御提示のままのコードで、HTML5でも、HTML4にちょこっと直しても表示されません。 表示されない原因は、 <div id="map_canvas" style="width:100%; height:100%"></div> だけで、地図表示サイズの幅と縦を決められないからです。 サンプルサイトの様に、head部にCSS定義 <style type="text/css"> html { height: 100% } body { height: 100%; margin: 0px; padding: 0px } #map_canvas { height: 100% } </style> を加えてやるか、明示的に <div id="map_canvas" style="width:800px; height:600px"></div> のように指定してやれば、表示されます。
既に紹介されていますが、まず、『JavaScript 第5版』ですね。 これをじっくり読むことをおすすめします。 いわゆるレシピ本をたくさんよむよりこの１冊のほうが はるかにためになります。 jQuery とかは基礎が固まってから始めたほうが良いと思います。 # Level 2 イベントの概要とか、クロージャとかが # しっかり分かってないと jQuery を使いこなすのは # 難しいと思います。
$("body").removeClass("fontL fontM fontS").addClass(className); で動作しました。 .removeClass() – jQuery API http://api.jquery.com/removeClass/ ただ、http://az-store.nrym.org/download/extend/jquery-fontsize-switcher/jquery-fontsize-switcher/switch.js にはライセンスの記載がなく、改変可能かわからないので、作者さんに連絡を取ってみてください。 ここのURLを渡して改変許可をもらうのが筋だと思います。 # http://az-store.nrym.org/ の連絡フォームやTwitter http://twitter.com/sakatori で連絡が取れそうです。
通常はドメインをまたぐ、XMLHttpRequestはできないようになっています。 しかし、回避策もあるようです。 http://d.hatena.ne.jp/nyagao/20070529/1180452264
分解してみますと、こうですね。 $( 　　"ul.panel li:not(" 　　+ 　　$("ul.tab li a.selected").attr("href") 　　+ 　　")" ).hide(); 以下の文と同じです。 var href = $("ul.tab li a.selected").attr("href"); var e = "ul.panel li:not(" + href + ")"; $(e).hide();
意味がよくわかりません。 &amp;に変換されて困る理由を、もう少し補足してください。 それから、「ajaxで返すURL」の意味も不明確です。 　AJAXリクエストのレスポンステキストの中身の事ですか、 それとも送信するデータの事ですか？
【その後】 このロジックで、かなり強引に、「始めちょろちょろ中ぱっぱ終わりちょろちょろ」になるようなイージングが動作するようになったけど、この辺が限界か、大幅に書き換えた方がよいかも。 （変更した関数） 　　 function setScroll(hash){ 　　　 // ハッシュからターゲット要素の座標をゲットする 　　　 var targetEle = d.getElementById(hash.substr(1)); 　　　 if(!targetEle)return; 　　　 //alert(scrollSize.height); 　　　 // スクロール先座標をセットする 　　　 var ele = targetEle; 　　　 var x = 0; 　　　 var y = 0; 　　　 while(ele){ 　　　　 x += ele.offsetLeft; 　　　　 y += ele.offsetTop; 　　　　 ele = ele.offsetParent; 　　　 } 　　　 var maxScroll = getScrollMaxXY(); 　　　 targetX = Math.min(x, maxScroll.x); 　　　 targetY = Math.min(y, maxScroll.y); 　　　 targetHash = hash; //ここに挿入 　　　 x = d.documentElement.scrollLeft||d.body.scrollLeft; 　　　 y = d.documentElement.scrollTop||d.body.scrollTop; 　　　 if((targetX - x) >= 0) 　　　　centerX = Math.floor((targetX - x) / 2) + x; 　　　 else centerX = (Math.floor((targetX - x) / 2) + x) * -1; 　　　 if((targetY - y) >= 0) 　　　　centerY = Math.floor((targetY - y) / 2) + y; 　　　 else centerY = (Math.floor((targetY - y) / 2) + y) * -1; //ここまで 　　　 // スクロール停止中ならスクロール開始 　　　 if(!scrolling){ 　　　　 scrolling = true; 　　　　 scroll(); 　　　 } 　　 } 　　 function scroll(){ 　　　 var currentX = d.documentElement.scrollLeft||d.body.scrollLeft; 　　　 var currentY = d.documentElement.scrollTop||d.body.scrollTop; //ここから書き換え 　　　 if(centerX >=0){ 　　　　if(currentX >= centerX) 　　　　　 var vx = (targetX - currentX) * easing; 　　　　 else var vx = currentX * easing + 1; 　　　 }else{ 　　　　if(currentX < Math.abs(centerX)) 　　　　　 var vx = (targetX - currentX) * easing; 　　　　 else var vx = (2 * centerX + currentX) * easing - 1; 　　　 } 　　　 if(centerY >=0){ 　　　　if(currentY >= centerY) 　　　　　var vy = (targetY - currentY) * easing; 　　　　　else var vy = currentY * easing + 1; 　　　 }else{ 　　　　if(currentY < Math.abs(centerY)) 　　　　　var vy = (targetY - currentY) * easing; 　　　　　else var vy = (2 * centerY + currentY) * easing - 1; 　　　 } 　　　 //console.log(targetY+":"+centerY+":"+currentY+":"+vy); //ここまで 　　　 var nextX = currentX + vx; 　　　 var nextY = currentY + vy; 　------- 以下変更なし。
呼び出し元関数の実行が完了した後にコールバック関数が実行されるという認識で間違いないでしょうか？ ＝＞普通、コールバック関数とはそおいう物ですから、間違った認識じゃ無いです。 以前、実行順序は保証されないという記述を見たのですが、 ＝＞それは、おそらく、ある一つの事象（イベントとか機能）に対して、別の関数で複数のコールバック関数が指定されてる場合、それらのコールバック関数の実行順序は保障されないっていう意味だと思います。 　順序を保障したければ、コールバック関数の中でさらに次に実行したい関数を実行するようにチェーンしていきます。チェーンがループにならないように注意しないと、メモリーリークの原因になります。
どうせ前の質問で、「scrollsmoothly.js」改造してるんだから、 ついでに、場当たり的にいじっちゃえば、 「scrollsmoothly.js」のfunction init(){}の最後 48行目あたりに、 　　 function init(){ 　　　 // ページ内リンクにイベントを設定する 　　　 setOnClickHandler(); 　　　 // 外部からページ内リンク付きで呼び出された場合 　　　 if(incomingHash){ 　　　　 if(window.attachEvent && !window.opera){ 　　　　　 // IEの場合はちょっと待ってからスクロール 　　　　　 setTimeout(function(){scrollTo(0,0);setScroll('#'+incomingHash);},50); 　　　　 }else{ 　　　　　 // IE以外はそのままGO 　　　　　 scrollTo(0, 0); 　　　　　 setScroll('#'+incomingHash); 　　　　 } 　　　 } //ここに追加か、------------------------------ setScroll("#section5"); setTimeout(function(){setScroll("#section1");},1000); //1秒後に移動 　　 } このスクリプトをもっと汎用的にクラス化したいところだけど、あまり弄ると別物になっちゃう。
scrollsmoothly.jsのソースコードの function scroll(){}内にある location.hash = targetHash; を↓のようにコメントアウトするだけです。 　　 function scroll(){ 　　　 var currentX = d.documentElement.scrollLeft||d.body.scrollLeft; 　　　 var currentY = d.documentElement.scrollTop||d.body.scrollTop; 　　　 var vx = (targetX - currentX) * easing; 　　　 var vy = (targetY - currentY) * easing; 　　　 var nextX = currentX + vx; 　　　 var nextY = currentY + vy; 　　　 if((Math.abs(vx) < 1 && Math.abs(vy) < 1) 　　　　 || (prevX === currentX && prevY === currentY)){ 　　　　 // 目標座標付近に到達していたら終了 　　　　 scrollTo(targetX, targetY); 　　　　 scrolling = false; 　　　　 //location.hash = targetHash; 　　　　 prevX = prevY = null; 　　　　 return; 　　　 }else{ 　　　　 // 繰り返し 　　　　 scrollTo(parseInt(nextX), parseInt(nextY)); 　　　　 prevX = currentX; 　　　　 prevY = currentY; 　　　　 setTimeout(function(){scroll()},interval); 　　　 } 　　 }
まぁるく、やさしくということであれば、お書きのように、 ＞FLASHっぽいアニメーションを最近ではiPadなどに対応させる為に、AjaxやらjQueryとかHTML5とかで実現できる ＞JAVA Script と CSS をつかって実現している という理解で合ってます。ただ、HTML5はJavaScriptが必要というわけではないですが。 もちろん、ぜんぶそれぞれ別の言葉です。同じではありません。親子関係もありません。 AjaxはAタグのクリックによるページ遷移によらずにサーバと通信してページを更新するという概念。jQueryはJavaScriptのライブラリ。HTML5はHTMLの新しい規格です。 それ以上専門的な話に立ち入るつもりがないのであれば、それで十分だと思います。
切り替え機能はどのようなPG？ ＝＞これはよくあるTABメニューってやつですね。 別にjQueryでなくてもいいですけど、例として 「jQuery UI Tabs」 http://jqueryui.com/demos/tabs/ 「jQuery Tools Tabs」 http://flowplayer.org/tools/tabs/index.html tabがクリックされたタイミングで、そのタグのコンテンツを AJAXでニュースカテゴリー毎にリクエストして書き換えて あげればよいですね。 ニュース検索はGoogle提供のAPIを使うとか↓ http://code.google.com/intl/ja/apis/newssearch/v1/index.html http://code.google.com/intl/ja/apis/newssearch/v1/reference.html
ちらっと見ただけですが、sendmail.phpの中で、 $toに、固定で送信元のアドレスを持たせ、 何箇所かで $reheader="From: $to\nReply-To: ".$to."　～ をメールヘッダーのFromとReply-To:にセットしてます。 この部分の$toを、投稿者様が入力したメールアドレス$_POST['email'] に変えてやればよいと思います。 テスト・検証したわけではありません。改造はご自身の責任でやってください。 へたに間違えると、誰かにメールがいっぱい届いて、トラブルになりかねません。 ※配布元のページに、 「ウェブサイトの企画・立案や構築にたずさわっています。 AjaxMailのご感想やお仕事の依頼などあればどうぞ」 ってあるので、問い合わせてみるのが確実です。
すでに表示されているから、フェードインしないだけだと思いますけど。 それに、p:not(:animated)　の意図が不明です。 素直に、 <img class="top1" src="img/S_topimg1.jpg"> <div id="mainimg"> <p id="fadeIn">a<img src="img/topimg1.jpg" width="539px" height="343px"></p> $(function(){ $("img.top1").mouseover(function(){ $("#mainimg img").hide(); $("#mainimg img").attr("src","img/topimg1.jpg"); $("#mainimg img").fadeIn("slow"); }); }) じゃだめなの。 あるいは$.toggle()を使うとか．．．
サーバーサイドのプログラムでも、あるいはお手軽にjavascriptからでも Google提供の「Picasa Web Albums Data API」を使えば、Picasaの登録情報 をクエリー(検索)して、フィード（RSS2.0)/or JSON型式）が取得できます。 http://code.google.com/intl/ja/apis/picasaweb/docs/2.0/developers_guide_protocol.html リファレンス http://code.google.com/intl/ja/apis/gdata/docs/2.0/reference.html こっちの知識も必要（GoogleDataAPI） http://code.google.com/intl/ja/apis/gdata/docs/developers-guide.html あと、当然、html、javascript、DOM の最低限の知識も必要ですが、 ちょっと古いけど、だれかの初心者向けの解説ページも見つけました（無保証） http://www.goodpic.com/mt/archives2/2007/07/gdata_api_jsonp.html
xmlReq.open("GET","main.php?isbn="+encodeURI(data1)+"&XXXXX="+encodeURI(data2),true);
今のところ、プッシュ型はまだほとんど実装されていない。 どうしても必要な場合は、何ちゃってプッシュの Comet を利用するか、定期的に問い合わせるしかない。
　Google Chromeでも出来た。しかし 何故か、Google Chrome Ver 7.0.517.41 だと、↓　しないと、 うまくいかない。謎だ！ 　　 case "dragend": 　　　if(dt.dropEffect=="move") 　　　 var target_table = target.parentNode; //Chrome で変数に渡せないなぜだ！ 　　　 var idx = target.rowIndex; //Chrome で変数に渡せないなぜだ！ 　　　 if(this.rowspan==0){ 　　　　target.parentNode.deleteRow(target.rowIndex); 　　　 }else { 　　　　for(var i=this.rowspan-1;i>=0;i--){ 　　　　 target.parentNode.deleteRow(target.rowIndex+i); 　　　　} 　　　 } 　　 return; それから、 　dt.setData("text/html" ～ 　dt.getData("text/html" ～ じゃなくて、こおいった時は本来 　dt.setData("text/plain" ～ 　dt.getData("text/plain" ～ か。 さらに、 　arguments.callee(tr.nextElementSibling); は、関係無いところまで検査してしまっている。まあ、いいかっと。
突き詰めれば＃１さんが紹介しているようなことをやっているのですが、最近ではライブラリを使うのが一般的です。 sonyのサイトではjQueryというJavaScriptのライブラリを使っています。このjQueryというライブラリには多くのプラグインがありまして、それらを使うことで、比較的簡単にFlashのような動的なコンテンツを作成できるようになっています（sonyの実装はオリジナルなようですが）。 http://jquery.com/ http://plugins.jquery.com/ エフェクトの類のライブラリとしては他にもprototype.js系列のscript.aculo.usというのもメジャーです。 http://www.prototypejs.org/ http://script.aculo.us/
私はあまりライブラリーを使わず自分でプログラムを書く方なので、一通りの機能を書いていますが、ざっくり書くと以下のような感じです。 そもそもAjaxとはどんな物かお分かりだという前提ですが、 createXmlHttpRequest関数はJavascript上でのHTTPクライアントを生成する関数です。 ブラウザによって処理の仕方が多少違うので、だいたいのブラウザに対応できるようにしたものです。 getAjaxData関数はAjaxを使ってサーバからデータをGETメソッドで取ってきて、<div id="ajax"></div>の間に書き込む処理をします。 そして、setInterval() で1秒に一回getAjaxData関数を呼び出しています。 setTimeout() だと一回限りなので、繰り返し一定間隔でコンテンツを書き換えるなら setInterval() がいいと思います。 <html> <head> <script type="text/javascript"> <!-- function createXmlHttpRequest() { var xmlhttp = null; try { xmlhttp = new XMLHttpRequest(); } catch(e) { try { xmlhttp = new ActiveXObject("Msxml2.XMLHTTP"); } catch(e) { try { xmlhttp = new ActiveXObject("Microsoft.XMLHTTP"); } catch(e) { return null; } } } return xmlhttp; } function getAjaxData() { xmlhttp1 = createXmlHttpRequest(); if (! xmlhttp1 || xmlhttp1.readyState == 1 || xmlhttp1.readyState == 2 || xmlhttp1.readyState == 3){ return; } xmlhttp1.open("GET", "./hoge.php", true); xmlhttp1.onreadystatechange = function() { if (xmlhttp1.readyState == 4 && xmlhttp1.status == 200) { document.getElementById("ajax").innerHTML = xmlhttp1.responseText; } } xmlhttp1.send(null); } setInterval("getAjaxData()", 1000); //--> </head> <body> <div id="ajax"><!-- Ajaxで書き換える部分 --></div> </body> </html>
参考サイトのスクリプトやCSSを、そのまんま使っているんじゃ無いですよね！ そもそも、スクリプトの書き出しが、 $("ul.sub_nav","div#sub").each(function(i){ ですけど．．．． 他にもよく見直されたほうがよろしいかと．．．
どちらもjquery（javascript）を利用しているみたいですね。 どのようにしたいのか不明ですが、例えば最初のほうならformを画面上部に配置しておいて、全体をスクロールダウンしてくればよいのでは？ 後者の例ではform部分だけをスクロールダウンすればOK。 Ajaxは表示内容を外部から取得したり、ユーザの入力値をサーバに送信したりする際に利用するものなので、直接は関係ないかも。 ごく簡易な似たものの例（jqueryは使用していません） CONTACTをクリックで表示/非表示がスクロールでトグルします。 <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Style-Type" content="text/css"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <style type="text/css"> body { position:relative; top:0px; } #navi { height:30px; } #navi ul { list-style:none; padding:0; margin:0; } #navi li { display:block; width:9em; padding:10px; float:left; border:1px solid #ddd; text-align:center; cursor:pointer; } #form form { height:100px; padding:10px; line-height:1.8em; position:absolute; top:-200px; } #form ul { list-style:none; } #form li span { display:inline-block; width:9em; } #form li input { width:10em; } </style> <script type="text/javascript"> <!-- var sample = function() { var bdy = document.getElementsByTagName("body")[0]; if (!this.dir) this.dir = -4; if (this.id) clearTimeout(this.id); this.dir = -this.dir; sample.scroll(bdy, this.dir, 200); } sample.scroll = function(e, d, m) { var t = (e.currentStyle)? e.currentStyle["top"]: getComputedStyle?document.defaultView.getComputedStyle(e, '').getPropertyValue("top"): null; t = parseInt(t); (function() { t += d; t = t>m?m:t<0?0:t; e.style.top = t + "px"; if (t>0 && t<m) this.id = setTimeout(arguments.callee, 20); })(); } //--> </script> </head> <body> <div> <ul id="navi"> <li>A</li> <li>B</li> <li>C</li> <li onclick="sample()">CONTACT</li> </ul> </div> <div id="form"> <form> <ul> <li style="font-weight:bold;">title of form</li> <li><span>title for box 1</span> <input type="text" name="i1"></li> <li><span>title for box 2</span> <input type="text" name="i1"></li> <li><span>title for box 3</span> <input type="text" name="i1"></li> </ul> </form> </div> </body> </html>
補足、 ajax.start:でブロックしたんじゃ使い道がないですね。 クリック時点でブロックして、ajax成功したらアンブロックしましょう。 ※（全角空白は半角空白に変えてください） <body> <form id="sub_form"> <input name="parm1" value="hoge"> <input name="parm2" value="fuga"> <input id="run" type="button" value="検索開始"> </form> <div id="result"></div> <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript">google.load("jquery", "1.4");</script> <script type="text/javascript" src="/jslib/jquery.blockUI.js"></script> <script type="text/javascript"> $(function(){ 　$('#run').click(function() { 　$.blockUI({ message: '<h1>お待ちください...</h1>' }); 　 $.ajax({type:"POST",url:"cgi-bin/search.cgi",cache:false, 　 data:$("#sub_form").serialize(), 　 success:function(data){ 　　 $.unblockUI(); 　 $("#result").html(data); 　 } 　 }); 　}); }); </script> </body>
これはどういうことなのでしょうか？ ＝＝＞まさに、perl実行環境が無いからですよ。メッセージから察するに Windowsパソコンですよね。まずperlが動くようにしないとだめです。 さらにこのperlプログラムを実行するためには　 strict、utf8、Encode、lib、JSON といったパールライブラリー（モジュール）も必用です。 初心者には、なかなか、てごわいかも。 Windowsパソコンでperlをやるには、大昔はCygwinというUNIXのAPIをWindowsのAPIで エミュレーションする環境を入れた上、GNU PeralとかGCCとか本物を動かしたので すが、 今時は、ActivePerlというWindowsのソフトパッケージがあるので、 インストールは簡単なようです。 http://pocketstudio.jp/win/activeperl/ 案ずるより生むが易しといいます。ご健闘を．．． 解らなかったら、ここじゃなくperlのカテゴリーに質問した方がよいでしょう。
最近のブラウザは、Ajaxを使用した場合に再読込すると最後に表示した状態を維持するようになっていると思います。 （キャッシュコントロールや、スクリプトの実装方法など、いくつかの要因があるようです。） > 思うのですが、Ajaxを無数に行った後の画面を更新してもAjaxを行った結果が表示されるようにするには、どのようにするのでしょうか？ history管理で行けると思います。 location.hashにAjaxで読み込む情報を追記していったり、 <iframe>の内容を書き換えることで、 リロード時にそのhashやiframeの内容から表示する内容を判断し、必要なデータをAjaxで読み直す、と言う方法が一般的です。 （一般的と言っても、結構複雑ですが。あまりに複雑なので、誰もやらなくなったという、、、） 以下、hashによる管理方法の例です。 index.htmlを表示 -> Ajaxでpage1を読み込み => index.html#page1 -> Ajaxでpage2を読み込み => index.html#page2 再読み込みやブックマークしたあとで再アクセスした時に、 window.onloadでlocation.hashを確認しpage1やpage2のデータを読み込むと、Ajaxで読み込んだ状態を再現できます。 この方法は、いわゆるF5ならこれで問題はありませんが、 ブックマークの時にハッシュの値を消してURLを登録すると、読み込み時に各pageがロードされないという欠点があります。 使ったことはありませんが。。。 http://code.google.com/p/reallysimplehistory/ Ajax環境で、ブラウザの閲覧履歴（history)を管理するライブラリです。 他のAjaxライブラリと併用できるかどうかは不明です。 「ajax history」で検索すると、historyの実装方法などを具体的に解説されているサイトがいくつか出てきます。
No.1の回答無視して下さい。 jQueryはもっとおりこうのはずです。 dataType: "html"　で返される形式はTEXTでした。 XMLやXHTMLじゃありません。 $.html(html) で生成されるjQueryオブジェクトはimportNodeする必要は無い はずです。 よって、原因は他にあると思います。
どっちでもよかったですね。すんません 他に気づいた点 ×　map.panTo(marker1, 9); ○　map.panTo(marker1.getLatLng(),9); ×　var marker1 = new GMarker(new GLatLng(shopdata[1],shopdata[2]), markerIcon1); ○　var marker1 = new GMarker(new GLatLng(parseFloat(shopdata[1]),parseFloat(shopdata[2])), markerIcon1); それから、提示されてないけど <div id="gmap"></div> は、サイズ指定してあるんですよね。 指定してないなら、 var map = new GMap2(document.getElementById("gmap"),{size:new GSize(640,480)}); とか 後は、情報不足なので、わかりません。 上記を直したら、ちゃんと出来ました。 （全体像が不明なので、いちぶロジックはしょりましたが）
単純系でテストしても再現出来ません。 $(document).ready(function(){ $('#search').load('/recvtest.php?keyword=歯', null, function(){}); //$('#search').load('/php/recvtestG.php','keyword=歯', function(){}); //こっちもOK }); （recvtest.php） <?php print_r($_GET); ?> ちゃんと Array ( [keyword] => 歯 ) ＜＝＝<div id="search"></div>の中身 '歯'となります。（'会社'でも） 　jQueryは1.4です。 　HTMLはUTF-8です。 　PHPは5.2です。 ※PHP側で、 mbstring.internal_encoding mbstring.http_input mbstring.http_output とか、DB使用しているならそのデフォルトの文字コードとか、 headerで文字コード指定してないかとか、 javascript側のコールバック関数で何かやってないか？ とか確認してみればどうでしょう。 $.load()だとうまくいってるのかどうか、確認しにくいので、 とりあえず、 $.ajax()の方を使って原因を探って見ては．．．．
「Adobe Dreamweaver」だけでは、できません。 マイクロソフトのASP.NET環境を構築する必要があります。 これは、サーバーにアップする物ではなく、あなたがサーバーで、 Webサービスを提供する環境を準備するのです。 　マイクロソフト　Visual Studio　Web開発関連のソフトが必用です 環境自体自体は、いろいろなバージョンやパッケージがありますが、 機能限定版ならマイクロソフトから無償でダウンロード できるバージョンもあったはず（今はどうなってるのかよくしらん）。 ↓からできますが、環境作るだけでも手ごわそうですよ。挑戦しますか！ http://www.asp.net/downloads
#1です。 ＞どのように取得して、どのように呼び出したらいいか ＞アドバイスいただけませんでしょうか アドバイスできるような柄ではありませんが… ラジオボタンのチェックの状況はその要素のchecked属性で取得/設定が可能です。 単純に各要素の設定状況（true　falese　false…）みたいなのを記録しておくか、どうせ選択されるものは一つだけ（または0個）なので、その番号を記録しておくなどすれば再現が可能だと思われます。 ごく簡単な取得/設定の例を作成してみました。 取得は、選択されたものの順番と各設定状況を、設定は番号によってセットする例です。 簡単な入力チェックなども入っているので、実際にはもっと短くまとめられるはずです。 （全角空白は半角にしてください） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <html lang="ja"> <head><title>test</title> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript"> <!-- function get() { var elm = document.getElementById("form1").elements; var i=0, e, c=0, result = ""; while (e=elm[i++]) { 　if (e.type == "radio") { 　　result += (result?", ":"") + e.checked; 　　c++; 　　if (e.checked) result = "No" + c + " : " + result; 　} } document.getElementById("text1").value = result; } function set() { var n = document.getElementById("text2").value; var elm = document.getElementById("form1").elements; var i, c=0; if (isNaN(n = parseInt(n))) { 　alert("数字を入力"); return; } for (i=0; i<elm.length; i++) { 　if (elm[i].type == "radio") { 　　if ((++c) == n) elm[i].checked = true; 　} } } //--> </script> </head> <body> <form id="form1"> <input type="radio" name="test">ラジオ1 <input type="radio" name="test">ラジオ2 <input type="radio" name="test">ラジオ3 <form> <hr> <p> <input id="text1" type="text" value="" style="width:12em;"> <input type="button" value="選択ボタンを表示" onclick="get()"><br> <input id="text2" type="text" value=""> <input type="button" value="番号によりラジオボタンをセット" onclick="set()"> </p> </body> </html>
移動後のmap位置から 南西地点の緯度経度、 北東地点の緯度経度(googlemap APIのgetSouthWest(),getNorthEast()を使用) のデータを送信し、 その範囲内でマーカー情報(座標値)の検索をかけていると思われます。
さらに、以下のパターン全部OKみたいでした。 data:{"data":textTweet} data:{data:textTweet} data:"data="+textTweet data:textTweet
せっかくのAJAXなんだから、非同期にしちゃだめなんですか。 たぶん sendRequest(xmlhttp, "POST", "test.php", true, null, getResult); じゃないかと....
こんばんは。 例えばですが・・・、 マイページの「質問履歴」と「回答履歴」がありますよね？ 最初は「質問履歴」が表示されると思います。 この時に非同期で「回答履歴」を取得して、いつでも表示できるように準備しておきます。 こうする事で、現行のように「回答履歴」をクリックしてから、暫く（かなり？）待つという事がなくなります。 ここで説明されている、同期、非同期とは、そのレベルの話です。
入力フォームの名前を変更すればOKです。 例：1個目 <form method="POST" action="http://～"> 郵便番号：　〒<input type="text" name="zip1_1" size="10" maxlength="8"> － <input type="text" name="zip1_2" size="10" maxlength="8" onKeyUp="AjaxZip2.zip2addr('zip1_1','addr1','addr1','zip1_2');"><br> ご住所：　<input type="text" name="addr1" size="60"><br> </form> 例：２個目 <form method="POST" action="http://～"> 郵便番号：　〒<input type="text" name="zip2_1" size="10" maxlength="8"> － <input type="text" name="zip2_2" size="10" maxlength="8" onKeyUp="AjaxZip2.zip2addr('zip2_1','addr2','addr2','zip2_2');"><br> ご住所：　<input type="text" name="addr2" size="60"><br> </form> 例：３個目 <form method="POST" action="http://～"> 郵便番号：　〒<input type="text" name="zip3_1" size="10" maxlength="8"> － <input type="text" name="zip3_2" size="10" maxlength="8" onKeyUp="AjaxZip2.zip2addr('zip3_1','addr3','addr3','zip3_2');"><br> ご住所：　<input type="text" name="addr3" size="60"><br> </form>
Please show me the present source code. Is jqgrid jQuery jqGrid? jQuery jqGrid doesn't use iframe. jqGrid http://www.trirand.com/blog/
こんなのしか思いつきませんでした。 <script type="text/javascript" src="http://www.google.com/jsapi"></script> <script type="text/javascript"> google.load("prototype","1.6.0.3"); </script> <script type="text/javascript"> google.load("prototype","1.6.0.3"); var url = "/index.htm"; var result=[]; new Ajax.Request(url,{"method":"get",asynchronous:false, 　onComplete:function(request){ 　//var doc = document.implementation.createDocument('http://www.w3.org/1999/xhtml','html',null); 　var div=document.createElement("div"); 　doc.innerHTML=request.responseText; 　var links=doc.getElementsByTagName("a"); 　for(var i=0;i<links.length;i++) 　 result.push(links[i].href); 　} }); </script>
POST で渡す方法として、Ajaxを教えてもらったのではないのでしょうか？ 質問がループしているようで、現状がよく分かりません…。 下記URLで似たような質問があります。参考になるかもしれません。 プルダウンの切り替えに関して | OKWave http://okwave.jp/qa/q6065270.html # 前質問は締め切ったようですね。お礼なしなので、回答者への通知メールは来ませんでしたが。
cssでul.menu ulを下記の通り書き換え。 position:relative; ↓ position:absolute; 以下追加。 z-index:2;
どうしてAJAXカテゴリなのか分かりませんが、 $ df | grep "[ 1][890][0-9]% " ではどうでしょうか。 それとも、行全体ではなくて使用率の数字だけを取り出したいのでしょうか。
---ここから--- $(function(){ $("ul").each(function(index, elem) { $("li:not(:last)", $(elem)).css("～", "～"); }); }); ---ここまで--- でいけると思います。 引数を二つしているする「$(A,B)」という形式では、 B要素の下から、Aの条件にマッチする要素を抽出します。 そこで、個々のul要素に対してeach でループを回してそれを第二引数に指定すれば、 「そのul要素の下」にある要素の中で「最後のを除くli要素」を抽出できることになります。
Ajax にもいろいろあるのかも知れませんが・・・ http://semooh.jp/jquery/api/ajax/jQuery.ajax/options/ を見るとcache というパラメータがありまして、コレ関係ないですかね・・・。 もしくはAjax で取得するリクエストのサーバー側の話ですが、キャッシュしないようにmeta タグ等を設定しておくとか。
var url= './fuga/hoge.html'; があったとして、 $('ロード先セレクター').load( url +' ' + '取り込み元セレクター' ); でいいんじゃない。
普通に画像の部分をa要素でマーク付けするだけで大丈夫みたいですね。 ダウンロードして解凍したDemoフォルダのindex.htmlでいうとこんな感じになると思います。 変更前 <ul id="pictures"> <li><img src="../Source/images/cities/melbourne.jpg" alt="Melbourne" title="Melbourne" /></li> <li><img src="../Source/images/cities/buenos_aires.jpg" alt="Buenos Aires" title="Buenos Aires" /></li> <li><img src="../Source/images/cities/urubamba.jpg" alt="Urubamba" title="Urubamba" /></li> <li><img src="../Source/images/cities/london.jpg" alt="London" title="London" /></li> <li><img src="../Source/images/cities/venice.jpg" alt="Venice" title="Venice" /></li> <li><img src="../Source/images/cities/paris.jpg" alt="Paris" title="Paris" /></li> <li><img src="../Source/images/cities/osaka.jpg" alt="Osaka" title="Osaka" /></li> </ul> 変更後 <ul id="pictures"> <li><a href="http://example.com"><img src="../Source/images/cities/melbourne.jpg" alt="Melbourne" title="Melbourne" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/buenos_aires.jpg" alt="Buenos Aires" title="Buenos Aires" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/urubamba.jpg" alt="Urubamba" title="Urubamba" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/london.jpg" alt="London" title="London" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/venice.jpg" alt="Venice" title="Venice" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/paris.jpg" alt="Paris" title="Paris" /></a></li> <li><a href="http://example.com"><img src="../Source/images/cities/osaka.jpg" alt="Osaka" title="Osaka" /></a></li> </ul>
すみません、HTMLの構造をちょっと見間違えてました。 --- <div class="thumbs"> <h1>ギャラリータイトル</h1> <p> <a href="images/img2-lg.jpg" title="タイトル 2"> <img src="images/img2-thumb.jpg" /> </a> (略) </p> <p><img class="largeImage" src="images/img1-lg.jpg" alt="タイトル 1" /></p> </div> --- こんな感じにしてください。 要は、「サムネイル画像のa要素」と「拡大表示のimg要素」の両方が入った 「同じ構造のdiv」の1組をセレクタで指定できる名前付けが必要になるということです。
$.get("aaa.jsp",{test:"200"}, function(data){alert("Data Loaded: " + data);}); でも同じかな？
queryなどで、できますでしょうか？ ＝＞提示サイトを見ました。jQueryでも出来ます。 jQueryを使うなら「jQuery UI 」というのを使ってはどうでしょうか ひとおとりの、WidgetsとかEffectsとかが、できあいで揃っています。
未検証ですが… n番目のカテゴリだけ開いておきたいのであれば、当該部分を 　if (index != n) $this.next().hide(); などとしておけば、初期状態はn番目（0スタート）だけが開いたものとなります。 ただし、ページ遷移時にこれが実行できるようにnを受け渡してあげなければなりません。 その方法として 　1）呼び出されたページ側にnを記載しておく（フレームなどを使用していない条件） 　2）リンク時にロケーション・ハッシュ（/ccc.htmlI#XYZ の#XYZの部分）を利用して受け渡す 　3）クッキーを利用して受け渡す。 などが考えられますが、1）が一番簡単かと思われます。
QueryのloadメソッドはHTMLを読み込み、DOMに挿入するものです。 XMLの読み込みは$.ajax、$.get、$.postで行い、XMLのノード取得には、 セレクターにXpath表現が使用できます（最新のjQueryにする事！） ↓で、できませんか $.get("http://server.com/hoge.xml",function(xmldata){ $("#my1").append($("//aaa",$(this))); });
無理。 なぜならBは生粋のHTMLという条件だから。 これはAで何を送信しようとも「固定化しているtextファイルであるB」に影響を及ぼす方法が存在しないから。 可能性としてなら ・Aの修正によるB改造スクリプト(perlやphp)駆動 ・iframe ・Aの更新(という名の差分ファイル)を調べるまたは取り込むjavascript　(最近ではこの差分や更新をRSSとかにしている)
#1の補足より。 > 今回質問したのは調べている時に、FirefoxはXMLにパースしていると記述があったので、 MDCの解説を読みましたが、私は別の解釈をしました。 ----- overrideMimeType() このメソッドを使うことでドキュメントを強制的に特定のコンテンツタイプとして扱うことができます。サーバは XML を送信してくるものの正しい Content-Type ヘッダを送信してこないが responseXML を使いたいという場合に有用です。 https://developer.mozilla.org/ja/XMLHttpRequest ----- サーバが正しいXMLで応答していることが前提なので、HTMLが返ってきたらXMLとしてパース出来ないのではないでしょうか？ > なにか良い方法はないでしょうか？ とりあえず、非同期通信を活用しているAutopagerizeのコードを読んでみると参考になると思います。 http://userscripts.org/scripts/review/8551 ざっと読んだところでは、new DOMParser().parseFromString(str, 'application/xhtml+xml') か document.implementation.createHTMLDocument で新しいdocumentを生成していますね。 以下、簡略化したコードです。未検証。(全角空白は半角空白に置換してください) -------------- var doc; try { 　doc = new DOMParser().parseFromString(res.responseText, 'application/xhtml+xml'); } catch (e) { 　doc = document.implementation.createHTMLDocument ? document.implementation.createHTMLDocument('apfc') : document.implementation.createDocument(null, 'html', null); 　// 以下略 } -------------- DOMParser - MDC https://developer.mozilla.org/ja/DOMParser 3 Semantics, structure, and APIs of HTML documents ? HTML 5 http://www.w3.org/TR/html5/dom.html#dom-domhtmlimplementation-createhtmldocument ついでに、xAutopagerize.js のソースも見てみましたが、こちらは document.implementation.createHTMLDocument だけで DOMParser の文字列はHITしませんでした。(クロスブラウザのためかもしれません) http://d.hatena.ne.jp/os0x/20080327/1206613170
「JSONP」について誤解されているようです。 JSONPでは、「JSONP形式」で記述された「JavaScriptプログラム」を通してデータを読み込みます。 JSONPでは、「SCRIPTタグによるJavaScriptプログラムの読み込みはクロスドメインができる」ことを利用して「別サーバに置いてあるデータをを読み込む」ことを実現しますので、 JSONPで読み込めるのはあくまで「JavaScriptプログラム」に限られます。 「ただのHTML」をクロスドメインで読み込むことはできません。
Googleについてはこちらのサイトが参考になると思います。 http://www.sem-r.com/seo/20100305195304.html QT:クローラはJavaScriptを実行できないためコンテンツを読み取ることができない と書いてあるので"通常の更新のように見なしてくれない"ってことになりますね。 解決方法は「フラグメントを利用しないページの対処法」にあります。以下引用です “例えばAJAXサイトのトップページは、上記の説明に従えば www.example.com#!home となりますが、インデックスするURL は www.example.com としたい要望もあるはずです。この場合、ページの上部に次の特別なメタタグを記述します。 <meta name="fragment" content="!"> このタグは、ugly URLをクロールするように指示するためのMETAタグです。この記述があると、クローラは次のように処理します。まず、www.example.com にアクセスした時、URL を www.example.com?_escaped_fragment_= に変換してサーバにリクエストします。サーバ側はこのリクエストを受け取ったときに www.example.com のスナップショットを返せば、そのステートのコンテンツがインデックスされます。” How do I create an HTML snapshot? http://code.google.com/intl/ja/web/ajaxcrawling/docs/html-snapshot.html
よく考えてみると、 画面に表示している地図の縮尺ってのは、無意味なような気がします。 印刷された地図だと、縮尺で１センチが何メートルに相当するか計算できますが たとえ同じズームレベルでも、画面だと、解像度をかえたり、 コントロールキー＋ホイール回転で縮小・拡大表示すると１センチの距離が変わっちゃう。 よって、 １０２４×７６８ドットの表示における、ズームレベル１５の縮尺は　1/XXXXXX　 みたいに表現しなくてはいけないのでは．．．． ちゃうかな？
> 回答ありがとうございます。 > 恥ずかしながらソースがこんな感じになってます。 (以下略) それなら、私が挙げたコードがほぼそのまま使えると思います。 アクセスする要素のクラス名を質問者さんのHTML表記にあわせると、 class="navi_mainbox" のひとまとまりを処理単位として、 ---ここから $(function(){ $(".navi_mainbox").each(function(index, elem) { $(".navi a", $(elem)).click(function(){ $(".navi_box img", $(elem)).attr("src",$(this).attr("href")); return false; }); }); }); ---ここまで となります。 処理内容を説明すると、 $(".navi_mainbox").each…: class=navi_mainboxなdiv要素それぞれについて以下の処理を行います。以下、対象のdiv要素は$(elem)でアクセスできる。 $(".navi a", $(elem)).click…: $(elem)要素の下の .navi a 要素に対し、click event を設定 $(".navi_box img", $(elem)).attr…: $(elem)要素の下の .navi_box img 要素に対し、hrefを書き換え という流れになります。 そもそも、他に用途がないなら、idを個別に割り振る必要すらありません。 jQuery からはclassを通したアクセスで処理できます。 あと、誤動作を防ぐためには、処理対象の img や a 要素にclassを割り振った方がいいかと思います。 $(function(){ $(".navi_mainbox").each(function(index, elem) { $("a.navi_source", $(elem)).click(function(){ $("img.navi_target", $(elem)).attr("src",$(this).attr("href")); return false; }); }); }); (略) <img class="navi_target" src="job/052/00000.jpg" alt="サンプルページ01" width="310" height="220" /></div> (略) <li class="navi_img"><a class="navi_source" href="job/052/00000.jpg"><img src="job/052/aaaa.jpg" alt="サンプルページ02" width="100" height="70" /></a></li> (以下略) って感じで。
一瞬の間にロードされるから、そのように見えるのではないかと．． $().ajaxStop($.unblockUI);は $("#item").load("./xxx.php #item" , function(){ $.unblockUI(); }); のコールバック関数での$.unblockUI();とだぶってます。 どちらかを消すべきです。
別に詳しいって訳でも無いですが、リダイレクトしてテンポラリファイルに出力してfgrep等で数えるのが簡単かなーと思いますけど。 http://oshiete.goo.ne.jp/qa/198863.html
銀行コードや支店コードは固定ではないので、検索方法はさまざまでしょうが、元ネタが信用できるものかどうか。合併などで銀行コードや支店コードは変更になりますから。
今となっては、IE6の検証出来ないんですが、 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> はちゃんと指定してますか（別にUTF-8じゃなくてもかまわないけど） そして、アップされているファイルは確実にその文字コードでサーバーに 保存されてますか。
jQueryの使い方というより、フォーム部品のプロパティの 基本的なお話しです。 valueじゃなくcheckedの値（trueかfalse）です。
aspについて、詳しくは知りませんが、サーバーサイトで動作する ページを生成する仕組みですよね（jsp、php、cg...と考え方は同じはず） jQueryのloadメソッドはブラウザー側で動くAJAXですよね。 この変の勘違いによる混乱をたくさん見かけます。 　2つのプログラムがサーバー側とブラウザー側で会話し合うなんてのは スクリプトだけでは不可能ですよ。ブラウザー側にプログラムが必須です。
<div>の中の<dl>に変更するのは構造的に無理です。 <dl>の中の<dt>とか<dd>なら、改造の余地がありますが、全然別物になりそうで、 最初から作った方が楽かも知れない。作ったりするぐらいなら、そもそもhtml の構造を <dl><dt></dt><dd></dd></dl>を <ul><li><div>dtの中身<div><div>ddの中身</div></li></ul> の構造に変えたほうがずっと楽でしょう。
とりあえずjQueryのサンプルです。 （cgiがperlでなくPHPで申し訳ない） <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP"> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <meta http-equiv="Content-Script-Type" content="text/javascript"> <script type="text/javascript" charset="utf-8" src="/jslib/jquery-1.4.2.min.js"></script> <script type="text/javascript" charset="utf-8"> <!-- $(function(){ $("#search_name").keyup(function(){ if(!$(this).val()) return false; console.log($(this).val()); $.ajax({ type: "POST",url:"/hogehoge.php?",dataType:"json", data:{"search_name":$(this).val()}, success:function(data){ $('#person').empty(); for(var i=0;i<data.length;i++){ var option=$("<option>"); option.val(data[i]); option.text(data[i]); $('#person').append(option); } }, error:function(XMLHttpRequest,status,errorThrown){ alert(XMLHttpRequest.url + ":"+ status); } }); }); }); // --> </script> <body> <body> <form> <input id="search_name" type="text" value=""> </form> <select name="person" id="person"> <option value="秋本">秋本<option value="本田">本田<option value="寺西">寺西 <option value="寺本">寺本<option value="戸田">戸田<option value="吉岡">吉岡 </select> </body> </html> cgi(PHP)側のサンプル <?php header("Content-type:text/javascript"); mb_language("japanese"); mb_internal_encoding("UTF-8"); mb_http_output("UTF-8"); if(isset($_POST['search_name'])){ /* ここにDB検索処理を記述 「$_POST['search_name']をキーにして読み込んだデータを 配列変数$dataに格納する。」 */ $data= array("寺西","寺本"); //テスト用サンプル echo json_encode($data); } ?>
ブラウザー側のキャッシュを使わせないためには、 リクエストヘッダーで制御するのが正当でしょうが、 urlの後ろに、日付けと時間等で作るユニークなゴミパラメーターを ダミーで加える手段もあります。
再現できないんですよねえ。 val[1]とval[2]に任意の長さの文字列をセットして $('select#name).prepend('<option value="' + val[1] + '">' + val[2] + '</option>'); してもちゃんと、最大の幅に自動拡張されます。 もしかして、 <select id="name">　</select> が同じidで複数あるのですか？ あるいは、<select>の親とか、CSS定義とかで、widthを 指定しているところがあるのでしょうか
perlは余り詳しくないのですが、テキストでしか受け渡しはできないはずです。 配列変数はシリアライズして受け取った側がもとに戻すといったような処理 が必用です。 JSON形式というのを使えば楽です。 perlにもきっと、配列とかオブジェクトをJSON形式の テキストストリングにするライブラリーがあるはずです。 javascriptの方も取得したJSON形式テキストをオブジェクトに する機能をたいていのajaxライブラリーは持ってます。 AJAX JSONP　で検索されると、いろいろでてくるでしょう。
不可解です。 （確認） 「テストでAlertを使って試したら、tcdテキストボックスの名前も入力データも取得できています。」 ＝＞どこにAlertを入れてみたのですか？ function ajaxcgi(tcd) { alert(tcd.name); alert(tcd.value); alert(CGIのURL); $.get('CGIのURL', {cd: tcd.name, name: tcd.value}, cgiajax); } とかやったのですか？ コールバックの方のテスト function cgiajax(message, status) { alert(message + "\n" + "status:" + status); } は実行されないのですよねえ？ 実行できてるとしたら、messageの中身がCGIの出力で、 status:の後ろはsuccessですよねえ。
> Prototype より、jQuery の方を使った方が良いのでしょうか。 いまはjQueryの方が普及しており、さまざまなスクリプトが入手できます。お勧めです。
ActionScriptはあまりくわしくないのですが、 このままだと、確実にうまくいきませんね。 function flash_kick(argument) { File_Request(argument, "​http://61.197.170.205/~tobacco/htdocs/test.php");​ return req_argument; } のreturn req_argument;は同期して実行されませんよね、 同期するためには、onreadystatechange のfunction内で、 フラッシュにデータを渡す必用があります。 ExternalInterfaceクラスのaddCallbackメソッドが使えるんじゃ ないでしょうか？ import flash.external.*; ExternalInterface.addCallback("setMessage", this, showMessage); function showMessage(message) { kakunin_text_box.text = String(message); } を別に書いておいて、 http_obj.onreadystatechange = function(){ if(http_obj.readyState == 4){ document["fromJavaScript"].setMessage( http_obj.responseText); } } document["fromJavaScript"]は Flashムービーにアクセスするための名前を付けるには，Flashムービーを表示する際の二つのタグである「objectタグ」と「embedタグ」の，それぞれid属性，name属性の値だそうです？
いろいろ方法はあると思うのですが、 一番簡単な方法は、 吹き出しの中のhtmlでイベント追加するのでなく、 javascript実行にするのです。 つまり、 <a href="#" onclick="window.open(\'./hogehoge.html\',\'moviewin\', \'width=500,height=320\');">リンク</a> と記するのでなく、 <a href="javascript:window.open('./hogehoge.html','moviewin', 'width=500,height=320');">リンク</a> みたいに、ながくなりそうなら、別functionに定義しておいて <a href="javascript:hogeopen()">リンク</a> 本体のSCRIPTの中で function hogeopen(){ window.open('./hogehoge.html','moviewin','width=500,height=320'); } のように、（引数も渡せます） どおしても、イベントを使いたかったら、DOMのイベントにバインド すればできます。
　申し訳ない。さっきの回答は技術者向けの話で、もっと簡潔に説明すべきだった。 > 要はjquery.jsが効いていないってことですよね。 　そう。 > 上記のようなことをする場合は、 > 不可能ということなんでしょうか。 > それともほかに方法があるのでしょうか。 　あれこれ考えてみたんだけど、ほぼ不可能な気がする。なぜならこれが出来たらほぼどんな悪事（裏でこっそり何かをダウンロードさせる）もできる事になるからね。何か裏技を使えばできるのかも知れないけど、あきらめて素直に全HTMLにjquery.jsを書くしかないんじゃないのかな。 　質問者の環境でサーバーサイドで走らせられる何か（CGI、PHP、ASP、ASP.NET、JSPなど）があるのであれば、そちらを使えば似たような事は実現できる。
jQuery の each を使えば、個々のエレメントに対して操作が行えます。 あとは、質問には _off → _on しか書いてませんが、「current が無いものは _on →_off に」する必要もあると思いますので、両方あわせると、 ---ここから--- $("#localSide h2 img").each(function(index, element) { $(element).attr("src", $(element).attr("src").replace("_on", "_off")); }); $("#localSide h2 img.current").each(function(index, element) { $(element).attr("src", $(element).attr("src").replace("_off", "_on")); }); ---ここまで--- といった形になるでしょうか。これを $(this).addClass("current"); の次あたりに入れておけば、img src の切り替えができます。 ・別解 img ではなく、スタイルシートの方で画像を指定するようにしておけば、src を書き換える必要はありません。また、 img 要素ではなく h2 要素をクリックした時に切り替える、といったことも簡単に表現できます。 ---ここから--- <style> #localSide h2 span.button { background-image: url(images/menu/button_off.gif); display: inline-block; width: 20px; height: 20px; text-indent: -9999px; } #localSide h2.current span.button { background-image: url(images/menu/button_on.gif); } </style> <script><!-- $(document).ready(function() { $("#localSide h2").click(function(){ if($(this).attr("class") != "current"){ $("#localSide h2.current").removeClass("current"); $(this).addClass("current"); }else{ return false; } }); }); //--></script> (略) <div id="localSide"> <h2><span class="button">button image</span>text</h2> <h2><span class="button">button image</span>text</h2> </h2> </div> ---ここまで--- といった形になります。
<action="#">とか<action="javascript:void(0);"> とかにしておけばどうでしょう あるいは、 <form method="post" action"hoge.html"> のままで、ｊQUERY側のイベントハンドラーの中で event.preventDefault(); event.stopPropagation(); return fales; するとか
望まれている事が今一つわかりませんが、 return false; とすれば本来の<a>要素のリンクの機能が無効になるので、リンクしないのは 当然です。何もreturnしないと<a>要素のリンク先に遷移するのも当然です。 ページの任意の場所に飛ばしたいなら、そこにアンカー<a name="hoge"></a> をふっておいて、<a href="#hoge">hogeに移動</a>で移動すればよろしいかと、 それとも本当にajax機能を使って、リンク先ページの内容を、自ページの 任意の場所に表示させたいという事ですか？ アコーディオン的なメニュー表示とは、別問題です。
可能ですが、Ajax（javascript）が直接Oracleからデータを引っ張れるわけではありません。 Ajax（javascript）からのリクエストを受けて、 Oracleへアクセスしてデータを取得し、データを加工し、 加工したデータをレスポンスとして返すという javascriptとOracleの仲介役のようなサーバサイドのコーディングも必要です。 まぁ開発環境にASPが使えるならサーバサイドはASPでコーディングすればいいかと思います。 >AjaxではXML文書を非同期にやりとりするようですが、 >やりたいことはOracleのデータを非同期にやりとりしたいです。 データ形式は決まっていません。（ただのHTTP通信ですから） XMLを使ってもいいし、使わなくてもいいです。 CSVでもテキストで独自形式で渡してもいいです。 ただ、XMLにすればレスポンスをそのままDOMとして利用できるので 扱いやすいというだけです。 複雑なデータ形式を必要としないなら 扱いやすさと冗長性の少なさから最近はJSONはよく使われますね。
詳しいことは調べていないので分かりませんが、ロードに時間がかかっているために、間隔がめちゃくちゃに見えるだけではないでしょうか？ あと、setIntervalには色々と面倒があるようなので、それもチェックしてみてください。 http://www.mapee.jp/wlh/javascriptsetinterval.html
こうでしょ！ function send(){ $.ajax({ type: "POST", url: "write.php", //下1行修正 data:{date:$("#text").val()} }); }
jQuery-UI の Dialog を modal で使えばいいかと。
> メール送信できるのですが、#messageのvalue値がsendmail.phpに渡りません。 index.php の方の記述ミスを見過ごしてました。 動作チェックはしてませんが、おそらく > data : ({ message: $('#message').val()},{off:$('#exeBtn').val()}), これを > data : { message: $('#message').val(), off:$('#exeBtn').val()}, にすればいけると思います。
> なお、例えばPHPから配列データをAjaxに返す場合 > それをAjaxで参照するとなると、どのようになるのでしょうか。 Ajax では、基本的には「テキストデータ」でしかデータのやりとりは出来ません。 そのため、PHP 側で配列データをテキストデータに変換し、JavaScript側でテキストデータを配列データに戻す、といった処理が必要になります。 元々、その「テキストデータ」フォーマットとしては XML が想定されていたのですが(AjaxのX)、複雑でオーバーヘッドが大きいので、最近はJSONが使われる場合が多いです。 http://gihyo.jp/dev/feature/01/jquery-ajax/0002 PHP側については、PHP 5.2.0 以降なら、json_encode で、配列をJSON形式に変換できます。 http://php.net/manual/ja/function.json-encode.php jQuery の Ajax ライブラリは、JSON に対応していますので、 $.post の第4引数を"json"にしておけば、 PHP側でJSON形式に変換した配列データを、 JavaScript側の$.post のcallback内では、引数 data がそのまま配列としてアクセス出来るようになります。 jQueryとPHP のJSONによる受け渡し例は、 http://www.rottel.net/kuwa/44111 なんかが参考になるでしょうか。
function articles(arg){ alert(arg.article[0].kind); alert(arg.article[0].no); alert(arg.article[1].kind); alert(arg.article[1].no); }
セキュリティ上の問題から、フォームに入力したファイルの データをJavaScriptからは操作できないようになっているため、 Ajax でファイルを送信することはできません。 ページ遷移なしにファイルのアップロードをしたい場合は、 iframeを使って、隠しフレームを作っておき、 フォームの target をそのフレームに設定しておく、 と言う方法が楽かと思います。 PHPではありませんが、原理については http://rubyist.g.hatena.ne.jp/yamaz/20060908 このページなんかが参考になるかと思います。
jQueryのプラグインですが「jQuery pageSlide」と言うのがありますが、 これではだめでしょうか？ http://srobbin.com/blog/jquery-pageslide/ 表示中のページが丸ごと左にスライドして、右から隠れていたコンテンツがスライドして現れます。
あまりにも質問が漠然としすぎています。 まず、あなたが店舗側なのか、ユーザーとしてアフィリエイトをやりたいのか。 Javaに関する知識がどの程度あるのか。 APIの仕組みをどの程度理解しているか。 また楽天APIはアフィリエイト用のAPIのことでいいのか。 これらがないと回答のしようがありません。
prototype.jsは使ってないので間違ってるかもしれませんが、 window.onloadの時実行している Event.observe('targ3', 'click', handler3); はonloadの時点では、まだ存在しないのでイベントのバインドが できてないからではないでしょうか？ ajaxしてtarg3を作った後にイベント登録すればよいのではないかと function handler1() { var myajax = new Ajax.Updater( 　　　　　{success : "targetString"}, 　　　　　"test2.html", 　　　　　{evalScripts:true}); Event.observe('targ3', 'click', handler3); }
No.1です。 エラーが出たのは、若干書き間違えがあったからですが、それを 直しても、この方法じゃうまくいきませんでした。 そこで、以下のように、リンク要素とボタン要素のクリックイベントの プロパゲーションを止めてやると、TR要素に伝わらなくなり、チェックボックス にチェックがつかなくなりました。（IE7とFirefox3.5でテスト） こいつらに、本来のクリックイベントの動作をさせたい時は、 このハンドラーの中に書けばよいでしょう。 - - - - - - - - - - - - - hasChecked = false; //挿入部分 $("a").bind("click", function(event){ event.stopPropagation(); }); $("input[type='button']").bind("click", function(event){ event.stopPropagation(); }); $("button").bind("click", function(event){ event.stopPropagation(); }); //挿入終わり $(row).click(function() { - - - - - - - - - - - - -
bsn.Crossfader.js内の if (!this.aDivs[this.nAct])this.nAct = 0; の行を if (!this.aDivs[this.nAct])return false; に変更するだけです。
イベントハンドラー処理を有効にしたり、無効にしたりするなら function handler1(e){ e.preventDefault()}).attr("href","#"); } と定義しておいて、 有効化： $("a[href]").bind("click", handler1); 　又は $("a[href]").click(handler1); 無効化： $("a[href]").unbind('click', handler1);
ライブラリーを改造するぐらいなら、目的に合う別のを使った方が 良いと思いますが。自分で改造して、動きが変になっても、誰にも文句は 言えませんよ。 あえて、いじるというか追加するなら、 まず、 slideTime = window.setTimeout( "resetTabs()", 10000 ); が10秒（10000ミリ秒）待つ指定みたいだから、ここを変えれば 自動で閉じるまでの時間が変えられそう。 次にマウスオーバー＆マウスアウトで見えたり消えたりするには別途 function hoge(){ var bodyPanels = document.getElementsByClassName('panel_body') for (i = 0; i < bodyPanels.length; i++) { bodyPanels[i].hide(); } } を作って、こいつをお好きな場所のマウスオーバーのイベントで 呼んでやれば、マウスオーバーした時、開いていたpanel_body が消えるのではないかと...
IE8でもjQUERYは動作してます。（全DOC宣言で全機能を試したわけではないが） IE7からIE8へバージョンアップする時は、IE7の設定をある程度引き継ぐ みたいだが、まっさらのWIN7+IE8のセキュリティ設定オプションの初期状態 は相当厳しいのではないかと（想像）。 IE8のセキュリティオプションを確認して、無効にされているものを 有効に変えてみては。何を有効にするかは、よくわかりませんね、 IE独自の用語が多いし．．．．
「jsonで返してくれる検索サービスを作成しようとしています。」 って、あなたがjsonを返すサービスを作ろうとしているんじゃないですよね! もしその方法の質問ならここではなく、PHPとかASPとかCGIのカテゴリーの質問ですね。 「jsonで返してくれる検索サービスの結果をAJAXで自分のページに組み込みたい」のですよね！ 例えばですが、「Yahoo!商品検索サービス」というのがあります。 http://developer.yahoo.co.jp/webapi/shopping/shopping/v1/itemsearch.html これは、キーワードをGETで送って結果をJSONPで返してくれる、Yahoo のサービスです。このサービスを利用するためには事前に「アプリケーションID」 をあなたのページで取得しておく必要があります。 http://help.yahoo.co.jp/help/jp/developer/developer-06.html その上で、これを利用するjavascriptプログラムをQueryのAJAX機能を 使って、簡便に書く事ができます。 （サンプル） <?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> <html xmlns="http://www.w3.org/1999/xhtml" lang="ja-JP"> <head> <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/> <meta http-equiv="Content-Script-Type" content="text/javascript"/> <meta http-equiv="Content-Style-Type" content="text/css"/> <meta http-equiv="Cache-Control" content="no-cache"/> <meta http-equiv="Expires" content="0" /> <title>Ajax Search Test</title> <script type="text/javascript" charset="utf-8" src="/jslib/jquery.js"></script> <script type="text/javascript" charset="utf-8"> <!-- $(document).ready(function(){ $("#kensaku_button").bind("click", function(){ var keyword=$('#keyword').val(); $.ajax({ type: "GET", url:"http: //shopping.yahooapis.jp/ShoppingWebService/V1/json/itemSearch?", data: { "appid":"あなたのアプリケーションID", "query":keyword, "hits":"10" }, dataType: "jsonp", success: function(data, status){ $('#YahooResult > dl').empty(); if(data.ResultSet.totalResultsReturned!=0){ var hits=data.ResultSet[0]; var result=$("<dl>"); for(var i=0;i<data.ResultSet.totalResultsReturned;i++){ result.append('<dt><a href="' + hits.Result[i].Url + '">' + hits.Result[i].Name + '</a></dt>' + '<dd>' + hits.Result[i].Description+'</dd>'); } $('#YahooResult').append(result); }else{ var result=$("<dl>該当商品無し</dl>"); } $('#YahooResult').append(result); }, error: function(XMLHttpRequest, status, errorThrown){ alert("sss"); 　 alert(XMLHttpRequest.url + ":"+ status); } }); return false; }); }); // --> </script> </head> <body> <div id="header"><!-- #header --></div> <div id="container"> <div id="YahooSarch"> <h3>Ｙａｈｏｏ！商品検索</h3> <div>検索キーワード： <input id="keyword" type="text" width="50"/> <input id="kensaku_button" type="button" value="検索"/> </div> <hr /> <div id="YahooResult">（商品検索結果） </div> </div> </div> <div id="footer"><!-- #footer --></div> </body> </html>
No.1です。おっと、複数<option>があるのでリプレースはだめですね。 やはり全部削除してから追加ですね。 success: function(data, status){ $("#category2").empty(); $.each(data,function(i) { $('#category2').append($('<option>').attr({ value: i }).text(data[i])); }); },
No1 回答の補足（確認）です。 ・jQueryライブラリーを使っているのですよね。 ・var x = $('#category1').val();で、セレクトボックスで選んだ 　value値がｘにきちんと取れてますよね。（xは"1"か"2"か"3"のはず） 　※この部分があやしそうですが、ご提示の部分だけではわかりかねます。 　　x="1";とかしてまずテストしてみて下さい。 ・url: "/php/category.php",はurl: "category.php",に戻し忘れました。 ・ご提示のalert(data.address1 + data.address2);ですが、 　address1とかaddress2はどこにも登場していません。いきなり出てきてます？
確かに、phpで配列データをシリアライズする部分は、json形式 で作成してしまうのが、簡単でそのままjavascriptで使えるので 便利だと思います。 php5.2以降だとjson_encode()という関数もあります。 例えば、 <?php $data = array ("a" => "x", "b" => "y", "c" => "z"); print_r(json_encode($data)); ?> とすると、 {"a":"x","b":"y","c":"z"} が出力されるので、javascript側は var data = ～.responseText; で受け取って、 alert(data.a); ＝＞ x とか alert(data["b"]); ＝＞ y で参照可能なはずです。
ソースはjqueryを使っているんですかね？ >画像を切り替える際、ファイル名が別の場合は画像は切り替わるのですが、 >同一名称だと画像が切り替わりません。 画像ファイルがキャッシュに残るためです。 test.pngファイルのgetリクエスト時にダミー引数を設定すると良いです。 ソース上でいうとupdate()関数の下記部分を下記の通り変更してみてください。 hoge+= "<img src='test.png'>"; 　↓ hoge+= "<img src='test.png?" + (new Date()).getTime() + "'>"; しかしこれはAjaxというのだろうか‥？ まぁやってることはAjaxと言われればAjaxだけれども‥。
競合するべき技術ではないですね。 私自身はAjaxでサーバサイドをPHPで組んでいます。 Ajaxはなにも生XMLに限定してhttpアクセスするわけではありません。 ブラウザがバックグラウンドでhttpアクセスを行うので、その対象をPHPにすればよいわけです。 POSTもGETもできるので、サーバサイドでもスクリプト動作させることにより、クライアントサイドオンリーよりもさらにインタラクティブになります。 また、クライアント負荷の軽減にも。 ちなみに、応答もXMLではなくjasonを使ったりする場合もあります。 極論、生HTMLを返してそれを直接DOMに反映させてしまってもいいわけです。
<body> <div id="here">初期値です</div> </body> の読み込みが完了する前にscriptが動いているからだと思います onloadイベントで処理するようにしてください
混在している限り無理だと思います。 両方（呼び出し側HTMLと外部HTML）とも <meta http-equiv="Content-Type" content="text/html; charset=Shift-jis"/> を指定して、かつ両方ともShift-jisで保存してあれば、そんなに不具合 はでないはずです。（両方ともShift-jisにしないのがベストですが）
トーヨータイヤのサイトはこれじゃないかも知れませんが、 　jQueryのplugin 「Superfish」のverticalメニューが近いかも http://users.tpg.com.au/j_birch/plugins/superfish/#sample3
要は、サーバ側で状態が変わったことをクライアントにどうやって伝えるのか、という問題なわけですが、 Ajaxなら、Cometで実現できるでしょう。 http://ja.wikipedia.org/wiki/Comet クライアント側は、「携帯電話側の操作が終わったかどうかを尋ねる」リクエストを発行し、 サーバ側ではコネクションを維持したまま返答せずに保留しておいて、 携帯の操作が終わったところで返答を送ります。 クライアント側では、サーバから返答が返ってくれば、携帯の操作が終わったということなので、ページ遷移をします。 ただし、長時間繋ぎっぱなしだと他の通信が阻害されますので、 適度にタイムアウトしつつ再リクエスト、といった処理は必要だと思います。
＞「リリースパッケージ（.zip）」を保存し、これを展開したものを公開 ディレクトリに置いた状態で、直接ファイルをクリックすると動きまし た。 ん？　とすると、展開してできたフォルダを置いたのだろうか。だとすると、http://localhost/ではなく、http://localhost/フォルダ/とアクセスすることになるが、そのへんは間違いないだろうか。 そのサーバーはちょっとよくわからないが、Apache HTTP Serverなどでは特に設定は不要だった。
> ちなみにサーバーは"httpd"と言うソフトで仮想サーバーです。 とのことですが、 アクセスしているURL（ブラウザのアドレス欄に入力するアドレス）はhttp://localhost/というアドレスになっていますか？ c\:www\index.html file:///c\:www\index.html などのアドレスになっていると、prototype.jsはこのアクセスの仕方に対応していませんので、うまく表示されないかもしれません。 >No.1 JK Ajaxの話でブラウザと関係ないFinalFantasyを出すなら、 IEでアイルランドぐらい出してもいいんじゃないかな。
HTMLの文法はタグの省略が可能な部分が多く、XMLパーサーではエラーになることが多いです。 XMLパーサーとHTMLパーサーの違いですね。 HTMLパーサーの方が複雑です。 var doc=document.createDocumentFragment(); doc.innerHTML= xmlhttp.responseText; alert(doc.getElementsByName('a')[0].value); 未検証です。 <body>の直後から</body>の直前までを取り出しておいた方がいいかもしれません。 xmlhttp.responseText.match(/<body.*?>(.*)<\/body>/); var html=RegExp.$1; // htmlを上記innerHTMLに代入 未検証です。
Ajax…、というよりもXMLHttpRequest(XHR)がセキュリティ上の制限のため、同じサーバのURLにしかアクセスできないので、外部サーバのデータにアクセスするためのPHPなどを同じサーバ上に置いて、XMLHttpRequestではそのURLにアクセスすればいいわけですが…。 > PHPにて作成した簡易ブラウザが必要と記してありました。 これは簡易ブラウザではなく、簡易HTTPクライアントだと思いますよ。 「ブラウザ」だとHTMLを描画する機能まで含んだものを意味してしまうので…。 HTTPクライアントであれば、ネットで"PHP HTTPクライアント"をキーワードに検索すれば簡単なコードを紹介しているサイトがヒットすると思いますよ。 ただ質問に「例えばYahooホームページのソース」と書かれていますが、Asynchronous JavaScript + XMLの略がAjaxと言われるように、XMLデータを扱うことが得意ですので、例えばYahoo!であればニュースや天気情報などでRSSが提供されています。 RSSはXMLデータですので、PHPでこのようなRSSを取得するプログラムを作成しておき、Ajaxを使ってPHPからRSSを取得してウェブページ上で非同期にニュースや天気情報を更新…、といったことの方が一般的だと思います。 > 具体的で実用的なAjaxの使い方をご教示頂けます様お願いします。 prototype.jsは、Ajaxとそれに関する基本的な機能を提供しているライブラリですので、prototype.jsを使用した実用的な例としては先に挙げたような 「RSSを取得してニュースや天気情報を表示」、「Yahoo!検索を自分のウェブサイトでAjaxを使って表示」、「Amazonの商品検索を自分のウェブサイトでAjaxを使って表示」etc... 色々と挙げることができます。 Ajaxは非同期、つまりウェブページ全体を更新することなく、ウェブページの一部のみを更新することができるので上記の実用例だけでなく、色々と考えることができます。 また、jQuey UI、Ext JSやYahoo! UIといったAjaxライブラリのようにUI機能を提供しているものも数多く存在します。 これらのライブラリを使用すれば、例えばJavaScriptでカレンダーを表示したり、グラフを表示したりと色々なことができるようになります。 prototype.jsだけでなく、色々なライブラリを探してみて「どんなことができるのか？」考えてみるのも面白いと思いますよ。
それらしいMooToolsのJavaScriptファイルを見つけてきてソースコードを確認しました。 MooToolsのAjaxクラスは、XMLHttpRequestオブジェクトで一般的なAjax通信を行う処理が記述されています。 普通、Ajax通信はXMLHttpRequestオブジェクトのreadyStateプロパティ値が4、かつstatusプロパティ値が200のときに正常通信として処理が行われます。 ローカルでXMLHttpRequestオブジェクトを使用すると、statusプロパティ値が200にならないので正常通信として扱われません。 なので、MooToolsの方はローカルで動作しません。 一方、jQueryの方ですがこれもソースコードを確認しましたが、XMLHttpRequestオブジェクトのプロパティ値も見ていますが、location.protocolが"file:"のときの処理も別に記述してありました。 なので、jQueryの方はローカルでも動作します。 jQueryを使わないでローカルで動作させるには、この部分の処理を記述しないとダメそうですね。
えっと、それは同じurlですよね？ 「このエラーページは無料レンタルサーバ my-sv.netにて提供されています。」で開けないです。 なので何が書いてあるかわかりませんが それと同じ内容かもしれませんが 以下のページをhighslideのbbsで発見しました。 http://highslide.com/examples/inside-iframe.html http://www.roadrash.no/hs-support/inside-iframe.html 両方ともiframeから親で開いてます ソースを見たら出来るかもしれないですね。
http://www.ajaxrain.com/tag?tag=gallery 上記URLに色々なAjaxライブラリを使用した(一部、使用していないものもありますが)フォトギャラリーのライブラリの紹介があります。 ご希望の機能を持つライブラリがあるか、１度探してみてはいかがでしょう？
ローカルファイル(file://のurl)のときは、status を返すプログラム(http server)を経由してないので常にstatus == 0 です。これは、ブラウザによりません。 実行順については、既に指摘のあるとおり、open前に(最低でもsend前に)、onreadystatechangeをセットしておかないと、ローカルでの読み込みは次を実行するまえに終わってるので、つまりonreadystatechangeは、発生完了済みなので、補足されなくなります。 ネットワーク経由だと、どうしてもタイムラグがあるから、補足できていたのでしょう。 静的テキストを読みとるだけなら、readyState==4　だけ補足すれば、おおむね(ローカル、http経由を問わず)、受信出来るようです。 参考：miniajax　超最短スクリプト http://www.bigbold.com/snippets/posts/show/2025 ブラウザ別、実行状況は、とりあえず、こちらを参考にするとよいかもしれません。 http://jsgt.org/ajax/ref/test/response/responsetext/try1.php
#1の方の補足的な感じになりますが、 A.php <?php //セッション処理 //リクエストサニタイズ処理 //POSTorGET解析 switch($_GET['cmd']){ case 'ajax' : //B.phpの部分だけを吐き出して exit; break; default : //A.phpの処理とB.phpの処理 break; } ?> で、javascript側ではcmd=ajaxというGETでも付けて非同期通信を行えば良いのでは？
#2です。 修正漏れがあったので、補足します。 --- if(typeof window.addEventListener == 'function'){ window.addEventListener('load', init_jQuery, false); // init に変えれば「DOM標準の方法」に } else if(typeof window.attachEvent == 'object'){ window.attachEvent('onload', init_jQuery); // init に変えれば「DOM標準の方法」に } --- もう少し調べてわかりましたが、ここもjQueryで書き直すことが出来るようです。 ---- <script type='text/javascript'> $(document).ready(function(){ $('input[type=checkbox]').each(function(){ console.info(this.nextSibling.nodeValue);// コンソールへ出力 (要Firebug) }); }); </script> ---- これだけ短くなるんですね。jQuery便利かも。 ready(fn) - jQuery 1.3.2 日本語リファレンス http://semooh.jp/jquery/api/events/ready/fn/
> こんなのを紹介してるサイトがありましたが、 > prototype.jsを併用すると動作しません。 waterclockさんが補足で貼られたJavaScriptのソースコードを元にprototype.jsで動作するものを作成してみました。 prototype.jsと併用するとタグ内に記述した onkeyup='...' が解釈されなくなるようですね。理由は分かりませんが…。 下記に作成したものを載せておきますが、Linux版のFirefox上でしか動作確認していません。 他のブラウザで動作するか分かりませんが、参考にして下さい。 [JavaScript] <script type="text/javascript"> <!-- var targets; // input要素を保持しておく /*----- Windowロード時の処理 -----*/ window.onload = function() { targets = $$("input"); targets.each(function(target) { target.observe("keyup", next); // 各input要素に対してkeyupイベントハンドラを設定 }); }; /*----- keyupイベントハンドラ -----*/ function next(event) { var element = event.element(); // イベントが発生した要素 // maxlength属性値の取得 var maxlength; if (element.readAttribute("maxlength") != null) { maxlength = element.readAttribute("maxlength"); } else { maxlength = 2147483647; // maxlength属性値がない場合は最大値に設定 } // 入力文字列の取得 var value = element.value; // 入力文字列の長さ < maxlengthの時は何もしない if (value.length < maxlength) { return true; } element.blur(); // フォーカス解除 // 次の要素にフォーカスを当てる var n = targets.indexOf(element); if (n != -1 && n < targets.size() - 1) { (targets[n + 1]).focus(); } } //--> </script> [HTML] <form> Zip-code：<input type='text' size='3' id='former' onkeyup='next(0);' maxlength='3' /> - <input type='text' size='4' id='latter' onkeyup='next(1);' maxlength='4' /><br /> Address：<input type='text' id='address' size='20' /> </form>
#1,2です。 > 「ajax 星型 評価」と検索するとホームページを作る人のネタ帳 こちらですね。 MySQLとAjaxによる星型評価ボタンの設置方法*ホームページを作る人のネタ帳 http://e0166.blog89.fc2.com/blog-entry-263.html > pyaのように評価するときにページを移動しない方法を探しています。 そういうことでしたか。 でしたら pya! のコードが参考になりそうですね。 ----- hyouka = new function(){ ... } http://pya.cc/pyaimg/pimg.php?imgid=83775&msgfull=yes ----- ** onclickでページ遷移しないように ** onclickでfunctionを実行したときに「リンク先への遷移」など、ブラウザ通常の動作も同時にしてしまうことがあるので、return false; で回避します。 掲示板/JavaScript質問板/過去ログ/一覧/ onClick returnについて - TAG index Webサイト http://www.tagindex.com/kakolog/q4bbs/201/402.html onclickの簡単な例を出すと、こんな感じです。 ------ <input id='Test' type="button" value="onclickのテスト" /> <script type="text/javascript"> var test = document.getElementById('Test'); test.onclick = function(){ alert('クリックされました'); return false;// inputボタンが押されたときのブラウザ既定の動作を無効化する } </script> ------ ** 評価HTMLを星形ではなくgood,badの2択に ** HTMLを星形の画像から good, bad にします。 <input id='Good' type="button" value="Good" /> <input id='Bad' type="button" value="Bad" /> あとはJavaScriptのonclickで動作をフックするだけ。そんなに難しく考えることはないですよ。
> cgiでの変更点がすぐに反映されてこないので これはCGIが吐き出すテキストファイルをAjaxで取得しようとしているのでしょうか？ Ajaxでファイルを取得する場合、基本的にファイルは固定された(動的に変更されない)内容だと思います。 ちなみにFirefoxのFirebugでテキストファイルを取得した場合のXMLHttpRequestを確認してみましたが、確かに１度取得してからある程度(数十秒)時間が経過しないと通信が行われませんね…。 もし動的に変更されるテキストファイルを取得しようとしているのであれば、URLにファイル名を指定するのではなくtext/plainレスポンスを返すCGIを作成してそのCGIに対してAjax通信を行ってはどうでしょう？
・Ajaxの「非同期」とは 通常のネットサーフィン(Webブラウズ)では、 ページが表示される 　↓ ページ上で操作(クリックなど)を行う) 　↓(操作結果をサーバに送り、次のページデータがサーバから送られてくるのを待つ) 次のページが表示される という「操作」と「表示」の繰り返しになります。 一度、リンクをクリックしたりすると、次のページが表示されるまで、何もできません。 これが「同期的」ということです。 一方、Ajaxでは、サーバから次のデータが届くまでの間も、 ユーザは操作が可能です。 これが、「サーバからデータが届くのを待つ」のと「ユーザが操作を行う」のを非同期的に(並行して)処理している、ということなのです。 ・Ajaxの実装方法 Ajaxはそういう「実現結果」を示す言葉にすぎませんので、 その実現方法には、さまざまな手段があります。 ですが、Ajaxを実現するのは結構手間がかかりますので、 それを簡単に行うためのさまざまなライブラリが いろいろなところが作って公開しています。 jQueryもその一つです。 jQueryの他にも、prototype.js 、MooTools 、YahooUI Library といったAjaxライブラリがあります。 どれもAjaxに必要な機能が一通り揃ってますから、どれを使うかは「趣味」の世界になるかと思います。 ただし、ライトボックスの実現には、「ページ内に動的にウィンドウっぽいものを作る」必要があります。これは、Ajaxの範囲ではありません。 そういった「画面描画機能」を用意しているかどうかは、Ajax用のライブラリによって変わってきます。 たとえば、Ajaxライブラリの中でも初期のものである prototype.js なんかは「ビジュアルをお手軽に」といった機能が弱いです。 逆に、YahooUI Library の方は、「ビジュアルを実現」する方がメインのライブラリで、Ajax の方がおまけなぐらいです。
いわゆる、CSSセレクタの話ですよね。 http://www.w3.org/TR/css3-selectors/ 各ライブラリは上記に準拠した形でセレクタ機能を実装していますが、ノード値が完全一致するセレクタはなかったように思います。 もしかしたら完全一致するセレクタを実装しているライブラリがあるかもしれませんが、それを探すぐらいならご自分でfor文を使って実装した方が早いような気がします。
AJAX利用のフラッシュローダーとしては、 -Shadowbox.js http://mjijackson.com/shadowbox/ -Lightbox JS http://www.lokeshdhakar.com/projects/lightbox/ -Lightwindow v2.0 http://www.stickmanlabs.com/lightwindow/ が使えるのでは メールについては AjaxMail：Ajaxを活用したフリーPHPメールフォーム http://www.ajaxmail.jp/ というのがありました。 自分に必要な機能のみ、prototype.jsやjQueryを使って 自分で作ってしまうのが、早道かも
range保存し再利用すればいい。
Dojo Toolkitをダウンロードして解凍したら、"dojo", "dijit", "dojox"の３つのディレクトリができていると思います。 これらを全て同じディレクトリにアップロードして下さい。 【例】 /foo/dojo /foo/dijit /foo/dojox Dojo Toolkitを使用するには、 <script type="text/javascript" src="/foo/dojo/dojo.js" djConfig="parseOnLoad:true"></script> のみHTMLに記述すればいいのですが、内部的にその他のjsファイルを読み込んでいるため上記のようなディレクトリ構成にする必要があります。 ディレクトリ構成についての記載はありませんが、Dojo Toolkitのサンプルについては下記のURLが参考になると思います。 http://ajax-world.sakura.ne.jp/dojo/
jQueryはクロスブラウザで動作するので、どのブラウザでも同じように動作すると思います。 もし宜しければ、JavaScriptをどのように記述されているか教えてもらえませんか？
>document.getElementById("emp_no") is null >※emp_noがなぜ取得出来ないのかが分かりません。。。 idが"emp_no"のオブジェクトがないから。 よく見てごらん。name="emp_no"はあるけど、id="emp_no"はない。
提示されたデータが長いので、例として・・・ var str = '{"encoding":"UTF-8","title":"ValueCommerce Product Database Search Results","link":"http://www.valuecommerce.com"}'; eval('var json = '+ str); alert(json.title); alert(json['title']);
>ただ、prototypeやjQuery等のJavaScriptライブラリなども >Ajaxと呼ばれていたり・・・。 >どういう部分がAjaxなのかがわかりません。 Prototype.js とか jQuery ライブラリ自体を指して Ajax なんて呼んでいる人を見たら、その人は Ajax のことも JavaScript のことも何にも分かってないと思っていいと思いますよ。 これらは単に、各ブラウザの差異を吸収して簡単に JavaScript が書けるようにするためのものです。(もちろん Ajax というか通信処理を行うための関数も用意されてますけど) Ajax というのは1番目の方も書いている通り、非同期にデータを読み込むことによるページ遷移のないユーザーインターフェイスのことです。 非同期というのは、ページを読み込むタイミングと (ページ上で処理する) データを読み込むタイミングが別であるという意味です。 Lightbox はよく知りませんが、もし大きなサイズの画像をバックグラウンドで読み込みつつ表示させているなら Ajax と呼べると思います。 (Ajax の x は元は XML ですけど、今の Ajax は XML には限らないと思いますし)
漠然とした答えになりますが、 検索ボタン押す→送信→返った結果を受け取る→表示 って感じだと思うので、 ボタン押してリクエスト送る前にcreateElementとかでローディング要素を作成して表示し、 結果受け取って表示する間にその要素を削除すればいいんじゃないかと。 画像使いたいなら参考のサイトが便利です
prototype.jsの仕様とかはあまり詳しくないですが、 送信データはあらかじめURLエンコードが必要なんじゃないですか？ new Ajax.Request('Test', { method: 'post', onSuccess: displayTest, parameters: "param1=" + encodeURIComponent("あいうえお") }); それから、JavaScriptは、通常はUTF-8を使用しますので、 HTMLの文字コードではなくUTF-8のままで送信すると思います。 Ajaxに限らずFormでも<a href="">でも、 ブラウザが送信する文字コードは送信元のHTMLの文字コードと一致するという保証はありませんので、 必ず確認、変換しないと行けないと思います。
レスがつかないようなので、書いてみた。 改良の余地はかなりあるね。^^; <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <title>kuru kuru</title> <style type="text/css"> #p { width:650px; height:200px; list-style-type:none; } </style> <ul id="p"> <li><a href="#"><img src="./img/0.gif" width="120" height="120" alt="画像1"></a></li> <li><a href="#"><img src="./img/1.gif" width="120" height="120" alt="画像2"></a></li> <li><a href="#"><img src="./img/2.gif" width="120" height="120" alt="画像3"></a></li> <li><a href="#"><img src="./img/3.gif" width="120" height="120" alt="画像4"></a></li> <li><a href="#"><img src="./img/4.gif" width="120" height="120" alt="画像5"></a></li> <li><a href="#"><img src="./img/5.gif" width="120" height="120" alt="画像6"></a></li> <li><a href="#"><img src="./img/6.gif" width="120" height="120" alt="画像7"></a></li> <li><a href="#"><img src="./img/7.gif" width="120" height="120" alt="画像8"></a></li> <li><a href="#"><img src="./img/8.gif" width="120" height="120" alt="画像9"></a></li> <li><a href="#"><img src="./img/9.gif" width="120" height="120" alt="画像10"></a></li> </ul> <script type="text/javascript"> //@cc_on function RotationAnchor () { 　this.init.apply(this, arguments); } RotationAnchor.prototype.init = function (pEmtId, step, time) { 　var c, s, p; 　 　this.p = document.getElementById(pEmtId); 　this.s = step || 3; 　this.t = time || 50; 　this.l = this.p.getElementsByTagName('LI'); 　this.k = 0; 　this.w = this.p.offsetWidth; 　this.r = this.w / 2; 　this.n = this.l.length; 　p =120 / 2 |0; 　this.c = {x: this.w / 2 - p, y:p}; 　s = this.p.style; 　s.overflow = 'hidden'; 　s.position = 'relative'; 　for (c = 0; c < this.n; c++) this.l[c].style.position = 'absolute'; 　this.start(); } RotationAnchor.prototype.view = function () { 　var c; 　var op; 　var deg = Math.PI / 180; 　var tmp = (360 / this.n) * deg; 　var sin = Math.sin(tmp); 　var cos = Math.cos(tmp); 　var stx = Math.sin(this.k * deg) * this.r; 　var stz = Math.cos(this.k * deg) * this.r; 　var sty = -80; 　var tmx, tmz, tmy; 　var point = { }; 　 　point = henkan(stx, sty, stz); 　this.l[0].style.top = this.c.y - point.y + sty + 'px'; 　this.l[0].style.left = this.c.x + point.x + 'px'; 　this.l[0].style.zIndex = -stz | 0; 　　op =100- (stz + this.r) / this.r / 2 * 90; 　this.l[0].style./*@if(1) filter = 'Alpha(opacity=' + op + ')' @else@*/ opacity = op / 100 /*@end@*/; 　for (c =1; c < this.n ; c++) { 　　tmx = stx * cos - stz * sin; 　　tmz = stx * sin + stz * cos; 　　tmy = sty; 　　stx = tmx, sty = tmy, stz = tmz; 　　point = henkan(stx, sty, stz); 　　this.l[c].style.top = this.c.y - point.y + sty + 'px'; 　　this.l[c].style.left = this.c.x + point.x + 'px'; 　　this.l[c].style.zIndex = -stz | 0; 　　op =100- (stz + this.r) / this.r / 2 * 90; 　　this.l[c].style./*@if(1) filter = 'Alpha(opacity=' + op + ')' @else@*/ opacity = op / 100 /*@end@*/; 　} 　function henkan (x,y,z) { 　　var point = { }; 　　var pr0 = 1000; 　　var pr1 = 0.0013; 　　var pr2 = (z + pr0) * pr1; 　　point.x = x / pr2 |0; 　　point.y = y / pr2 |0; 　　return point; 　} 　 }; RotationAnchor.prototype.start = function () { 　this.view(); 　this.k += this.s; 　this.tmid = (function (cb_) { return setTimeout( function () { return cb_.start(); }, cb_.t); } ) (this); } var r = new RotationAnchor('p', 1, 50); </script>
ひとつ言っとくけど、動作確認をしたわけではないよ。 単にパッと見明らかに間違っていたのがカンマの書き落とし: onclick = "$('#view54').csv2table('./data/Book12-utf8.csv',{ select : [0,1,3] , // <== Here! onload : function(id,op,data,ary){ $('tr:even','#'+id).css('background','#eee') } オブジェクトリテラルは、{key1:value1, key2:value2, …}のように記述する。 カンマのところを改行で代替しようとしても文法違反なのは配列リテラル[a,b,…]同様。 まぁ多分これ直せば行けるだろうと思うけど……？
AjaxにはIE5.5以上しか対応していません。 IE5.5でAjaxを実現するためのDLLの、"Microsoft.XMLHTTP"をインストールしてみるとどうでしょうか。 たぶんmicrosoft.dllという名前か、MFC関連だと思います。 IE6以上はmsxml2.dll、msxml6.dllなどが使われます。 関連ファイルが必要だと思いますので、どのファイルをコピーすればよい、というのまではわかりません。 ざっと検索してみたのですが、DLLファイル単体でのダウンロード、インストールは公式的には無理みたいですので、 IE5.5、またはIE7かIE8をインストールするのがベストだと思います。
ほかで作ったもの。画像だけどなんとかなるでしょ！ <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"> <title>Change Image</title> <style type="text/css"> #photo { width:640px; height:150px; border:1px red solid; margin:0px; padding:0px; background-color:#fff; } #photo img { border:0px none; } </style> <ul id="photo"> <li><a href="htp:/test/" target="_blank"><img src="./img/0.gif" alt="0.gif"></a></li> <li><a href="htp:/test/" target="_blank"><img src="./img/1.gif" alt="1.gif"></a></li> </ul> <script type="text/javascript"> //@cc_on function ChangeImage () { this.init.apply(this, arguments); } //初期化 ChangeImage.prototype.init = function (elementId) { var c, s, t; this.sotowaku = document.getElementById(elementId);//外枠 this.list = [];//ImageList this.no = 0;//LIの番号 this.timer = null;//タイマーID this.quit = null;//中止？ this.opacity = null;//透明度 s = this.sotowaku.style; s.overflow = 'hidden'; s.position = 'relative'; //外枠CSS c = 0; while (t = this.sotowaku.childNodes[ c++ ]) { //子LIのみリストに追加 if ( t.nodeType == 1 && t.nodeName == 'LI' ) { if (c != 1) t.style.visibility = 'hidden'; this.list.push( { 'LI': t, 'IMG': this.setDef(t.getElementsByTagName('img')[0], c==1) } );//最初の画像以外透明 } } return; } //imgの初期値設定 ChangeImage.prototype.setDef = function (e, f) { var s = e.style; s.top = '0px'; s.left = '0px'; s.width = this.sotowaku.offsetWidth + 'px'; s.height = this.sotowaku.offsetHeight + 'px'; s.position = 'absolute'; if (!f) s./*@if(1) filter = 'alpha(opacity=0)' @else@*/ opacity = 0/*@end@*/; return e; } //imageの追加 ChangeImage.prototype.addImage = function (image, url) { var li = document.createElement('li'); var a; var img = document.createElement('img'); img.src = img.alt = image; this.setDef(img, this.list.length == 0); if (url == undefined) { li.appendChild(img); } else { a = document.createElement('a'); a.href = url; a.appendChild(img); li.appendChild( a ); } this.list.push( {'LI': this.sotowaku.appendChild(li), 'IMG': img } ); return; } //タイミングの設定 表示時間,消去時間,ステップ(%) // default [5,1,1] ChangeImage.prototype.start = function (atime, dtime, step) { this.atime = atime || 5000; this.step = (step == undefined || step < 1) ? 1: step; this.wait = Math.floor((dtime || 1000) / (100 / this.step)); this.loop0(); return; } ChangeImage.prototype.loop0 = function () { this.setOpacity(100); this.step *= -1; if (!this.quit) setTimeout( (function (cb_) { return function () { cb_.loop1(); };})(this), this.atime); } ChangeImage.prototype.loop1 = function () { this.timer = setInterval( (function (cb_) { return function () { cb_.changeOpacity(); };})(this), this.wait); } //透明度と対象物の前面化 ChangeImage.prototype.setOpacity = function (op, z, v) { var t = this.list[ this.no ]; t.IMG.style./*@if(1) filter = 'alpha(opacity='+ op + ')'; @else@*/ opacity = op / 100 /*@end@*/; this.opacity = op; if(z != undefined) t.LI.style.zIndex = z; if(v != undefined) t.LI.style.visibility = ['hidden','visible'][z]; } //透明度の設定 ChangeImage.prototype.changeOpacity = function () { var n = this.opacity + this.step; if (n < 0) { this.setOpacity(0, 0, 0); this.no = ++this.no % this.list.length; this.setOpacity(0, 1, 1); this.step *= -1; } else if (100 < n) { clearInterval(this.timer); this.loop0(); } else { this.setOpacity(n); } return; } var p = new ChangeImage('photo'); p.start(2000,1000,2); </script>
"Windows-31J" JavaScript でググると、参考URLがヒットして、 > IE の場合だけ、Windows-31J の代わりに csWindows31J を利用します。 だそうです。 余談ですが、"Windows-31J" は "cp932" と同義で、IANA で定義された「MS方言のSJIS」を意味する文字コード名です。 にもかかわらず、"Windows-31J"を「未知の文字コード」と扱うMS製品が多いのは確信犯という気がしてなりません。 # こんな事を書くと、またマイクロソフト擁護派から反発を喰らうんでしょうが、書かないと状況が良くならない...
bindでOKと言っておきながら動かなかったらあれなのでちょっと試してみました。 関数processRequestを変更しないのであれば、 　　onSuccess: this.processRequest.bindAsEventListener(this,1) で動くと思います。 関数processRequestの引数の順序を 　　http.prototype.processRequest = function(arg,h){ と変更すれば、 　　onSuccess: this.processRequest.bind(this,1) で動くと思います。 余談ですが、 > var url="/ruby/hello.cgi";　//実際に検証する為にはwebサーバにこのcgiを置く必要あり ちょこっと実験するだけならcgiスクリプト作らなくても HTMLファイルやTEXTファイルで動作確認できますよ。
DOSコマンドの実行結果を文字列で取得できる ActiveX コンポーネント「ATLDocs」というのがアップされています。 http://www.vector.co.jp/soft/win95/prog/se222454.html これを使って ipcongig /all の結果からPhysicalAddressの値を取得して、サーバーに送信してしまう。 ※もちろんWindowsとIE限定ですが。
> prototypeやDojoやJQUERY等のライブラリーを使わず、 他人が作ったライブラリを使うことがAjaxではありません。 http://www.atmarkit.co.jp/fwcr/special/ajax01/01.html こことかが詳しいと思います。 >1 自作のJavaScriptファイルをダウンロードしてもらって、利用者のサーバーにアップロードし、 <script src=""></script>という外部ファイルにするのと同じです。 ダウンロードと利用者のサーバーにアップロードする手間を省けるようにしています。 直リンクと呼ばれる方法なので、画像素材の場合は公開者が禁止していることが多いですが、 ガジェットやブログパーツの場合は逆に、自サーバーへアップロードしての利用を禁止することが多いと思います。 （禁止していないかも知れませんが、手間を考えると直リンクの方が簡単です） >2 DOMによるドキュメント操作です。 おそらくiframe要素を作成して、src属性をしているだけでしょう。 > 3 おそらくJSONPという方法です。 （1でも、「他サイトのJSONデータを取り込み加工して表示」という意味では同じだと思います。）
どういう意味でいっているのかわからんのだが、AjaxとDOMを比較するというのが、まず意味がよくわからない。 Ajaxというのは「XMLなどを利用した非同期通信」であって、それ以上でもそれ以下でもない。これは実用的かどうかというような代物でなくて、実際にWebブラウザに組み込まれている機能であり、ごく当たり前に使われる機能だ。また、Ajaxを利用してサーバから非同期でデータを取得したとしても、それを元に画面表示を操作したりする際には、内部的にすべてDOMを利用している。AjaxとDOMは切っても切れない関係であって、「Ajaxを使わずDOMを使うほうがいいか」というような質問は、それ自体が意味不明な感じがある。（Ajaxライブラリを使わず、直接DOMをスクリプトで操作している、という意味だろうか？） 確かに次々と新しいライブラリは出ているが、prototype.jsやjQueryなどは既に広く認知されていて、多くの企業サイトなどでもごく普通に使われている。例えば、OKWaveの今開いているこのページだって、prototype.jsが使われているし、「教えて！goo」ではjQueryが使われている。マイクロソフトのサイトではMicrosoftAjax.jsが使ってある。逆に、この種の企業サイトで、こうしたライブラリを一切使ってないサイトって、どこかあるだろうか？　ぱっと思いつかないんだが。 新しいライブラリが出たからといって、それらすべてを使わないといけないわけじゃない。jQueryならjQueryだけをきっちり使いこなせるようになれば、それだけでも十分な恩恵が得られるはず。情報に流されず、しっかりしたライブラリを厳選して利用すればいい、ということでないか。
submitボタンにしてませんか？ 一瞬表示されたあと、submitして画面が再読み込みされているとか。
setSize()関数は使ってみましたか？ 下記のようにしたらFireFox 3 ではリサイズできました。他のブラウザは試してません。参考URLはwindow.jsの関数リファレンスです。 <html> <head> <link href="../themes/default.css" rel="stylesheet" type="text/css"/> <link href="../themes/alphacube.css" rel="stylesheet" type="text/css"/> <script type="text/javascript" src="../javascripts/prototype.js"> </script> <script type="text/javascript" src="../javascripts/effects.js"> </script> <script type="text/javascript" src="../javascripts/window.js"> </script> <script type="text/javascript"> function win1() { var win = new Window({id: "win1", className: "alphacube", title: "Sample", width:250, height:150, top:0, left: 1, parent:$('border')}); var html = "<h1>simple sample</h1><br/>\ <a href='#' onclick='Windows.getWindow(\"win1\").setSize(200,200)'>setSize(200,200)</a><br />\ <a href='#' onclick='Windows.getWindow(\"win1\").setSize(300,300)'>setSize(300,300)</a>"; win.getContent().innerHTML = html; win.show(); } </script> <style> body { background: #363636; } #border { position:absolute; top:10px; left:10px; width:500px; height:500px; border: 1px solid #000; overflow:hidden; } </style> </head> <body> <div id="border"> </div> <script> win1(); </script> </body></html>
自前のサーバーは入りません。私も無料のレンタルサーバーを 使っています。保存する仕組みは、PHPやcgiが使えないレンタル サーバーだと無理ですが。自分の手でKMLをアップできるのなら 表示可能のはずです。その際、KMLのファイル名でなくURLを指定 してWebサーバー経由で読込みます。 以下リファレンスの抜粋です。 ＜class GGeoXml＞ GGeoXml オブジェクトは地理的コンテンツをパブリックにアクセス可能なウェブサーバー上でホストされている XML ファイル (KML ファイルなど) の地図に追加します。これは、GOverlay インターフェースを実装し、このため GMap2.addOverlay() メソッドを使用して地図に追加されます。 ====＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
地図位置情報を記述する標準化された形式として、 KML形式とかGeoRSS形式というのがあります。XML形式から派生 しており、 <?xml version="1.0" encoding="UTF-8"?> <kml xmlns="http://earth.google.com/kml/2.2"> <Placemark> <name>目印名</name> <description>説明</description> <Point> <coordinates>-122.0822035425683,37.42228990140251,0</coordinates> </Point> </Placemark> </kml> みたいに情報を記述します。(KMLの例) Googlemapだと、KML形式又はGeoRSS形式、YahoomapはGeoRSS形式 のデータを読込んで地図を表示する機能があります。 まず、エクセルの住所から、緯度・軽度の情報を入手する必要が あります。（この作業をGEOコーディングといいます。） ネットで探せばGEOコーディングツールはけっこう見つかります。 そして、エクセルデータからKMLとかGeoRSSのテキストデータを 作成し、地図にアップします。KMLで検索すればそのものずばりの ツールが見つかるかも。
＜＝このページを見ているときに他人がアップロードした場合に更新をしなくても自動で更新されるようにしたいと考えています。＝＞ 　php側でタイマー見たいな物をセットして、定期的に更新をチェックする にしても、自動でページを更新するのは困難かも、一歩譲って、自動でリ ロードさせるにしても、私はそんなページは嫌いです。 本件とは話がずれますが、何もしなくても勝手に、どんどんロードして 画像が変わったり、ページが遷移していくサイト（エロサイトに多い） がありますが、迷惑に感じるのは私だけでしょうか？。
私も使わせてもらっていますが、Highslide.jsはいかがでしょうか。 非商用サイトなら自由に使えます。 http://highslide.com/ Barebones Samplesにサンプルがあります。
Webkit.appはwebkitというレンタリングエンジンのnightly buildの、表示確認用のブラウザのこと。つまり、FirefoxでいうMinefieldみたいなもの。 基本的にSafariの最新版と考えていいが、フィードバックを目的としているので一般の人が使うものではない。
Ajaxのローカル開発環境であれば、 個人的にはAptana Studioがオススメです。 http://www.aptana.com/studio 日本語化も可能なので、興味があればGoogleで検索してみてください
Ajaxもできるライブラリ（汎用ライブラリ）を使われていますが、該当のスライドショーはAjaxではありません。 こちらのライブラリをご参照下さい。 http://malsup.com/jquery/cycle/
ざっと見ただけですが、 ブラウザーがPOST要求を出す時のリクエストヘッダーにある Content長（バイト）をサーバ側が始めににトータルサイズとしてセットし 読み取り済みサイズ、時間等と一緒に計算してAJAXで返し、JAVASCRIPTで プログレスバー表示しているような気がします。 サーバー側に設置するubr_upload.pl (Perlプログラム)の中に $ENV{'CONTENT_LENGTH'}を取得している部分を見つけました。 （私の読み間違いかも？）
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "?http://www.w3.org/TR/html4/strict.dtd"> <title>set Title?</title> <a href="hoge.html" title="" id="a">link1</a> <a href="hoge.html" title="" id="b">link2</a> <script type="text/javascript"> eval('var a={"note":[ {"content":"aaa", "title":"hoge"},{"content":"bbb", "title":"hogehoge"} ]}'); document.getElementById('a').setAttribute('title',a.note[0].title); document.getElementById('b').title=a.note[1].title; </script>
追加 こちらもご覧ください。
受け取る側は、普通にフォームをPOSTしたのと同じ形で処理できるはず。送信側で、リクエストヘッダーの指定をしたらどうなる？ httpObj.open("POST",target_url,true); httpObj.setRequestHeader("content-type","application/x-www-form-urlencoded;charset=UTF-8"); // 文字コードは環境に応じて httpObj.send(post_data);
変数のスコープの問題では？ 以下のようにしたらIE6でも出来ました。 <script type="text/javascript" charset="UTF-8" src="http://maps.google.com/maps?file=api&v=2&key=[API​キー]"></script> <script type="text/javascript"> //<![CDATA[ var map; var panorama; function load() { map = new GMap2(document.getElementById("map")); map.setCenter(new GLatLng(35.655, 139.744), 18); panorama = new GStreetviewPanorama(document.getElementById("street")); } // 地図1 function map01() { var point = new GLatLng(35.655, 139.744); map.panTo(point); panorama.setLocationAndPOV(point); } // 地図2 function map02() { var point = new GLatLng(35.657, 139.751); map.panTo(point); panorama.setLocationAndPOV(point); } // --> </script> </head> <body onload="load()"> <div id="street" style="width:320px;height:200px"></div> <div id="map" style="width:320px;height:200px"></div> <ol> <li><a href="#" onClick="map01();return false">地図1を表示</a></li> <li><a href="#" onClick="map02();return false">地図2を表示</a></li> </ol> </body>
キャッシュが効いていると推測。 ダミーの数値をつけて呼び出す var dmy = (new Date).getTime(); パラメーターを送るさいに、 '&dmy='+dmy を最後に付け加える 呼び出されるＣＧＩ側ではその数値は無視してＯＫ！
非同期通信をサポートしてるかどうかで決まると思うけど ほぼ、全滅では？ ウィルコムでオペラだったらいけるかな？
基本的に分割しています。（基本的に＝つまり例外もある） １回にダウンロードする内容は、 Ajaxを使わずにCGIだけでHTMLを出力している場合や、Dreamweaverなどで静的なHTMLファイルを作るときに表示する内容、 その１ページ分のみですね。 スタンダードというのはないと思いますが、 要は、１ページの中に何件表示すれば読みやすくなるか、というそれだけだと思います。 >ANo.1 補足 懸念されているとおり、巨大なページはPCのメモリ消費、表示処理にも影響します。 1000行をダウンロードしても読まなければ、それこそ不要なダウンロード、負荷になりますしね。 しかしながら、スクリプトを見る限りでは、 数千行でも１度に表示する方が良いかもしれません。 表計算ソフトでは、最大数万件まで表示可能になっていますが、 そのような内容であれば、1000件や全件表示にする方が良いこともあると思います。 innerHTMLで一気に書き出した方が表示が早いことは確かですし、 このサイズになると'<table>〜</table>'という文字列を生成して、<div>のinnerHTMLに放り込む、 または、むしろJavaScriptを使わずにインラインフレームで表示する、という方法も一考かと思います。 >ANo.2 CSVをJavaScriptで分割するよりも、JSONで受け取ってevalする方がはるかに早いです。 ですので、CSVで受け取ってsplitするよりも、 PHP側であらかじめJSON（配列）で記述しておき、eval(o.responseText)とする方が早いですが、 なかにはevalは邪道だとかいう話もありますけどね(^^; コードがあまりにも単純すぎて素人っぽく見えるので嫌われるんでしょうかねぇ？ 不正なデータの場合、いきなりスクリプトエラーが発生するという問題がありますが、 私は良いと思いますけど。 今思えば、これで逃げられるかなぁ。試してません。 try{ eval(o.responseText); }catch(e){ alert('error'); }
＞Ajaxを用いて開発する利点 ・最小限のデータのやり取りで目的の結果を表示できます ・データを最小化できなくても、変遷がないことでユーザーにとって 処理が高速におこなわれていると思わせる心理的な効果が期待できます
JavaScriptでページの内容を変化させた後にibox.jsの初期化処理を入れたら上手くいくと思います。 おそらくonloadイベントで初期化してると思うのですが。
http://dojotoolkit.org/support/faq/what-does-dojo-stand >It doesn't really stand for anything. 特に意味はないらしい
たとえばこのようなのはどうでしょうか。 http://dojocampus.org/explorer/ Dialogがそれに該当するかと思います。
