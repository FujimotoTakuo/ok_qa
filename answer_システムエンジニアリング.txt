社内のネットワークにも関わるなら「日経ネットワーク」がお勧めですね
こんにちは。 案件や会社の状況にもよりますが初回契約の場合はだいたい３ヶ月から～６ヶ月くらいの場合が多いと思います。そこから能力が認められれば徐々に契約期間が長くなっていくと思いますが、自分の知る限りでは２年くらいが最も長いですね。大型案件の場合などは比較的長い契約期間を提示されることが多いように思います。 ただ、スキルアップが目的ならば長めの契約期間を提示するという選択肢もありだと思いますが、フリーランスならばスキルや任せられる仕事の重要度に応じて条件変更を要求するのもありだと思うので３ヶ月から６ヶ月くらいを更新の目安として条件交渉するのが良いのではないでしょうか。 フリーランスの場合はどんなに能力が高くても相手の会社の業績次第では契約更新の打ち切りをされてしまうこともあるので、安売りせずに条件面はある程度きちんと交渉した方が良いと思います。 ご参考になれば幸いです。
もう定年が近いけど、ずーとプログラマやっています。 ・プログラマは未経験者を多く募り、 　==>新卒など若いときの採用は、日本的雇用（将来能性を信じる）なので本当。でも、派遣となると、欧米的な能力主義の雇用になるので未経験は厳しい ・残業や徹夜が多く、 　==>昔はそうだった。でも今は、ワークライフバランスを強調する企業が増えているので徹夜、休出は少ない。残業も割と少ない。 　とはいえ、４０００億円がパーになったといわれる「みずほ銀行案件」みたいなのに関わったりすると、別だけどね。 　ちなみに、私は昨日、定時で帰ったよ。 ・プログラミングの敷居が下がって原価が低く、 　==>本当 ・孫請けばかりで受注先に金を持っていかれるぞ 　==＞孫請け、孫々請けが多く、中抜きされて、実際に手を動かしているプログラマのもらう金が少ないのは本当 ・それに受注先は女が多く、孫請けは男ばかりだ 　==>外資系、元請け、下請けレベルの企業は、わりと女性も多いが、孫請け以下は男ばかり（いてもおばはん）は本当 プログラマの門が低いのは未経験者歓迎の謳い文句で若者を酷使するためだ 　==>本当 とはいえ、ソフト開発の仕事は、他業種に比べて、イジメやセクハラ、パワハラは少ないし、ヘマして怪我するってことも無い安全な業界。 力が必要なことも無いし、汚い仕事でもない。 飲食、販売、介護業界などに比べたら、超ホワイトな業界といえるかもしれない。 また、現在もだけど、これからは、もっと社会において、ソフトウエアの重要性は大きくなると思うね。 だが「下隅みから正社員をめざす」ってのは方向性が絶対違っているね。 狙うなら「下隅みから経営者をめざす」ってなるべきだね。 正社員は、どんなに頑張っても、プログラミング能力があっても、給料はまわりのプログラマと似たようなもので、彼らの２倍ももらえればいいほうだろう。 でも、経営者になれば、プログラマ平均年収の１０倍、１００倍、１０，０００倍の年収さえも夢ではない。 奴隷の中でのリーダになるよりも、会社に縛られない自由で高収入を得られる生き方を狙うほうがいいと思う。 第一、経営者になれば「定年」ってのがない。 部下に働いてもらうとか、自分の作ったプログラム資産で、６０歳、７０歳になっても高収入得て「国の微々たる年金なんていらん！！」という未来を狙うほうが絶対いいと思う。
何か学歴を勘違いしてますね。 お医者も小説を読むし、釣りをして自炊でおつくりぐらい拵えるひともたくさんいます。 彼は文学部の出でもないし、水産学部の出身者でもありません。 たかだか医学部の出身です。 文学部出の人間も、PCの組み立てなんかサラサラできますし、テレビやBDの接続なんて苦もありません。 そういうことを知っていて、情報学部が何か他の人間たちにできないような知識を得られる場所だと思うのですか。 自分は理科系はなんでも知ってるというならラプラス変換の意味を説明できますか。人にすぐ理解してもらえる説明できますか。 私この前びっくりしたことがあったのは、化学の博士に、化学プラントの制御の話をしていてラプラス変換の話題をしたら、何と知らなかった！ 化学といえば理科系大学ですよ。それが、こんな微分方程式に立ち向かうときの常道を知らない。 だけど問題にはなりません。 私は説明する。時間軸がなくなってｓという怪しい次元が置き換われば何が起きるか。 なんのためにこういうことをするか、説明すれば、そこは博士ですから、すぐに理解してくれます。 腐っても鯛というほどわるくはいいませんが、教授するくらいだから頭はいいのです。 誰かが何かを知っていてそれが余人には理解できないなんていうことはこの世の中にはめったにありません。 たまたま知らない人がいて、その人は次の瞬間には知っているのです。 経済学部出身者がSEとして見事な実績を上げるのは、まず経済原理を理解しており、どういう位置関係で相手が自分に相談しているかを即察知できるからです。 経済をやっているぐらいだから、C言語だとかJavaなんて問題にもならないくらいにすぐわかるでしょう。 特に、何のためにこういうフレームワークを構想したか、が察知できる。 別にコーディングなんかしなくたっていいんです。それはプログラム学校を出てそればかりやりたい若い人たちに任せればいい。 自分はそれをレビューし、指導するだけで止めます。 メインは業務の心棒をぶれないように制御するだけです。 自分は文科系だなどというくせに、源語で源氏物語も読めないなら、どこが文科系だと突っ込みたくなりませんか。 理科系も同じです。 理科系のあらゆることに明るいならそういってもいいけど、たとえばスミスチャートの意味を説明できなくて理科系か、という突っ込みはあるかもしれないと考えてください。 人間はオールラウンドのものはいません。 何かを知っていて何かは知らないのです。 だけど知らないことなんか、勉強したらしっていることになるのです。 それが人生です。 出身の学校で、その分野のエキスパートであると思い込みたい気持ちはわからなくはないけど、それはお面をかぶって「鬼だぞ」と言ってる程度の話です。 さて本題に戻ります。 私はIT企業側であり、採用判断側でもあります。 あまり極端なのはいませんが、自分はどこそこを出ているから偉いんだみたいな態度のがたまにいる。 これは、何かの資格を並べるよりも意味を感じない話です。 なぜか。過去の話であり、これからの話につながらないからです。 たまたま出た学校とは今から見たら過去です。 これからどう自分を成長させたいのか、何をやりたいのかを説明できるなら点はたかくなります。 一番評価するのは「自分は何ができないか」を言える人間です。 それが言えるのはきっちり自分を見つめているということです。 それと、変に飾らないで自分を説明できる、自分への自信があるということです。 できないことは学んで練習したら必ずできるのですから。
電気通信の「工事担任者」という国家資格が必要です。 仕事上、AI・DD総合種があれば文句なしですが、AI2種とDD2種は必要だと思います。 https://www.shiken.dekyo.or.jp/charge/ https://www.shiken.dekyo.or.jp/charge/download/pdf/pamphlet-01.pdf
当方、元「蜂のマークの超大手ゲーム開発企業の開発チーム社員」です。 ＞ゲーム開発の業界に入り、ゆくゆくは大手ゲーム会社(スクエニ等)で働くために必要なスキル 「開発スタッフ」に必要な物は「若さと体力とメンタルの強さ」です。ゴールデンウィークに「会社で５徹しろ」って言われて、５連で徹夜できる体力が必要。 そして「ゴールデンウィークが丸っと全部潰れて、代わりに取った代休を一人寂しく過ごすのに耐えられるメンタルの強さ」が要ります。 知り合いがGWに遊んでいる時に「徹夜でお仕事」です。 代わりに取った５日分の代休は「知り合いが全員、普通に仕事している日」なので「家で寝て過ごして終わり」です（仕事で「ゲーム漬け」なので、家でゲーム機に電源を入れる気にはなれません。ゲーム機は「見たくもない」という状態になります） ゲーム業界のド真ん中に居た人間からの忠告です。「好きな物は、決して、仕事にしてはいけない」です。 「好きな物(ゲーム)」を仕事にしていまうと「必ず後悔する」でしょう。 「好きな物」を「好きな物」として一生「好き」な状態にしておく秘訣は「決して、好きな物を仕事にしないこと」です。 「貴方がゲームを好きで居られる」のは「余暇の時間に趣味として楽しめるから」です。 「ゲーム」を「仕事」にしちゃうと「３年で、確実に嫌いになり、見たくもなくなる」でしょう。私自身がそうであったように。 なお、当方が「家庭用ゲーム機」を買って「自分からゲームで遊び始めた」のは、某蜂のマークの会社を辞めて、ゲーム業界から離れてからです。 あんなに好きだったゲームが、業界に入ったとたん「家では見たくもない」って状態になっていたのに、会社が潰れて業界を離れたとたん「我慢できなくなって家にゲーム機が５台」って状態になってます。
エンジニアは「問題を解決するための手法を考え出す人」です。 「この問題を解決するには、これとこれを用意して、これをこうして、これをあれすれば、こうなって」というのを考えるのがエンジニア。エンジニアは基本的に、プログラムを書きません。 プログラマは「言われた通り、仕様通りに、プログラムを書かされる人」です。 「与えられた資料をもとに、与えられた道具を使って、与えられた仕様通りに、与えられた期間内に、プログラムを、黙って書くだけ」なのがプログラマ。プログラマは基本的に、設計や開発は行ないません。 で、たいていの「業界の中の下っ端」は「両方同時にやらされて死ぬ」のです。
日本ではＩＴエンジニアは派遣会社に所属して派遣社員となるケースが割りと多いですよね？ そして、派遣先の開発現場では、最新技術に疎いところが多い。 そういう意味では、日本で日進月歩といわれるＩＴ業界に所属していても、最新技術への感度が鈍い方でも生きられる？良い国だといえますよ。 海外に出るなら、他の回答にあるように、英語の読み書き、会話が十分にできることが大前提でしょう。 さらに、最新技術に追従していて、さらに仕事で成果を出し続けているかが問われると思えます。 そして、会社側の解雇権は、日本に比べてずっと強いものです。 「おまえ成果だしてないから、首だ。すぐ会社を出て行け！」って感じで解雇されるかもしれませんん。 となると、優れたＩＴエンジニアは別かもしれませんが、一般レベルのＩＴエンジニアにとっては、多くの場合、日本よりも、厳しい、生きずらい国になる可能性があります。 もちろん、それらに関して問題がなければ、日本よりも年収が２倍くらいになる可能性も高いようです。
業界内でも明確な定義はないように思います。うちでは、こういう位置付けですってのは、各々の会社や組織内ではあるかもしれませんが、それが業界内で、何処に行っても同じかどうかは些か怪しいと思います。 SEって言葉も同様ですよね。ある組織では、要件から仕様決めをして基本設計までがSEで、詳細以降はPGって場合もありますし、詳細設計まではSEなんて場合もあります。ヘタすれば、設計業務とは関係なく、PGを束ねるポジションをSEとしている組織だってないことはないです。 基本的な考えとして、ソフトウェアの開発者は職業としては、ソフトウェアエンジニアだと思います。その中で、組織やプロジェクトの都合でSEとなったりPGとなったり色々変わります。その中で〇〇〇エンジニアなんて呼ばれたたをする事もあるって程度だと思います。
#2です。 >この間違いでかなりの額の損害ででています。 >私も個人的に航空券を購入しなければいけなかったので >数十万の損をしました。 こっぴどい損をさせられてしまいましたね。 この件について知らずに困らないと書いたのは誤りでした。申し訳ないです。 航空会社や代理店の対応が正しいかは法律の専門家の判断を聞いた方がいいかもしれません。 仕事関連なら経費にならないかや保険のオプションを確認した方がいいかもしれません。 ただ、ご質問の件についてプログラマやSE等が姓名チェック機能を入れる提案をしたとしても、その提案が通るとは思えません。 姓名が逆に見えても、確認画面によりユーザを不快にすると発注元が考えて却下してしまうものなのです。 >外国人だとどちらが名前で苗字が判断がつきにくい。 外国のサイトや海外の代理店で申し込んだのですか？ 航空会社や代理店は営利で動いていますので金を手にできればよいという考え方もあるわけです。そういう組織の設計者に期待しすぎても損をすることが多いと思います。 10万円以上の損がある可能性があることなら、自分が信用できる複数の人間でチェックを行うことをお勧めします。 もしくは、損がでないよう、高くても信用できる日本の代理店に丸投げした方がよいのでしょう。 ブラウザにはスペルチェック機能と言ったものを搭載しているものもありますので、自分がよく入力する項目が間違っていないかチェックする機能を持ったブラウザやセキュリティソフトが登場するかもしれませんね。 例えば、IEでフォーム項目をチェックすることであれば、技術的には容易で、ちょっとしたプログラマなら自分用にチェックプログラムを作ってしまうでしょう。 ただ、入力が楽になればなるほど、ユーザは自分でチェックをしなくなるものだという考え方もありますので、残念ながら最終的には自己責任があるものではあるのです。
どういう価値観で似たような、とおっしゃっているかわかりませんので、合意も反論も出来かねます。 肖像画と風刺絵は似てますね、といわれるのと感覚的に似てます。 機関銃と大砲と計算機が積みあがっているカタマリをトランプ氏という人の表現に使われたとして、本質に対する肖像画だと言えば言えないこともないし。 まあまともな回答をしますと、E-R図というのは、エンティティのリレーションの図ということですから、データ同士の関連図です。 マインドマップというのは思いついたことを配置して階層化することですから、概念のマイグレーションです。 E-R図は、誰が見ても真実だというものが存在し得ます。 まさか個人情報のテーブルと商品情報のテーブルにはリレーションは張れません。 リレーションを張るためには、その間に、売上テーブルのようなものがないとおかしいことになります。 そのためにできたものをレビューし、議論するわけです。 マインドマップは、レビューもありえますが、記者の価値観に従って階層化したものですから、思想によって正解は一つではありません。 10人にて10人が違うマインドマップを作っても、全部正解です。
プログラム言語のうちではありますが、スクリプトというのは大変に助けになるものです。 UNIX系の人間なら全員それを体で知っています。 その意味で本気であれば、Pythonが言語中最も驚異的に役に立ちます。 ある条件が発生すると勝手にメールを出すとか、来たメールに適当に返事をする、なんていう芸当は得意技です。 欲しい情報をインターネットで次々に検索し、人間だったらへたるような深いとこまで掘り下げた上、いらんものは捨ててほしいかもしれないものだけ持ってくるなんていうことをやっている人間も知っています。 もしこれをJavaでやらかそうとしたら、恐ろしく巨大なサーバープログラムを作る必要が出てきます。 そんなことは本末転倒だ、と思うことが可能な処理系です。 思い付きというか、こうだったら便利だなと考えたこと、ちょっと想像したらえらく複雑なことを簡単に実現できます。 これは、連想記憶という情報の扱い方に由来します。 通常のプログラム言語であれば、複数いる人間分メモリを確保し、1項目目が名前、2項目目が生年月日、3項目目が収入、みたいに展開してそれを合計したり平均したりして何かを得ます。 しかし、そのために、コード化だとか、定数テーブルだとか、やたら定義を一杯作る必要があります。 視点を増やすごとに定義が増え、メモリ内に展開している項目の数も増えます。 この処理系は、収入（安倍）だとか安倍（収入）という概念で情報を扱えます。 したがって、「誰か役に立つやつはいないか」が非常に簡単にプログラムできるのです。 おかしいことは、視点をどこにおいても大丈夫だということです。 オペレータの立場にたって設計するというのが普通のプログラム言語ですけど、Pythonは、神の立場で考えてもかまわないし、虫の立場でも問題ありません。 複雑な分析をして設計するのではなく、発想でつくりたいものをイメージするだけで組めます。 Javaは、仮想マシンですから、WindowsだろうがMacだろうがLinuxだろうが、どこでも動けるという強みはあります。 そのかわり、実際に機械語に変換して動くのではなく、Javaという空間で動くバイナリを作ります。 自分のプログラムだけで構成するならどこにもっていっても動きますけど、版数が違う環境に持っていくとどう動くかの保証はなくなります。 その意味でも、困るのは仕様変更です。 細かい番号でバージョンアップが繰り返され続けていますが、非推奨クラスなんていうのが出現し、数代さきにはそれ自体が廃止になるなんていうものがいくつもあり、これは大迷惑です。 実力がつくかどうか、ということでいえばJavaはスキルという意味の実力はあまりつきません。 理由はフレームワークによってほとんど動作しますので、本来ならどういう処理をしなければならないかなんて考えないでプログラム可能ですから。 下働きをすることで身につく基礎訓練というものはJavaでは望めません。 NODE.JSというのは名前でわかるようにjavascriptです。 動くのがサーバ―サイドだということが普通htmlに乗せるjavascriptとちがうところです。 発生することを「イベント」としてとらえ、イベントというオブジェクトを想定して書くということです。 いずれもdotinstallで講座があります。数分のインターバルでつぎつぎに早口でしゃべり教えてくれます。 習得するのはきわめて容易です。 だけどこれを受講したから即仕事ができるように成長しているかというと、そんなことはありません。
昔から言われているコトバに「プログラマ35歳定年説」というものがあります。 これ、どういう意味だと思いますか。 これを真顔でソフト会社に質問する人材がいるのですね。 そしたら答えはどうなるでしょうか。 「いえいえ、当社では40過ぎても50過ぎても活躍しているメンバーはいます。お気になさらないでください」となるのが普通です。 これは当たり前で、定年が60とか65とか言っている会社に矛盾が生ずるからですね。 だけど、あまり誰もいわないけど、これは事実だと言いたいのがソフト系の会社の上に居る人間の共通の意識です。 こう思ってもらわないと困る、ということがあるのです。 ここで一応整理しますが、「プログラマ」の話であってprogrammerの話はしません。 アメリカでprogrammerというと、コンピュータソフトにかかわるあらゆることができる人のことを意味します。 ですから、ジェフ・ベックなんていう、フレームワークを開発したり品質の手法を提示して本を書いたりするひとも自分をprogrammerだといっています。 日本で「プログラマ」というと、上からの仕様の指示に従ってコーディングをする仕事をする人間のことを言います。 その指示する仕様を相談したり作ったりする人間のほうはシステムエンジニアなどというのが日本の習慣です。 その習慣に従って言うと、プログラマは、できれば30ぐらい、最大でも35ぐらいまでに卒業してほしいのです。 言ってみればプログラマは軍隊では2等兵です。 ある程度居たら、1等兵になり、上等兵になり、軍曹になってもらわないと組織が成り立ちません。 次の世代を育て、またその世代にその次の世代を育てる方法を習得してもらわないといけないのです。 そういう世代交代をちゃんと回すことで会社が成立し、業界が成立するわけです。 しかし、この世界には「生涯一捕手」ならぬ「生涯1プログラマ」でありたがる人間が割合います。 管理職をいやがり、プログラムのバグにまみれる快感を手放したがらないのです。 こういう人間は肩をたたくことになります。 「生涯一捕手」といったあの人は本当に生涯キャッチャーをしていたわけではありません。ご存じのように。 監督になり、捕手の目で相手を見るコツを教え、この空気にはこのサインを出せというようなことを次世代に教えました。 そして、選手会の会長をやったことがあるメガネの優しい顔をしたあの監督を育てたわけです。 大阪のチームも東北のチームも率いてそれなりの成績を出させた。自分に自信を持てと体で教えたのです。 普通、世代はそのように育ってほしいと思うものです。経営者は。 それが「プログラマ35歳定年説」の真意です。 35になったからやめろ、というのではなく、35になったら若いもののことをしっかり考えてくれということです。 もし41歳になって、プログラマになりたいと思う人が居るとすれば、あまり門戸を開きたくは思いません。 もちろん誰もがそうだとは決めつけられませんから断定はしませんが。 しかし、ある程度のプログラマ経験があるなら話は別です。 経験がモノを言うというのはあることですから。 若手ばかりで混乱している現場に十分な経験者を送り込むのは有効な手段だからです。 が、いま勉強しているというなら、二の足は踏むでしょうね。 むしろ組織の管理法とかモティベーションのキープ法のようなものを持って自分を売り込むなら話は別です。 この話はおわかりになると思われます。
他の回答にありますが、Ｃ言語が分かっていれば、プログラミング適性はあると思えます。 これが「Ｊａｖａは分かっています」という方だと、ハードよりの知識が不足していることになりますが・・・。 ただ、適性があるとしても、Ｃ言語より後に登場したＪａｖａ，Ｃ＋＋，Ｃ＃とか、ＰｅｒｌやＲｕｂｙなどの言語には、Ｃ言語には無い概念や命令の使い方を覚える必要が当然出てきます。 以外と、「Ｃが分かっているから、Ｃ＋＋なんて簡単！」と思う方もいるのですが、Ｃ＋＋はＣの２，３倍の複雑さがあると思いますし、Ｃ＃となれば、オブジェクト指向とか、ラムダ式とか、Ｌｉｎｑなど、新たに覚えることが山盛り、てんこ盛りです。 一般論として、長く使える言語を選んだとしても、自分がやりたい処理がやりにくい言語であれば、それを選ぶことは不適切ですよね？ また、他人から「この言語を使って作ってください」と依頼されたとき、その言語ができないなら、やはりダメですね。 他の回答にもありますが、言語はツールです。 たとえ長く使える言語を選んだとしても、自分の目的に合わない言語であれば、それは使えるツールになりません。 例えば、「細い路地にも入っていけて、駐車場を気にしない移動手段」となれば、たぶん自転車などを選ぶことになり、自家用車やトラックはツールとして選ぶことはできません。 逆に「大きな荷物を長距離運ぶ」となれば、自転車はツールとして選ぶことはできません。 ですので、もう少し、目的を明確化したほうがいいと思います。 ちなみに、私も、少なくともＰＨＰは選ばないほうがいいと思います。 他の言語にしましょう。（WordPressをやりたい、というなら別ですが・・）
採用担当者です。 ＯＯ情報学部って 歴史が浅いところが多い ＝ＯＢが少ない ＝長く働ける企業とのパイプが少ない です。新興企業除き、採用担当も積極的に ターゲットにしていません。 経済学部で数学徹底的にやるとか 金融工学が出来ればよいと思います。 逆に法学部でオリジナリティを出しても 面接で目立つと思います。 結局、言語がわかっても何に使うか 経済社会、企業の仕組み、目的がわかっていなければ ユーザーの視線に立ったシステムつくりは出来ません。
システム開発に加えて、データ・デジタライズ(データの電子化)、Webページ作成、サーバー運用管理、システム構成機器の手配・設置、PC全台への社内標準ソフトのインストール・設定、IT研修なんかも加えた、ワンストップでITがらみの仕事なら何でも引き受けようっていう看板。実際には、下請け会社や派遣技術者に丸投げするところが多い感じ。技術蓄積になりにくいので、安い費用提示で仕事をとってきてもっと安い費用で請けてくれるところに丸投げして中抜きする口利き屋に近いところもある。
女性だからと単に性別だけで大変と言うことはありません。 子どもが出来ると、社会では子どもの世話を母親がする風潮があります。 で、保育園の送り迎え、迎えの後の世話などを母親がすると、残業の時に困って「女性が大変」になるし、 父親がすると「男性が大変」になります。 プログラマ、SEだと残業が増えがちで、男女にかかわらず子育てをする人は大変です。そういう意味では、SEの方が大変でしょうね。自分の仕事の遅さのせいで無いような、突発的な残業の確率はプログラマよりかなり高いと思いますよ。
いたずらや不正アクセスの試行など正常なアクセスでは無い可能性がありますね。意図してそうなっているのか意図せずそうしたアクセスになってしまているのかわかりませんが、普通の一般ユーザからのアクセスでは無いと思います。 あまりひどいようであればどういうアクセスなのかしっかりと調べる、もしくは調べてもらった方がいいと思います。 ただ、このご時勢変なアクセスは多いと思うので、一喜一憂しても仕方が無いという面もあります。インターネットに公開しているWEBサーバなのであればこういったアクセスがあるのはある程度想定しておいたほうが無難ですね。
プログラマやSEなどのソフトウエアエンジニアは、比較的新しい産業ということもあって、 2000年ごろだと”35歳定年説”なんてのは　まことしやかに言われていましたね。 これは、その時点でそれ以上の年齢のソフトウェアエンジニアがなかなか存在しなかったので、 そうなるものだと予想していただけのように感じます。 また、それまでの第二次産業の形態が技術職として一人前になれば その次は、管理職を目指すのが当然の成功直線だと信じられていた面もあろうかと思います。 もちろん、技術として革新的な技術進化もなく、技術修練度が低くても成り立つ産業なら、 ”一人前”になった後は　指導や管理の立場になることがオーソドックスで、 組織論としても正解だったのでしょうけど、 ことソフトウェアに関してはこの数十年の技術進化は、習得に終わりがないような状態が続いている ので、必ずしも管理職になっていくのが多数の目標というのは当てはまらないように思われます。 体力的にも、 不眠不休を強いられる一部のプロジェクト以外では３５歳で限界ということはありませんし、 それは単にマネージャーの経験不足や計画性のなさの問題なので、 スキルさえあれば、いくらでもニーズはあるかと思います。 ただ、人月計算すると、年齢とともに上がる人件費と売上とのバランスで不利になったり 派遣のソフトウェアエンジニアに関してだと、 発注元のほうが年齢や経験が浅いという状態だと仕事の依頼がし難くなのでは というような気を回して、一定年齢以上を採用しないということもあるかもです。 そうなる前に、経験を積んで、人件費の安い人とのコスト比率以上のスキルを身に付け 若手よりも有利に立てばよいだけなので、悲観的に考える必要はないと思います。 特に専門分野に特化して、”この仕事はあの人でないと出来ない”や ”時間単価は高いけど開発速度や品質が高く、トータルで安い”というところまで食い込んでいけば、 食いっぱぐれることはないかと。 そうなれば、６０でも７０歳でも続けられると思いますが、心配なのは老眼と腰痛ですかね…
こんにちは。 厳密にはSEとプログラマで立場の上下はないと思います。 ただし、会社や組織体によってはプログラマの上級職としてSEという職種を設けているケースはあります。日本の企業、特に受託開発やエンジニア派遣の業務形態を主とする企業にこのような昇級制度を設けているところが多いように思います。これはお客さんに金額を提示する場合にわかりやすいという理由があります。プログラマならいくらSEならいくらPMならばいくらといった具合に単価を算出しやすいのです。 「厳密には立場の上下はない」と言ったのはそもそもSEとプログラマでは役割が違います。SEはシステムの要件をまとめたり、仕様を定めるたりそのためのお客様との折衝調整、ドキュメント作成などを行います。プログラマは仕様に定められた通りにプログラムを作成することが主業務となります。しかし、ここにも大きな誤解があり、SEの業務はここまで、プログラマの業務はここまでと厳密に決まっているわけではありません。SEがすべてをこなすケースもありますし、その逆もあります。一般論としてSEとプログラマという括りが存在していますが、往々にしてその役割には曖昧な部分が多々見受けられます。 海外ではSEという職種はあまり耳にしません。逆にトッププログラマは年収数千万円稼ぐこともざらです。こういうケースは日本でもネット系新興企業で増えてきました。 的確な回答になっていないかもしれませんが、それだけSEとプログラマという職種の違は曖昧であるというのが事実だと思います。 ご参考になれば幸いです。
まず、大きな誤解があります。 HTMLコーダなんていう職業はありません。 HTMLコーディングという作業があるだけです。 HTMLなんて、SEやプログラマという職業の人間だったら誰でも書けます。 また、特別に労力を使って書かなくても、WordやExcelで「HTML保存」とすれば、そのまま出来上がります。 これだと重くて可用性にとぼしいから直接編集などはいたしますけど。 だから、HTMLをわざわざコーディングしてもらうような局面はほとんどありません。 レスポンシブデザインということでCSSを使って設計するということはありますけど、所詮編集を部品単位で考えて組み立てるだけのことです。 また、こういうことはHTMLの版数にかかわりますから、対応していないブラウザをどうするかとか客先にどういう提案をするかという議論ができないと使い物になりません。 HTMLについて「学び終わってます」なんていう認識では、おそらく使い物にはなりません。XHTMLの十分な理解が前提として必要です。 Web開発というのも、おそらく思われるようなイメージでは存在しません。 これは「システム開発」あるいは「アプリケーション開発」に属するものです。 たまたまそれをWeb技術でやるだけのことです。 Web開発を、ポータル開発作業と思うのも勘違いです。 要するにyahooだとかinfoseekのようなサイトを作る仕事と言うわけではありません。 部品調達システムのようなものを開発するのに、Web式で開発する場合があります。 また、勤務管理システムみたいな場合は、自宅からも入力可能というように考えたらどうしてもWebになります。 業務システムがWebで設計されるのは珍しくありません。 昔から、システム開発には外部設計と内部設計という考えがあります。 外部設計は、データ設計とか画面設計にあたりますので、画面設計の部分がたまたまWebだとHTMLになるだけのことです。 たとえば自動車開発みたいなところに就職するとして、「シャーシ磨きだけをしたい」という希望が通ると思いますか。 初心者はそれだけをさせられるかもしれないけど、いろいろやってもらう前提でないと誰が雇いますか。 今できるかどうかは別として、PHPやJavaやPerlやRubyができないなどというのはプロになったら許されません。 当たり前ですがDBを扱えなければいけませんから、最低限SQLの熟練は必要です。 javascript知りませんなんていうのはスタートラインにもつけないことです。 新入社員に小手ならしということでHTMLコーディングを依頼する程度のことはあります。 が、HTMLコーダなどという職種が存在しないことがおわかりでしょうか。
派遣業ということなら、離職率が目安になりますよ。 人材に合わせた派遣先とのマッチングができてないとか うまいこといって人を集めるだけでいい加減なマネージメントのとこだと、 辞めていく人が多いですから。 といっても、それも公表してないか… いまは、IT技術者は人材不足ですし、 派遣法の改正もあるので、あまりにアコギなところは減ってきてる気がしますが 匿名サイトに社員の愚痴が転がってるので、参考にしてもよいかもしれませんね。 （匿名ですから全面的に信用するのもどうかと思いますが）
NEのキャリアアップは確かにあまり聞きません。 ですが、同様にPGだけできる人間のキャリアアップも聞きません。 キャリアアップする人はPGもNEもでき、 かつ要件定義等もできるSEです。 そしてSEに営業力が付くと独立になります。 NEしかできないのであれば当然給与も増えませんし キャリアアップも見込めないでしょう。
HTMLとJavsScripｔだけで作れるサイトには限界がありますが、 それでいいのであれば、そこまでで充分です。 しかし、Webサイトをシステムとして構築できるようになりたいなら ・HTML ・CSS ・JavaScript (jQuery含む) ・PHPかPerl ・SQL は必要になるでしょう。 ＃なお、HTMLやCSSの理解が必要なのは、たとえプログラム面からといっても、 ＃HTMLを知らなければ、プログラムでどういうHTMLを生成すればよいかわかりませんし ＃CSSを知らなければ、表示上の不具合が起きた時の原因解析ができないからです。 あとはサイトの規模や用途や　開発者のスキル次第で、 例えば、大規模開発だとJAVAサーブレットやJSPを使ったり、 RubyやPythonを使うこともあるし、 業務アプリ系のパッケージソフト使うとそのパッケージの専用言語も使うこともありますし バックヤードシステムとのI/Fの関係でC言語でCGIを作っているという所もあるでしょう。 （言語の種類や技術のトレンドを追いかけるとキリがないので、自分の要求次第でだんだんと） 幸い既存のサイトのHTMLやCSSやJavaScript はブラウザ上からソースが読めるし PHPやPerlで作ったCGIもソースを無償配布しているところがが沢山あるし、 この程度は作れるようになりたいなと思うソースを読んでみて なにやってるか理解できるようになるところを目標に学習を進めてはどうでしょう。 （逆説的に言えば、それが理解できなければ、それと似たようなものは作れないということになりますから）
フリーのソフトは、確かに高機能のものがありますけど、使えるように環境を整えるには、それなりの知識が必要となることも多いです。 また、ソフトが正常に動作しても、その後の維持管理作業も必要です。 大企業だと、それができる人材がいるかもしれませんが、高い給料の正社員に、インストールやそれ以降の維持管理の作業を行なわせるよりも、外部の会社にお任せしたほうが安上がりという判断をすることも多いようです。 さらに、フリーソフトには、さまざまな制限があったり、セキュリティ上の問題もありえます。 大手会社としては、トータルで考えたら、有償ソフト・サービスを使うほうが安上がりで、安心できるって判断することになるわけですね。 もちろん、外注するお金の余裕がない中小企業は別でしょうが・・・。
難しそうですね…私ならキレて投げ出します(笑) でもテストがまともに行われていないというのは致命的ですね。 新しくテスト要員を雇う必要がある、そう上の人に主張するしかないかも知れませんね。 仕様通りに動くかどうかを確認するだけでなく、改善案も出せるように、「デバッグチーム」「テストチーム」ではなく「品質向上チーム」として。 テストに必要だからという理由で、最低限のドキュメントを作成させる事もできるかも知れません。 ユーザー目線のドキュメントを、品質向上チーム内で作成できるかも知れません。 開発者目線でデバッグ・テストできるように、プログラマが一人は欲しい。 ドキュメントの作成ができるように、DTP経験者が一人は欲しい。 作っているシステム回りに明るい人物、たとえば経理プログラムなら経理マン、Webサービス等ならWeb技術者等が一人は欲しい。 上記「一人は欲しい」と書いたが、得意不得意、向き不向き等があるので、できれば2～3人雇えればベストだが…。 過去に「品質向上チーム」に居た事がありますが、技術じゃなくてセンス、あんまり体系化できるものじゃなくて、個人の経験に頼らざるを得ない分野なんですよね… ある程度パターン化はされているけれど、当然ながらあらゆるケースに応用できるものであるハズはなく、このケースに当て嵌められるかどうかという判断は必要だし、システム毎に新しいテストケースを生み出すセンスが問われたり… どういう人物なら向いているかと言うと、性格が悪ければ悪いほどいい。 嬉々としてプログラマが嫌がる想定外のデータを読み込ませ、不具合を発生させまくって「ウォッシャ!!」とガッツポーズを取りながら、不具合報告に記入するような… 仕様書を見ながら「う～ん、この仕様だと、ここがやばそうな気がするな…」と想定しながら、意地悪くその辺りをつつき回って「ほらほらヤッパリ、ウキキッ」と喜んでいたりとか… 私は性格が良かったので、心苦しく思いながら、そういうプログラマが嫌がる事をしていましたが…ウキキッ 閑話休題 そうやって、品質向上チームを作って、品質向上チームのチェックでOKが出ないと出荷させないというルールを作って、品質向上チームを後ろ盾になぜそれをやらないといけないかと開発チームを説得、場合によっては直さないと出荷させないと強硬策で ま、もしすべてが上手く行けば…という空想レベル、妄想レベルの話ではあるけれど ・他プロジェクトチーム案件のテストも、そのチームで受けるようにして、全社的に品質向上を図るようにして、予算を確保(1案件のために新しく数人を雇うより、複数案件の品質向上が図れるとなると各案件毎の費用分担は減る) ・チーム名を「品質向上」のような名前にすることで、反対意見を出しにくくする(品質向上のためという錦の御旗を立てる) ※当方が過去に在籍したのは、Quality assurance(QA、品質保証)チーム ・システム全体を(下手をすれば、作成しているプログラマ本人よりも)広く知ることができ、新人を鍛える場として機能する(テスト・デバッグ作業を続ける事で、システムの内部仕様まで詳しく把握、結果的に使えないプログラマをクビにしてQAチームから開発チームに移籍というケースが多々あった) ・別チームにすることで「こんなもんレビューの域に達してない、最低限のチェックは済ませてもってこい」と付き返せる、「レビューして欲しければドキュメントを持ってこい」と言える…かも？(私はそれに近い事を言ってた) そんなところを説得材料に、なんとか上手く上と交渉してみてくださいな
こんにちは。 何でもかんでもハッキリさせたがるかというというのとは少し意味合いが異なると思いますが、経験的に曖昧なもの、曖昧な状態が苦手だという人は多いのかもしれません。プログラミングはロジカルかつ効率的に物事を組み立てる作業なので論理的に物事を考え、理不尽な考えや意思決定を敬遠する傾向はあるように感じることはあります。 それが良いこととか悪いこととかいう気は全くなく、ただ、そういう傾向を感じるという話です。 ご参考になれば幸いです。
大手の開発会社で働いています。 会社の規模によっても大きく仕事内容は異なります。 また、新人の頃と経験を重ねた後では、大きく仕事内容が変わってきます。 ここで書くと長くなるので、探してみると、以下のシステムエンジニアの方が書いたサイトなどは参考になると思います。 http://systemenjiniaevery.web.fc2.com/ 上記に付け加えると、労働時間が長いので残業代でお金は貯まりますが、ハードな職業ではあります。 IT奴隷という言葉もあるほどです。 あと、長くやっていくなら、技術だけではなくお客さんと話したりメンバーと協力して仕事を進めていく事が必要なので、コミュニケーション能力を磨く必要もあります。
開発系の職種で採用も担当しています。 会社によって基準はまちまちですので参考程度にどうぞ。 （１）について 誤差の範疇です。 （２）について 基本情報や応用情報で扱う計算要素は小中学校の算数・数学のレベルです。 （３）について 両方不要とは言いませんが必須ではありません。プログラミング言語は機械と会話する言語ですので、人間が使う言語体系とはちょっと違います。数学も四則演算が基本ですしそこまで高度な計算能力は求められません。 （４）について どこまでできて習得かという側面はありますが、基本文法を学ぶだけであれば大差ないです。 VBAはプログラミング言語といえばプログラミング言語ですが、用途が極めて限定されるのでVBAがわかります！と言われてもプログラマとしての働き口は極めて少なくオススメはしません。 （５）について 資格は目安ですね。資格を持っている人よりも経験がある人を採用することは多いです。可能な限り覚えた言語を使って色々なプログラムを作ってみるとかはしておくべきかと思います。 （６）について SEの定義自体が曖昧なので職務的にも曖昧です。会社によって違うともいえます。 システムの要件を考える人、お客さんと調整する人、実際のプログラムに落とし込む設計をする人、インフラの設計をする人などなど一つのアプリケーションを作るとしても色々な役割があります。どれができてSEとかプログラマとかいう事は一概に言えない部分です。 分担がどうというよりは、やってみたい仕事って何？という部分を明確にするのが大事ですね。定年近くなっても生涯現役で一線でプログラムを書き続ける人もいます。一方で若くして開発を設計管理するような仕事を目指す人も居ます。 もし何でも作れるプログラマになるんだ！という将来像を持っていらっしゃるようであれば、とにかく覚えた言語で色々なものを作ってみてください。そういう経験は就職の際に主張できる立派な経験だと思います。逆に、学校の授業で習いましたレベルでは経験のうちには入りません。
　私自身は、年齢もいっており、プログラミングからも離れてしまっておりますが、最近ちょっとまずいかなと感じつつPHPをやり始めてます。Web系は未経験で、なかなかそちらに時間を割く余裕がないため、3日でできるシリーズか秀和システムの本をやりました。 　ただ、これまでの経験上、この手の本をやっても実務には到底というのは、ご質問者様もご理解あるかと思います。 　やはり綺麗なコードで、実システムのを見るのが最も近道と私は感じてます。 　これまで開発されてきたものからピックアップして、簡単な機能に絞った教材をご自身で作った方が、即戦力とまではいきませんが、教育としてはよいのではないでしょうか？。 　今は開発会社ではなく、ユーザ側にいることで、新人に対しては、Excel等の教育を行うことがあり、社内でよく行っているデータと業務内容に照らして、各種の操作や関数を網羅した独自の教材を作って、教えております。
Q、Accessを独習するテキストを探しています。 A、学習ステップを決めれるかどうかが分岐点かと・・・。 　Access　の参考書は色々と出ています。ですが、それらを何冊か読んだところで、結局は、初心者レベルで終わるかと思います。それよりも、Accessのヘルプ文を手がかりににされて独習されるのがセミプロに接近する一番の近道かと思います。 ＞Access 入門 で検索すると ・Access 入門 ・Access VBA 入門講座 ・Access SQL初心者入門講座 ・Microsoft Access 実践入門 マイクロソフトアクセスで作るプログラム などがヒットすると思います。 　仮にこの４つのサイトは完全に制覇するとしても、その前に、Accessのヘルプ文を３度は読むとテストをされたが良いと思います。あくまでも、攻略対象はAccessのヘルプ文であって、４つのサイトは、その単なるお手本。そういう位置付けがよいというのが私の個人的な見解です。 PS、当方はコンピュータ関係業界とは無縁の素人。 　確かに、独学にてAccessを習得するのは簡単ではありません。個人的には、毎日、毎晩Accessのヘルプ文を読んでノートにまとめて時々テスト。一周目は、ほとんどPCの電源を入れない座学の日々。一通り読み終わるのに２ヶ月。でも、さっぱり理解できないままに終わりました。二週目は、少し、PCの電源が入る日々が増えました。二回目を読み終わったのはさらに２ヶ月後。おぼろげにAccessというものが判った気がしました。そして、３回目は、上記４つのサイトと同じ学習を並行しつつやはりローラーで読破。これに費やした時間も２ヶ月。毎日最低でも３時間の独学でした。さて、その後の６ヶ月は結構スムーズに進んだと思います。Accessを手にした一年後、私は、全店の事務員を集めて新販売管理システムの講習会を開いていました。要は、急がば回れかと思います。
左上のリンゴマーク＞システム環境設定＞ユーザとグループ＞ログイン項目 ここにアプリを追加すると自動起動になります。 Yosemiteの場合が上のような感じになっているかと思います。 OSバージョンによって若干違うかもしれませんがだいたい近いところにあるはずです。
上司の方には技術力はあるんでしょうが、マネジメント能力が不足しているんでしょうね。 小規模な環境だと、マネジメントする立場の人も手を動かして開発をしなければいけなくなるので、どうしても開発に傾注してしまうとマネジメントが疎かになってしまいます。 また、上司の方の技術力が高く、一人で何でもこなせてしまう場合陥りやすい問題ですね。 一番の原因は環境です。 マネージャーにマネジメントに集中できる環境が用意されていないから、マネジメント能力が育たないんです。 会社としてもっとマネジメント業務を主体に仕事をするよう仕向けていかなければ変わらないでしょうが、小規模な所だとマネジメントだけに人を裂く余裕が無いのでなかなか変わらないかもしれません。 会社としてどこまで危機感を持つか次第ですし、仕事量が増えて規模が大きくなり人員が増えていくとちゃんとマネジメントしないと仕事が回らなくなり、結果としてキッチリ管理するようになって行くでしょう。 どこでも小規模なところは似たようなモノだと思います。 そういった環境について行けず辞めてく人は多くいますし、そういった環境に馴染んでしまって一人で何でもこなせるけど後輩を育てられない人になっていく人もいます。
ぐぐってみましたが、Adobe Reader 単体で、ウィンドウサイズをや位置を固定することはできなさそうですね・・・。 例えば、参考URLのようなユーティリティアプリからAdobe Readerを起動したり、 VBScriptやPowerShellを使って起動後のサイズを調整できるかもしれません。
こんにちは。 私みたいな仕事のことですかね？笑 職員200名、パソコン100台、小さな職場ですが、楽しくやっています。 ＞ある程度プログラミングができるなら採用してもらえるかもしれないと考えています。 私の部下になりたい場合、必要なのはスキルは当たり前として、同じ事を何回聞かれても何回でも教えられる強い精神力と、新しいことを自分なりに理解しようとする心構え。 そして、一番大事なのが、相手に寄り添うと言う優しい気持ち。 これらを兼ね備えているのであれば、プログラミングなんか出来なくても採用します。 ただ、私は厳しいですけどね。 こんな考え、世間一般では通用しないかな？ 現場は、即戦力が求められますからね。 ただ、どこへ行っても今(事務方)よりも大変になることだけは間違いないでしょう。 それでも良いのなら、チャレンジしてみてください。 人生、後悔はひとつでも少ない方がいいですから。 頑張れ。
確かに少し間があいているので難しいですね。 ただ志望動機の欄は職種に対してではなく、応募する会社に対しての志望動機を書く欄なので、応募する会社さんに合わせて考えられてみてはいかがでしょうか？ 会社の経営理念や事業内容をみて、改めてPGとして貢献したくなった、等と書かれると良いかと思いますがいかがでしょうか？
9時から18時まで拘束であれば、裁量労働制とはいえませんね。 きっちり8時間抱き込んでいますから、みなし労働時間なんて入り込む余地がありません。 フレックスタイムという考え方をする場合、コアタイムという考えをしますね。 8時間の勤務が必要だけど、朝10時から16時までをコアタイムとする、というのは、その時間は居てくれということです。 外から電話がかかってくるかもしれないし、事務処理でも必ず居てくれる時間というのを確保するわけです。 これは当たり前で、Aさんが4時から12時まで働きたい、Bさんは13時から22時まで働きたい、とやらかしたらAさんBさんは一緒に仕事ができないことになります。 ときに、客先に直行直帰するような仕事をしている場合は、客先のルールに合わせるのが当然です。 ですから、報告は実質でやらなければならず、客先に裁量労働制を要求するわけにはいきません。 毎日8時間ずつ働いたことにしてくれよう、なんていう契約はありえませんから。 どうも契約自体が不思議です。 SEの契約は、普通、基準時間と超過判断時間を決めます。 基準時間は、いろいろなことがあって月により時間は大小があるとしても、最低この時間は働いてくださいという約束です。 超過判断時間というのは、ある時間以上の労働をしてもらった場合に追加料金を払うという判断ラインです。 基準時間を割った場合は、請求からその分を引き算しろという話ですし、超過時間は払ってくれるという話です。 私の知っている範囲でいうと大体基準が140時間、超過判断時間は200時間というところが多い。 これは、客先の人事の考え方でいうと、原則200時間以上は働いてくれるなということです。 超過料金が惜しいというのではなく、過労で体調を崩されると雇用側の問題になるからです。 割り算してもらえばわかりますが、もしひと月が20日と考えれば、基準は毎日7時間であり、超過ラインは毎日10時間を超えた場合です。 休憩時間をいれれば、拘束時間はこれらに1を足した数字になります。8時間から11時間と言うことになります。 これはごくごく当たりまえの、誰が聞いてもおかしくない計算法です。 もちろんプロマネ補佐みたいに行く場合は超過判断のラインはなくなります。その代り基準の料金が高くなる。 ラインの場合、超過料金は180時間で発生することもあります。 これは10時間拘束になりますから、もし工場なんかだったら始末書ものになります。 180時間というのは、その10時間拘束になります。 だから、最低それだけの時間をキープせよというのはきわめて不自然です。 もし超過判断時間が180時間なのであれば、それ以上働いてはいかんのです。 それを割るなという指示は間違っています。 もしそれを条件として発注していたら発注側の問題です。 もし、基準時間が180時間なのであれば、通報可能な不当雇用行為です。 問題のないことなのでしょうか、じゃなくて、思い切り問題です。 どういうところに転職してもそんな労働条件のところはめったにありませんから、転職を考えられたらどうでしょうか。 転職なさるときはきっと通報してください。
軽く設計書とおっしゃっていますが、何設計書の話をしておられますか。 まさか基本設計書のことをおっしゃっていませんね。 もしバグ程度の対処で基本設計書に対応しなければいけないなら、全体の工程がおかしいと言うことになります。 設計工程が、きっちりブレイクダウンしていないということです。 たとえば、何かのパラメータを保持していなければならないという対処だとしましょうか。 このとき、もし基本設計書に記載が必要ということであれば、基本設計にそのパラメータが関係する記載があると言うことになります。 だったら、そもそもその基本設計書はろくなものではないという判断をせざるを得ません。 基本設計からやり直しです。 普通は基本設計は、どのような動きをするシステムを目的とするということしか書いていないはずですから、細かい動きなんかは指定していません。 プログラムのバグというのが影響するのは、外部設計書以後です。 そのパラメータをDBに保存しておかなければならないということになるなら、外部設計書を修正する必要があります。 パラメータの更新タイミングが間違っていたのであれば、内部設計書の記載の修正になります。 もっと生のプログラムレベルの話、初期化を忘れていたとかインスタンスを生成させずに参照したというような話は詳細設計書になります。 また、バグという見方はよくない。不具合、です。 テスト工程でよく「バグ発見」と言いますが、これは間違いですよ。 テスト者は「おかしい」と思うのです。それをレポートするのですから、不具合報告です。 不具合の中にはバグも入っていますが、そればかりではありません。 「非バグ」をきっちり見て整理できないようなプロジェクトは究極の信頼は勝ち取れません。 テスト者の操作ミスもありますし、システムへの誤解で指摘を間違えることもあります。 このときは「指摘ミス」と言うことになります。 こういう指摘ミス、を捨てて記録しない人がいるのですが、明らかに間違いです。 指摘ミスをしたというのは事実ですから、それがあるならマニュアルに記載することを検討すべきです。 ユーザー様もやる可能性があるわけです。 指摘ミスが、なんとなくシステムをこう考えてしまうというものであれば、これは基本設計上レビューをしなければ行けないことになります。 指摘はあったが「仕様通り」という場合もあります。 たとえば入力は常に数字であるというエリアでアルファベットを叩いたらプログラムが落ちたとかいうことがあったとします。 仕様ではそこは数字でなければならない、だから数字以外の入力をしたらユーザーのせいだ、と言えますか。 これは、たとえばHTML5で画面を作っていたら入力チェック属性を与えてガイドをすべきではないですか。 プログラム固有画面なら、そのエリアでのキー押下で['0'..'9']以外は受け付けないコンポーネントを作りnumentryというクラスにすべきではないですか。 そうすると、内部設計書で、そのクラスを登録し、部品として品質を確保すべきでしょうね。 いいでしょうか、開発の場合は、フォーカスおよび開発スパンを考えてください。 一体どこの工程に影響している事象か、を考えてみるのです。 なんとかしなければいけないけど、技術的にかなり困難なものを「バグ」なんていったら、いつまでもバグが片付かないということになり、出荷認定がおりません。 法律的な問題がからんだり、機械の機能自体の問題にからんだものであれば、基本設計より前の「要求仕様」での再考慮が必要と言うことになります。 redmineは大変に優れたツールですけど、これを導入することでみなさん思考停止になる場合が結構あります。 コミットがローカルでもできますし、一種のメモみたいな感じでちょこまかやってサーバーコミットをすると、ソースは直っているけどいったい何、という話になります。 もちろんコメントも入れますけど、脈絡が不鮮明になるんです。 何かを直すとき、影響範囲がどの設計書にあるか、を記録するようにしないといけません。 全部の工程が同じメンバーでなされるなんて言うことは普通ありません。 上流の、要求仕様や用件定義と決定したのは、技術者ではなく経営陣や営業が主であったはずです。 ここにはコンサルタントだとか社外の協力会社の人たちも議論に加わったかもしれない。 工程はどんどんブレイクダウンしていきます。そしてその都度、メンバーは変わっていきます。 当然品質上の評価で、この工程はもうクローズしていいから次に行くことを許す、という判断はなされています。 プログラムをメイキングする部隊が、基本設計はおかしいから直そうという権限はありません。 でも基本設計で考慮いただきたいこととして発見があるなら、報告として上げる必要があるでしょう。 そのため、困難ではありません。こういうことをしてください。 バグ表ではなく、不具合発見表、というものを作ってください。 何日の何時何分に、誰がそれをどういうことをしているときに発見し、現象はこうであるという記録です。 必ず記載するルールにします。 画面がこうだとか、データがこうなっているというのであれば、その状況がわかるエビデンス資料を添付します。 そして、エビデンスに番号をふり、不具合発見表の中に、その番号を記載します。 各行には「判断」と言う項目と「対処方針」「対処チェック」と言う欄を作っておきます。 さらに「影響範囲」という欄を設定します。 この影響範囲は、実際の工程で作られている設計書を並べてください。 「外部設計書影響範囲」「内部設計書影響範囲」というように並べます。 そして、これらは、範囲を記載する欄とチェック欄の2列構成にしましょう。 開発のSEがその不具合表を見て、バグと判断するかそうでないかを記載します。 バグであれば、担当者と一緒に判断し、どこが悪いからどうなおせばいい、と記載します。 直すとした場合、どの設計書に影響するかを記載します。 プログラムをいじくるまえに、この記述は必ず行います。 よかれと思ってやったらデグレードが起きた、なんていうことを少なくするようにしたいのです。 この影響欄はブランクは許しません。影響しないのであれば”－”を入れるように決めます。 そうすると、考慮した証拠になります。 ”－”でない不具合は、修正後、影響範囲のチェック欄にチェックを入れなければいけません。対処をしたという記録です。 このルールで影響範囲のチェック欄以外がうまった不具合は、プログラムを操作してもかまいません。 往々にプログラマは先に手を動かしてしまいます。 また、人に発見されたタイプミスでも、たかがケアレスミスだとして記録したくないという神経が働くのが通例です。 不具合記録にしてしまえば絶対に記録されています。 分析をしたときにタイプミス程度なら「軽微」ということになり、やった当人が責められるなんていうことはなくなります。 もうお分かりだと思いますが、この話を進行させるには役割が一つ必要です。 「ライブラリアン」です。 redmineが勝手に暴走して誰も全体像がわからなくなるようなトンマなことが起きないように、品質監督としてライブラリアンは必要です。
普通のコンセントは１５００Wが上限です。 ブレーカーから来ている線も２０００Wまでです。 ブレーカーも２０A(２０００W)で切れるようになっていますので、 ブレーカーを３つ使い、別々のブレーカーを使うしかないですね。 上限を超えたら切れるだけでなく、火災の危険もありますので 電気屋さんに来てもらって工事することが必要です。
jgawkって、16bitアプリじゃないですか？ Windows7/64bitでは、32bitアプリは動きますが、16bitアプリは動かせません。 32bitアプリであれば、どこのフォルダーにあっても動作します。 32bitの日本語が使えるgawkなら下記はどうでしょうか？ http://www.vector.co.jp/soft/dl/win95/util/se376460.html 解凍して、gawk.exe だけあれば動きます。
>>サーバとネットワークの運用、保守の経験しかなく この経験だけでは、当たり前のことですけど、Linuxサーバ構築の仕事は無理でしょう。 >>恥ずかしながら将来のイメージが見えなくなっております。 昔勤めていた（今は無くなった）会社に勤めているころ、派遣先でサーバ・ネットワークの運用・保守をやっていた後輩が私に言いました。 「先輩のようにソフト開発の仕事をしていないので、今までも、この先も、開発技術が身につくことありません。ネットワークの運用・保守をやっている僕は、将来が不安なんですけど、どうしたらいいですか？」 なんて質問を受けたことあります。 たぶん、「そうだね。違う派遣先に行きたいと希望するか、この会社を辞めることかな？」なんて答えたような気がします。 その後は、彼に会うこともなく、会社が不況になったとき、私はリストラ同然に辞めたのですが、彼も私と同じ時期、あるいは、もっと前に辞めていた気がします。 >>合わせてキャリアアップのアドバイス 会社の仕事で、キャリアアップのための経験・技術習得ができればいいのですが、それが無理なこともあります。 その場合、仕事の後、あるいは休みの日に、時間と金を使って、独学で勉強する、あるいは、セミナーとか、専門学校などで学ぶしかないと思います。 ちなみに、私の場合、Linuxサーバ構築の勉強をするために、何冊かの専門書を購入し、有償のレンタルサーバを契約し、さらにドメインを取得して、メールサーバ、Ｗｅｂサーバなどの構築の勉強を自宅で行いました。 その他にも、何冊ものＣ＃の書籍を自腹で何冊も購入して、自宅でサンプルプログラムを打ち込んだりして勉強していました。 強い意志があれば、会社が終わったあとに、自宅で勉強をすることもできると思いますが、なかなか細切れ時間では学習は難しい気もします。 私の場合、リストラされたあと、転職がうまくいかず、長期の失業期間があったので、その失業中に、上記のような勉強をする時間ができたように思っています。 (でも、キャリアアップできていませんが・・・)
こんにちは一緒に解決していきましょう。 私はCCNPを持っていますが、資格と実機の操作全く別物だと考えています。 実際に練習したいのであれば、中古のルータやスイッチ（3000円程度から）で練習する、またはNetwork Visualizerで練習するのがおすすめです。 練習できるものが揃ったらネットで　”OSPF設定”　のようなキーワードで検索し、実際に構築するのがいいと思います。 資格は操作とはあまり関わりはないと申し上げましたが、仕事仲間と操作手順的なことを話し合うときに飛び交う専門用語の理解に役に立ちます。 また何か質問がありましたら補足してください。
日経ネットワーク
一週間で参考書を全て記憶する気合で読みましょう。 この手の合格の可否はまず記憶です。 何度も何度も読んで丸暗記です。 寸暇を惜しんで下さい。 辛いとか考えている暇は無いはずです。
＞apacheはIPv6でしかリッスンしているように見受けられないので ＞なぜv4で接続できているのか不審と感じています。 ということは、本当の質問は「IPv4で80番ポートでの待ち受けがnetstat -anで表示されないが、IPv4で80番ポートにアクセスに行くとApacheにつながるのは何故か？」ということでしょうか。 ＞IPv6表記の方はIPv4のリッスンも含んでいるのかなぁ？と疑問に思いました。 それで合ってると思います。 IPv4とIPv6両方で全ポートで待ち受けているとnetstatはそういう表示になるようです。 httpd.confで、Listen 80 でなく、Listen 0.0.0.0:80 と書くと、IPv4だけ待つので0.0.0.0:80という表示になります。
>>現時点で一番の課題は、サイトの構築であり、実際に外注するのであればおおよそどれくらいの費用が必要なのか、 なかなか、この費用算出は難しい気がします。というのは、ＷＥＢサイト構築技術の進歩は著しく、以前なら３ヶ月かかったような構築作業が最新技術を使えば、１週間とか３日で完成するということもあるからです。 でも、最新技術を使うことで開発期間が大幅短縮するってことは、システム開発を請け負う会社としては、見積費用の大幅減であり、それは、売上減＝利益減になってしまうということです。 以前、ネットで目にした話ですけど、勉強好きなＳＥさんが「今回の開発には、この新技術を使いましょう！開発期間が短縮できます！」と上司に提案したら、「当社の売上が減るような提案はするな！！」と拒否されたそうです。 まあ、そういう最新技術の採用はリスクも大きいものとなります。 日本企業は、発注側も受注側もリスクを嫌います。 「なにか技術上のトラブルがあって工数が増えたとき、おまえは責任とれるよな？」 と上司に言われたら「古い技術で開発します・・・・」 と技術者は、言うしかないでしょうね。 さらに、日々の仕事に追われている技術者は、そういう最新技術なんて勉強する人は少数派だったりします。 ということで、普通に業者に見積もりをお願いするなら、旧い技術を使うとして1000万円～くらいではないでしょうか？ >>また無謀がもしれませんが、自分自身でサイトを構築するとなると、どのような言語が必要なのかも併せて教えていただきたいです。 サイトの構築は、コンピュータシステムの知識と技術を結集した「総力戦」だといえます。 ですので、４，５種類の言語を習得しているのは当然として、それ以外にもデータベースやＷＥＢサーバ、そして最も重要なのがセキュリティ関連の知識・技術のマスターです。 つまりは、多数の知識・技術が要求されます。 四則計算を覚えて、微分・積分からオイラーの定理が理解できるようになるのに、天才的な方なら短期間で済むかもしれませんが、凡人なら、多くの時間が必要になります。また、文系の方なら一生かかっても無理かもしれません。 それと同様に、素人が自分でサイト構築できるようになるには、同じような期間と努力が必要になり、場合によっては達成不可能な方もいると思います。
>フィルターかけるとしたら、ひとつひとつフィルターかけていくしかやはりないのですかね？？ >実はbのほかに、1000くらいの名簿もあり、同じように3000の中からさがしださないといけないのです。 　そういう事情なのでしたら次のような方法は如何でしょうか。 　名簿aやb名簿がそれぞれ何というシート名のシートに入力されていて、名簿aのシートやb名簿のシートのそれぞれ何列に業者名が入力されているのかという情報が無いため、仮の話として、名簿aがあるシートのシート名がSheet1、b名簿があるシートのシート名がSheet2であるものとし、名簿aのシートではC列、b名簿のシートではB列に業者名が入力されているものとします。 　その場合、まずSheet2においてb名簿の表に隣接している使用していない列(ここでは仮の話としてG列とします)の1行目のセル(G1セル)に次の様な関数を入力して下さい。 =COUNTIF(Sheet1!$C:$C,$B1)>0 　次に、Sheet2のG1セルをコピーして、G2以下に貼り付けて下さい。 　その上で、フィルターを用いてG列がTRUEとなっている行だけを表示させ、その状態でデータをコピーして、別のシートに貼り付けると良いと思います。 　尚、G列を使用するのはあくまで一時的なものに過ぎず、作業が済んだ後はG列の関数を消去してしまっても構いません。 　只、もしも後で同様の作業があるのでG列の関数を残しておきたいという事であれば、文字色を白に設定しておかれると良いと思います。(表示を非表示としてしまったのではフィルターが使えません) 　それと、名簿aのセルに対して切り取りや挿入等のセルの配置をずらしてしまう操作が行われますと、G列に入力した関数と、参照先であるB列のセルとの位置関係が狂ってしまい、フィルターの掛かり方が狂ってしまう恐れがあります。 　ですからもし関数を残したまま使用する様な場合には、G列に入力する関数を次の様なものとしておいた方が良いと思います。 =COUNTIF(Sheet1!$C:$C,"="&INDEX($B:$B,ROW()))>0
「アクセス用共通ユーザ」は、ローカルで　Administrator　でやってましたが、名前を変えてました。中には　Administrator　という名の　Administrator　でやってください。みたいなのがありました。 それ以来、Administratorsグループの　YamuYamu（例えば）を作って管理してました。 ここで言う「アクセス用共通ユーザ」は、パワーユーザーからネットワークユーザーが登録できたかも。 弁護士と一緒で、これが分かると「シスアド」とかとれるし、飯が食えるんで、マイナスの数だけシスアドが居る、と認識してください。
ドメインだとオブジェクトになっているのですよ。 ワークグループだと、単に紐をひいて結んでいるだけです。 実体はありません。 ドメインは実体があります。ですから全員が手を放してもインスタンスが存在しているのです。 その実体はどういうカタチで存在しているかというと、IPアドレスを入口としたサーバーです。 DNSは、ドメイン名とIPアドレスの順方向、必要な場合は逆方向の調査を有効とし、IPアドレスがそのままドメインのサービスであるという構造を作ります。 どんな相手でも、DNSごしに、どこに受付がいるかを訊いてやってくることになります。 ドメインは自分に対しどのようなアクセスが行われたかを覚えています。 何かが起きたとき、ドメインは調整ができます。触るモノがありますから。 不正アクセスの類も、記録できるし、抑止もできます。 非常に安全です。 隣同士を糸電話でつなぐのと、電話局を置いて会話するのと、信頼性危険性安全性という観点でみたら一目瞭然です。 なによりも、ドメインは「管理できる」のです。こんな大きなメリットはありません。
この辺でも読んでみたら？ ●「プロになるためのWeb技術入門」 ――なぜ、あなたはWebシステムを開発できないのか http://www.amazon.co.jp/dp/4774142352 ●Web開発の基礎徹底攻略 (WEB+DB PRESS plus) http://www.amazon.co.jp/dp/4774158658
ランサーズとかでしょうか？ http://www.lancers.jp 趣味であったり経験不足で実績がないのなら、営業代行エージェントとかに頼んでどこかのプロジェクトに格安単価で仕事させてもらうとかになると思います。
Linuxの人ならおわかりのことなのですが、VBAなんて所詮Shellです。LinuxでShellができない人間なんていません。 VBAなんて、習った人なんてあんまりいないと思いますよ。 本を読んだひとは割合いるでしょうけど。 ・どのような経緯でVBA言語を使用するようになったのか？ そんなもん使用したいとはおもいませんでした。 けど、こういうことです。 お客様がExcelやAccessやWordやPowerpointで作ったという資料があるのです。 そしてそれをちょっとどうかしたいというような相談があります。 Excelというとプログラムっぽく見えますからWordで例をひとつ言いましょうか。 Windowsのあるシステムのマニュアルを作った。 ものがすでにある。 書いた人間はひとりではない。 でもひとつにマージした編集済みのDOCにしている。 索引とページ割りの目次をつくるためマージした。 相当なページ数になっている。 索引を作ってみてわかったが用語の不統一がある。 たとえばライターによって、Windowsだったら本来「ログオン」としなければいけないものを「ログイン」と書いているやつがいる。 「LOGIN」「Login」「login」「Logon」と書いていることもある。これをカタカナの「ログオン」に統一したい。 その人間だけが書いたものであれば、責任としてライター本人に直させるのだけど、マージしているから、他人の分をいじられると困る。 なんとかならないか。 そういう相談を受けたら、ちゃんとしたプログラム組むなんて手間も金もありません。 だったらVBAでやるしかないのです。 ・どうやってVBA言語を習得したのか？ こういうしょーもないことを現場でばちばちやっているうちに、いつのまにか習得したということになるのです。 本当の開発ならVisualStudioで、きっちり設計書を書きながらやらないといけません。
プログラマーになりたいのなら、プログラミングが必要な仕事を見つけていっぱい実践してください。仕事で覚えることが一番で、一つの言語に慣れるとだいたいの言語は使えるようになりますよ。 言語の習得は、昔から自分で学ぶしかないようです。私の会社では、外部のスクールなどが開催している言語習得コースに新人などを通わせたことがありますが、できる人はそういうコースに行かなくてもできるようになるし、できない人はいくら教育を受けさせてもダメですね。生まれつきの素質や適性の問題が大きいようです。
回答No、２の補足コメントに対する回答です。 ＞基本的には、提示された仕様書と動作が異なる場合のみ、瑕疵担保責任として無償修正が必要になるという認識でよろしいでしょうか。 そうです。 つまり”動作が異なる”ことを証明するのは、回答No.２に記した”入出力のサイズと件数、各項目の属性の他に取り得る値の範囲及び相互関係が明確にされていること”になるのですから、異論はないですよね。 ですから、仕様書の受け入れ段階で検査することが、お互いの利益にもなります。 そうすればスキルもアップします。
電圧が約２倍　ですが電流値　約半分なので　OKです 100ｍを380ｖなのでとなりの他のと平行に並べたり　結束バンドで止めたりしないようにすればよいでしょう。　　 コンクリート　や　土の床に置いた状態　　工場の鉄骨の金属部分C型チャンネルなど　の上に這わすと　30ｍA位の漏電ブレーカーだと　落ちる　場合もあります。 注　漏電ブレーカーは（たとえばの例で）30ｍAを使った場合　30ｍAを超えたら落ちるのではなく 30ｍAで確実に落ちる様出来ているので　15ｍAでも落ちる場合が有ります。 線が長いので中空（浮かせて）で線の取り回しをする方が良いです。 アップトランス　か何かで　電圧を上げているか　変電設備で　電圧を上げているのでしょうか？ 通常AC200Vから　アップトランスなどを使っても　起動時の電流値　等により　直入れ起動は　出来（禁止）ないのでAC200ｖで5.5Kw以上（AC380ｖでも元がAC200ｖであればそこが2倍の起動電流が流れるので）スター　デルタ　起動をしないといけない事に成っています。 自家変電所が有ればこの限りでは有りませんが　点検整備責任者（一般的には　保安協会に委託）　の確認が必要です
No.2です。 たびたびごめんなさい。 前回のコードは1行ずつずれていました。 ＞Set myRng = Union(myRng, Cells(cnt * 10 + 1, "G").Resize(2)) の1行を ＞Set myRng = Union(myRng, Cells(cnt * 11, "G").Resize(2)) に変更してください。 どうも失礼しました。m(_ _)m
ツールというのは道具です。 たとえば、心臓付近の微妙な手術をするとしますね。 神経や毛細欠陥をうかつに切断したりしないためには、従来経験豊富な意志の指先の職人芸に頼っています。 もちろんこういうベテラン医師が見つかって手術してくれればいいです。 でもこの医師も医学生時代は素人だったし、そんなにうまく手術なんてできなかったでしょう。 言い方は悪いけど、何度も失敗をしたりして、段々指先に技術が備わっていったと思われます。 経験用の実験台になって協力した患者さんもいたわけです。 ここで、血管にふれているか神経に触ったか感知してランプをつけてくれたりするピンセットやメスが発明されたら、やや未熟な医師でも事故を起こさないで済みます。 昔の医師だったら患者の肉体を経験実験台にしてしまったことが、このツールのおかげで防止できるようになったのです。 これがツールの本質です。 薬品開発においてはどうでしょうか。 これこれこういう構造の高分子が存在したら薬剤として有効だろうという確信があって設計するとき、試験管でいきあたりばったりの実験を繰り返すなら延々と時間がかかります。 そのとき、それをうまく仮想設計でき、仮想実験までできるツールがあったら開発にはものすごい力になりますね。 だけど、そのツールは「ガンを直す薬」「認知症を予防する薬」「難病の何かを軽減する薬」なんていう発想自体はできません。 こういうものを希望するなら、ガンはどういうときに発生するのか、どうすると増殖するのか、何をすればブレーキをかけられるのか、という基礎研究があってその考えを議論展開した上で仮想薬品を思いつくのです。 その、思いついた薬品はすぐに設計できる、というなら、研究と思考だけに集中できます。 なかなか実現できないから、思想が正しいかどうかもわからない、というのが従来の研究者の悩みだったのです。 簡単に人体実験をしてよいものか、という話が今IPS細胞というものの展開で片付きだしました。 また、こういうことをするとガンが増殖するというような実験もIPS細胞でできます。 これらもツールです。 ただし所詮ツールは、「何をしたいのか」「何を確認したいのか」という方向がはっきりしていないと、単なるおもちゃにすぎないという側面があります。 質問者様は、ツールができたら病気が片付くから、プログラマだけで医療が進むと思っておられる口調です。 これは車があって運転手がいたらどこにも行けるという話と同じです。運転手は行きたい先はないのです。 どこに行ってくれと言わないと、近くのコンビニにもいけません。
キーエンスKV-5500/5000/3000シリーズユーザーズマニュアル ＞ラッチリレー　 383/566ページ 「停電保持設定（ラッチ）」 「停電保持機能は、電源が切断された場合もデバイスの内容を、」 「内蔵バッテリーによって電源切断前の状態のまま保持する機能です。」 ＞コントロールリレー　 525/566ページ 「コントロールリレー（CR0000～CR3915）は、CPUユニットの動作状態の確認、 「各内蔵機能の設定やモニタなどができます。」 CRを使ったサンプル 369/566ページ ＞データメモリ 379/566ページ 「数値データを格納できるデバイス(16ビット)」
>>多分用意されているListViewやGridViewなどは使えないのでしょう。 そんなことはないです。今回のレベルなら、画面に表示したいデータをＣ＃のコードを使って作り上げて、その結果をListViewやGridViewに表示するようにすればいいだけだと思います。 とはいえ、初心者にとっては、なかなか先の長い道のりであるのは、確かかもしれませんね。 まあ、同様のことはMSのデータベースソフトのAccessでも、昔のボーランドのDelphiでも、オープンソースのRubyonRailsでもありました。これらを使うと、ちょいちょいと操作をすれば、フレームワークがデータベースを読み込んで、結果を画面に表示するプログラムを作ってくれます。でも、 「すごく簡単にプログラムが作れたなあ。でも、ちょっと表示方法・操作方法が気に入らない。ちょっとだけ直したい」 と思ったとき、そこから先は、使われている言語の勉強、フレームワーク自体の勉強、そのフレームワークが決めた動きを出し抜いて、自分の思い通りの動作をさせる方法を探さないといけないことになったりします。こうなると、腰をすえて長い勉強の始まりとなります。 さらに勉強が進んで、それらが理解できたとして、さらに細かな要望を実現したいとき、質問者さんの言われるように、自分の希望する動作をさせるには「用意されているListViweやGridViewなどが使えない」と判明することがあります。 わたしもＣ＃でWindowsアプリを作っているとき、GridViewを自分の思うような動作をさせるには、機能が足りないことに気がついたことあります。このときは、GridViewのソースコードを追いかけて解析し、自分用のGridViewカスタムコンポーネントを作って対処しましたけど、元のコードが長くて時間がかかりましたね。 そして、私が勉強したとき、「Ｃ＃によるカスタムコンポーネントプログラム」とか、「プログラミングADO.NET 2.0/マイクロソフト公式解説書」が役にたちました。
会社規模やスキルによって異なりますが、一般的には人月あたり50万～100万ぐらいというのが多いかと。
基本的には企業次第です。ですから下記の事項は普遍的ではないものの、こういった傾向、あるいは社内規定があるという程度にお考えください。 まず院卒修士のほうが有利な点を挙げると、 1.採用枠。特に研究開発部門だと旧帝及び早慶のみという所もあります。 2.給料。これはかなり多くの企業で社内規定として見られます。 3.2によって年金支給額にも差がつきます。 4.これも2と関連するかもしれませんが、結婚できる可能性も大卒のほうが高いですね。ただしこれは男性に限った話です。女性は逆に大卒より専門学校卒のほうが未婚率が低くなっています。 専門学校のほうが有利な点は、 1.投資額（学費や時間という意味）が少ない。 2.早く社会に出られます。 こんなところでしょうか。ただ専門学校の有利な点はそのまま将来の不利益に繋がるので有利と言っていいかどうかは微妙です。
弁護士に相談する。 所詮法律のプロはここでは回答しません。いるとしたら自称だけです。 (資格持ちのプロが食っているネタを無料でってありませんから)
こんばんは！ Sheet1のシートモジュールにしてみてください。 尚、Sheet2のA列の表示形式は「日付」にしておきます。 Private Sub Worksheet_Change(ByVal Target As Range) If Target.Address = "$A$1" Then If IsDate(Target) Then With Worksheets("Sheet2") .Range("A1").Insert shift:=xlDown .Range("A1") = Target End With End If End If End Sub ※　一応Sheet1、A1セルが日付と判断できるデータかどうか確認するようにしていますが、 実際は数値の場合はすべて反応してしまいます。m(_ _)m
echo $array[1] -> 1,230 は下2桁が00になっていないので1,200が正解だとすれば、以下のようなプログラムでどうでしょう。 ========== $array =array( 123, 1234, 12345, 123456, ); foreach ($array as $num) { if ($num >1000) { $num =floor($num /100) * 100; } echo number_format($num); }
その方とは個人契約ではないですよね？ であれば、事情を話し担当を変えてもらえば良いかと。
http://www.keyence.co.jp/seigyo/#1 KV-5500/5000/3000/1000シリーズ 命令語リファレンスマニュアル（共通命令編） １６２／８９４ページ キーエンスでもやっぱりマスターコントロール「ＭＣ」 その他、ジャンプ、サブルーチンコール ＦＯＲ－ＮＥＸＴもちゃんとあります ＞やりたいことは、工程1開始→工程1完了→工程2開始→工程2完了→・・・と 本件は実プラントの制御なのか？ それともただ単なる学習なのか？ で、回答も変わってくるのですが 実プラントなら現在導入されてる設備のプログラムの基本パターンに合わせるのが原則 多くの会社ではＰＬＣプログラムだけでなく設備基準と言うのが有って 制御回路（ハード回路）とＰＬＣラダーもセットで標準回路化されてる そうでないと保全課員が困るから 基本原則は保全課員が理解出来る回路にする事 機械が故障するのは土日夜間盆正月が多い 平日昼間に都合よく壊れてくれない 会社に拠ってはＭＣもＪＭＰもＣＡＬＬも禁止 単純ラダーのみで応用命令禁止と言う事例は少なく無い プログラムステップが多少長くなろうとも プログラムが読み易いのが最優先 初心者が勝手に作ったＭＣやＪＭＰほど迷惑なものは無い それなりのベテランが練りに練ってやっと使い物なる 機械は原点からしかスタートしないとは限らないから 自動運転途中に異常停止してからの復帰、再スタート それらを考慮したＭＣを使う ＭＣとは簡単なようで実はかなり難しい
学校の宿題ですか？ ここで答えを聞いて丸写ししてたら先生はわかったものとして次に進むよ。 わからないならなぜ先生に聞かない？ 学校でも会社でも、まず、聞くことが大事。 会社だったら億単位の損害が出るような仕事もあるからね。
No.2です。 念のため追記します。 契約書上に「業務請負契約」や「業務委託契約」とあっても、請負だけとは限らず、準委任の場合もあります。 各条項の瑕疵の扱いや時間精算などの記述で判断することになります。 基本契約書に請負と準委任の両方の記載がある場合は、個別契約書の内容で請負か準委任か判断することになります。 また、「請負」という文言が実にややこしいのですが。 民法では請負と準委任は別の扱いがされていますが、派遣法では請負に「民法の請負」と「民法の準委任」の両方を含ませています。 （派遣法では派遣かどうか、派遣でないものは「請負」という感覚です。） 民法上での用語、派遣法での用語、契約書上の文言、現場の実態、それぞれを理解しないとたまに混乱してしまう人もいますね。 >“受注会社の社員のみ” これはセキュリティ（情報漏えい）対策で課している場合と、行政から派遣認定されたときに多重派遣にならないようにしているのでしょうね。 >実際の作業はSESで、時間清算、現場から指示を受け、瑕疵担保もなし、といった実情になっています。 SESは準委任とみられると思いますので、発注側からの「指示」というものの程度でしょうね。 残業指示など勤務に関わるようなものは即アウトでしょうね。 作業内容に関するものも現場の受注側管理者を通さずに行うとアウトっぽいです。 単に作業について話し合っているのと（断ることができる）、一方的な支持（断ることができない）でも違うでしょうし。 間に入る会社の管理者が現場がいない場合などは、どのような言い訳ができるかによるでしょうね。 派遣社員と変わらないとなると、アウトですね。 発注先の就業規則に従わされているかどうか、仕事を進めるうえで他社の人員として独立して動けるかどうかなど実態次第になるのだと思います。
大きな違いの一つは、競争的資金の配分機関であるか、そうでないかでしょう。 科学技術振興機構(JST)は特定のテーマについて研究開発を募集して、有望な提案を採択しては補助金を出すという事業を行っているようです。一方、産総研(AIST)はそのような事業はしていないようです。逆に色々なところに応募しては研究資金を獲得しているようです。
やりたいことがいまいち見えないので回答付かないんじゃないですかね？ # というかLinuxのカテゴリで質問された方がまだ回答付きやすいかと。 cronなんかで定時的に実行したいのか、複数の作業コピーをまとめて処理したいのかなどなど、全く不明です。 # 定時的にcommitとかは目的が不明ですな。updateなら判らなくはないのですが…。
機械語命令って、人体に例えると「筋肉１つ１つに、脳から緊張、弛緩の命令を出す」のと似ています。 脳から「緊張しろ」とか「弛緩しろ」とか闇雲に命令しても、コップ１つ持ち上げる事はできません。想定外の筋肉が予想外の動きをするだけです。 「どこの筋肉を、どのタイミングで、どう緊張または弛緩させるか」が理解できていないと、コップを持ち上げる事は出来ません。 しかも、コップの中身をこぼさないようにする為には、手応え、視覚からの情報など、フィードバックが必要です。 フィードバック無しで闇雲にコップを持ち上げたら、持ち上がってもコップが傾いて中身がこぼれてしまいますし、コップが紙コップなら、中身が入ったまま握りつぶしてしまうかも知れません。 「視覚からの情報を処理する場合」は「網膜が受けた刺激」を、どこか、脳細胞の記憶野に移して「一時的に保存」しないといけません。 じゃないと「網膜が受けた刺激」は、何処にも留まらず、神経細胞の興奮が収まったら「忘れ去られて」しまいます。 視覚情報（網膜が受けた刺激）をどっかに保存するには、転送命令でデータをレジスタに入れるのと同様の「転送して保存」が必要。 コンピューターも同様で「転送して保存」が必要なので「転送命令」があります。 「筋肉を今の半分動かす」には「どれだけ動いたかを、感覚的に２で割って」と言う「演算」が必要。 「筋肉を今の２倍動かす」には「どれだけ動いたかを、感覚的に２倍して」と言う「演算」が必要。 内部レジスタを右にシフトすれば「２で割ったのと同じ」になります。 内部レジスタを左にシフトすれば「２倍したのと同じ」になります。 つまり「シフト命令で、２倍したり、半分にしたり」が可能になる訳です。 以上を踏まえて。 「２倍」を２回やれば「４倍」も出来ます。 元の「１倍」のデータをどっかに転送して取っておいて、４倍したのと足し算すると「５倍」も出来ます。 ５倍したのを更に２倍すれば「１０倍」になります。 「１０倍」が可能になれば「１０進数演算」が可能になります。 ２つの入力ポートから「２」と「６」を受け取り、２を１０倍して２０にしてから、もう一方の６を足せば「２６」を求められます。 すると「２つの入力ポートを、十進数２桁の入力ポートとして使う」って事が可能になります。 こうやって「ミクロ的な１つ１つの動作」を大量に組み合わせて「１つの大きな動作」をさせる訳です。 それが「機械語プログラミング」です。 なので「１つ１つのバラバラな動作を組み合わせて、全体として何をさせるか」が重要になります。 全体が見えていないと「何をどうしたらいいんだ」って話になっちゃいます。
>「読み込むのに必要なスキャン時間」ですが，ここでの例では最大でも1msecとなると思ってもよいのでしょうか． 1000スキャン/secを唱っている以上、そうなるはずですね。 >スキャナは常に走らせっぱなしになるので，2msec以上スキャナの前にバーコードがあれば確実に読み取らせることができるのではないかと考えています． あくまでスキャナにとって最適な読み取り環境を常に用意出来たとしたならば可能だと思います。しかしメーカーはその読み取り回数は保障しますが、読み取り精度は機器毎（メーカー毎）に異なるとは思います。また、非接触リーダーの場合は外的影響により簡単に読み取り不良が発生しますから、システムとしてはベリファイやリトライの機会がシステムとして組むならば必要になってくるのでしょう。 結果、「読み取り回数は多いが、その分読み取り精度も悪い」と言った事も起こりえる可能性もありますから、最終的には実機を作った際に調整をするのでしょうね。
>それ以外の15976点は内部リレーとしてしか使えないと。 >そういうことで間違いありませんか？ ＣＰＵユニット単体だけで使うならその通りです ただ、ＫＶ３０００をＣＰＵユニット単体で使う事はほとんど有り得ない 普通はＩ／Ｏユニットを接続して使います http://www.keyence.co.jp/seigyo/kv_special/unit/io/ コッチならＣＰＵ単体でもそれなりのＩ／Ｏ点数があります http://www.keyence.co.jp/seigyo/p_plc/kv_nano/menu/3240/ 更に増設Ｉ／Ｏユニットもあります http://www.keyence.co.jp/seigyo/p_plc/kv_nano/menu/3241/
何を「成功」の基準にするかによります。 30代半ばでWebプログラミングを始めて、その後 O◯W◯veを起業したという人もいるので... その人を「成功」の基準とするのであれば、成功 するのは、かなりの難関と言えます。 逆に、1プログラマーとして定年まで勤め上げる のも結構困難です。 多くの場合、ある程度の年齢、経験を経た時点で 若手や新人に対する指導・教育的役割を与えられ る事になり、自身が現役のプログラマとして活動 する機会は次第に少なくなっていきます。 正社員なら、管理職等への道もありますが、派遣 社員にはそういった管理業務は求められないので 年齢が高くなるにつれ雇用先は減っていきます。 そういった点はプロスポーツ選手と同様。 ・他の職種に転職する ・経験を生かしコンサルタント会社に転職・起業 する ・自身がソフト開発会社を起業する 等の道を選択する事になります。 どちらにしても、成功＝プログラマになって大儲 けする、と考えるなら成功するのは、かなり困難 な事であるのは間違いありません。 ＞勉強方法を教えて頂けないでしょうか。 勉強の基本はマニュアル又はサンプルプログラム 目前の開発中のプログラムにどういった機能及び 処理が必要かを洗い出して、それを実現するのに どのコマンドを使えば良いかマニュアルから選び 出す。 プログラムの数をこなすにつれ、一々マニュアル を参照しなければいけなくなる回数が減っていく。 ..といった勉強方法。 新しい言語やOS、ハードウエア等の勉強をするに しても、マニュアルの目次等の記述内容から概略 としてどういった事ができるか、または良く使い そうな所は把握しますが、他は必要になってから 参照する事にしています。
30年何回位のON/OFFの繰り返しか分かりませんが、コア　の摩耗が有ります。 コイルの所を分解するとE型の薄い鉄板の組み合わされたコアが上下1組で構成されE型の両外側が通電により密着します。 E型の中央（中心部分）は少し隙間が空いています。この隙間の問題だと以前富士電機に教えてもらいました。 環境によりこの部分で錆が発生すると完全に密着しないのでブ～　と唸りが発生します。 よってペーパーなどで錆を落としたら当然E型の接触面がすり減ります。 何万回かのON/OFFの衝突で摩耗が起こります。　よってスイッチに動作させた回数をカウントする装置もオプションで有るくらいです。 E型部分3点が当然当たるものと思い　問い合わせた所　中心の部分は隙間を作ってあり、電源がOFFになった時 早く切れる様に隙間を作ってあるので　この隙間寸法の技術により性能が変わってくるそうです。 復帰までMAX15秒では　スプリングのへたり　Eコア部分の摩耗が一番考えられるのではないでしょうか。 私どもでは機械の設置環境上　ボディの結露による漏電　　錆による唸り　が多く発生しております。 代替えは確認しておりませんが本体取り付けは合うのでは（長孔などで互換性が有ると思いますが　ご確認を、 ただ　操作コイルの配線については　右上と左下で有った物が　国際規格で　上側に成ってしまったので 場合によっては電線が届かなくて延長工事が必要になります。
cronで実行するスクリプトで判定→メール、とはできませんか?
ダブルクォーテーションをお使いくださいな。 SELECT A "<A>" FROM TEMP
若くて時間があれば自分でも落ち着いて何か狭い分野でもロボットに親しみたいですね。 小学２年生にはちょっと難しいけど、読みこなして作る小学生はいます。 （私自身、家業が電気絡みだったし） ロボットはセンサーと制御のワザが集まったと言うか複雑に絡み合ったものです。 紹介２つ [1] 超入門! 付属ARMマイコンで始めるロボット製作 http://shop.cqpub.co.jp/hanbai/books/48/48231.html [2] Arduino　ってハードウエア寄りの一部の人の間でホットです。 FPGA版Arduino!!Papilioで作るディジタル・ガジェット http://shop.cqpub.co.jp/detail/1572/ 大切に興味の目を育てて下さい。 変な遊びを覚えるよりよっぽどいいです。 老いに染まっている老人より
＞visual Basic（タイトル） 実行時エラー　-2146959355（8008005）サーバーの実行に失敗しました 例：「エラーコード 80080005 - サーバーの実行に失敗しました」 原因：「COM + アプリケーション」 で指定されている別のユーザーアカウントで実行する場合は、新規ユーザー用のメモリが割り当てられません。そのため、プロセスを開始できません。 ＞とあるアプリケーションがあります アプリケーション名がわからないとレジストリを変更する方法での対処ができません（レジストリキーが違う可能性） 別のローカルユーザーアカウントを作成 参考URLは「エラーコード 80080005 - サーバーの実行に失敗しました」の例に過ぎません。
8.0系でも数値を返す generate_series は使えるようですので、連番を生成して開始日に足すようにすれば良さそうです。 SELECT '2014-09-01'::DATE + num FROM generate_series(0, CURRENT_DATE - '2014-09-01' - 1) AS tmp(num); 蛇足ですが、8.0.2がリリースされたのは9年半も前ですし、その後、セキュリティアップデートも何度も出ていますので、もっと新しいバージョンを使われた方が良いと思いますよ。
非接地回路を設置するのが、押ボタンの役割ですね。 非接地ですから、チャージしているという事態がわかりません。 電位は回路内の相対的な関連だけで見られるだけですから、クローズした回路ではおかしくなく見えます。 そもそも漏電というのは外に対して電流が流れることですから、クローズしたらわかりません。 漏電は起こらない、と、計算式でいえば言えるのです。 しかし、外から見てアンバランスな電位になっていれば、それは何かの折にこぼれるかもしれません。 そういうカタストロフィが漏電です。 雑音部品ということばがあって、高周波伝導を考えるとき重大ですよね。これおわかりですね。 R側もS側も何をやっているかわかりませんけど、チャージがあっても、線上は同電位のはずです。 もし、別の回路が近傍にあった場合そこと大きな電位差があったら、はずみで漏電が起きます。 ですから、設置した接点とつなぐ、という押ボタンを押すと、もし回路とベースに電位差があれば、ランプが付きます。 漏電する可能性がここで実地検証されたわけです。 簡単にいうとそういうことですが、おわかりでしょうか。
工場の長として「工場の成長」がミッションでしょう。 工場の成長とは、工場の売上・利益の拡大、製品品質の向上、労働環境の改善、従業員満足度の向上、等々。大きくは社会貢献なんてのも有りますね。 これらをブレークダウンして、タスクに落とし、それぞれの計画を立てて実行する。勿論自分で全てやる訳じゃなく、長としてマネジメントするんです。
マイクロフィルムでしょう。大まかに言えば10センチ四方のフィルム１枚に100ページ程度の印刷物の内容が書き込まれています。 このフィルムを専用の拡大鏡のようなものに載せて、目で見て該当データを探し出します。もちろんハードコピー（印刷）もできます。 小さなフィルムと言えども、長年のデータですから小さな金融機関でも数十万枚以上といったフィルム量になりますし、手作業で探すのでボタンひとつの操作、マウスの操作で取り出せるものとは大きく異なります。 フィルムも営業店保管ではなく事務集中センターのようなところで保管していると、即座に検索というわけにはいかないのです。
>考え方やヒントなどをお願いします。 ループ処理。 まぁオブジェクト指向で考えるなら >String[] name = {"大悟", "琴音","勇輝","葵","綾乃","和樹","凛","愛花","結愛","孝太郎"}; >int[] score = {74,70,88,82,96,64,80,61,72,79}; 得点管理用の別クラスをまず作ろうよ。
　SEをしてます。 　まず、給料の少なさとありますが、就業経験何年ですか？。 　年齢毎の御社の給与カーブは把握してますか？。 　その年齢ならどこの会社でも大抵の職種でも安いのは普通ではないでしょうか？。 　また、メーカのように退職金が多い企業などは、年収が低い企業もありますし、公務員でも下級となれば年収は安いですが、定年後の年金が手厚いのでさして金に困らないと言う業種もあります。 　この点、給与に起因するならば、将来考えて行動されるべきと思います。 　 　ソフト業界は、昔と比べて、仕事は少ないですよ。あっても一時の商売か、IT系のような自社サービスをしているベンチャーとかで、数十年後どうなっているかわからないような企業が多いとも言えます。 　しかし、SE側からみれば、NEの人は、コンスタントに仕事はあるなあと感じてます。 　ネットワークエンジニアの場合、他職種から転職してくる多くの方が悩む事は、帰属意識が失われる事のようです。 　他社常駐で仕事するのが普通です。自社でする場合、社内SEになるでしょう。しかし、多くは他社内業務です。 　資格や手に職という幻想で来る方多いですが、システム関係の職種の多くは、まったく業界を知らない方にお話するならば、派遣と同じと私は言ってます。
クラス内の変数・関数にアクセスするには $this-> を付けます print $this->b; http://jp2.php.net/manual/ja/language.oop5.basic.php カテ違い　今後は [技術者向]コンピューター >プログラミング > PHP になさるとよいでしょう。
すみません。例に余計な文字列binがくっついていました。下記のとおり読み替えてください。 ＮＧ例： java MethodAdd9 2 * 3 ＯＫ例： java MethodAdd9 2 "*" 3
　大抵、年齢が上がるにつれ、管理職になる（させられる）のが普通かと思いますが、IT系職種の場合、組織が惰弱な企業は多いので、管理職と言っても名目上のものであり、実質現場作業員とかわらず働いている人もいれば、現場を希望して辞退する方、残業代ほしさに辞退する方とおります。 　 　当方、ベンダSEをしてきており、現在は社内SEをしておりますが、開発はほとんどしておらず、ある種のサポート作業が多くなってます。 　運用監視の職の方と接することはありませんでしたが、ベンダ時代のとある会社では、ヘルプの部門がありましたが、年齢高い方はおりませんでした。 　同じIT職種でも、SEなどに比べれば、給与は安いですし、正社員の募集は少ないと思いますので、あえて選択して付く人は、一時的な派遣希望者や旦那さんがいる方が多いように思えます。職種としても、経験は長ければスキルの差が大きくなると言う職種でもないですので、わざわざ高い年齢の方を雇うことは無いと思いますが、派遣か契約のような形での募集はあると思います。よって、必然的に別職種に異動か転職されるのでは？と感じます。あるいは、英語が出来る人なら年齢関係ないというのもあるかもしれません。 　運用監視の場合、最近同級生と連絡が取れまして、彼は大手メーカでそのような仕事をしているようで、下請の方を使ったりもしておりますが、相応に年齢高い方も現場で働いている所もあると聞いてます。但し、その場合、汎用機やメインフレームなどの古い技術のシステムなようです。 　 　ところでITILはご存知でしょうか？。 　その辺読まれていると、年齢云々以前に、スキルとしての知識を現場に利用して運用する何がしかがわかるかと思います。 　すべての企業がこれどおりに実施しているわけではありませんが、計画や実践するには、それなりの経験やマネジメントは必要かと思います。若い方全員ができないならば、相応に年齢高い人が取り纏めをすると言えるかと思います。 　と色々書きましたが、サポート業の中には、私のような社内SE職もあります。 　ヘルプの範囲は、社員の場合もあれば、顧客の場合もあります。運用監視は、自社のシステムの監視ですが、昨今クラウドが登場してからは、その仕事がなくなりつつある社内SEの方も出だしてきていると思います。 　ただし、社内SEの場合、募集はかなり狭いです。まして募集年齢が低い企業が多いですし、事業会社になるので、別職種に異動ということもありえます。 　一つ不安であるならば、紹介会社のサイトを検索してみるのが良いです。 　どんな職でも年齢上がっていくと、募集は少ないか、高能力の方を募集してます。 　サイトによっては、募集年齢が書かれている物もありますので、その年齢ではどのような方を募集しているのか検討ができますよ。
いろいろ意見がありますが、私は英語はITでは最低必須の能力だと思います。 それなりに、ではないと私の仕事上は言っておきたい。 私の仕事はITコンサルタントです。 もちろん使わないで済む仕事についているITの人もいるでしょうからその人たちを否定するわけではありません。 TOEICいくつ以上という話ではありません。 TOEIC900でもネットワークの議論ができなければどうにもならんのです。 ということは、通訳を雇ったら大丈夫、ではないです。 だいぶ昔ですが、ある開発で私がこの方式ではできない、と日本の会社に言ったと思ってください。 ドイツの会社社長が飛んできて私と議論したいと言ってきた。 彼が日本に輸出して商売をしようとしていたから。 ここで日本の会社が雇ったドイツ語の通訳が入ったのですが、ぜんぜん役に立たない。 私は学生時代ドイツ語をやったことはあるので片鱗的にはわかるけどニュアンスは自信がないのでとりあえず任せた。 ところどころで私がビッテ、とか割り込みかけて冷静になろうやと身振りをしました。その程度です。 セマフォの問題を語ろうとしたら、割り込んで仕事をする効率というような言葉を通訳が出してきました。もう意味が飛んでます。 OSのタイムスパンの問題につなごうとしたら、時間割の話にされた。 私も怒ったけど、ドイツの社長も怒った。先方の言ったことも変に訳されたことがわかったから。 ドイツ人は日本語は全く知らなかったようですけど、通じていないことはさすがにわかります。 悪いけど英語で話をしようや、と先方が言ってきて通訳無視で議論を始めました。 あとはすんなりで、相手も頭から火吹いて怒ってきたのですがこちらの言うことを理解できたので悪かったと言いました。 英語が通じるならお互いに変な通訳要らなかったね、と言い合って、それは英語ですからドイツ語通訳にもわかったでしょう。 通訳なんかあてになりません。知っているものがそのコトバを使えなければだめなのです。 オープンソースというものがありますが、これらは全部英語で説明が書かれています。 翻訳プロジェクトなんていうものを立ち上げてドキュメントの日本語化をするひとたちは居ます。 でも、週に2度もアップデートが行われるようなものでどうやって追いつきますか。 学会論文はほとんど英語です。 オブジェクト開発だとかクラウドというのはすべて最初は学術論文で読みました。 マウスというデバイスが実現しそうだという話は学術論文ではなく業界紙だったと思いますけどやっぱり英語でした。 Xeroxの話でした。 オフショア開発というのがあります。 これは必ずしも英語でないところが重要です。 中国語とかベトナム語が必要になります。 このとき、「できない」からスタートしたら始まりません。 できるようにならなければだめなんです。 大体先方に日本語ができるSEが立ち上がってブリッジをしようとしますが、このブリッジを無条件に信じるのですか。 信じる人間も日本にはたくさんいますけど、相手の思うようにされていますね。 外国語はマスト事項であり、あったら便利という話ではありません。
まったく違うスキルになる。 まず資格を挙げよう。 http://info.tenshoku-se.com/shikaku/se-shikaku.html 国家資格だけでも以下がある。 ・ITパスポート ・基本情報技術者 ・応用情報技術者 ・ITストラテジスト ・システムアーキテクト ・プロジェクトマネージャ ・ネットワークスペシャリスト ・データベーススペシャリスト ・エンベデッドシステムスペシャリスト ・情報セキュリティスペシャリスト ・ITサービスマネージャ ・システム監査技術者 民間資格だって星の数ほどある。 次に、金融と通信を挙げよう。 金融は、フロントエンド技術と基幹システム技術、ついでにワークステーション技術も入れておこうか。 通信は、ネットワーク技術、インフラ技術、ついでに電気工学も入れておこうか。 共通する技術なんて、DB操作くらいだ。あとはかすりもしない。 また仕事においては、発注側か受注側か開発側か、それでも違う。プログラム言語もやまほどある。全部を手に入れるには、それこそ40年くらいかかるんでないかな。 もしあなたから「SEを目指す」という言葉しか出てこないなら、その考えを捨てたほうがいい。なぜなら「俺は人間として生きる」と言っているような抽象的なものでしかないから。 どんな技術を身につけたらいいかって？あなたがどこまで何を知っていて何に興味があるのか知らないが、とりあえずLinuxとJavaでも触ってみたら？
少しご質問の趣旨とは異なると思いますが、ご質問内容に違和感がありましたので回答いたします。 ＞サーバー構築、ネットワーク構築など上流の仕事 これらの業務を「上流工程」との認識を持っていません。 通常、企画・設計工程を経て作成されたデザインシートに従い設定・構築する業務を指すものと思います。 システム開発の工程分類で言えば「製造工程」ですので、アプリケーション開発の プログラミングに該当する業務との認識です。 我々の思い描く「インフラエンジニア」の担当する上流工程としては、 ・システム企画－－＞インフラ要件の取りまとめ。要件定義。 ・システム設計－－＞運用設計に基づくネットワーク要件の具体化。 （ネットワーク機器選定、キャリア選定、セキュリティ対策の具体化、調達・構築手法の選定と具体化、費用対効果の測定、等） ・運用行程－－＞問題の解析とチューニング。陳腐化対策の検討。 なお、「サーバー構築」に至る工程の範疇は、現在ではアーキテクトまたはアプリケーションエンジニアの守備範囲になっていると思います。 アプリケーション（あるいはシステム）が稼働する環境としてのハードウェア要件は、 システム要件と不可分であること。また、近年、キッティングツール等の充実により、 導入の為の設計工程の負荷が下がっている事。それに加えて、環境構築をハード、ソフト （ミドルウェア）および運用ノウハウまで含めた「パッケージ商品」としてベンダーが 提案する事例が増えている事などが理由です。 「ネットワーク」に関しては、未だハードウェア寄りの技術が大半を占める為、 いわゆる「電気工事事業者」が主たるベンダーとなるケースが多いと思います。 以上のことを踏まえ、私の周りの「インフラ構築」を担当するエンジニア （敢て「インフラエンジニア」という職種名をつかいませんが）で優秀と思う方々は、 (1)「電気工事事業者」または「通信キャリアの保守部門」をルーツとする企業に所属している。 (2)ＳＩｅｒでも自社センターを持つ企業のセンタ運用に関わる業務を担当している。 に多くいる印象があります。 なお、ご質問にある「運用監視」、「ヘルプデスク」業務は、職種が違う事から、 インフラ構築に関わる業務のキャリアパスとはならない場合が多いと思います。 経験上、現在の「インフラ構築業務」は特に専門性の高い分野ですので、 未経験からの業務参入が難しい職種だと認識しています。 私の知りうる限り、新卒、あるいはそれに準じる世代で、上記(1)(2)の事業者に 所属することがキャリアアップの近道だと思います。 以上、ご参考にならないかも知れませんが回答いたします。
他人に訊くときは、すべてのソース内容と、エラー内容を記述するようにしてね。 とりあえずコンパイル通るようにしよう。 (1)先頭に/*がない (2)for(i=0 の iが定義されてない (3)displayAsterの{が閉じられてない eclipseあたりのIDEをつかうと、ちゃんとそういうエラーとして教えてくれるよ。 まぁがんばれ。
平均流速で計算とすると、流量Ｑ＝π／４✕０．１５＾２✕２０＝0.35343 m3/s　ですよね。 この流量で流せば、管中央部の流速は、20m/s より少し早くなるでしょうが。
インテルアーキテクチャじゃないので無理です。 調べてませんが、おそらくAS/400上のDB2でなくても、Windows上やLinux上のDB2でもテストできるのでは？
誰か答えるだろうと思っていたら誰もやっていないので遅ればせにお答えします。 ソフト、という考え方では一つしかないと思ってください。 あのあれ、です。 次を参照ください。 http://dotinstall.com/lessons/basic_android
相談サイトに投稿されて、何がほしいのですか。 ダメだよねーそういうやつは使えないよねーという同意とか同情がほしいのでしょうか。 そんな会社は切れ、とか颯爽とした決めつけがほしいのですか。 言いたいことが一つある。 どちらかというと私は、この話だと受注側のほうなので言いたい。 発注側としての自覚が不足しています。 1.単価が安いことを価値と考えていませんか。 2.管理ごと委託していますか 当然相見積もりはしていると思いますが、「安かろう悪かろう」という言葉を知りませんか。 1個150円のリンゴを売っているところで5個100円だったら、出来が悪いものか、腐りかかっているのですよ。 5個100円で買っておきながら、剥いたら中が茶色くなっていたとか、ガリガリで甘くなかったという苦情を言わんでしょう。 それは1番目の観点の話です。「だって自分らでは実力があるとか言っていたんだ」と反論するクライアントさんがいます。 でも、八百屋の店先で直接リンゴを見た上で買ったのなら、買ったほうの責任です。 甘いよーといわれてポンポン叩いて音を確かめて買ったスイカが期待通りでないとき、交換しろといいますか。 まあいいでしょう、交換を要求したとしましょうか。 もしかしたら別のものに交換されても同じような出来かもしれませんよ。 さあ2番目の観点です。私らはここが一番言いたい。 クライアントさんは、SEというけど兵隊だけ欲しがる傾向が強いのです。 野球は1番から9番まで順を決めた選手9人いればできると思う傾向です。 サッカーはFF、MF、DF全部で11人いれば問題ないと思う思想です。 この業界の場合、汎用機だとかワークステーションのころは、発注は組織に対してでした。 マネージャ、リーダがいて現場の人間を組織してチームで協力させていただくのが多かった。 マネージャは現場にはでませんが、責任者として本社におり、窓口をひきうけた。 リーダは現場にいて、実作業よりも人事管理、進捗管理、報告義務をおっていました。 リーダ配下にありますから、スキルの不足している人間にはそれなりの仕事を与え、適材を配備しました。 8人ぐらいのチームになり、ひとりはリーダで7人が兵隊をやったのです。 ところが最近、PC時代以後お客様に勘違いが広がり、運転手一人いればF1のレースができると思う会社が多くなりました。 「プロなんだから」と変な思い込みがあり、車の整備からコースの分析まで全部ひとりでやれるだろうと思うのでしょう。 この思いだとうまくいかない以前に、品質が観測できず管理できません。 兵隊ばかりいるチームで成果を出せとか勝てとかいわれても無理難題です。 自社に担当者がいて、その配下に下請を置けばいいや、という勘違いがあったりすることもあります。 しかし、発注側の窓口は、下請け業者のリーダではありえません。号令方はリーダではありませんから。 下請側に、自分らの会社の矜持を引き受けて制御できる立場の人間がひとり、必ず必要です。 契約状況をよく見直し、サッカーのチームを雇うときにはどういう役割の人間がどの程度必要か、という発想で見直してみましょう。 末端プログラマを二人増やすくらいなら現メンバーを一人減らしリーダSEをひとり入れるべきです。 数人ちんぴらがいて、その一人がリーダです、じゃなく、リーダスキルのある、それなりに教育を受けて実績のある人間のことです。 そういうものを発注しないといけません。 （もしそういうものを提案することができないようなら、本当にその会社が無能なんです）
http://okwave.jp/qa/q261042.html ほぼ、この回答者様のコードのままですが。。。 以下のコードはテキストボックス8個「TextBox1～8」を 「UserForm1」に配置した場合となります。 ■標準モジュールを挿入して、以下のコードを貼付 　　（フォームを表示するためだけのものです） Sub フォーム表示() 　　Load UserForm1 　　UserForm1.Show vbModeless End Sub ■クラスモジュールを挿入して、以下のコードを貼付 Private WithEvents myText As MSForms.TextBox Private myIndex As Integer Public Sub S_setText(NewText As MSForms.TextBox, Index As Integer) 　　Set myText = NewText 　　myIndex = Index End Sub Private Sub myText_Change() Const InitialFontSize As Double = 40 Dim BufWidth As Double Dim BufHeight As Double With UserForm1.Controls("TextBox" & myIndex) '★ 　　.Font.Size = InitialFontSize 　　BufWidth = .Width 　　BufHeight = .Height 　　.AutoSize = True 　　While .Width > BufWidth 　　　　.Font.Size = .Font.Size - 2.5 　　Wend 　　.AutoSize = False 　　.Width = BufWidth 　　.Height = BufHeight End With End Sub ■ユーザーフォームのコードに以下のコードを貼付 Private myTextArray(1 To 8) As New Class1 '☆ Private Sub UserForm_Initialize() 　　Dim i As Integer 　　For i = 1 To 8 '☆ 　　　　myTextArray(i).S_setText UserForm1.Controls("TextBox" & i), i '★ 　　Next End Sub ■貼り付けたコードの修正 末尾が☆の2箇所の「8」を実際のテキストボックスの数に合わせて変更してください 末尾が★の2箇所の「UserForm1」を実際のユーザーフォーム名に合わせて変更してください 末尾が★の2箇所の「TextBox」を実際のテキストボックス名に合わせて変更してください
＞VPNはＬＡＮ型サブネット255.255.255.0の申し込みとなっています。 フレッツVPNワイド側の設定は問題なさそうということですね。 ＞拠点間通信ができませんＰＩＮＧを打つとそれぞれ「　宛先ネットワークに到達できません」と戻ってきます 既に実施しているかもしれませんが、 pingコマンドではなく、tracert（Linuxなどではtraceroute）コマンドで確認すると新しい発見があるかもしれません。 間違ったppp側にルーティングされているなど見えてくる場合もあります。
＞毎回保存をかけないと、カウントアップできない状態です ならば、カウントアップした後に、すぐにＶＢＡで上書き保存させては Sheets("count").Range("AQ3").Value=Sheets("count"),Range("AQ3").Value+1 ThisWorkbook.Save
+（プラス）は文字列の結合を意味しています。 「$("ul.tab li a.selected").attr("href")」で取得した文字列の前後に、「ul.panel li:not(」と「)」を結合しています。 +（プラス）が無ければ、文法エラーです。 jQuery 以前に、JavaScript の基礎を勉強してください。
Ｎｏ．１です。 ６０は定数です。 ηはポンプによっても違うかもしれませんが、まあ０．９で見ておけば大きな誤差はないでしょう。
電気主任技術者です。 ＞電気分電盤にアースが必要なのはなぜですか？ ●分電盤にアースは必要ありません。 ＞家電自体にはアース取り付けなくても何も問題なく使えますよね ●家電機器に故障等の事故がない限りは問題なく使えます。 もし、機器に漏電があった場合に感電事故する恐れがありますので、これを防ぐために筐体をアースを施しますが、法的には水気のある場所では義務づけられていますが、そうでない場所ではアースは必須ではありません。 たとえば、洗濯機やエアコン屋外機などはアースを取り付けます。 なお、オーディオ関係でアースすることを勧めるひとがおりますが、遮蔽効果はアースとは関係ありませんので不要です。
こんばんは！ 一例です。 Sub Sample1() Dim lastRow As Long, wS As Worksheet Set wS = Worksheets("Sheet2") lastRow = wS.UsedRange.Rows.Count If lastRow = 1 Then '←Sheet2がまっさらな場合 lastRow = 1 Else lastRow = lastRow + 1 End If Worksheets("Sheet1").Range("A1:O14").Copy wS.Cells(lastRow, "A") End Sub こんな感じではどうでしょうか？m(_ _)m
URLに書かれているのはPOSTメソッドでは無くGETメソッドです。 $_GETで取得しましょう。 それと ＆ の後ろの ？ は余計では？
土地の広さや、送電線との位置関係で何とも言えませんが。 ファイナンス会社がそれも大手が軒並み入ってきています。 狭い土地で実験したければ、確か１０ｋW以上は電力会社は必ず買い取る必要があります。２０ｋW以下であれば、発電所になりませんから１００Vか２００Vで売電できます。パワコンが小さくて済みますし、策もいりません。２０ｋWを超えると発電所になります。策も必要です。また、売電するとき６６００Vにする必要があります。一気にパワコンの価格が上がります。２００～３００ｋWのパワコンでもそれなりに基礎を打ち１０フィートから15フィートのコンテナハウス程度の大きさになります。また、２０００ｋWを超えると、たちまち電力法の48条申請が必要となります。かなりの専門知識というか大手の発電所建設してる会社でないと手に負えません。また、電気の管理技術者（？正式名忘れました）が常駐するようです。それ以下は管理組合にお任せできます。それほど高くはないと思います。 自分でお金借りてまで行うよりは、ファイナンスにお任せする方がよいと思います。自分に土木作業ができればその分が安くなります。意外と土木費用がばかになりません。
>>(1)基本設計をするにあたり、その根拠となるINPUTは、要件定義書となる と思っていましたが、間違いでしょうか？ いえ、要件定義書がベースになりますね。 >>(2)検証環境を構築するにあたり、評価版を使用する事は妥当でしょうか？ 通常、ありえないでしょう。 >>(3)工数の見積もりは、どのようにすれば良いのでしょうか？ これは、いわゆるＫＫＤ法（経験、勘、度胸）となることが多いでしょう。 まあ、デタラメ・プロジェクトにアサインされたってことですね。下手に頑張る必要はないでしょう。 プロジェクト失敗しても、請け負った会社の責任です。そのとき出張って、頭を下げてもらうために、ピンハネするのが許されているのですからね。
■以下の条件で作成しました (1)シート名は以下の通りとします。 「Sheet1」：検索対象のデータがあるシート 「Sheet2」：検索結果を表示するシート (2)Sheet1のA列（番号）は重複しない番号である必要があります。 ■手順 (1)Sheet2のA3セルに以下の数式を貼付 =IF(ROW()=3,INDIRECT("Sheet1!A"&MATCH($B$1&$D$1,Sheet1!$H$2:$H$11,0)+1),IF(ISERROR(MATCH($B$1&$D$1,INDIRECT("Sheet1!H"&MATCH(A2,Sheet1!$A$2:$A$11,0)+1&":H11"),0)+MATCH(A2,Sheet1!$A$2:$A$11,0)+1),"",MATCH($B$1&$D$1,INDIRECT("Sheet1!H"&MATCH(A2,Sheet1!$A$2:$A$11,0)+1&":H11"),0)+MATCH(A2,Sheet1!$A$2:$A$11,0)+1)) (2)Sheet2のB3セルに以下の数式を貼付 =IF(A3<>"",INDEX(Sheet1!$A$2:$H$11,MATCH($A3,Sheet1!$A$2:$A$11,0),COLUMN()),"") (3)(2)で貼付たB3セルの数式をH3まで右方向にオートフィル (4)A3～H3を選択して下方向にオートフィル 　（Sheet1の検索対象の行数分オートフィルして頂いたら確実かと思います）
補足読みました。 >コンボボックス各支店のデータが本店のブックに蓄積されるVBAを目指しています。 ？？？ えーと、状況が全く理解できません。 VBAを組むにあたり、必要なことは 「やりたいことを箇条書きにできるか」 だと思ってます。 例えば、 データ元、コンボボックスの支店Aを選択。 本店ブックを開く。 本店ブックの最終行を取得する。 データ元のブックのデータを支店Aでフィルターをかける。 表示された行の列（A,D)を、本店ブックの最終行から貼り付ける。 終わったら「完了！」と表示し、本店ブックは上書き保存して閉じる。 とかです。 まずは、やりたいことを細かく箇条書きにする。 できたら、キーワード＋VBAで検索してみる。 自分でVBAの中身を把握していないと、バグに遭遇？したときに 困ることになりますので、自分で少しずつ理解して組んでった方が良いと思います。
まあ、他の回答者さんの言われるとおりの面があります。 町の社長、中小企業の社長に限らず、日経コンピュータの名物記事である「動かないコンピュータ」には、大手企業や政府関係のシステムが登場します。 ＳＥの能力が不足しているというのもありますが、日本には、仕事を依頼する側の企業にシステムの判る人材を雇用していないという問題がありますね。 米国では、ＩＴ技術者の７割がユーザ企業に勤めていて、残りの３割がＩＴ系企業で働いているといいます。 逆に、日本では、ＩＴ系の技術者の３割だけがユーザ企業で働いていて、７割がＩＴ企業（派遣企業？）に勤務だといいます。 つまりは、米国においては、開発の仕事をＩＴ業者に依頼する側である「中小企業」とか「大企業」などのユーザ組織側にも、ＯＳやデータベース、ミドルウエア、開発ツールや、開発すべきシステムについて深い知識をもっている人材がいるので、仕事を依頼しようとする業者の技術レベルを見極めることができるし、きちんとした要件定義書も作ることが可能となっているようです。それゆえ「いまさら、そんな要望はありえないでしょう！！」というような的外れな要求もユーザから出にくい面があるといえるでしょうね。 （とはいえ、米国においても、開発の失敗事例は多いわけですけどね・・・、技術が進めば進むほど、難易度の高い開発が増えるから、仕方ないのかな？？） ただし、ユーザ企業に７割のＩＴ技術者が就職できるのが可能なのは、開発が一段落したら、技術者を解雇することが可能だからだそうです。 日本では、企業が技術者を社員として雇用した場合、開発が一段落したあと、解雇するのが困難ですからね。 だから、日本では、派遣会社しか、技術者を雇わない・・・。 ちなみに、米国では、仕事上で得た知識であっても、わりとネットを通じて情報発信が可能だそうです。だから、勤めている会社を解雇されても、「そんな仕事をしていた経験があるなら、おれの会社にこない？」なんてネットを通じたお誘いが来るそうです。だから、解雇されても、転職先に困らない面があるのでしょうね。 なお、最近では、日本でも、企業の発展のためには、ＩＴ技術活用が不可欠だと理解する企業の経営者もふえつつあるようで、ＩＴ関連の要員を別枠として採用するケースもあるようです。 ちなみに、私が手作業でやっていた中小企業の業務のシステム化を、その会社の事務の女性と２人で構築したとき、コンピュータ関係の仕事を始めて約１０年が経っていました。 >>実家に戻った時に、私1人で社内SEのような業務を行うことは可能でしょうか。 イメージなのですが、SEの業務はミスを防ぐためにも複数人で行うのがベストかと思っています。 システムを維持するためには、それなりの労力が必要になりますし、病気や怪我で職場から離れるってこともありうるでしょう。だから、仕事の継続性を考えると、１人では厳しい面があるかもしれませんね。 また、情報系の学校で学ばれていたなら別ですけど、やはり、それなりの勉強をしないと難しい気がします。 しっかりした知識があれば、１日で済むことでも、それが欠けていたら何ヶ月も悩んで解決しないってことは、ＩＴの世界ではよくありますからね。
誰もいわないので仕方がないので発言します。 ひとりでも仕様、電気回路に詳しいひとが何かいうかとおもっていたのですけど。 USBというのは電気信号だと思っておられるようですが、バスですよ。 Bはバスですから。 ということは、PCとデバイスの間に会話があるということです。 これこれを報告します、わかった、つぎよこせ。 次はこれこれです。わかった。このように動いてくれ。 わかりました。今の命令実行しました。了解 というように動くわけです。 ですから１対２の関係でこういうことをするのであれば、インテリジェントハブが必要だということです。 USBのインテリジェントハブなんていま存在しませんよ。 USBハブは、ひとつのポートを多重化するだけであり、この目的には適しません。 または、2股の片方は、信号の流れが見えるだけのダム機能であれば大丈夫ですが、その場合こちらから割り込みが入らないように、ダムソケットを開発する必要があります。 開発されるのであればできないことはありませんが、汎用性をもたせるには描くシーケンス図が半端ないことになります。
ApacheとIIS、どちらのwebサーバを使っているのですか？ 手順としては 1. webページの場所の把握。 　一箇所とは限りません。webサーバの定義を見たら場所がわかります。 2. FTPサーバとFTPクライアントの把握。 　どちらのサーバにFTPサーバを入れて、どちらのサーバにFTPクライアントを入れるのか。 3.webページをFTPで使う準備 　元のサーバでFTPサーバを動かすのであれば、FTPサーバでwebページの場所が見えるように定義。 　新しいサーバでFTPサーバを動かすのであれば、新しいサーバのwebページ用フォルダを見れるように定義 4.FTPクライアントを立ち上げて、フォルダごとコピー 大きな流れは以上です。 作業手順書としては、幾らでも細かく書けますので、自分が迷わなく作業できるレベルに落とす必要があるでしょう。
おはようございます（笑）前回、回答した者です。 予想ですが、貴方は、学校を卒業して教員になった方で、現場は踏まれていないのではないか？って感じがするのですが、実際の現場ってのは、私自身も経験したもの以外は伝聞に過ぎません。一応、大きく説明しておきます。貴方が現場を多数踏まれていてご存知のことばかりだったらすいません（笑） ＣＡＤは、あくまで道具ですから、実際には、機械を作って部品を製造する訳です。製造段階になると、それが機械のオペレーションであったとしても職人技の世界です。この人達は、図面から機械操作に変えるので、図面が３Ｄであっても２Ｄであっても構わないのですが、先に書いたように、３Ｄで図面を受けて２Ｄをわざわざ書くのは、下記のような理由があるのです。１つのモデルで考えてみましょう。特に学生さんに理解させるには、身近なもので考えさせたほうが良いと思います。 例えば、時計で考えてみた場合、シチズンでもどこでも良いですが、大手メーカーは、デザインして、それをモデリングしますよね。この段階で、どのような部品が必要かが出てきます。そしてコストを積算して、製品化できるかどうかを検討します。試作で３Ｄが非常に使えるのは、この行程が物凄く速くできるからと、いちいち試作品を作らなくても分りえる部品は作らないのでコストを落とせるのです。また３Ｄソフトの中で、実際に動かすことができるからですね。特に、精密系だと干渉等が３Ｄで非常に良く分かる訳なのです。笑えない話ですが、設計ミスってかなりありまして（笑）ＳＯＮＹで、１万個のウォークマンを作ったら、ヘッドホンを指す穴が無かったとか（笑）あるのです。こういったミスが、かなり減るのですね。 さてコスト計算が終わって製造の段階になると、ほとんどの部品を下請に発注するのですが、下請企業が作っているものは、もはや時計の部品とは分らない程度に分散されます。針だったらまだ良いけれど、歯車とか、歯車に使う支えとかになると、米粒より小さいですからね。さて、ここからですが、下請け企業は、全体像を知りません。彼らの大半は、工作機械にプログラミングするのですが、このデータを３Ｄから取り出す場合、３Ｄソフトを持っていて、かつ操作できなければならないのですが、貴方もご存知のように、それなりに時間をかけて学習していないと難しいですよね。零細企業の経営者は、ほとんど職人に近い人達ですから、そんな面倒なことはしたくないわけです。 さて、大手企業が３Ｄで設計したものは、３Ｄに搭載されている２Ｄ変換を使えば簡単に２Ｄになりますが、発注依頼書を零細企業に出す時には、必ず、１つの部品に対して２Ｄの図面をつけます。ここに詳細に仕様や合格基準、あるいは精密部品だと許容誤差を指示します。３Ｄから２Ｄに自動変換する時には、下請メーカーが必要とする数値が入る訳ではないので、変換した後に、各下請に分かるように、さらに図面を描かなければならないのです。机上では、そんなの下請が拾えよ！（笑）って思うかもしれませんが、下請としては、わずかな誤差でも返品クレームになるので、『常識的に考える』なんてことは絶対に嫌なのです。すべて指示書どおり！にしたいのですよ。 要は、合理的に考えれば３Ｄで済むのだけれど、商売上あるいは能力上、まだ出来ないってことです。これが、１社ですべて作っているような場合、例えばホンダの下請といっても東証一部上場だけれど、サスペンションを設計している会社だったら、サス自体は、２つのアームの間に挟まっているだけですから、自社設計して、自社で製造することができますし、他の部品との関係があまりないですね。こういう場合は、３Ｄで完結できるのです。実際、ＣＡＴＩＡで作られています。ただ、そういう部品だけではないってことです。３Ｄが浸透しやすいのは、単独企業で設計から製造までやっている会社で、非常にたくさんの会社で製造する場合は、まだまだ３Ｄでは出来ないのです。 能力的に言えば、今の理系大学であれば、３Ｄが授業にあるでしょうし、工業高校でも高専くらいだったらあるでしょう。ですから、今の２０代は出来ますよ。でも４０代前後だと、積極的に３Ｄ化を推し進めて、外部のインストラクターを入れて教育している会社以外は、やっぱり無理がありますよね。ＡＵＴＯＣＡＤレベルだったら独習もできますが、ＣＡＴＩＡになると、ただ立体を作れば良い訳ではなく、組み方までありますからね。作った立体を後でバラバラにできるように組み立てないと使い物にならないし、シュミレーションプログラムを覚えている暇がないのが実情ですよね。 但し、あと２０年、つまり今の学生さんが４０代になり、設計工程を掌握する地位に至る頃には！圧倒的に３Ｄ優勢になるでしょうね。この点、３Ｄ学習は、今の学生さんにとって極めて重要で、会社の中で活躍する為の必須スキルかもしれませんね（笑）そのくらい現場の設計者は、学習が間に合っていないのが実情です。私は個人でＣＡＴＩＡを所有していますが、よっぽど好きじゃないと（笑）そこまでやらないですからね。 参考になれば幸いです。
1.最終行 空白セルのない行（No.とか)で「Ctrl+↓」操作にあたる.End(xlDown).Selectするのが分かりやすいですが、データフォーマットに応じて使い分ける必要があると思います。 「VBA　最終行」で検索してみてください。 参考） http://www.niji.or.jp/home/toru/notes/8.html http://www.happy2-island.com/excelsmile/smile03/capter00702.shtml 最終行(r)は以下のように使えます。 　r = ActiveSheet.UsedRange.Rows(ActiveSheet.UsedRange.Rows.Count).Row 　Range("A4:EJ" & r).select 　Range("A4").Resize(140, r - 4).select 2.アクティブシート 　Sheets("sheet1")　を　ActiveSheet　に変更。 　 ちなみに、Range("A1")のようにシート指定を省略した場合、ActiveSheetが対象になります。指定あり/なしが混在すると、混乱を招きやすいので、注意してください。
カテゴリはエクセルで質問するといいですよ。 （デジタルライフ　→　ソフトウェア　→　エクセル） Cells(cnt, 1) = buf Cells(cnt, 2) = Path 回答はたった一行追加ですが、問題は 自分で提示したソースを理解してなさすぎだと思います、 vba ステップ実行 変数値 などのキーワードでぐぐりましょう。
VBAでやるなんていう複雑な面倒なことを何故思うのでしょうか。 この手の処理は、PHPの定番の話です。 半分目をつぶっていてもできますが。 おそらく、質問者様はHTMLに弱いのではないでしょうか。 Googleフォームを使うという発想が・・・ CSSを操作する元気があるとすれば、そもそもCSSで定義するIDやCLASSはHTMLで参照するものです。 HTMLハンドブック一冊あればトータルで血が通いませんか。 で、本来のお話ですが、投稿されたものを料理してページを作るだけにするお考えはいかがなものかと。 この投稿ページは、ランディングページ（LP）と呼ばれる役を果たすものです。 つまり、投稿者のメールアドレス、本名仮名は問わず名前、そしてテキストや画像ですね。これがセットで来るのです。 これを重要なデータと思いませんか。 一度投稿いただいた人のものをページに掲載するだけですか。投稿者それで十分面白いでしょうか。 仮に動画なら、Youtubeなりニコ動なりいろいろ場所はありますが、そのうちどれにだけは投稿したいと思われるのはなぜ？ 再生回数が右横に表示されているとそれでうれしいですよね。どんどん増えていきますから。 「いいね！」ボタンみたいなものがあったら、その集計も、出品者は楽しみですね。 視聴者のコメントがずらずら下につながったら面白いですね。 もちろん誹謗中傷類は必ずありますからそういうものを管理者判断で片付ける合意を最初にうたっていれば安全です。 質問者様は「コンテスト」とおっしゃっていますから、入賞者があったりするのですよね。 受賞作品に対するコメントなんか掲示しますよね。場合によっては評価委員会の講評なんかもつくのですね。 入賞したら当人にメールでお知らせするのが筋ですね。 入賞した人へのメールの下に、FacebookやTwitterへの拡散クリックがあったらうれしいですね。 一度出していただいた人には、また出品いただけるといいですよね。 だったら、今回のお礼とともに次の出品をお待ちしておりますというメールが、各自の名前で呼びかけ、出品作品名や評価とともに文章になって届いたら出品者はうれしいですね。 仮に千人参加していても全員に別々のそれぞれのメールが来たらうれしいですね。 特に入賞しなかった人は、自分は数のうちに入っていない、忘れられている、と思うものです。この人たちがメール1本で奮起します。 さて、質問者様の記載の範囲でこれができるかというと、全部できないのではないでしょうか。 なぜか。 ランディングページで収集したデータをデータベース化していないからです。 もらったデータは大事に、クリアファイルかなんかで保管すべきではないでしょうか。 いま、サイトがどういう形で成立してるかわからないのですが、WordPressで作られているということはないのですか。 この手のことをやろうとした場合、おっしゃっているワードプレスはほとんど何もしないで構築できます。 何もしないで、といっても調整は必要ですよ。その調整が、思い切り楽だということです。 もっともそうでないとしても、PHPの動作できるサーバーなのであれば、受け取った電文をDBに保存したりあとで読んでページを生成するプログラムは、PHP入門という本が一冊あれば簡単にできます。 データベースをどうする？　 MySQLが一般的ですが、SQLiteというものを使うなら、サーバーのインストール自体が不要になります。 VBAでJetSQLなんかを使ったことがあるのなら、すんなり使えます。 データをデータベースにすると、ものごとは思い切り楽になります。 理由は、電文で来たデータをデータベースでなくてもどこかに置いておかないと、画像なんかの連携の管理ができなくなるからです。 生のファイルでおかれていると、あるかどうかをチェックするだけでもOSの命令を使わなければならなくなる。 それが一気につながる処理なのであれば、何か伝送上の事故がおきたりしたら、データが失われたのかどうなのかもわからない。 不具合に対処しようとしても、どこかでふっとんでいるなら、対処場所すら明確にならない。 これがデータベースにすれば、何かをするポイント（トランザクション）単位でデータは更新しますので、事故が起きても直前のデータは確実に保持できている。 トランザクション管理をするのが普通ですから、１，２，３の連動でデータが作られるときに２で事故がおきたら、そもそも１からやらなかったことにできます。 ですから連携データに不整合が起きにくい。 読む、判断や計算して書く、それを読み直す、編集する、ページを作る、と言う動作がそれぞれちいさいひとつの仕事の単位で書けますので、不具合がでたときに処理をブロックとして入れ替えるのが簡単。 その仕様を知っている人が他の人に伝えるときシンプルなので伝えやすい。 あまりやったことがないと、途方もない複雑なややこしいことを言っていると思うでしょうね。 でも、これは新幹線で行く方が早いという程度のことを言っているのです。 新幹線の動作や仕組みは複雑に見えますけど、釜たきも要らないし、給水もいらないし、トンネル前で窓を締めろというアナウンスも要らないのです。 で、９時間かかっていた輸送が２時間ちょっとで完了するのです。 いまいいましたような処理ができる人は、周囲に必ずいるはずです。 それと、本もいろいろ出ています。 一冊買って体験しながら覚えたら、Office類のデータ管理になれているひとなら２週から１か月ですらすらできるようになりますよ。
Redmineをラップ&機能拡張された上に簡易インストーラがついているALMiniumがおすすめ。
お礼見ました >>長く続いたデフレの影響でしょうか、経営者が新規事業、新製品開発と指針を出しても 結果は出てきません。 開発投資もせずに努力で何とかして！！の精神論が長く続きすぎたせいかもしれません。 私が以前勤めていた派遣がメインのＩＴ企業（現在は消滅）も同様でした。不況による派遣需要の減少と大きな赤字プロジェクトの影響で、業績改善のために「儲かるソフトを開発しよう！」と社長がかけ声をかけたことが何度かあります。 私は、「それで、開発のための予算は如何ほど？」と質問したら「予算は無い」という回答がきて、その会議の雰囲気が一瞬で白けた記憶がありますね。 まあ、予算ゼロの隠れプロジェクトで新しい事業が始まるってのは、よくあるし、社内制度として、そういう活動を評価しようということにはなっていました。 だから、ポケットマネーで、専門書を買って、簡単なレポートをまとめて社内で発表したこともあります。が、その年度の評価に際して「今年度は、時間が無いので、そういう活動の評価はしないことにする」なんて社長が言い出しました。 それ以降、私も含めて、だれもそういう活動をしなくなりましたね。 >>せっかく、IT関連は、安価になり、チャンスの機会が多いにも関わらず 与えられた仕事のみに徹しているように思います。 最新の日経コンピュータの特集は、この質問に合わせたかのような「人材欠乏にピリオドを打つ」っていうタイトルで、開発現場の人材不足・能力不足の話と、それを打破しようとしている企業の話が書かれています。 登場したユーザ企業は、「ＩＴ枠での人材採用」「開発人材の積極増員」「派遣企業に頼らず、自社の社員によるシステム開発の内製化」という方向で、（しがらみに囚われないためか）既存のシステム部とは別組織、別働隊を作っているようです。 おっしゃるとおり、昔の開発は、開発効率が悪く、多数の人員が必要とされたから、ゼネコン体質で行うしかありませんでした。でも、現在は、ハードの値段は下がり、開発用ソフトは無償のものも多い状況です。 能力さえあれば、自社内の数人、もしくは、たった一人で開発してしまうことも可能ですからね。 ブラック企業と認定された居酒屋は「死ぬまで働け！」なんてトップが発言して、大きな批判を浴びていました。ブラックな働かせ方をすれば、当然、その企業の利益はアップしますからね。 でも、そんなブラック企業においても、文句も言わずに２４時間、休日出勤もいとわずに働いてくれる「社員」がいます。それは、コンピュータです。 企業の原価計算の方法はイロイロあるようですが、家賃・電気代などを「事業経費」として分類すると、ネットオークション事業の粗利はなんと１００％ということになるそうです。 アマゾンのクラウド関連の粗利率は、６０％を越えるともいいます。 一時期、日本もネット関連で盛り上がったのですけど、言いがかりのような理由（たぶん嫉妬心から）ライブドアの堀江氏を潰したことで、日本は、「あれは虚業、やはり製造業だよ！」という流れになりました。 その結果がネット・ソフト関連での惨状なんでしょうね。 日経コンピュータの特集をきっかけとして、日本企業が変わってくれればなんて思います。
=は１文字、１つの数字しか移動できません。 文字列ならstrcpyなどを使うかwhile,forなどでループするしかないです。
フォーム内の半角スペースを全角スペースにしていませんか？ 例えば <input type="radio" name="wish"　VALUE="希望する">希望する のVALUE=の前の空白は全角スペースになっていませんか？ <input type="radio" name="wish" value="希望する" />希望する <input type="radio" name="wish" value="希望しない" />希望しない と正しく書いてみてください。
>>１．今後アプリエンジニアの職としての需要はどうなのか（iOS・Androidともに勉強したほうがいいのか） iOS・Androidを使ってアプリを動かしたいユーザがいれば、需要はあるでしょう。 >>２．ナガセキャリアセンターでの勉強で職としてやっていけるのか 新卒というか、若手なら、若干考慮されると思うけど、そこを卒業しても、採用側からみたら開発経験ゼロだから就職は難しい。 費用を払って学校に行くのも無駄ではないと思うけど、それが「就職」という「結果」には直結しないと思う。 >>３．ITと言っても他にもたくさん職種があるので、アプリエンジニア以外に今後需要のある職種（IT系）はなにか 最近では、農業や漁協もコンピュータを駆使しているから、ＩＴ系での需要は沢山あると思う。 とはいえ、求められる技術も高度化してきているから、その需要を満たすだけの技術・経験が要求されるので、供給側になるのが難しくなってきていると思います。 私の例でいえば、１０年ちょい、正社員で働いていたソフト会社が経営不振となり、自宅待機の後、退職になりました。（会社は、しばらくして消えた・・・） その後、長い失業期間があって、やっと派遣の仕事が決まりましたけど、その時の理由は、「Ｃ＃での開発経験があるから」ってことでしたね。 ある派遣会社で面接を受けたとき、「汎用機の経験がおありですね。でも、ＣＯＢＯＬの仕事を求めている中高年の技術者は、現在多いんですよ。Ｗｅｂ系も経験があるようですが、開発できる人が多いので、（貴方に紹介できる仕事は）無い状態です。あ、Ｃ＃で開発の仕事がありますね。技術者が少ないから、これどうです？貴方は開発経験ありますね？」 失業直前に一年半くらいやった仕事が、Ruby on Railsの仕事でしたけど、それと似たような感じで、なんというか、「その言語をできる人が見つからない」という隙間産業的な事情で仕事が決まりました。 ですので、「あるＩＴ系の仕事の需要が強い」というのと、「あるＩＴ系の仕事を自分が得る」とは連動しないと考えたほうがいいですよ。 ところで、ちょっと離れていたＣ＃の勉強をやり直してみると、ちょっと目を離した間に、Ｃ＃は凄く進歩していました。 No.1さんが、「開発依頼したら、携帯で200万の見積だったものが、iPhoneだと10万」なんて書かれています。 これは、技術の進歩が開発費用の低下に反映したものでしょうが、同様に、「VB6で開発依頼したら、200万だったけど、C#で開発依頼したら、50万（さすがに10万にはならないと思う）」という状況になるかもしれないと感じさせてくれました。 開発言語は、機械語→アセンブラ→FORTRAN→COBOL→PASCAL/C→オブジェクト指向言語(C++/Java等）というふうに進化しました。 進化の過程でソフトの生産性はどんどんとアップしたんですけど、最後のオブジェクト指向言語だけは、「導入したら生産姓が悪くなった」といわれることがよくありました。これは、多くの人が「オブジェクト指向で開発すれば、生産性が上がる」って、何の証明もないのに単純に信じ込んだ結果だと思います。 でも、C#はバージョンが4.0になって、凄く生産性が高い言語になったと思います。（C#は、Rubyの言語思想を取り入れて発展したみたいに思えます） 個人的には、C#の勉強をお勧めしますけど、ナガセキャリアセンターには、C#の講座は無いみたいですね。まあ、C#は生産性が高いけど、技術的・概念的な難易度も高い面がありますので、教えるのが難しいのかもしれません・・・。
補足を読みました。 「仕様の内容•イメージを掴む」「他者のソースを見て内容の把握」が苦手なのに、その対応として「知識を身に付ける」というのはピントがずれていると思いますが、そう思いませんか？ 工数や時間がかかる本当の原因は、仕様書に書かれている用語が分からないからですか？ソースに記述されている命令語が分からないからですか？３年やっていて、そいうことでは無いですよね？ システム開発を行うとき、「何を実現すれば良いのか（開発の目的）」「何を解決すれば良くなるのか（問題の根本原因）」を最初に明確にします。これが曖昧だったり間違っていると、その開発は必ず失敗します。何をすれば良いのか不明確なままに作業をしても最終目的地にはたどり着けません。根本原因を直さなければ問題は解決しません。 目的・原因を特定して、それへの対応方法を考えるというのがシステム開発の基本です。この基本的な考え方がまだ身に付いていないのではないでしょうか。システム開発と同じように、まず考えるのは自分の技術力が伸び悩んでんでいる本当の原因は何なのかでしょう。原因を特定せずに解決方法を考えてもピント外れにしかなりません。 あなたにとって、「仕様の内容•イメージを掴む」「他者のソースを見て内容の把握」に時間が掛かる本当の原因はなんでしょうか？この質問や補足を読むと、「仕事の目的」「問題点の本当の原因」への理解があいまいなまま仕事を行っているのが伸び悩みの原因ではないかと思われます。 「仕様書（ソース）が書かれた目的」、「仕様書（ソース）に書かれていることのそれぞれの目的」をまず理解して読んでいくと改善していくと思います。目的を把握していれば、仮に「認識の履き違い」をしてしまったとしても、「目的と認識したことのアンマッチ」により自分で気付くことが可能です。そして読む前に「この目的に対して、自分だったらどうする」を考えてから読んでいくと、思考力のトレーニングになりますし、より理解しやすいはずです。
あなたが個人事業主や、数人の会社の一員なら、それも一つの手段だと思います。 しかし、数十人以上の規模の一員なら、自分で手を出さない方が良いし、やるとしたら、別の手段です。 なぜなら、どういう手段でバックアップしたとしても、勝手にやって、それが漏れてしまったら、首が飛ぶくらいの責任問題になるからです。 漏れ無くても、勝手にやったことがバレた時点で、首を飛ばす企業もあるでしょう。 必ず、会社の組織をあげて行うのが良いです。 数十人程度の規模の企業だとしたら、私なら、以下の手段を取ります。 まず、古い紙データを保管してくれる倉庫業者を探します。 条件は、２つ。 ・天災に対するリスク分散になる。 ・セキュリティがしっかりしている。 そして、そこに実際に古い紙データを保管して、上記２つの条件を満たしていることを確認し、安心だということを、社内にオーソライズします。 次に、バックアップを、暗号化した外付けハードディスクに取ります。 暗号キーの保管は、自社内で、もっとも信頼出来る手段を取ります。 そして、その外付けハードディスクを上記の倉庫に保管します。 当然のことながら、倉庫との往復にも、セキュリティの配慮をします。 もっと規模の大きな企業なら、支店支社があるでしょうから、そこに保管施設を作ります。 また、トンネル技術を使った専用回線を持っているでしょうから、それを利用して、夜間にバックアップデータを送ります。
技術的な回答ではないので、エンジニアリングとは言えませんが・・・。 当該のマイクロソフト社のサポート番号はMS14-021です。 アップデートで提供されるホットフィックスの番号は、下記Technet（マイクロソフト社のテクノロジーセンター、技術、管理者向けのサポートサイトTechnet、テックネットと言います）にて、Windowsの種類と、IEのバージョンごとに、(2964358)といった番号が振られています。この番号の頭に、KBを付けるとアップデートされるHotfixの名称になります。これを、Windowsアップデートのアップデート履歴で確認すれば、良いでしょう。 https://technet.microsoft.com/ja-jp/library/security/ms14-021.aspx 尚、アップデートの番号は一般ユーザーでもWindowsアップデート（マイクロソフト製品全般を更新の対象としている場合は、Microsoft Officeやその他マ社製品であるVS等も含む）の更新履歴を見れば、確認でき、サポートが満了し、極めて長い期間時間が経過したものを除けば、マイクロソフトのサポートサイトで、サポート番号から逆算したり、ホットフィックス番号から更新されたホットフィックスの詳細を確認することもできます。 尚、質問者様がその企業におけるシステム管理者でない場合は、意図的に更新されていない場合があります。適用すると業務用アプリケーションにトラブルが起きるなど、問題が起きることもありますので、システム管理者でなければ、あえて確認する必要もないかもしれません。（そういう環境ではスクリプトの実行禁止や、プロキシサーバによるアクセスサイトの制限などが行われています） もし、確認するならシステム管理を行う部署に確認されることを推奨します。システム管理者が別にいる場合や、大手企業でシステム部門がある場合は、間違っても、絶対に無断で適用してはなりません。企業によっては管理部門を差し置いて個人で行うと、懲戒などの対象となります。
何もない状態で唖然とした質問ですから、誰もこたえられないでしょう。 更新のタイミングでSQLを飛ばすことすらわからないようでは誰も教えようもない。 でも、PHPを使うというなら答えられます。 cake2でお作りなさい。 ER図を描けるという程度の実力は要求されますが、それ以上は何もいりません。 bakeで大体のソースは生成できます。 SQLを書く必要はありません。 recursiveを1として、深い読み方をしないで実現できます。 さすがに、cake2は本を買って読んで勉強してください。
ソースがちゃんと提示されていないように見えます。 $jobというのはEmployeeのメンバーにありませんね。 それと、 private $state = '働いている'; のほうはこう書いただけでインスタンスがありますが、 public $name; は宣言だけで、だれもnewしていないからインスタンスは存在していません。 外から設定しようとしても、受けがありません。
例えば、こんな感じでいかがでしょうか。 ---------- Sub 作成() Dim i As Integer, j As Integer, no As Integer Dim Mpath As String, Mname As String, Mfull As String Mpath = ActiveWorkbook.Path Mname = ActiveWorkbook.Name Mfull = Mpath & "\" & Mname Worksheets("一覧").Select Range("A2:A200").Clear Dim result() As String Call search(Mpath, result()) If UBound(result) > 0 Then For i = 0 To UBound(result) If result(i) <> Mfull Then Cells(i + 1, 1).Value = result(i) j = Len(Cells(i + 1, 1)) If j > 218 Then MsgBox ("218文字を超えてます。") Exit Sub End If End If Next i Else MsgBox ("見つかりませんでした。") End If Range("A2").Select Range("A2:A1000").Sort Key1:=Range("A2"), Order1:=xlAscending, Header:= _ xlGuess, OrderCustom:=1, MatchCase:=False, Orientation:=xlTopToBottom, _ SortMethod:=xlPinYin, DataOption1:=xlSortNormal End Sub Sub search(Mpath As String, result() As String) Dim arrayFilePath As String arrayFilePath = Dir(Mpath & "*.xls") Dim i As Integer i = 0 ReDim result(i) Do Until arrayFilePath = "" ReDim Preserve result(i) result(i) = Mpath & arrayFilePath i = i + 1 arrayFilePath = Dir() Loop End Sub
内部にマクロが入っていると、それが感染の引き金になります。 マクロの有無はファイル名からわからない設計になってるんで。 逆に言えば「マクロが入ってない」、または「その文書ファイルに 偽装したウイルスがない」ことが分かってるなら、気にしないでも 大丈夫ですが・・・。 隔離して全件スキャンすればいい話なんですけどね。それが 出来る環境かどうかって話もあります。
簡単なのは、Yahooファイナンスに問い合わせることです。 著作権のもとになる著作物とは何かについて、著作権法で定義されています。必要な条件は、「思想又は感情を創作的に表現したもの」であつて、「文芸、学術、美術又は音楽の範囲に属するもの」となっています。 そこで株価を考えてみると、株価のデータそのものは、たとえば、気温や気圧のデータと同様と見なせば、思想も感情も無関係で著作物にはなり得ません。しかし、株価データは、気温や気圧のような電気的な計測機で測定されるものとは少し違い、人間的な定義や解釈が入ってきています。それにもかかわらず、株価は著作物性を認めない意見もあります。 たとえば、日経平均株価というものがあります。これは日経新聞社が、ある思想のもとに限られた株の銘柄を選定し、その株価を独自の考え方で指数化したものと考えることは可能です。それを独自のグラフ化したりすることで発表することは創作的な表現と見なすことは可能です。この場合は加工データとも見なせます。 一概に株価には著作権がないと主張するには無理があります。どこからか、株価データだけを抜き出して使うなら侵害とされない可能性もありますが、判例を待ちたいところです。
＞バリアで研究所（建物）全体を覆い守りますが、そのバリアは現実に確立されている技術ですか？？？ 確立されてません。 確立されてれば、ロケットやスペースシャトルの打ち上げや、大気圏突入で使わないわけがない。 現状で出来るとすれば、大電力を使って車が通る位の空間に電磁波使った壁を作る位が精一杯だと思う。 それだって、確実に止められるとは限らないけど。。。
それをそのまま書くのはマズイですよね。 昨今の状況により(書けるなら説得力のある内容で)、従来の単価では人材の確保が難しくなっており、云々 御社との関係に鑑み、特別なお値引をさせていただいておりましたが、弊社標準価格とのかい離が大きくなっており、、、云々 後は、単価あげますというより、メンバーの請求クラスをあげる。その場合メンバーチェンジして新人にしてもいいよって言われる可能性もありますが。
まずExcelを開いて、そちらから読み込めないか試してみる事でしょう。 スタートアップメニューなりからEXCELを起動し、メニューバーから「ファイル」－「開く」を選択。 「ファイルを開く」の画面で問題のファイルを指定し、下の「開く」ボタンの横の▽をクリックして「開いて修復する」を選択。 これでどうでしょうか？ あるいはファイル名の拡張子の後ろに「空白」がくっ付いていてExcelの拡張子として認識していないなんて可能性も。 Excelファイルのアイコンになってますか？
http://www.applegoods.jp/ ペン、ノート、名刺入れ、マグカップなど
>また、プログラマーを目指すにあたって必要になる資格や知識をご存知であれば 特に資格は必要ない。必要なのは知識。 質問者の年齢はまだ23歳くらいでしょ。 それなら、実務未経験・知識なしでも受け入れてくれる企業はまだある。 そのかわり研修で時間は取ってくれない可能性がありOJTで案件にたたき込まれる可能性があるので 死にものぐるいでやれば何とかなるでしょう。まぁそれで鬱になる可能性はありますが。 プログラマーという言葉は間違いです。 プログラマが正しい。 プログラマを目指すならJISの最低限の事くらい知っておきましょう。 とりあえず簡単に http://ja.wikipedia.org/wiki/%E9%95%B7%E9%9F%B3%E7%AC%A6#JIS.E8.A6.8F.E6.A0.BC.E3.81.AB.E3.81.8A.E3.81.84.E3.81.A6.E5.8E.9F.E8.AA.9E.EF.BC.88.E8.8B.B1.E8.AA.9E.EF.BC.89.E3.81.AE.E8.AA.9E.E5.B0.BE.E3.81.AE.E9.95.B7.E9.9F.B3.E7.AC.A6.E5.8F.B7.E3.82.92.E7.9C.81.E3.81.8F.E5.A0.B4.E5.90.88.E3.81.AE.E5.8E.9F.E5.89.87 ここで説明しているので読みましょう。 プログラマを目指そうとしていて日本工業規格すら理解してないなんて恥です。 まぁ何故か回答者がにも正しく書けない人がいるみたいですけどそういう人はプログラマではないのでしょう。 だから正しく書けないのです。
私は、システムエンジニアです。 一つのシステムが、１つのプログラムではできていないのは、理解してますか？ 簡単に説明すると、 １）データ入力部分 ２）計算部分 ３）出力部分 とした場合、各々の部品が正常に動作するか　が単体テストです。 １）入力部分　必須チェックが正常に機能するか？ 　　文字種別（数字・英字・半角・全角）を正常に判断しているか？ 　　文字数は、オーバーしていないか？ 　　などです。 ２）　ゼロ割など、エラーにならないか？ 　　　判断文（整数で２以上）の場合、２はOKで３はNGになるか？ 　　　などです。 ３）　表示桁数、表示形式は正しいか 　　　などです。 これを個別にテストします。 結合テストは、それぞれの部品を通してテストします。 ここまでは、あらゆる入力値を使用してテストします。 最後に、総合テストですが、実際の運用データの一部を使用して、通常業務が正常に機能するか、 テストします。 こんなところでしょうか？
mb_send_mail($to,$title,$body,$mail_ccc); の前に $mail_ccc = trim($mail_ccc); を入れたら直ったりしませんか？
設定内容そのものを保護するというより、変更できないようにパスワードを設定できるだけですけどね。 osは関係ありません。ｏｓの起動前にbiosが起動します。 で、ハードウェアに内蔵されていますので、ハード次第ですが、biosの設定画面へ入ればパスワードの設定画面もあります。 また、biosのパスは物によりけりですがハックする事も可能です。セキュリティレベルは中程度と思っていいです。 HDにパスを設定する事も可能です。この場合、HDの読み込みにパスが必要です。が、、、パスは基板のフラッシュに書き込まれるので、同型番のHDを用意して基板を交換されれば何にもなりません。こちらも中程度。 osのパスワードは・・・
システムエンジニアになるととんでもないくらいの人と関わって仕事をするようになります。 上流に行けば行くほどその傾向が強くなってきます。 したがって、そこにいる人間も千差万別です。 全く教えてくれない人間もいれば、必要以上に面倒見の良い人間もいます。 説明会や面接であながた見た人はその会社の一社員に過ぎないと思います。
単純にプログラミングの習得だけが目的なら、最初はHTML＋JavaScriptで良いのでは？ Webシステムのクライアントサイドで一番コアな部分ですし、Windowsだけあれば、環境構築は必要ないし、お金もいっさいかかりません。
ＡＮｏ．１です。 ＞やはりプログラムや、システム設計の知識も営業と言えども必要になると思うのですが、その点は入社後に勉強されたのでしょうか。 営業をする前はＳＥでサポート部門でしたが、ＰＧではありません。あくまでも、その会社で扱っているシステムについてだけ理解していただけです。 本格的に営業になったのは、その会社から転職して、同業他社に行ってからです。ですから、プログラムなどの専門知識など全くありませんし、必要ありません。営業として覚えておくことは、そのシステムで出来ることと出来ないことを把握していること。システムを導入してもらうことでお客さんにとってどのような利点があるということを押さえておけばいいと思います。ですから、他社のシステムとの違いなどを理解しておく必要はあるでしょうね。そうでなければ、他社よりも優れているということを説明出来ませんから。 ＞それともその前から、興味があったり詳しかったですか。 全く興味のなかった業界です。本当はゴルフ関係に行きたかったのですから、全然関係がありません。笑 ＞また、イメージとして、勤務時間も長かったり、休みも少ないイメージがあるのですが、その点はいかがでしたでしょうか。 ＰＧやＳＥ、サポート部門は納期の関係で勤務時間は不規則ですが、営業はやることがなければさっさと帰ります。さすがに定時に帰るという訳にはいきませんが。 休みは、基本的に週休二日の会社にしか行ったことがありませんが、システムの搬入が休日しか出来ない場合などが無い限り、休日に休めないということはないと思いますよ。 ただ、営業成績が悪いと有給休暇が取り辛いというのはありますね。 まあ、こればっかりは会社によって様々でしょうから、その辺りは上手に面接で確認してみては如何でしょうか。とにかく、面接に行けば社内の様子が分かりますので、その空気が自分に合うかどうかも確かめてこられては如何でしょう。 どんな職種であっても頑張るしかないのですから。^^
フォルダ内のファイルを消すと、フォルダのタイムスタンプが更新されますので、フォルダの削除はタイムスタンプを見てはだめです。 FTP-testというものが説明無しに出てきて意味不明なので、その部分は無視して、質問文にそって解答します。 rem 30日経ったファイルを削除 forfiles /P C:\temp /S /D -30 /C "cmd /c if @isdir==FALSE del @path" pushd C:\temp rem フォルダが空なら削除 rem 空でなければrdがエラーになるのでエラーメッセージをNULに捨てる for /d /r %%A in (*) do rd "%%~pnxA" 2>NUL popd
日本語の字でいいますと、 噴墨 です。もっとややこしく見えますが、日本字なので。 ここで繁体字や簡体字をだせませんから、そこはお調べください。
KENスクール http://www.kenschool.jp/Program/mnpg_sphone_sub.html http://www.kenschool.jp/Program/mnpg_java.html http://www.kenschool.jp/Webdtp/mnweb_portfolio.html http://www.kenschool.jp/Webdtp/mnweb_kamoku.html Androidアプリ開発講座　98,000円　25時間 まずは　Android　をやってみる 心配なら　JAVA入門講座　を事前に受ける Webサイトの構築については　 ポートフォリオ作成　に必要なスキルについて相談して 必要な講座を受講する ナガセ　http://www.nps.ne.jp/it/kouza/pg.html ＷＩＮ　http://www.winschool.jp/guidance/program/smartphone_app.html http://www.winschool.jp/guidance/web/ 転職先はどんな関係のところなのでしょうか　職種　業界 http://gihyo.jp/dev/serial/01/androidapp http://matome.naver.jp/odai/2130703268743536801 http://appmarketinglabo.net/app-develop-freetool/ http://libro.tuyano.com/index2?id=315001 http://libro.tuyano.com/index2?id=462001 http://www.atmarkit.co.jp/fsmart/index/appinventor.html 書店で　何冊か読んでみて　内容が分かりやすいものを選んで Androidアプリを作ってみてはどうですか 予算が100万円だけなら　ちゃんと考えて使わないと目標にたどりつけません Visual Basic　は大きな寄り道なので　不要 Androidアプリにまずはしぼって勉強してみることをすすめます http://www.tagindex.com/ http://www.ink.or.jp/~bigblock/ http://htmlandcsstutorial.seesaa.net/article/142912068.html http://www.webword.jp/cssguide/ http://www.atmarkit.co.jp/fwcr/design/index/index_css.html Webサイト構築は　基本的にすすめませんが HTML　CSS　Javascript　の入門書をまず読んでみることすすめます Web系ならどういうものでも基本となるところなので ある程度はわかっておく必要があります https://sqript.net/ 具体的には　課金はするのでしょうか　会員制のサイトなのでしょうか 音声　映像　などを配信するのでしょうか　
ソフト開発からはなれて説明しておきます。 初期費用、と運用費用、というものが存在します。 たとえば家庭用コピー機を買うとします。 初期費用でたとえば２万円だったとします。 この２万円が初期費用です。 コピーを使うには、トナーだとか紙が必要です。 これは使えば使うほどお金がかかります。 １枚コピーするのにこういう費用合わせて10円かかるとすれば、月500枚使うなら5000円かかります。 これが運用費用です。 でも、買ったコピー自体はもう費用をかける必要はありません。 要するに初期的にかかる費用、使っているうちにかかる費用がある、ということです。 セットアップコストはこの初期費用にあたります。 ソフト開発で提案するときには、主語を何として話しているかで内容は変わります。 お客様の視線で言うならば、コンピュータ装置の導入から数える必要があります。 ネットワーク設定やDBの立ち上げ、複数のサーバーの立ちあげを含みます。 そこに載せるソリューション自体はセットアップコストには入れないのが普通です。 既存のパッケージソフトなら入れますが、新開発するなら入れないで、開発費という考え方をし別枠です。 この環境を確定させてしまえば、あとはプログラムの仕様をどう変更しようが枠はひとつと考えることができます。 このときプログラムの仕様変更などは運用費用ではなく、修正予算で対応しなければなりません。 コピー機でいえば、使っている用紙を変えるというような話になります。 設定したコンピュータ装置自体が変更が必要になった場合（たとえばDBをマルチ化するとか）別途費用がかかりますが、これも運用費用ではありません。改修費用になります。 買ったコピー機が故障したときは修理費用を払って対応してもらいますよね。それに似たことです。 どうしてこういう考え方をするかというのは予算という概念から来ています。 会社の決裁者（社長）は、最初にいくらかかるのか、毎月いくらかかるのかが知りたいのです。 大体どういう会社でも、毎月の費用にはシブいですが、初期費用はそれほどうるさくはいいません。 頭冷やして考えたらそれは当たりまえでしょう。 ところが営業は初期費用で勝負しようとし、そこに齟齬が発生するのです。 ＳＥはこの感覚を心得ておいたほうがよろしいでしょう。
強みになり得ますよ。 よくそんなところにまで気が付きましたね。 本来英語が出来たほうが良いというのは間違いないですが、 韓国語も出来たほうがポイントは高いです。 理由は、貿易をする上で韓国が近くにあるということと、 韓国の人に仕事を任せると安くで請け負ってくれる。 ということです。 例えば、ゲームやホームページなどを制作する際に、 韓国語版というものを作る必要があります。 また、ちょっとしたシステムのモジュールを開発する際にも 韓国の方に依頼をすると日本の半額程度で見積もりを出せるというメリットもあります。 そのため、話せれば強みになり得ます。
わからない人には、数字で提案する以外の手立てはありません。 ところで無線LANでもVLANはありますね。 この場合当然ハブはありませんからバーチャルクラップは重なり合います。 PCの受け口をマルチにして監視しているクラップを分けて操作します。 このためにバーチャルマシンを常駐させたりします。 VMWareだとかVirtualBoxです。 そうするとVirtualでNICがたくさん出現します。 異常にトラフィックが錯綜していなければこれで問題は起きません。 でも、ギガバイト単位の転送を同時に10台のPCがやったりするとさすがにおかしくなりますから、声掛けでなんとかしますね。 さてこれを有線LANでやろうとすると、ちょっと工夫です。192.168.Xと192.168.Yの同居になります。 あなたはプロですからやりかたはわかると思います。 重くなる度合いは、計算してみなければわかりません。 それを、毎日のトラフィック（監視ツールでデータはとれているはず）で数字として見せるようにします。 新設備導入で、その数値がどう変わるかの試算をしてみてください。 それが提案書になるはずです。 もちろんバーチャルサーバを置くやりかたも中にいれてください。 ただしVMWareは有償です。 VirtualBoxは無償ですが、ゲストOSを４つ以上にすると無理が発生します。
SEに限る話ではないのです。 お客様対応と考えてください。 同じ会社の中での相談であってもスタンスは一緒です。 自分が解決せず、相談をしてくる相手に解決してもらうのが最善です。 仮に自動車が動かなくなった、見てくれといわれた場合どうしますか。 それで、行ってみたらおそらくバッテリーだと即気づいたらどうしますか。 バッテリーです、と言い切る選択肢はありますね。それでバッテリーだったらほらみろ。威張る。 そうでしょうか。 ほらみろではなく、バッテリーでない可能性も幾分はあります。そのときどういう顔をしますか。 嫌われない整備士のやることは何でしょうか。 キー入れてどうでした、といいながらキーを回してみる。ヴオンと音はする。 あれーといいながらバンパーをあけてあちこち見て、これかなこれかなとひとりごちる。 そういうパフォーマンスやっているうちに、運転手本人が「バッテリーかな」と言うかもしれない。 そこではじめて「あ」と言ってそれを調べる。 「ありがとうございます。バッテリーでした」 対処が決まったら即対応を提案する。充電をするか、電池交換をするか。 このときは前回いつこの手のことをしたかの記録はすべて把握していなければいけません。 手を動かし出したらそこがプロですからさっさとやりましょう。 こういう整備士は、好かれます。また相談しようと思われます。 最初から小ばかにした言い方で「バッテリーでしょっ」などと言ったらまあ嫌われます。 観点はどこにあると思いますか。 相手を参加させることなのです。 もちろん知らないことや何かはあるでしょうから、あなたがガイドしていくのです。 こういうことですかね、こうかな、というように。 今回の場合、先方の相手が送ったファイルが壊れているかもしれないと思いつくまではいいのですが、 「そういう可能性もありますが、まさかねえ。あちらにそんなことを言うと失礼ですね」 といって、札は出しながらそこに置いておくようにし、いろいろ考えられることを次々に口に出してください。 そうするとこの相談者は一緒に考えだします。 そして、「やっぱ確認しておくわ」と自分で問い合わせをしてくれる可能性があったと思います。 相談を受けるばあい、相手からハンドルを奪うようなやりかたはなるべくさけてください。 相手がハンドルを握っていて、それを横で介助しているカタチで、できる限り相手の言うことを聞いてください。 聞くだけでいいです。 よく聞くという態度をとっていると「相談しているんだから早くなんとかしろ」とはまず言いません。 なぜかというと、相談している自分の中で状況が熟成し、解決策の泡がはじけかかってくるからです。 これは大きな手札になります。 というのは、自分の全知識で片付かない解決ができる可能性を育てるからです。 あなただってシステムのあらゆることを知り尽くしているわけではない。 だから非常に弱いところに関連することがあるかもしれない。 ところが、問題を抱えている人は、その問題に対する距離はあなたよりずっと近い。 だったら問題が見える確率は高いのです。 こうしたらどうかと思いついたそれが正解であるかもしれない。 調べてやる程度なら知らなくてもプロだからあなたには簡単にできます。 そしてあなたのスキルになってしまうのです。 このやりかた、だまされたと思ってやってみてください。
IT派遣と言いつつ契約社員、どっちなんでしょう？ 通常、契約社員の方が身分は固いです。大差はないですけど。 契約社員なら直接雇用なので、一応、労基法通り、正当な解雇理由があれば30日の予告ないし予告手当で解雇される可能性はあります。しかし、契約期間中であれば、通常の解雇法理が適用されます。 派遣社員の場合、派遣先から切られる事が＝解雇でもありません。実際には派遣会社は法律なんぞへのカッパ～とやっていますが、派遣先から解約されるという事は派遣先-元との問題であり、あなたに直接の関係はありません。ま、かっぱだからアレですが。
ドライブ構成で性能を上げるというのは、管理者側から見れば納得しやすい事だとは思いますが、設計側から言えばそれほど改善にはならない。むしろ毎年のように上がるハードの性能に頼ったほうが楽というのが答えです。数値で数パーセント上がるっていうのはあまり意味が無いのでは？ 今ではSSDのサーバーも出ています。その中には二重書き込みを制限し、無駄なI/Oを排除する仕組みも出てきています。もはやこれからはそういうソフト&ハードで解決してしまう世界なんでしょうね。 設計側ではソフトで書き込みを制御する。読み込みを効率良く回すこれは簡単なこと。つまりマスターテーブルをRAID1のドライブなどに一個配置する。トランザクションテーブルをRAID5に配置。そしてテンポラリーテーブルをRAID0に一つ配置。さらにインデックスを別のRAID0に配置。 こういう構成も考えられますよね。このことで一度の読み込みで四つのドライブが同時に動く。それぞれが専属で動くという意味で非常に効率もよく、無駄にリソースも使いませんよね。もっと言えば良く使うデータを複数のディスクに配置するなど中身で分けるのも可能です。 このシステムが何に使われるかは今は無視しますけど、当然使い方で全然変わります。このようにシステムを作るということは業務を理解し、データも深く考えるということは必要ですが、ここまで厳密に考えているSEが少なくなったのも事実ですが、本来はSEとDBAの共同作業なのに今では忘れられてますよね。 Windowsの余計なサービスを停止するのは今や当たり前のことですが、スワップ領域の配置を考えているSEも少ないのが現状。スワップをシステム領域から切り離すのも必要です。 物理メモリはWindowsとOracleのバランスを良く考える。出来ればWIN2008以降のHyper-Vを使いGUI環境をカットしてしまったほうが良いと思います。コマンドベースの管理になりますけど、メモリの効率は格段に高いです。
何故、圧力発信器が２台も要るの？ 常識的に発力発信器１台＋調節計で比例制御させるのだが？ http://www.m-system.co.jp/mstoday/plan/mame/1998-1999/9810/index.html http://www.compoclub.com/products/knowledge/jidou_seigyo/jidou_seigyo4.html http://www.rkcinst.co.jp/techno/16/techno_16.htm いにしえの昭和の昔は圧力制御には100万円クラスの調節計が必須でしたが http://www.yokogawa.co.jp/ns/cis/slc/ys1000/ns-ys1000-01-ja.htm http://www.m-system.co.jp/sc/ 現代ではチョット高級な温調器で可能（4～20mA入力／4～20mA出力型） http://www.fa.omron.co.jp/products/family/3102/ http://www.rkcinst.co.jp/seihin/single-j.htm http://www.compoclub.com/products/recommend/super/index.html http://www.yokogawa.co.jp/ns/cis/utup/ns-index-ut100-ja.htm
ちょっと希望される対象とは違いますが。 私は５０代で転職活動中です。今までに何度か転職していますけど、いちおう社会人になってずーとＩＴ業界だけですが、その経験から。 １) 研修や、スキルを考慮したアサイン、メンターとペアを組む、などケアはありましたか？ 研修といえるものは、最初の会社（３０数年前）に参加したときだけですね。 最初の会社では会社負担で、熱海のホテルを使っての泊り込み新人研修とそれに続く１ヶ月のプログラム研修、しばらくしてからＩＢＭ教育センターでの宿泊や日帰り研修に参加していました。 それ以降の会社では、有給を使っての自腹参加が多いです。研修場所が遠いと交通費・宿泊費など金銭負担が大変でした。 スキルを考慮したアサインはもちろんありました。でも、知識が無いのに、背伸びして「やります！」と言ってしまったプロジェクトは散々な結果になりました。期待していた実力あるとされていた助っ人は、さっさと逃げていきましたから・・・。 ペアってのは、１度だけありました。でも、それはプログラマとしてではなく、どちらかというと、ＣＥに近い仕事でハード＆ソフトのメンテをしていたころありました。 ２) スキル不足に悩まされませんでしたか？ もちろんありますね。経験者として言えるのは、「ちょっと頑張ってできることはある。でも、頑張ってもできないこともある。そのときは早めに”できません。無理です！”と上司に言うことですねえ。 3) スキル不足で会社に居づらい、再転職を考えたりはしませんでしたか？ うーん、私の場合は、「この会社ではやりたいことができない、会社の方針と合わない。」「自分が成長できない」「この会社はもうすく潰れるから辞める」もしくは「経営不振なんだ。申し訳ないが辞めてくれ」ってのが転職するパターンでした。 でも、未経験でエンジニア、プログラマに転職した場合、スキル不足で会社に居づらいという気持ちはわかりますし、転職したいというのもわかります。 4) 今もその職を続けていますか？ 今は、転職活動中です。たぶん、ＩＴ系で探すことになるでしょうね。早く就職しなければと思うこのごろです。
＞本当に、パスワードの解析なんて簡単に出来てしまうものでしょうか？ 適切に設定されたパスワードならばそう簡単には解析することは出来ないと思います。 Windowsのログオンパスワードではありませんが参考にして下さい。 http://www.dit.co.jp/service/report/security-threat_v3.html 複雑化ありのパスワード（英大小文字+数字+記号）で桁数を増やせばそう簡単では無いというのがわかると思います。 ＞盗難や廃棄後の際にパソコンのログイン時のパスワードなんかは簡単に解読出来てしまう。 簡単に解析できるようなパスワードを使用する人が多いという意味に捉えたら良いのではないでしょうか。 パスワードのルールなどを決めても強制されなければ、一定の割合でルール守らず簡単なパスワードを使用する人は出てきます。 もう昔の話ですが2桁のパスワードという人は結構いましたね。 ＞今までのワークグループでは、難しくＡＤの導入に踏み切ったそうです。 パスワードのルールを強制的に守らせるためにAD導入は自然な流れですね。 ＞そういったものは、特別な知識が無ければ出来ないものではないでしょうか？ パスワード解析のプログラムを自分で作成するのならば知識が必要だと思いますが、 出来合いのパスワード解析ツールは誰でも入手できるし、使い方も難しくはありません。 ＞取引先(顧客)より、顧客の親会社より顧客へISMSに準拠した情報セキュリティの構築を言われたそうです。 近年、良くある話ですね。 取引先が複数あると、その取引先ごとにポリシーが同じではないので、それぞれのポリシーを網羅することになるので必然的にポリシーのレベルが高くなったりしますね。
基本的に数字の羅列である「123456」や「000000」 キーボードの羅列である「qwerty」などは世界共通で多いです。 俺も使ってる捨てアカウントが結構有りますｗｗｗ ただその国特有の流行り言葉などが原型のパスワードに関しては、 世界中で違うものになると思います。 日本でよくあるパスワードの統計をとっているのを見たことが無いので、 日本人でどのようなパスワードが多いのかわかりませんが、、、
自分の中で熟するのを待て、と思います。 何も具体的に考えないで茫漠と独立や成功を夢見ても何もはいってきません。 独立したい、ということを思い続ける。 ぼんやり「今でない状況」というレベルではだめです。 できる限り具体的に想像する。ことばにする。 ずっと思い続けていると、あなたに情報が流れ込み始めます。 実際にはずっと流れていたものなのですが、あなたが網を張ったので引っかかりだしたのです 単純な話です。たとえば入試合格者リストが貼り出されている。全員の名が出ている。 普通自分の名しか探さないので自分の名しか見えない。 でもその行はあなたにはポップアップしてきたように見えるはずです。 もし「あの子いいな」と思っている女子がいたら、その子の名前もリストから立ち上がってきます。 自分の学校の名がニュースで流れたら、耳がぴっと反応しますね。 独立を具体的に考えれば考えるほど、必要な情報が流れから立ち上がって見えるようになるわけです。 その、自分にむかって流れ込んでくる情報の中に「幸運」が潜んでいる可能性があります。 実際にそれをやってみる。 そのうちに、単なる情報が流れると考えていたのに、人間づきあいやチャンスが流れてくるようになります。 もちろんガセや詐欺もその中には含まれます。 でも、あなたにはそれが自分に流れてきたものだと実感ができるのです。 うまく選んで次のステージに進みましょう。 このコツは、できる限り具体的に妄想することです。 こういうことを「ジョセフ・マーフィーの成功法則」なんて言ったりしていますが、非常に単純で誰もが納得できる法則です。
JP1に詳しいものではありませんが、一般的な考え方として参考になればと回答します。 ＞STOP　RUN　99　といった感じで終了させると、異常終了になってしまうのでJP1で次処理へ進めないのです。 ここで、異常終了にしないで次の処理に進めるか等の判定を行う機能はJP1には無いですか？ 通常はジョブステップの実行結果を判定して次に実行するジョブステップをコントロールするような機能があると思いますが如何でしょうか。
私の場合、ＳＥではなく、派遣でプログラマレベルばかりの仕事をしていました。 派遣先で優秀なＳＥと社内で評価されている方（正社員）としばらく弟子みたいな雰囲気で一緒に組んで仕事をしたことがありますけど、「うーん、あの人のレベルには、なれそうもないなあ・・・」と感じたものです。 それは、その方の能力の高さもですけど、その会社のＳＥさんたちは、最新の知識が得られるように、社内講習や社外講習に定期的に参加されていました。講習のテキストを見せてもらうことがありましたけど、「こういう知識があるか、無いかで大きく差がでそうだなあ」と感じたものです。 たぶん、社外講習であれば、１０万～数十万円の費用が必要なものだと思えますので、個人のポケットマネーでは、なかなか参加は無理です。 派遣社員であれば、会社持ちで有償講習に参加させてもらう機会は、ほぼゼロではないかと思えます。 （その会社の正社員の方が、会社持ちで、うん十万円のオラクルの講習に何日もでかける方を、羨ましく見ていました・・・） ＩＴ業界は、建築業界と同じく、ピラミッド構造になっています。上記の正社員ＳＥさんは、ピラミッド上部に位置する会社に所属されていました。ピラミッドの下部で働く派遣社員は、そのままでは、ＳＥになれないとおもったほうがいいと思います。 それから、私もＰＧからＳＥをめざすための勉強を一時期やったことがあります。No.2さんの回答にあるような「顧客との打ち合わせ、設計のとりまとめ、顧客交渉」などについてです。 この領域で学ぶことは、コンピュータ技術よりも、顧客、他社メンバー、上司・同僚・部下との交渉術、相手の心理把握、心理操作が重要になります。また、できるだけ”貸し”を作っておくことが重要なことです。さらに、負担をできるだけ他社、他人に押し付けて、自分達の利益を最大に、危険、負担を最小にもちこむテクニックだったりします。 ただ、ピラミッドの下部で働く派遣社員にとっては、こういうテクニックを使う機会は、まず無いとは思いますけどね。 それから、理想的なＳＥって話を目にしたことあります。そういう理想的なＳＥは、開発が始まる前に、開発中に予想されるトラブルを予想して、それらの対応策を全て考えているそうです。そのＳＥさんにとって、開発が実際に始まったときには、頭の中ではもう開発は終了しているのだそうです。 ですから、そういうＳＥにとっては「想定外」っていうのはありえないことになります。 なんらかのトラブルがプロジェクトで発生したとしても、そのＳＥさんにとっては、対応に追われて「寝る時間もない」ってことにはならないのでしょう
>>コードを書ける人がまだ少ないので、スキルのある人は引っ張りだこだとか。 その体験講座は、お金を払って受講する人を増やすために嘘を言っているのだと思います。 >>実際にコーディングが出来るようになると、どのような活躍先があるのですか？ Web サイトを構築する以外に、どういった場で必要とされるのですか？ 一般的には、ＩＴ土方として、低賃金でこき使われる人材として必要にされるのではないでしょうか？ まあ、実際には、コードを書けるってことは、重要な技能ではありますけど、同じ言語でも、仕様が大きく変わる、メジャーな言語がマイナーになる、フレームワークがメインになる、フレームワークに栄枯盛衰がある・・・ってことがあります。 とはいっても、現場では、それらを使ってモノをつくる人が必要なのは事実なんですけどね。 苦労の割りに報われないってこともあることを忘れなければいいと思います。
メーカは違えど、規格が同じなら通信できますよ。 まったく問題ないです。 どっちかというと、対で合わせてないほうが多いような・・・・ CISCOとアライド NECとCISCO アライドとNEC 現在、上記で問題なく使えてます。 Ciscoは、SWに付けるモジュールタイプのものです。 バッファローは使ったことないですが、おそらく全く問題ないです。 これで、つながらなかったら何のための規格なのか規格の意味がなくなりますよ
回答（１）です ＞モーターのみを探しております。 少なくともオリエンタルとパナソニックにはギアヘッド無しの選択肢はあります https://www.orientalmotor.co.jp/products/detail.action?hinmei=3IK15A-S&seriesCd=0000 http://industrial.panasonic.com/jp/i/25000/fa-gr-lineup/fa-gr-lineup/sin_g_geared_ctlg.html
> 仕事に必要な勉強時間はお給料は発生していますか？ しています。 業務に直接的に関係のない、個人的興味がある物事や、将来性を考えた事柄について、 業務中に時間が空いた際に学んだり、自宅へ帰ってからやったりします。 その為、業務中にやった時間帯については『発生している』ということになります。 しかし、あなたの会社の場合、部署ごとに違うというのが問題だと思います。 部署の特徴が業種レベルでよっぽど異なるなら別でしょうが、同じようなことをしている にも関わらず対応が違うならば、変ですよね。 > 実際に専門職の自主的勉強については皆さんの会社ではどのようになってますか？ 何もしていません。 資格を取得しても報奨もありません。 業務時間外にやろうとしたら問題視されると思います。 業務の空いた時間にやるか、自宅でやれと。 そもそも、なぜ時間外作業が発生するのか、どのくらいの時間発生するのかを日々管理していますので、 『勉強』名目では通りません。 が、例えば1.2人日かかるような作業を1人日で済ませ、その業務にかこつけて0.2人日分の時間外作業を していたとして、勉強する形にするのはアリです。
直接的な回答ではなく申し訳ないのですが。 ＞OAタップ（TAP-K4-3）の固定穴に関する、正確な寸法情報を教えて下さい。 仮固定穴ですね。 ＞マグネットが使用できない箇所に固定する必要があり、取付穴の正確な情報を教えてください。 OAタップはねじ止めなどで固定するのはまずいです。 この穴は引っ掛けるためにあります。 だから寸法が特に書かれていないのだと思います。 OAタップは簡単に移動できる状態になければいけないのですが、 マグネットや引っ掛けた状態は簡単に移動できるという解釈になりますが、 ねじ止めしてしまうとだめですね。 参考 http://www.meiko-g.co.jp/product/setsubi/kiki_consent_tap.html マグネットがだめな理由がわかりませんが、マグネット受座などを使用して OAタップを固定するのでは無く、マグネットが使えるよう金属の受座を固定する方法は取れませんか？ これもだめだとコンセントを引く電気工事をするなどを検討しなといけないような感じがします。
Q、「通信末端システム開発科」卒業後の進路は？ A、期待ゼロ。 ３年前に「Javaプログラミング」の６ヶ月の職業訓練を受けました。卒業時には、Java、Ajax、MySQL、SQL、Javascript、HTML等の各言語を駆使した「CD等貸出管理システム」を開発することができました。 さて、私が開発した「CD等貸出管理システム」の各コードは訓練校の講師も書けない水準のもの。なぜなら、講師の多くは、テキストの範囲で教えることができるだけ。そこに書かれていないJavascript、Ajax あるいは HTML についての知識はゼロか素人同然。つまり、講習から一歩踏み出して＜Ajax+Javaシステム開発＞というレベルに挑戦するとなると、もはや、完全な独学の世界。つまり、多少なりとも商用レベルの開発実績を半年の訓練期間中に残そうとすれば、講習＋アルファの内容を独習するしかありません。職業訓練とは、所詮、その程度のものです。 ところで、私が見たところ、半年でどうにかこうにかJavaシステムを開発できたのは２割程度です。でも、その水準は、単に、講習テキストや参考書のあちこちをツギハギしたもの。肝心なクラスライブラリの開発は彼岸の彼方でした。そういう低いレベルにも関わらず、その２割の内訳は、コンピュータ学科の卒業生達と元プログラマ。素人の方は一人もいませんでした。「その程度！」のレベルであっても、完全な素人の方にとっては極めてレベルが高いとも言えるのが職業訓練です。 ＞半年でプログラマになれるなんて夢は捨てよ！ ＞その上で、ともかく就活を最優先せよ！ 卒業一ヶ月前に講師の口から出た言葉は、「プログラマの夢は捨てよ！就活を最優先せよ！」です。多分、質問者も卒業まじかになると、同様のアドバイスを受けることでしょう。 あれから３年が過ぎました。職業訓練を担当したコンピュータ学院は廃校になり、講師陣もチリジリ。これが、時代の流れ。今や、巷には、IT以外の異業種に挑む実力も経験も兼ね備えた元プログラマが溢れています。半年の職業訓練で参入できるほどにIT業界の垣根は低くありません。 ＞どの職種をめざし職業訓練を受けるかかなり焦っています 「どの職種をめざし職業訓練を受けるか？」という問いを立てると永遠に正答には辿りつけないと思いますよ。必要なのは、「何が、我が興味と関心を呼び起こすのか？どれだったら、半年、燃えることが出来るか？」と問うこと。と、思いますよ！
＃４にまたしてもミス。重ね重ねすみません。 １）以下２行を編集する（等号の右辺） thisworkbook.worksheets("Sheet2").range("A1").offset(0, objRange.value) = "'" &objRange.value %", " は thisworkbook.worksheets("Sheet2").range("A1").offset(0, objRange.value) = "'" &objRange.value &", " （最後の項の前、%　は　&　の間違い） なんだか、全角数字で日にちを書いてる気がしてきたので改定版です sub 変換() 　dim objRanges as range 　dim objRange as range 　dim nColor as integer 　dim nDay as integer 　 　set objRanges = Range(selection.address) 　 　for each objRange in objRanges 　 　　nDay=CINT(objRange.value) 　 　　if nDay >=1 AND nDay <= 31 then 　　　select case objRange.font.color 　　　case 255　　　'赤 　　　　ncolor = 0 　　　case else　　　'その他（黒） 　　　　ncolor = 1 　　　end select 　　　thisworkbook.worksheets("Sheet2").range("A1").offset(0, objRange.value) = "'" & objRange.value & ", " 　　　thisworkbook.worksheets("Sheet2").range("A2").offset(0, objRange.value) = "'" & nColor & ", " 　　end if 　next objRange 　set objRanges = nothing 　 end sub カレンダー範囲は、手動で選択としてますが、 カレンダー範囲が固定なら set objRanges = Range(selection.address)　行を 変更してください。 Sheet1 のセルD3～セルJ8（７列×６行）の場合なら set objRanges = Thisworkbook.Worksheets("Sheet1").Range("D3:J8") でもOK。 毎月Sheet1 のセルD3～セルJ8でカレンダーを作ってください。 それなら、見出しもか。 Sheet1 のセルB2に年月入力して、 Sheet2 のセルA1に式[=Sheet1!B2 & ", "]を設定すると良いかも。
No.3の回答者です。 上場している大手のところはその認識であっていると思います。登録されたものを未承認成果としてあげておき、そこから手動で目視チェック（同一人物の複数登録などを弾く）しつつ承認作業をしています。アフィリエイトタグでない場合は単純に被リンク元を追うだけで画像のページには飛んでいないと思います。
会社として別事業をやっていれば、別の収入もあるでしょうけど、アフィリエイト仲介事業と言うことなら、広告主からの収入だけでしょう。
簡単に言うとWEBのクッキーという機能を使っています。メーカーサイト（＝広告主）とアフィリエイタサイト（＝広告）にはそれぞでしかけ（HTMLの埋め込みタグ）があります。 お客さんはフィリエイタサイトのバナー＝広告をクリックした際、それがクッキー機能によってお客さんのパソコンに情報（どの広告を見たか）が自動的に記録されます。次にメーカーサイトで買い物する際にその情報が管理会社に送られます。 そうすると管理会社どの広告によって買い物があってねという実績の集計が出来訳です。
受け入れ検査で品質が確保されていない納入物は検収しないのが当たり前です。 今回の様なケースでは品質不良で返却、勿論支払いも延期。 場合によっては被る損害に相当するペナルティを課すことも考えられます。 検査ではしっかり仕様書と異なる結果を示す資料を揃えておくことです。 ところで、契約書や要求仕様書はしっかり揃っているのですよね？ ソフトウェア開発でよく失敗するのは、口頭指示や常識等として必要な仕様をしっかり文書化していないことで起こっています。
　私個人としては、ＩＴ系と言う言葉は曖昧すぎて嫌いです。 　私の中では、ＩＴ系はネットを利用した自社サービスを展開している企業であり、あなたが記載されているのはソフト企業と分けてみております。 　業界１０数年で、派遣型企業にも在籍していた事があります。 　この業界の構造はわかってますよね？。 　ソフト業界の多くは、下請であり、客先常駐型の企業が大半と言っても過言ではありません。自社に持ち帰って開発をしている企業でも客先常駐をしている部隊を持っている企業も普通にありますし、社員全員が客先常駐の企業もあります。 　 　あなたの場合は、後者の企業と存じます。所謂、請負とは名ばかりの協力会社という位置づけであり、実質派遣会社からの派遣さんと同じ就労環境です。 　会社にはまともな開発環境が無い企業がほとんどですし、誰が社員としているのかもわからないです。 　営業は、人売りです。受注先が決まらなければ、待機という事もあります。その間は自習と称するものであり、当然にプロジェクト経験がカウントされません。 　まして、企業がそういう経営姿勢ですので、ＳＥにすらなれない人も多く、ＰＧとしての作業も出来ない人も中にはいます。ＰＭにはまずなれないと思ってください。 　 　今は、ＩＴ系企業が多く存在するようにもなり、元請けのメーカでは、エンジニアの囲い込みを図る為に、発注下請企業の選別も１０年位前から始まっており、この手の常駐派遣型企業は衰退もしてきてます。 　就労先も業界としては、ホテル暮らしやウイークリー暮らしをさせられる事がありますが、派遣型の最たる事は、通勤距離が遠方の場合もあるという事です。また、途中で参加終了ということもありますので、ころころ場所が変わることがあります。 　営業が、送り込むエンジニアの経歴を嘘をついて客先に売り込む会社もあります。 　自分がやりたい分野に１００％入れる確証は無いと思ってください。 　制御をやりたいなら、最初から制御を扱っている企業にはいれば済む事です。確かに、１０数年前の一時期、制御系の経験者募集が非常に多かったです。その時は携帯電話ですね。でも、一段落した今、募集ないですよね？。確かに色々経験はできるでしょうが、扱われるだけの商売ですよ、客先派遣型は。しかも若いうちだけです、年取ったら単価の件で売り込みできません。 　 　業界自体がブラック扱いなので、客先派遣型だけがブラックとは言い切れませんし、残業もさほどなく、家からたまたま近い場所に何年もと言う人もおります。要は、どのようなプロジェクトに参加できるか？になり、受け取り方は人それぞれです。客先常駐でもメーカ直ならば、ありでしょうが、間に別会社が入るとなると、そのうち不満は出てくるかもしれません。 　確認しますが、制御系、組み込み系をしたいとの事ですが、詳細な分野は何ですか？。理系卒でないと採用してくれない企業も存在する分野です。ちなみに私は文系卒ですが、元々インフラ制御のエンジニアです。通信系もやりました。文系の場合、結構勉強量多くなります。
具体的に東芝インバータの機種は何でしょう？ http://www.inverter.co.jp/ 東芝製では気に入らない理由は何でしょう？ 外寸？価格？客先指定？ 負荷は何でしょう？ ファン？ポンプ？コンベア？ ドリルの主軸？ 加減速度は何秒？ 負荷慣性モーメントはいくつ？ 負荷トルクはいくつ？ 容量計算したの？ http://www.inverter.co.jp/app/APP/B-01/3_2.asp 現状で負荷率はいくつなの？ 負荷率１００％もないのなら国産なら何処のメーカでも変わらないが 操作性と気分とビジュアル性の問題が残るだけ http://www.mitsubishielectric.co.jp/fa/products/drv/inv/index.html http://www.fujielectric.co.jp/products/inverter/map/ そもそもオリエンタルのインバータは何故ダメなの？ http://www.orientalmotor.co.jp/products/speed_control/bhf/features/
馬場史郎という元SEでITProで連載されている方はその旨を主張されていますね。 例えば以下とか。 http://itpro.nikkeibp.co.jp/article/COLUMN/20130702/488961/
　VBA等を使用して自動化する事は確かに可能ですが、選択した問題のみをコピーする事が出来さえすれば、「定められたワードの文章に転記」という事を手動で行なったところで大した手間ではない様に思えますから、VBAを使ってまで自動化する必要は無いのではないでしょうか？ 　もし、完全な自動化までしなくとも良いとした場合には、VBAを使わずとも、Excelに一般的に備わっている機能を使用するだけで、選択した行に入力されている問題文のみを（大した手間を必要とする事なく）コピーする事は十分可能です。 　今仮に、ExcelのC列において1行目には「問題文」等の項目名が入力されていて、2行目～101行目に100題の問題文が入力されているものとします。 　又、A列はコピーする問題を指定するチェックを入れるための欄として使用し、A列のセルにチェックを入れると、チェックが入っている行におけるB列のセルには、「問1」、「問2」、「問3」・・・等の問の番号が、上から順番に表示される様にするものとします。 　まず、B1セルに「問題番号」等の何らかの文字列（数値以外のデータであればどの様な文字列であっても構いません）を入力して下さい。 　次に、B2セルに次の関数を入力して下さい。 =IF(INDEX($A:$A,ROW())="","","問"&COUNTIF(B$1:INDEX(B:B,ROW()-1),"*?")) 　次に、B2セルをコピーして、B3以下に貼り付けて下さい。 　次に、A列～C列の列全体をまとめて選択して下さい。 　そして選択範囲を変えずに、そのままオートフィルターを設定して下さい。 　尚、オートフィルターの設定方法は、ExcelのバージョンがExcel2007以降のものと、Excel2007よりも前のものとでは、設定方法が異なりますので、以下のURLのページを参考にして、質問者様が御使いになられているExcelのバージョンに合った方法で設定を行って下さい。 【参考URL】 　よねさんのWordとExcelの小部屋 > Excel2003基本講座 > オートフィルタ(データ抽出) > オートフィルタ 　　http://www.eurus.dti.ne.jp/~yoneyama/Excel/filter.htm#autofilter 　よねさんのWordとExcelの小部屋 > Excel2007基本講座 > フィルター（データの抽出) > オートフィルタの使い方 　　http://www.eurus.dti.ne.jp/~yoneyama/Excel2007/excel2007-filter.html 　ここまでが準備段階となります。 　実際に選択した問題のみをコピーする際には、以下の様な操作方法となります。 　まず、コピー元として選択する問題がC列に入力されている行の、A列のセルに、「1」でも「2」でも、「a」でも「b」でも、「あ」で「い」でも何でも構いませんから、何らかの値を入力して下さい。 　そして、選択を済ませてから、A1セルの右端に表示されている黒い逆三角マーク（▼）のボタンをクリックして下さい。 　するとフィルターのダイアログボックスが現れますから、その中にある「(空白セル)」と記されている箇所をクリックして、その箇所のチェックのみを外して下さい。 　すると画面上には選択した行のみが表示されますから、B列～C列における値が表示されている行を全て選択して下さい。 　後は通常のコピーと同じ要領で、選択したセル範囲をコピーして、予め書式を決めておいたワードの画面に値のみを貼り付けて下さい。 ※ある程度詳しく書いたために長くなってしまいましたが、実際に行なった場合には、大した手間ではないと思いますので、1度試してみて下さい。
保守業務契約でお客様が受け取るものとは何でしょうか? 契約したレベル以上のサービスですよね。 従って、保守部門としては常に提供したサービスが一定以上の サービス品質を保っているか可視化して評価されなければなりません。 →問い合わせを受けてから動く →めんどくさいことは避けがち ・・・お客様のアクションに対して受身であることは 　　　かまいません。ただし、問い合わせに対してベストな 　　　回答ができたかどうか、または、予想される問い合わせに対して 　　　満足できる回答ができる準備ができているか確認する必要が 　　　あります。 →範囲を超えるとすぐお金の話になる ・・・これは正しい判断です。 　　　保守もビジネスですから対価を頂くことは当然です。 　　　お客様の要望を確認して契約することができれば新たなビジネスへ 　　　展開することも可能でしょう。 　　　その時、お客様のサービスへの満足度が不十分であれば 　　　その芽を摘むことになります。 保守も開発と同様に機能アップが必要です。品質が上がらなければ 陳腐化したこととと同様です。 ・まず、サービス品質の評価基準があるか確認してください。 ・お客様へ可視化された報告を正しく行っているか確認してください。 ・評価にたいするレベルの低下がある場合は対策を検討、実施してください。 保守に携わるエンジニアはこのような活動ができる人だと思います。
http://freesoft.tvbok.com/tips/win7rc64/readyboostusb.html readyboostという機能です。一応USBフラッシュメモリでreadyboost対応、メモリの３倍の容量が推奨とのことです。リンク先の高速タイプの目安という項目をご覧になればいいかと思います。 上に「一応」と書いたのは、昔VISTAのＰＣで試してみたことがあるのですが、早くなった感じがしなかったのと、USBフラッシュメモリがかなり高温になったので、すぐ壊れそうだな。と感じたからです。ただ、ネット上では効果があったという意見もあるので、「ダメもとで試してみる。」ぐらいのお気持ちなら、やってみてもいいかもしれません。 一番いいのはＰＣのメモリの増設だと、思います。
OSは？（VistaやWindows 7ではUACが関係する） ドライブ直下にフォルダを作り、インストールした場合、誰でも書き換え可能な権限が付与され、Program Files/Program Files (x86) 以下にフォルダを作った場合、管理者権限がないと書き換えられない権限となる仕様。 Program files直下に指定したフォルダを作成し、インストールした場合エラー（起動時に「Assembly Version Information 2008 は動作を停止しました」とのエラーで起動できない）の可能性あり。 参考URL
タッチパネルに「エラーです。コード:xx-xx※ 電源を入れ直してください。」というメッセージが表示されていませんか？※ xx-xx はアルファベットと数字が表示されます。 ↓ 操作パネルの通信中ランプが点灯、またはデータランプが点灯／点滅していないことを確認してから[電源]キーおよび主電源スイッチを“切”にし、10秒以上経ってから主電源スイッチ、[電源]キーの順で“入”にしてください。 →本機のイラスト (A)、(D) （42ページ） 何度か電源スイッチおよび[電源]キーを入れ直しても同じメッセージが表示されるときは、故障の可能性がありますので、この場合は、すみやかに使用をやめて電源プラグを抜き、お買いあげ販売店、またはセーフティーガイドに記載のお客様ご相談窓口に連絡してください。（ご連絡の際は、表示されているエラーコード番号も一緒にご連絡ください。） ということで、電源を入れ直しても駄目なら故障かもしれませんので、メーカー等に連絡するしかないのでは？
UWSCなら14日間pro体験版が無料で使えるので、IEの操作ならpro体験版にあるRecIE.exeを使うと保存出来ます。 値段も高くはないので、買っても良いと思います。 他にはIEのCOMの操作等を使えば行いたい作業を確実に行えると思います。 上記の内容とは根本的にアプローチの方法が違いますが、質問のスクリプトについて回答すると、 無限に可能なかぎり速く連続してクリックしたい画面表示の場所をクリックする。 と、なっているので、 実際にクリックしてからブラウザが次のページに遷移するまでボタン連打することになると思います。 私なら、同じアプローチ方法だとしてもクリックの直後にページ遷移が完了するまでの判定をして待つ処理を追加します。
私も同じような境遇で一時期オープン系の開発を離れていた時期がありました。 その時に過去の勘を取り戻すためにいくつか書籍を読んだ経験があります。 オススメとしては、エンジニア道場出版の『はじめての設計をやり抜くための本』が 一番勉強になったように思います。 「はじめての」と銘打っているだけあって全体を広く浅く理解するのに最適です。 ※もし、ひっかかる部分があれば別の専門書で深く掘り下げることとで 　より実務よりの知識を補完する事ができるかと思います。 個人の一例ですが、ご参考になれば幸いです。
　90年初頭社会人になり、今はユーザ側にて数年社内ＳＥをしているものですので、お答えには偏重があると思いますが、ベンダ側にいても受注内容範囲が決まっているならば、同じであるので、そこはご自身でご判断下さい。 >当時は汎用機からオープン系システムへのリプレイスがおおく > 　既に90年初頭においても汎用機からのリプレース案件は多かったです。ＪＡＶＡの台頭もありましたし、Ｏｒａｃｌｅ等のＤＢソフトを用いるのも普通ではありましたが、私がしていた分野は特殊でもありましたことで巷のＤＢは利用した事がありませんでした。また、ＣＯＢＯＬやメーカ独自の言語も多くありましたが、いきなり海とも山ともわからないＪＡＶＡより、ＣやＣ＋＋での開発にシフトして行った時期です。 　ご質問者様の場合、2000年問題でリプレースしなかった企業様が慌ててリプレースし出した時期かと思いますので、そう感じられたのだと思います。 　 　現行の主流は、やはりＷｅｂ関連だと思いますが、分野や規模、ターゲットにより、全てがＷｅｂ関連の受注で満ち溢れているとは言い切れないと思います。転職サイトでは、業界柄ベンチャーなど新規に入り込みやすい業界でもあるため、少数でもできるＷｅｂ関係、そしてシステム開発というよりはソフト開発レベルの物であることで、募集が多く見えているように思えます。 私自身数回の転職を繰り返しているので、そう感じてます。 　 　また、基幹系などのシステムにおいても、パッケージやクラウドでの利用が段々多くなってきております。よって、その仕組みを考えて自社製品として作成するか、下請けとしてカスタマイズする企業かになるかと思います。 　スキルはあって良いものですが、今後は仕組みを理解してそれを構築でき、昔から言われてますが、提案できるエンジニアでないと、いつまで経っても捨て駒のように使われる存在になってしまうと感じてます。その為、私は開発サイドを捨てて、ユーザサイドに移りました。その方が、多種多様なベンダと話す機会が多く、彼らの嘘、行動内容が良く比較もできます。勿論自社開発できるならば、あれこれできる余裕もあるので、よろしいです。 　 　いずれにしても、色々な技術を使えるのは良いことですが、こうあれこれ進化が早いとすぐ廃れますし、自分が良いと思っている製品が、井の中の蛙だということもあります。スキルも必要ですが、それ以外の事を年齢が上がるにつれ、考慮すべきと思います。 　ＳＩと言っても、多種多様です。下請けが激しいと単なる派遣会社と同じです。 　ソフトベンダと言ってもソフト会社の場合もあれば、自社製品作成のソフト会社もありますので、そこで何が出来るかを確認されて転職に望まれた方が良いとは思います。
Apache 2.0ライセンスというのは、Apache License, Version 2.0のことですよね？ これのことです。 http://www.apache.org/licenses/LICENSE-2.0.html Spring Frameworkのサイトからもばっちりリンクを張ってあると思います。 http://www.springframework.net/license.html 和訳 http://sourceforge.jp/projects/opensource/wiki/licenses%2FApache_License_2.0 > Apache 2.0ライセンスのルールとして成果物に下記定型文を記載すれば、使用しても問題ないのでしょうか？ > Copyright [yyyy] [著作権所有者の名前] 全く違います。 上記"4. Redistribution."あるいは和訳の"4. 再頒布 "を読みましょう。 簡潔に説明すると、オリジナルのライセンスおよび権利者を明示し、あなたが改変した箇所の権利関係を明確にしてください。具体的な手順は"4. Redistribution"に書いてある通りです。 > また、オープンソースライセンスのGPLとか関係あるのでしょうか？ 両方共オープンソースのライセンスというくらいしか関係ないですね。一応、GPLのソフトウェアと混ぜて使えるかについての説明は次に書いてあります。 http://www.apache.org/licenses/GPL-compatibility.html (日本語での説明) http://ja.wikipedia.org/wiki/Apache_License Apache License, version 2.0はGPL version 3と混ぜられますが、混ぜるとGPL version 3になりますので、ASFはそれを推奨しません。 どういった形で公開するか知りませんが、最低でも次の文言をユーザーにわかるところに入れましょう。 「このソフトウェアはSpring Framework (http://www.springframework.net/) を使っています。Spring FrameworkはApache License, version 2.0 (http://www.apache.org/licenses/LICENSE-2.0) の元で公開されています。」 Spring Frameworkのコードを改変し、それを配布する場合は改変箇所についての詳しいドキュメントを添付しましょう。そこでは、著作権、特許、商標権などについて明記しましょう。
えっと、、 > カラミーショップというネットショップを作成するサイト って もしかしたら、カラーミーショップのことですか。 カラーミーショップ http://shop-pro.jp/ > 購入後にサンクスページを表示させたいと思っています。 > どのようなプログラムやスクリプトを使えば > 購入後に表示することができますでしょうか。 普通に、何も特別な設定しなくても、購入後にはサンクスページが表示されますが・・ 試しに、カラミーショップが用意しているサンプルショップでテストしてみてください。 サンプルショップ http://sample54.shop-pro.jp/
こんばんわ。 前の会社でシステムの保守業務の委託を受ける仕事をしていました。 15万円/月で契約していたのであれば、"(前年度の契約では)保守範囲外の細かい作業"の発生頻度に関わらず、依頼側には支払う義務があります。契約が終わった後で、"作業が発生しなかったのだからその分を返せ"というのは、どう考えても横暴です。そもそもそんなことをいうのであれば、固定額の中での作業を定めた上で、それ以外の作業は出来高払いとする契約を結べばよかったのです。これは力関係を利用した下請けいじめと言ってもいいのではないでしょうか。 ＃両社の社印を押した契約書はちゃんとあるんですよね？ また、過払い請求を行わない代わりに癒着があったと証言しろと言われたとのことですが、これは犯罪の片棒を担げと言われているようなものです。依頼元の会社で何かまずいことが起こったので、前の保守担当者を悪者に仕立て上げようとしているようにしか見えません。 個人的には、一連の流れの言質を取ること(何らかの手段で同じことを言わせて録音する)、その上で前のシステム担当者に何が起こったのかを聞くこと、その結果に応じて(もしくは聞けないのであれば)、法律の専門家に相談すべきだと思ます。参考URLのように、簡単ではありますが無料で相談に乗ってくれる場はありますので、そこで質問をしてみて、プロの意見を仰いでみてはいかがでしょうか。 ただし、#1さんも書かれているように、そもそもその保守金額が市場価格と照らし合わせてどうかという話は別です。同一条件でもっと安い金額で保守をしてくれるところがあったとしたら、そこに乗り換えるのは依頼元の自由なので(複数年契約でもしていない限り)、取引を打ち切られたことに限って言えば、下請けいじめとは言いづらいでしょう。ただし、今回の場合は協力しないのであれば"という脅しにも近い文句が前提にあるので、一連の流れで考えれば不当と言えなくもなさそうですが、立証は難しいかもしれません(依頼元は委託先を見直しただけというでしょう)。 まとめると、 　・過去の契約の過払い請求は横暴。 　・癒着があったとの証言の強要は犯罪の片棒を担げと言っているのも同じ。 　・会社間の契約に関わること + 偽証の強要なので、法律の専門家に相談すべき。 　・取引が止められたこと自体は下請けいじめではない(という言い訳されそう)。 となるのではないでしょうか。
コマンドプロンプトでrouteコマンドを使って経路設定して見てはどうでしょう route add 192.168.100.0 mask 255.255.255.0 192.168.0.1 metric 1 で192.168.100.0/24への設定ができるはずです
現在の設定をどのようにしているか解りませんが、 1.ページ設定での印刷尺度を1：1にする。（レイアウト空間に書いたものの尺度を一定にする。） 2.モデル空間に書いたものの印刷尺度はビューポートのプロパティから標準尺度を変更して行う。
単純に結合して集計すればいいと思います。 select t2.日付(月), t2.日付(日), sum(t1.売上金額) as 売上金額 from テーブル2 t2 inner join テーブル1 t1 on (t1.日付 between t2.日付(月) and t2.日付(日)) group by t2.日付(月), t2.日付(日) order by t2.日付(月); もし、テーブル1にテーブル2の1レコードの期間内に該当するレコードが1件もないことがあるのであれば、 inner join（内部結合）としているところを left join（左外部結合）にしてください。 なにが難しい単語に当たるのかがこちらには分からないので、意味が分からないところはご自身で調べてみてください。
プリンタの不具合の可能性は確認しましたか？ テストプリント、清掃してみましたか？ http://h20566.www2.hp.com/portal/site/hpsc/template.PAGE/public/psi/topIssuesDisplay/?sp4ts.oid=25253&spf_p.tpst=psiContentDisplay&spf_p.prp_psiContentDisplay=wsrp-navigationalState%3DdocId%253Demr_na-c01784414-8%257CdocLocale%253Dja_JP&javax.portlet.begCacheTok=com.vignette.cachetoken&javax.portlet.endCacheTok=com.vignette.cachetoken http://h20566.www2.hp.com/portal/site/hpsc/template.PAGE/public/psi/topIssuesDisplay/?sp4ts.oid=25253&spf_p.tpst=psiContentDisplay&spf_p.prp_psiContentDisplay=wsrp-navigationalState%3DdocId%253Demr_na-c01777976-7%257CdocLocale%253Dja_JP&javax.portlet.begCacheTok=com.vignette.cachetoken&javax.portlet.endCacheTok=com.vignette.cachetoken
・ズーム機能を使用して画面の表示内容を拡大すると、スクロールバーに文字が重なる場合あり。 ・ナビゲーションプラットフォームは、Windows 7で拡張された文字に含まれるUnicodeの補助文字には対応しない（基本多言語面BMP以外の文字）。Webブラウザの文字サイズは「中」以下に設定 ・システムフォントのサイズは「標準」に設定 ・「F5」キーやWebブラウザの「更新」ボタンを使用しない。 ・Webブラウザの「セキュリティの設定」アクティブスクリプトの設定を「有効にする」 参考URL
＞下請業者候補へ見積依頼をかけるときにお客様名は非開示でも問題ないでしょうか？ 下請け業者候補からみればあなたの会社が"お客様"です。 見積に必要な情報以外は開示する必要はありません。 客先での作業が必要になるようであれば、所在地などは開示する必要があります。 お客様からすると、新規システムであるとか、新規設備の導入を検討していること自体が社外秘であり、それを第三者である"下請業者候補"にむやみに漏らすようなことはしてはなりません。 お客様から求められたことではなく、こちらから提案したものであっても、誤解をさけるために外部に漏らしてはなりません。 お客様名を開示するのは、御社が受注した後、選定された下請業者にのみです。 ただし、顧客名を知らなくても業務に差し支えがないなど、開示する必要が無ければ、開示すべきではありません。 成約後であっても、やはり、第三者に漏らしてはならないというのは当然のことです。 導入事例などで紹介できるのは、お客様の了承を得てからです。 ＞一般的にお客様名を開示しないと勝負価格を提示してもらえないといった話 お客様名を開示しない、ということより、商談の確度を推し量られる、ということはあると思います。 実現性の低い話だと思えば、"おつきあい"で見積もりを出す、ということはあるでしょう。
YAMAHAからのオフィシャルな回答としてはサポートしていませんということになると思います。 http://www.rtpro.yamaha.co.jp/RT/docs/l2tp_ipsec/#checked_client ググると機種は違いますがRTX810とWindows 7で接続出来ましたという例も出ているようですので、 YAMAHAのVPNクライアントを使用しないのであれば自己責任でトライすることになると思います。
＞このルーターはそのまま使用できるのでしょうか？もちろん、設定変更は必要だとは理解しています。 もちろんルーターはそのまま使用できます。 設定変更は必要な場合が多いですが、プロバイダ等条件によっては不要な場合もあります。 YAMAHAルータにて何回か回線変更を行っていますが変更になるものとしては、 ・PPPoEの認証情報 ・固定グローバルIPアドレス だと思います。 質問者さんの環境では固定グローバルIPアドレスのようですので、IPアドレスが変更になる場合がありますので、 プロバイダに確認しておく必要があるかもしれません。 （実際に私の実施した環境にありました）
こんにちは ＃２の補足です >>大元のエクセルからだと開きます、 > 　このソフトのアイコンの上で右クリックしてメニューを開き「コピー」を選んで複写しましょう。 > 　そのあとアイコンを置きたい場所に移動して右クリックしてメニューを出して「貼り付け」を選べば新しいショートカットが出来まする(^^)v 　質問者さんのいわれた「大元のエクセル」がC:ドライブの「Program Files」などのフォルダーの中にある「excel.exe」の場合には、コピー後にアイコンを置きたい場所に移動して右クリックしてメニューを出して「ショートカットの貼り付け」を選んでくださいねm(^^;m
始めまして 私はコチラで製作してもらいました http://dazaizai2000.daiwa-hotcom.com/wordpress/ カラーミーやアマゾンやヤフオクなどの システムなど、結構その世界では有名な会社なので 安心して任せられると思います。 いまでもカラーミのシステムは有効活用していますし 操作も楽ちんですよ しかし 打合せが必要なので 自分なりに計画して来してください。 売上UP・アマゾン/カラ-ミ/他システム開発 サクラシステム http://dazaizai2000.daiwa-hotcom.com/wordpress/
　求める側の希望に則したスキルを持っている事が望ましいという言い方しかできない気が致します。 　 　ご自身がどういう道を進みたいのかにもよると思います。 　私自身ＣＯＢＯＬのような旧言語しか持ち合わせていないエンジニアはまずいでしょうと思う一方で、まだＣＯＢＯＬシステムは存在もしますが、ずっと特定業界や特定顧客に特化した知識を持っているとなれば、ＣＯＢＯＬしか知らなくても良いと思います。その方でないとわからない、やって欲しいと客から言われるという意味です。 　 　昔と違って、オフコン、ＣＯＢＯＬ、RS-232C、専用回線だけの環境で、何年でも飯が食っていける業界でなくなりました。ＰＧをやってＳＥやってＰＭという年功序列的な経験を経て一人前に育てるという気風も最早ありません。職種自体が細分化もされてきてますよね。ＰＧと言ってもスーパープログラマーもいますし、サーバエンジニアという職種も出てきてますので、何から何まで自分ひとりでやらねば認められない（システムが巨大化すればするほど専門特化職種が集まってきます）時代ではなくなってます。 　 　ちょっと前は、ゼネラリスト（オールラウンドプレイヤー）がもてはやされていたようでもありますが、今は専門特化した方が好まれもするようで、ＰＧならば、ＣＯＢＯＬだけでなく、Ｗｅｂ系言語まで操れる人とか、ＤＢエンジニアなら、各種ＤＢの構築経験があるとかと言った具合ではないでしょうか？。 　 　しかしながら、年齢上ＰＭ経験が必要というのは無きにしも非ずかと存じます。 　私自身は、こんな人を首にしたいというならば、ＰＧやＳＥに従事している部下よりも、プロジェクト管理能力、育成計画の無い部課長クラスを首にしたいですね。
こんばんは！ VBAでの一例です。 画面左下の操作したいSheet見出し上で右クリック　→　コードの表示　→　VBE画面に ↓のコードをコピー＆ペーストしてA・B列にデータを入力　→　Enter　としてみてください。 Private Sub Worksheet_Change(ByVal Target As Range) 'この行から If Intersect(Target, Range("A:B")) Is Nothing Or Target.Count <> 1 Then Exit Sub With Target If .Column = 1 Then .Offset(, 1).Select Else .Offset(1, -1).Select End If End With End Sub 'この行まで ※　未入力またはセルを変更しない場合、Enterを押すと普通に下のセルに移動します。m(_ _)m
素数を考えます。 素数は自分と１以外の数では割り切れないものですね。 仮に１１を考えて見ましょう。 これをModulo(法）と呼びます。 １１より大きいものがない世界です。 この世界では、１１は１１でいいのですが、１２はどうなるか １２は、１１の次ですから、１１を法にした世界では２になります。 こういう不思議な世界では１１までしか数字がありません。 たとえば２という数字を考えます。 ２の２乗は４ ２の３乗は８ ２の４乗は１６　これは１１が法の世界では６です。 ２の５乗は？　いま６だったので、１２になりますが、１１が法ですから２です。 さて、これを、２の代わりに３，４，５，・・１０までずっとやってみてください。 驚くことがおきているはずです。 どんな数字でも５乗すると、元の数字に戻っているはずです。 もう少ししつこくやってみてください。 １０乗しても、１５乗しても、基の数字に戻ります。 法といっているものは秘密鍵というものです。 ここで公開鍵を１２、とするとします。 提示する数字は１２乗した数字だといっているのです。 そして何かの数字をいくつか提出します。これはべき計算をしたときの１２番目のものです。これが暗号です。 オリジナルの法がいくつかわかっていたら、（１１だということがわかっていたら）公開鍵が１２は、実は２乗された数字だといっているに過ぎないことがわかります。 １１が法なら５乗で元にもどりますのでその数字の３つ先に複合化した数字があるはずです。またはこの数の平方根がオリジナルの数字のはずです。 １１というのは説明のためにかんたんな数字を選んだだけです。もっと大きい素数を法として使うのが安心です。 これをアルファベットの並び順なんかに変換していくと、だんだんわからないことになります。 これがRSA暗号複合の仕組みです。サルでもわかる簡単さです。 サルにわからないように解析するのは数式をつかってみてください。
数学的素養が無いと理解できないです http://ja.wikipedia.org/wiki/%E5%85%AC%E9%96%8B%E9%8D%B5%E6%9A%97%E5%8F%B7 簡単に言うと、大きな数の素因数分解は難しい って事です
許諾契約の一種。 ありがちな契約だけど著作権法では「許諾」により利用を認めますが、「利用権」というのは規定されません。 産業財産権では通常実施権、専用実施権、通常利用使用権、通常使用権と契約相手に権利を設定する形式ですが。 まぁ許諾を与えるというのも実質的に利用権を与えるのと同じですし、債権としての利用権としては間違いじゃなし。 雛形は本に付属したり弁護士等のホームページに載っていることもありますが、どこかはうろ覚え。
shakirillo　さん これを機会に、中古のパソコンを買って、フリーのサーバーソフトをいれて、自分でサーバーを構築し、その上で、いろいろなツールを試してみてはいかがですか。 私は、起業する前は、デザイナーをしていましたが、Webサービスをやるには、プログラムの知識が必要だということで、技術者の友人に、教えてもらいながら、自宅に、中古のパソコンをかって、その中に、サーバー（ソフト）を構築して、一通りの、フリーウェアーをその上ではしらせたり、しました。 現在は、遠ざかってしまっていますが、その当時の体験は、貴重なものになっています。 ネットには、技術者のメーリングリストや、掲示板などが多数存在していて、力強い見方になってくれます。 どんなツールや、コミュニティーが適切化は、個人のスキルや、やりたいことで、変わってきますので、まずは飛び込んで、微調整することで対応していけばよいと思います。 知識ゼロの私でもできたのですから、すでにシステムエンジニアであり、周りに仲間もいるshakirilloさんならいわんおやです。 まずは、同僚や、上司に、現在の仕事の幅を広げるために（この大儀名文が大切ですよ）いろいろと勉強したいので、Webまわりのツールについて、おすすめを教えてくださいと声をかけてみるとよいですね。 shakirilloさんのスキルの程度をしっている方々なので、適切なアドバイスをしてくれるはずです。 Webのインターフェイスの開発は、ドリームウィーバーというアドビ（元はマクロメディアの製品でした）のソフトが一般的です。プログラムも簡単に埋め込めますし、開発者の方でも、ボリュームのあるサイトをバッチ処理で、一括変更するのに使っているとききます。 やる気も十分なようですし、shakirilloさんならできますよ。 参考になれば幸いです。
テーマの作り方ということでよろしいのですね。 ローカル編集する事になるので、サーバー環境やPCの種類などは関係ありません。 まず\wp-content > themes > toshin > themes のフォルダにheader.phpのファイルを作る。 index.html のheader.phpにしたいテンプレ部分に <?php get_header(); ?> のタグを入れる。 そうするとその部分にheader.phpが読み込まれます。 詳しくはこの辺を参考にすればいいと思います。↓ ■WordPress オリジナルテーマの作り方 3.0+ http://www.webcreatorbox.com/tech/wordpress3-original-theme/ ■はじめてWordPressのオリジナルテーマを作るときの参考になればと思って書きました http://webdesignrecipes.com/first-time-wordpress-origin-theme/
ただ作るだけでいいなら （会社概要や地図やサービス紹介があって写真のせる程度） ちょっと勉強すれば作れますし、 一般家庭で契約してるプロバイダでも１個ぐらい タダでホームページ作れるようになってますけど。 それで検索したら挙がってくるというものではないです。 例えば東京駅、居酒屋、で検索しても、 いくつもある中から上の方に挙がってくるには、 しっかりした構造やら、見てもらってる回数やら、なんやら 様々な対策が必要で、業者に依頼するとそこまで対策してくれます。 更新もマメにしないと駄目です。 素人が作るだけだと、会社名で検索してもなかなか 出てはこないってレベルです。 きちんとアドレスを入力したら、ようやく見れる、というものです。 これから受けられる会社のようですので、 しっかり調べられているのは良いことですね。 作りたい「目的」が重要なので、 お話合いしてみてください。
>今後、継続するにあたり、どういった働きかけをした方がいいのか とりあえず、まず、システムが止まったら各社員の業務がどうなるか説明したら？ システム停止が事業継続性に対する非常に重大な問題を起こすという認識を上層部がもっているか どうか、が第一。 次に、システムが法令の変更や外部環境の変化に対応できなくなったらどうなるか説明したら？ 販売システムの変更ができない状態になって税制変更が発生したらどうなるのか？ 近く生じるであろう話としては、消費税の計算方法が変わったのにその対応ができなかったら どれだけの人間を投入して手計算しないといけないか、とか。 そして、現状の要員の定年時期とかを説明すれば ・・・システムリプレースの時期がそのあたりか、とかと考えられてしまうかもしれませんけど。。。 （それはそれで多大なコストがかかるってことも説明しないといけないかもしれません。 　一方で新しいシステムを入れるのなら新しい要員も配属されるかも。。。） で、こういったリスクに対して、アウトソーシングするでもいいし、新人でも他の部門の社員でも いいから配置転換するでもいいので対応していかないといけないと説明すれば （・・・わかってくれなかったらどうしようもないですが。）と思います。 ちなみにアウトソーシングは、安くつくのは、結局アウトソーシングしないところを他の人が するためと思っておいたほうがいいです。 社員の質問対応やハード障害対応やら、アプリケーションの変更やら・・・ アウトソーシングすると融通が利きませんので、全部メニューに乗っけるととんでもなく 高い金額になるのが一般的です。 （アウトソーシングする業務の一部が漏れていて、後で困ったとかもよくある話ですが）
ttp://www.edenki.co.jp/shopdetail/031013000001/order/ [RSC-15] スライドトランス据置型　単相２線200V 15A 電源 スライダック_据置型【東京理工舎】 ttp://akizukidenshi.com/catalog/g/gI-04682/ 高耐圧ブリッジ・ダイオード　１０００Ｖ３５Ａ　ＫＢＰＣ３５１０ ttps://www.sengoku.co.jp/mod/sgk_cart/search.php?maker=%EF%BC%AC%EF%BC%B3%EF%BC%A9%E3%82%AF%E3%83%BC%E3%83%A9%E3%83%BC%EF%BC%88%E6%97%A7%E5%90%8D%EF%BC%9A%E5%90%89%E5%B7%9D%E9%87%91%E5%B1%9E%EF%BC%89 Ｌ​Ｓ​Ｉ​ク​ー​ラ​ー​（​旧​名​：​吉​川​金​属​） 例　１５Ａ　脈波整流ですが 部品リストで見当付くのでは？
実際の温度誤差は何℃なのでしょう？ http://www.fa.omron.co.jp/products/family/3157/specification.html 指示精度 熱電対 ：（指示値の±0.3%または±1℃の大きい方）±1ディジット以下 ＊1 つまり１０００℃なら±３℃の許容誤差　 これは機器の精度ですので２素子熱電対で別々に接続してもこれだけのバラツキは出ます 更に、バーンアウト機能 http://www.m-system.co.jp/mstoday/backnum/2012/10/mame/index.html ほとんどの温調器には標準で付いています そして必ずしもバーンアウト電流が公開されているとは限りません しかも、ＤＣ電流とも限りません（パルス電流の場合も） 多く産業用装置の場合は１０００℃で数度違っても　 それがどーしたレベルなので気にしない　 （熱処理炉等では炉内の温度バラツキの方が遥かに大きい） 更に 補償導線自体に誤差がある http://www.fukuden.co.jp/product/pdf/pdfsho/hosensetumei.pdf ７／９ページ ０．１℃の温度精度を求めるなら↓ http://www.rkcinst.co.jp/techno/01/techno_01.htm 機器端子台自体が誤差要因 オメガコネクタ http://www.nagoya-kagaku.com/manufacturer.html 精度を要求するなら必需品
カタログ等をチェックしましたが、取付方向の制限は特にないよう です。 下のURLをクリックしてメーカに相談すると良いでしょう。 最上段の[富士電機ブランド品]の右横の電話番号です。 [技術相談サービス/富士電機機器制御(株)] http://www.fujielectric.co.jp/fcs/support_contact/contact/goannai.html
＞製造関係の転職では、前の職で３年以上は業務 ＞に従事していないと不利になるんでしょうか？ 不利っていう意味が不明だけど、評価はされないです。 未経験者だからゼロからのスタート。 高卒なら高卒新卒の給与から、大卒なら大卒新卒の給与から、です。 30歳の年齢を考慮してもらえないので、最初の給料は低いレベルになります。 その後、会社業績に連動して給与は上下するけど、同じ年齢の人には追いつかないのが普通。 販売系と違って「華々しいお手柄で給与倍増」ということがないのが製造業の特徴かも。 採用されやすいかどうかは、その会社への応募状況しだいです。 同じ未経験なら、若い人が有利。
計算式は知りません　実経験で行っております。 たとえば鉄の車輪を軸に固定する場合　外形Φ150　軸径Φ35　の場合　車輪の内径は熱すると0.15ｍｍほど大きくなります よって車輪内径はΦ35　-0.7位　（Φ34.3）位に加工し冷えるとまず外れません　ただし失敗した場合に中心軸を削り外してみると0.01ｍｍも小さくなっておりませんこの寸法で材料が固定されたのでしょう。 上記の事を焼嵌めと呼んで軸との固定を行っています。 反対にベアリングの外輪などを固定する場合は冷やし嵌めと言って大きな材料に内側からはめ込んで固定する場合に ドライアイスの入った箱に部品を入れ寸法をマイナスになるよう確認しながら縮めてはめ込みます。これも外れません 今は永久固着と銘打った接着剤を使うこともありますが。永年の信頼性に乏しいので上記の様な旧式作業をしています。 結論として計算は分かりませんが　冷やせば縮まります。（ただし軸の中空の物で芯まで鉄の経験はありません。） 余計な事ですが通常ベアリング内輪などは締まり嵌め　（回転熱により内輪が膨張するためあらかじめマイナス寸法で組み付けます　外輪は同じく熱膨張で大きくなるので隙間嵌めで組み付けます） 　ご質問は材料の縮みに付いてなので質問外と思いますが失礼いたしました。
ColumnBでFormulaを作って下さい。ColumnBの一番下の番号5の下のRow15をクリック、そこに回答のFormuraを作って下さい。 間違いなくROWの前にはスペースを入れ、回答とまったく同じように作成し、Ctr+Shiftを押さえてEnterを打って下さい。Row15に1が出ます、右下のフィルハンドルを押したままRow19まで下げてください。 （#NUM!が４個続くのは、Ctr+Shiftを押さえてのENTERを間違いなく）
お示しの元の表がA１セルからC３セルの間に有るとします。 作業のための行としてP１セルには次の式を入力して右横方向（X１より右側の列まで）にドラッグコピーします。 =IF(COLUMN(A1)>9,"",IF(COUNTIF($A$1:$C$3,COLUMN(A1))=0,COLUMN(A1),"")) お求めの答えの表は例えばE１セルに次の式を入力してM１セルまで横にドラッグコピーします。 =IF(COLUMN(A1)>COUNT($P:$XX),"",SMALL($P:$XX,COLUMN(A1)))
SAPは会計の発祥ソフト ということもあり、 FIがとっつきやすいかと思います。 以前、勉強会に一度参加しました。 初心者向けの講座があり良かったです。 参考までにリンクを。 http://www.echwf.com/ofkai1.htm
こんにちは。 同じくIT業界で働いている者です。 私は新卒入社1年目ですが、参考程度にしていただきたいです。 私も、手取り17万、検査業務を担当する予定です。 同じく、だいたい2年間はみるということを言われています。 No.4の方もおっしゃっていますが、 ・昇給（昇格？）の条件 ・査定の頻度、内容 を上司の方にお聞きするのがいいと思います。 ちなみに私の職場の場合、 基本情報および応用情報の資格は昇格の条件になっていると聞きました。 査定では日頃の業務姿勢、成果などを評価されるようなので、 日々の業務でどれだけ評価されるかだと私は考えています。 あとは昇給の条件となる資格を取得しておこうと思っています。 もし参考になれば幸いです。
No.1です。 マウスが使えないので下手な絵ですが添付します。 可変抵抗がついていますが、分圧回路の最大電圧を０～電源電圧の範囲で調整出来るようにするためです。 この分圧した電圧を、オペアンプを使ったボルテージフォロアでインピーダンス変換（電圧の増幅は無し、電流のみ増幅）しています。 図のA／Dコンバータ部分は、アナログ入力付きのマイコンなどが使えます。ただし、マイコンの入力インピーダンスはオペアンプ並みに高いので、前段のボルテージフォロアは省略できるかもしれません。 マイコンは、USBなどでパソコンへ接続できる回路が多く紹介されています。 http://akizukidenshi.com/catalog/g/gK-05499/ 面倒ならUSBコネクタ付きの完成品があります。 マイコンのプログラミングは別途しなければなりませんが、パソコンでC言語などをつかったことがあれば、ネットで得られるサンプルを改造して使ってもいいです。 マイコンのプログラミング環境は、無料でダウンロードできます。マイコンに書き込むためのライター（PICKIT３など）のみ購入してください。
いわゆる循環取引と受け取られないか心配ということでしょうか？ 心配なら、 機能追加料の見積もりから、「我が社」への委託分を差し引いた金額だけにして、 支払いする方法もあります。 （差し引きした金額なので、「我が社」のエンジニアへの発注が来ることはありません。） 但し、この形をとると、「我が社」のエンジニアへの発注が来ないので、 何らかの事情で稼動が遅れたときの責任範囲があいまいになる等のリスクもありますし、 「ある会社」のほうがその部分に対する責任を負えないということにもなりかねません。 他の方も書いておられますが、機能追加した作業と、機能追加した結果の全体のシステム提供では、 内容が違うので別物です。 通常、循環取引にはならないです。 契約書か見積書、提案書等やりとりした文書に、ちゃんと作業内容をうたっておけば、 第三者が見てもひとめでわかるはずです。 （むしろ著作権はどちらに帰属するとかをはっきりさせておかないとあとでトラブルの元、 　ということのほうが心配なはずですが。）
>>IT系の企業で、常駐先で開発業務などを行っている会社と、自社で開発を行っている会社はどのくらいの割合でしょうか？ 判りませんが、自社持ち帰り開発の比率は、以前にくらべてかなり減少していると思えます。 >>また、常駐先で業務を行う際に苦労することや、困ることがありましたら教えてください（何でも構いません）。 常駐先での業務の場合、他社社員として働くことになります。なのでＩＴ系企業に限らず一般的に １）同じ職場で働く仲間、という意識が出にくい。人が沢山いても、ひとりぼっち、孤独感が出たりする。 ２）さまざまな面で、「あなたは派遣、他社の人だから」と差別扱いを受ける。（同じにならないのは当然なんですが・・・） ３）同じような仕事をしていても、給料・ボーナス、待遇で大差があることを感じてしまう。 ４）他社の人間なので、めんどくさい手続きが増えることが多い。 ５）自分はどこの会社に所属している人間か、判らなくなる。自社に戻っても、自分の会社だと感じない。 ６）常駐期間が終わって、次の常駐先に変わることが続くと、「短期で何度も転職、新しい職場への通勤とか人間関係などを再構築する負担感が増す」 ７）仕事で使うＰＣが貧弱だったり、使い慣れたツールが使えない、ネットでの調べものができないなどで、開発効率が低下することがある。 ８）多数の派遣の人間が狭い場所に詰め込まれて作業することもあり、窮屈で空気が悪い環境のこともある。 ９）契約の更新をしてもらうため、必要以上にサービス的な労働を強いられるケースがある。 １０）職場の先輩・後輩ってのが無いため、周囲の人に質問しずらい（思い余って、こういうサイトに仕事上の質問を投げたり・・・） １１）自分の乏しい経験・技術を派遣会社が「盛って」しまって辛い立場になることがある。 こうしてみるとシステム開発を派遣社員に頼ることによるメリットが派遣社員に乏しいのは当然としても、経済的メリットを狙って開発を依頼している顧客企業にとっても、開発した本人が居なくなる可能性とか、他社に開発をお願いするための時間的ロスなども考えると、メリットよりもデメリットが大きいかも？と思うことあります。
ITで客先常駐派遣？一般派遣ですか？ 単純には期間の定めのある雇用契約なので、民法627条2が適用され、次期の解約は期間の前半に申し入れる必要があります。 http://www.houko.com/00/01/M29/089.HTM#s3.2.8 ただ、3ヶ月で報酬を定めている事はないだろうし、1ヶ月でしょうから直前の月の前半であれば良い事になります。結果として2週間と少し前ならOK。一般的には1ヶ月前に更新しない旨を伝えるべきでしょう。
いずれも必要であれば夜中の残業はありますし、システムの稼働前には、24時間体制でシフトを組んで対応できるようにします。 金融系の部署は切れ目なく忙しそうですが、いずれの会社にも金融システムの部門はあります。
銀行システムの中でも心臓部と言える勘定系システムについて言えば、旧みずほ銀行が富士通、旧みずほコーポレート銀行が日立です。 7/1からの新みずほ銀行は、旧2行の勘定系システムをつなぎ合わせた状態です。ちょうど、旧みずほ銀行発足時に旧第一勧業銀行の勘定系システム(富士通)と旧富士銀行の勘定系システム(IBM)をつなぎ合わせていたのと同じような状態です。 旧みずほ銀行はその後、旧第一勧業銀行の勘定系システムに統合しましたが、新みずほ銀行は、2015年に次期勘定系システムを稼働させるべく、開発中です。次期勘定系システムは、富士通、日立、IBM、NTTデータの4社体制です。 http://biz-journal.jp/2012/12/post_1105.html
システムエンジニアとテスターは真逆のしごとですね。 作られたシステムを壊していくのですから。 システムエンジニアもプログラマーもだいじな仕事ですが、最終チェックであるテスターが 見逃してしまうと本番処理にかけた時、コンピュータが止まってしまう。 大事なところです。どんどんバグを見つけてください。
BSD style license. これを調べてください。
入力が無くなっても、一定時間は出力を保つ機能のこと。 例えば、ホールドアップ付きなら、瞬間停電があって入力が一瞬だけ途切れても出力が維持されるから、負荷側に影響が出にくい。
>エムシステムのM2AP-A1-Mがあれば解決でしょうか？ http://www8.m-system.co.jp/koho/searchproducts/japanese/downloadspec.aspx?ID=2 M2AP アナログパルス変換器 MTG11Aにパルス出力は標準装備ですね　 何故M2APが必要になると思ったのでしょう？ >別にディストリビュータとかいるのでしょうか？ 仕様書で確認しましょうね MagneW Neo＋　（マグニュー・ネオプラス）　スマート２線式電磁流量計　一般形（一体形） ( PDF / 2000 KB ) https://www.compoclub.com/app/model/DownloadIndex.do?modelNumber=MTG11A ↑を百回読み返したら↓を百回読み返しましょうね http://www.m-system.co.jp/mstoday/plan/mame/b_signal_con/0612/index.html http://www.m-system.co.jp/mstoday/plan/mame/b_signal_con/0408/index.html
echo で表示されないのは、 おそらくHTMLタグとしてブラウザに判断されてしまっているからかと思います。 右クリックからページのソースを見ていただくと、 <bbb>が出力されているのではないでしょうか・・・？ メールのヘッダで使用したいということですが、 $headers[] = "From: User <user@example.com>"; というような形でご指定いただければ、 画面への出力はないですので、 文字列の通りに設定されるかと思います。 デバッグでどうしても画面に出力したいということであれば、 echo htmlspecialchars("From: User <user@example.com>"); のように、htmlspecialcharsでタグの無効化をしていただければ出力されるかと思います。
set echo on で出力されるようになりませんか？ こちらの環境（Windows7 Professional、Oracle10g XE）では下記のバッチで出力されます。 --test.bat sqlplus user/pass @test.sql --test.sql set echo on spool test.txt select sysdate from dual; spool off quit --出力されたtest.txtの内容 SQL> SQL> select sysdate from dual; SYSDATE -------- 13-06-14 SQL> SQL> spool off test.sqlのset echo onを削除した場合は結果のみが出力されました。
http://office.microsoft.com/ja-jp/excel-help/HP010197489.aspx#BM3
まず機械メーカー名機種　型番を。。。。
単純に5人が使用するのであれば、パッケージ版のSQL Server 2012 Developerを5本買えば5ライセンスなのでこれで問題ないように思います。 既に1本あるのであと4本ということですね。 ボリュームライセンスでの購入ならば、ボリュームライセンスを扱っているリセラーで注文すれば良いですが価格的には大差は無いと思います。 買い方の違いだけですから。（メディアが付くかどうかというのもありますが） ただ、1本はバッケージ版で4本はボリュームライセンスだと管理上ちょっと混乱しそうに思います。
バリバリのプログラマーであれば、言語が変わったぐらいならすぐに対応できると思いますよ。 実際にはバリバリではないから問題なのではないですか？
上を見たらキリがありません。 下を見てもキリがありません。 平均と比べるだけでもあまり意味がありませんが、ちょうど平均くらいなので、普通ということではないでしょうか？ ちなみに、同じ年収520万円でも、その多くを残業に依存している場合は賃金カーブの伸びが鈍いかもしれないですね。 差が出てくるのはこれからだと思います。
おおまかな機能としては、 １．ヤフオクのソースを解析してINPUTタグ（入力フィールドやボタンなど）を検索する機能（HTMLパーサ） ２．１で検索したINPUTタグに対してイベント（文字入力やボタン押下など）を発生させる機能 が、必要になると思います。 １は解析用のサンプルソースが一杯公開されているのでそちらを参考にしてみてください。 ２はWebブラウザがIEならCOMオブジェクトを使うのが一般的だと思います。 COMオブジェクトというのは簡単に言ってしまうとアプリケーションから別のアプリケーションを操作するための仕様（API）ですが、非常に奥が深くて、それだけで論文が一本書けますので、やる気があれば、ぜひ自力で学習してみてください。 ちなみに、ヤフオクはAjaxを使っているようなので、これを完全自動化する場合はかなり高度な技術が必要かもしれませんね。
HTAアプリでしょうか。JScriptかVBScriptで書きます。 下記のようなファイルを拡張子HTAで作って実行できます。 HTMLやCSSの知識が少しあれば見栄えも良くなります。 JScript/VBScript + WSHの機能を使えばファイル操作もできます。 <html> <head><title>HTAサンプル</title> <script type="text/javascript"> function add(){ document.getElementById("c").value = (+document.getElementById("a").value) + (+document.getElementById("b").value); } </script> </head><body> <input type="text" id="a"> + <input type="text" id="b"> = <input type="text" id="c"> <input type="button" onclick="add()" value="加算"> </body> </html> あとは「HTA VBScript」とか「VBScript WSH」とかで検索してください。
一般的に、何も条件を付けずにフローチャートと言うと JISフローチャート http://www2.ee.knct.ac.jp/el/E2/L210/algorism/flowchart1.html を差すが これはFA系PLCプログラマには不向き JISフローチャート以外には UML http://monoist.atmarkit.co.jp/mn/articles/1205/23/news001.html http://labo.mamezou.com/special/sp_002/sp_002_003.html http://thinkit.co.jp/article/40/4?page=0,0 こちらの方がPLCには合ってる さて、多くのPLCプログラマは プログラムを作る前にはJISフローチャートを書かない プログラムが完成した後に書く 何故か？ フローチャートはプログラムの動作を解説するために書く 機械操作マニュアルの添付資料に過ぎない では、プログラムの作成手順は？ １、I/O割付表 ２、動作タイミングチャート ３、UML図 必要なのはその３つだけ 概ねI/O割付表と動作タイミングチャートは機械屋さんと打合せしながら書く UML図はそれらを付き合わせれば自ずと書ける
力技ですが・・・ 文字列として認識されるよう置換される数字の前に「'」をつけて置換し、 その場合、「,」後ろの文字置換に関しては「'」が余計なので、 最後に「,'」を置換という方法です。 Sub 文字列リストに基づき連続して置換する() i = 2 Do x1 = Sheets("文字列リスト").Cells(i, 1) x2 = "'" & Sheets("文字列リスト").Cells(i, 2) Sheets("作業").Cells.Replace _ What:=x1, Replacement:=x2, _ SearchOrder:=xlByColumns, MatchCase:=True i = i + 1 Loop Until Sheets("文字列リスト").Cells(i, 1) = "" 'このままだと2つ目以降の置換では「'」が表示されるので「,'」を「,」に置換 x1 = ",'" x2 = "," Sheets("作業").Cells.Replace _ What:=x1, Replacement:=x2, _ SearchOrder:=xlByColumns, MatchCase:=True End Sub
デスマの典型ですね。 唯一の救いはそれほど大規模なシステムではないということですかね。 10.5ヶ月規模を、7ヶ月ですか？ 自分の感覚的にはどうにかなるかなというレベルですけどね。 休日はフルに休んだとしても１日３、４時間の残業で十分に回復できるレベルだと思います。 問題は、 ・他のメンバー（有識者？）が別件の対応でなかなか時間がとれないこと。 ・入ってきたばかりのあなたにはまだやるべきことがあまり見えていないこと。 などでしょうか。 こういう状況を放置しているのはマネージャが無能としか思えまえんが、（まあ、実際には良くあるはなしですが）、マネージャーが動かないなら、ここはあなた（社員である）が頑張って動くしかないですね。 こういうところで培った経験（どう考えて、どう解決したか）が今後のあなたのキャリアアップにもつながっていくと思います。 仮に転職をするとしても、大きなアピールポイントになると思いますよ。 大変だとは思いますが、前向きに頑張ってください。
見たいページの文字コードは何ですか？ まず、Internet Explorer 9で見たいページを表示した状態で、ツールバーから「表示」→「ソース」を選択してください。 別ウィンドウでソースが開かれると思いますので、そのソースを見ながらmetaタグで文字コードが何に設定されているか確認してください。（おそらくソースの４行目あたりにあると思います。） 文字コードの指定がUTF-8になってはいませんか？ たとえば、こんな感じ。 <meta http-equiv="content-type" content="text/html; charset=utf-8"> これは、このページはutf-8でエンコードしていますので、Webブラウザで表示するときはutf-8でデコードしてくださいという意味です。 utf-8で書かれたページを無理やりシフトJISで表示しようとすれば、変換ができないので文字化けが起きるのは当然です。 ただし、通常は数字やアルファベットなどの半角文字（ASCIIコード）はどの文字コードでも同じですので、日本語を含まないページならシフトJISで表示しても文字化けは起きないと思います。
No.1 です。 DocuWorks6.2ではそのようになっているかも知れません。 DocuWorks Printerでは問題はなさそうですね。 ブラウザー（Internet Explorer等）の問題かも知れません。 アクセサリーの「メモ帳」をDocuWorksPrinterでDocuWorks化して 文字が選択出来るならば、そうでしょう。 あとはブラウザーの設定の中での調整になるかと思います。
アプリケーション/プロセスの起動時間を取得する http://www.wmifun.net/sample/win32_process_d.html Ans　＝　現在時刻　－　起動時間
こんにちは。 ＞($row = $stmt -> fetch(PDO::FETCH_ASSOC)){」 ＞で$rowに各ユーザのレコードを格納したわけなんですが、この「$row」を 全てのレコードを利用するなら１レコード毎に$rowを他の変数に入れてあげる必要があります。 var $rows = array(); while($row = $stmt -> fetch(PDO::FETCH_ASSOC)){ $rows[] = $row; }　//データベースクラス とすると$rowsという配列に全てのレコードが入ります。 それを他のクラスに渡すならクラスの作りによりますがメソッドで受け取れば良いのでは？ $user->setRecord ( $rows ); // どっかのクラスのメソッド function setRecord ( $rows ) { } ただ質問者様がやろうとしていることは一般的ではありません。 質問内容やソースの書き方からすると クラスの作り方、変数の渡し方等々再度学ぶ必要があるレベルだと思います。 複数のレコードを取得しているのに if($user===$row['uid'] && $pass===$row['pass']) { } では誰と一致させようとしているか？
Web業界というのがどんな業界なのかは知りませんが、 先の質問にあった業務系の場合は、フロントエンドの Webよりはバックエンドの業務処理の中に数学や物理学を 使用する業務もまれにあります。 現在、金融・公共業務のSEですが、関わったか、 概要を知る機会があったのは、 ・銀行：デリバティブ ・保険：数理計算 ・公共：某省の無線関連 ・公共：某天文台 ・他　：某光学会社や地図関連 デリバティブや保険の数理計算は、Webではなく バックエンドの業務の一機能としてそのような 分野がありますが、かなり特殊な例で専任の担当者が いるため、内部の処理に関わる事はSEとしては ほとんど無いかもしれません。 公共その他では、その機関や会社の業務に関わる システムなので、一部には高度な数学や物理学が 必要な場合があります。 ＃電波伝搬の計算とか天文の計算とか、 ＃地図関連の座標変換とか・・・ いずれにせよ、フロントエンドのWebよりは その裏で動くバックエンドの方がそのような 機会の可能性があります。 ＃Webシステムの一部のこともまれにありますが 私は、元プラントの制御関係のSEなので あまり抵抗はなかったのですが、業務系の SEにはその分野は避けたがることが多いのが 実情です。 ＃たとえ、理系の出身者でも・・・ 現在、微積分はないですが、指数、対数、三角関数等を 多用する業務を担当しています。
No.1です。 ねじの呼び方についてですが・・・ 一般的にはメートル法を使っていますが、大工さんとかはいまだに昔ながらの尺貫法を使っている人もいます。 なぜなら木造住宅の場合、今でも家の図面そのものが昔ながらの尺貫法に基づいた寸法が基本になっています。 たとえば柱の芯々寸法は１間=6尺（1818mm）といった感じです。 他には6尺3寸間（1910mm）とか地方によって様々でしたが、いまは３種類程度に集約されています。 前置きが長くなりましたが、インチねじの呼び方は尺貫法の寸法に換算した場合に 近い寸法で呼んでいるみたいです。 １間（ケン）=1818mm（6尺） ↓ １尺（シャク）=303mm　→　1/6間 ↓ １寸（スン）=　303mm　→　1/10尺 ↓ １分（ブ）=3.03mm　→　1/10寸 ↓ １厘（リン）=0.303mm　→　1/10分 ↓ 1毛（モウ）＝0.0303mm　→　1/10厘　※　この辺だと計測不可能 と単位の呼び方が変わりますので、この中の分（ブ）で呼んでいます。 しかし、元々が「インチ」基準のものを無理やりに インチ　→　メートル法（mm）　→　尺貫法　と置き換えて換算しています。 ぴったり！という寸法で読んでしまうと 「○分○厘○厘ねじ」と長くなってしまいます。 それらを極力短い言葉で言うにはおおよその近い部分でそのねじの大きさを言ったのだと思います。 （この部分は私的憶測） 1分　→　いちぶ 2分　→　にぶ 3分　→　さんぶ 4分　→　よんぶ 5分　→　ごぶ 6分　→　ろくぶ 7分　→　ななぶ 8分　→　はちぶ 9分　→　くぶ（「きゅうぶ」とはあまり聞かない） といった感じでしょうかね？ 前回も書きましたが　5/8　は1インチ（25.4mm）の8分の5インチの大きさですので 電卓で計算してみてください。 ぴったり「ごぶ（5分）」とはなりませんが、5分（15mm）程度になると思います。 以上長々と書きましたが 参考になりますかね？m(_ _)m
OSがWindows系で拡張子が「.cpp」ということは、おそらくコンパイラはVisual C++ですね。 まずは、以下の２点を確認してください。 １．Windows7にVisual C++が正しくインストールされていること。（Windows7のデフォルトではVisual C++はインストールされていないので、別途インストールが必要です） ２．Visual C++がインストール済みの場合は、環境変数にパスが正しく設定されていること。（コマンドプロンプトからCソースをコンパイルするためには、別途環境変数の設定が必要です）
銘板ですが、「めいばん」です。 盤の名称(操作盤・制御盤)を表示するための板で、通常はアクリル等の透明板の下に、白地に黒文字で記入します。通常は、電気機器等を購入したときに付けます。
わかりやすい例でいえば、CADのシミュレーション機能の開発なんかだと数理知識が必要になると思います。 市場規模については、CAD/CAM/CAE合わせて国内では3000億円程度のようです。 http://www.yano.co.jp/press/press.php/000998
エンドポイント、というのは「きわ」という意味です。 クライアント側とサーバ側の境界線のところがエンドポイントです。 機能の区別という観点から言っていることです。 それにたいし、エントリーポイントというのは、ここから始めるという意味です。 URLを参照されたら、そのサイトのサービスがはじまることになりますのでエントリーポイントと言います。 PHPなんかだったらプログラムが動き出しますし、スタートポイントといってもいいかもしれません（いいませんけど） ユーザとかクライアントとサイトの関係だけではありません。 Webの通常処理の中で、外のシステムを使うと考えてください。 jQueryで考えたら話は早い。たとえばGoogleの提供している機能を使おうとしましょうか。 そうすると、Googleのたとえばearthの提供する機能と自分のサイトの間はエンドポイントになっています。 earthの側からいえば、そこがエントリーポイントです。
PCIにつないだどれかがエラーを起こしているようです。 スタート、コントロールパネル、システム、デバイスマネージャーで黄色い三角が出ていませんか？ その機器を外して立ち上げてみてもらえませんか？
こんばんわ。 ファイル名が青色の文字のものは、圧縮されているファイルです。 そのファイルを右クリックしてプロパティを見てみてください。"属性"の"詳細設定..."をクリックすると出る"内容を圧縮してディスク領域を節約する"にチェックが入っているはずです。ちなみに、同じところにある"内容を暗号化してデータをセキュリティで保護する"にチェックを入れると、ファイル名が緑色になります（いずれもWindows7の場合）。 なお、コントロールパネルのフォルダオプションの"表示"タブの中にある"暗号化や圧縮されたNTFSファイルをカラーで表示する"にチェックが入っていないと、上記に関わらずすべてのファイル名が黒色の文字になります。 これはあくまでファイルの属性を見た目でわかるようにするためにOSがそうしているだけであり、残念ながら利用者が任意の色を設定することはできません。
氏名をa1セル、使用前をb1列使用量をc1列使用後をd1としで、 結果が知りたいc1に =d1-b1 と入力し、セルの右下の部分を下方向にドラッグするだけです。
大きな勘違いが、あなたにも発注者にもあるのでは？ まず超硬ですが、切削工具に使用するセメンティドカーバイドです。 WCをCO（炭化タングステンをコバルト）をバインダーに焼結したものです。 切削工具のほかに、耐摩耗製品としてもつかわれます。 今回は耐摩耗品でしょう。 ＞この後焼き入れも指示されていたので 焼き入れはできません。なぜなら鉄じゃないですから変態しません。 しかし、不思議なのは加工屋さんでどうやって加工したかです。 何しろ硬度がHraで90前後、Cスケールだと70前後あるので切削加工できません。 ダイヤモンドで研磨でしょうかね。 話全体からすると超硬材≒鉄基の固い材料≒SKHなどの工具鋼を便宜的に使っているかもわかりません。 作ってきた加工屋さんに聞くのが良いと思います。
各協同組合の経営規模に大きな差がありませんか。 同じような事務処理をしているように見えても、異例処理などは考え方がバラバラだったりします。 どこか有力協同組合の事務手続きをたたき台にして、共同システムを検討することになると思いますが、他の協同組合の個別案件をどれだけシステムに組み入れることができるかもポイントの一つです。 共同システム稼働後の維持・保守をどうするかも課題です。 それぞれの協同組合から要求されるシステム開発案件の優先順位、費用負担、・・・各協同組合のわがままをどこまで聞けるか、なかなか大変ですよ。
やっていけると思います。 ただしやっていけることが条件です。 そして、経験がつめるかどうか？今の職場でも経験つめるでしょう？ いろんな人とコミュニケーションとってみてほしいです。 資格がほしいなら勉強するしかないと思いますよ。 自慢できる資格もないし、二年も経験ないのだから低収入なのはしょうがない部分があります。 しかし、周囲の人たちはどうですか？それなりにもらってる？それとも低収入？ つまり周囲の仲間がある程度もらっているのなら、その人たちレベルの人間になればもらえると思いますね。 経験あってもなくても、できる人を会社はほしいはずです（もちろん経験ないと採用しずらいですが） いまのまま何もかわらなければ低収入でしょう。 しかし何か前に進めるのであれば変わると思います。 まずはやっていけるかどうかではないですか？
いやーどうなんでしょうか？ 客先常駐と言っても開発系である程度のプロジェクトだと開発のために集められた人間ばかりのフロア（正確にはプロジェクトのためにビルを借りていた）で仕事をしたりしますよ。 この場合の客先とはシステムを使うユーザーさんではなく元請けのメーカーさん（私の場合にはＦ社さん）だったりしますが。 ユーザーさんなんて女の子どころか男だってフロア内に一人もいません。元請けさんにしても下請けの我々にしてもシステム開発なんて男ばかりなので、私のいたフロアは２００人はいましたが、女性は数名～十数名程度でしたよ。それに、普通は仕事で関連のない女性と話す機会もありませんね。
憶測ですが http://jp.misumi-ec.com/vona2/maker/misumi/el/E1400000000/E1405000000/E1405020000/ http://www.kmecs.com/products/maker_cgl.cgi?id=4 ＪＩＳとＣＥとＵＬでは電線サイズが違うからではないでしょうか？ ブレーカの場合では http://www.mitsubishielectric.co.jp/fa/products/lv_distri/lvc-breakers/mccb/index.html 最近３２Ａや６３Ａと言うハンパな定格が出来ましたね　＜ＣＥ規格に合わせた これから推定するとＣＰもいずれはＣＥ規格に合わせた定格になると思う
戦略系というのは主に「お金が入ってくる仕組み」を考える人たちのことだと思います。 それに対して、それをどうやって作るかを考えるのは開発の仕事です。 逆に、戦略系の人たちが開発の視点で「これがホントに作れるのか？」という視点で物事を考えてしまうと、一番大事な「ホントに必要とされてるものは何か？」という発想が出てこない可能性があります。 だから、質問者様の上司になる人が「不要」と言ったのも、ある程度はうなずけます。 おそらく、質問者様が開発の現場とやり取りするとしても、開発責任者レベルとのやり取りになると思います。 現場の担当者と直接やり取りすることはおそらくないと思います。 ですから、とりあえずは開発責任者とコミュニケーションをとるのに必要な知識、具体的にはプロジェクトマネジメントに関する一般知識があれば十分だと思います。 ただし、どこまでが戦略系で、どこからが開発の仕事とするかは会社によってもそれぞれだと思いますので、余力があるなら、開発の現場にも顔を出しながら、勉強していくのが良いと思われます。 優先度としては、 ＞ネット業界、ネットビジネスに関する一般知識習得 ↑明らかにこれが最優先事項ですよね？ 戦略系なら、一般知識レベルではダメだと思いますよ。 誰にも負けないバリバリの業界スペシャリストを目指すべきだと思います。 ＞基本情報技術者、応用情報技術者の資格取得 ↑資格の取得は一番後回しで良いと思います。 今から勉強するならそれより上のITストラテジスとかじゃないですか？ ＞データベースに関する技術習得 ＞プログラミングの技術習得 ↑これも業務ですぐに必要になるとも思えませんので、余力があればで良いと思います。
私のところは社員50人の中小企業ですが どの程度で驚愕になるのかはわかりませんが、月々２～３万でレンタルしているファイヤーウォール（インターネットと社内の境目に設置して外部からの不正アクセスを防いだりする機械。）で社員のWEBアクセス（いつ、どのIPアドレスから、どこのURLにアクセスした）やメールの送受信（どこのアドレスからどこのアドレスあてになんというタイトルのメールを送信したか）くらいは記録しています。 また、現在導入中のセキュリティシステムでは、各PCにインストールされているソフトウェアを把握したり、社員のPC操作（どういうプログラムを実行したかや何のファイルを開いたか、どういうウィンドウタイトルの画面を操作しているか）の記録を取ることはできます。 私のところは企業規模の割にはいろいろやっている気はしますが、大企業さん（上場企業さん）ですと内部統制とかでうるさいですから、この程度もしくはそれ以上にやっているんじゃないでしょうか？（ここは私の憶測ですけれど） 私のところでは買いませんでしたが、メールの本文や添付ファイルもすべて記録できるようなシステムも市販されています。（別段高価というほどのものでもありません。私のところの企業規模では安いわけでもなかったですが、それ以上にディスク容量をがんがん食うので導入は控えました。） ＞例えばそういったWebやメール送受信の閲覧権限って一般的に上司にも与えられているようなものでしょうか？ これも憶測だけれど、（職務内容による可能性は高いですが）たぶんそういう権限はあまり与えないだろうと思います。検閲のようなことよりほかにやるべき仕事が多いでしょうから。 そういえば私が聞いたことがある某携帯電話会社のシステムでは、窓口の人間がどういう情報を検索したかを記録しているそうです。有名人、芸能人も携帯電話は所有していますからそれらの方の住所、電話番号等の情報もシステム上は当然登録されているわけで、そういうのを検索したがるバカを監視、抑制するためだそうですが。 こういう場合ですと現場寄りの管理職にも社員の行動（検索履歴）を閲覧する権限が与えられているかもしれませんね。
>>そのような企業はなぜ、独立系の企業にエンジニアの派遣を依頼するのでしょうか。 システム開発は、システム企画～要件定義～概要設計といった「上流工程」と詳細設計～プログラミング～テストといった「下流工程」に分類されます。 そして、システム開発は、上流工程では、エクセルやパワーポイント等のドキュメントだけだったりして、実際に動くモノを作っていないので、そのドキュメントに誤りがあろうとも表面化しません。そういう点でリスクが小さいといえますね。この工程で問題となるのは、誤字・脱字等、文章のみてくれのみです。 でも、下流工程で、実際に動くものを作る段階になると、「うまく作れない（オブジェクトが生成できない）」「エラーが発生する」「遅くて使いもんにならない！」など、さまざまな実装上のトラブルが発生してきます。また、上流工程での設計ミス・矛盾などが表面化してくるのもこのフェーズに入ってからのことが多いでしょう。 それによって、大きな「手戻り」が発生することもありえます。それは工数の大幅超過となり、赤字の原因になります。まあ、それは予算の増額でなんとかなるとしても、残業１５０時間といった過酷勤務状態が続く可能性もありますよね？そんな勤務は、労働組合のウルサイ大手メーカの社員にやらせることはできません。 また、このフェーズでは、上流工程と違い、多くの人手が必要になります。でも、そのピーク時の需要に合わせて、大手企業が正社員を雇用したら、ピーク時が過ぎた後や、開発案件が乏しいとき、暇をこいてる社員が企業内部に多数存在することになります。 そんなことは、いくら大手企業でも許されないですよね？ですから、人員調整が容易となる中小独立系企業から技術者を派遣してもらうのです。 つまりは、 ・開発上のリスク回避（リスクを下請けに押しつける）。 ・開発時の必要度に応じた雇用調整。 といえるでしょう。ですから質問者さんの理由にある >>・自社と自社子会社だけではエンジニアの人数が足りない これはただしい。 >>・人数は足りているが、技術力やプロジェクトマネジメントに不安がある（独立系企業の社員で不足するマンパワーを埋める） これも現実的には正しい。上で述べたように、大手ＳＩ企業は「上流工程」を担当します。つまり、「下流工程」のこと、つまりは、実際のプログラミングについては、詳しくは無いんです。そんなこと、「どーでもいい！」と思っているんです。たとえ知っていても、「私は○○言語や□□フレームワークについて詳しいぜ！」なんて言動をすることは、「下賎な奴らの仕事に詳しい」として恥ずべきことなんです。 ですので、技術者が「コンピュータサイエンスに詳しい」ってことは、そういう大手企業で上流工程を担当する技術者にとって必要無いのです。だから、実装に詳しいエンジニアを派遣してもらうことになるのです。 >>・人件費が嵩むのを避けるため独立系を下請けで安く雇う 人件費を抑えるってこともあるでしょうが、メインはピーク時に合わせた技術者を雇うってことが難しいからという理由が大きいと思います。
浮動小数点型の数を扱う上で避けられない問題です。 原因は、43,100*70％=30169.99999999・・・ となることがあるため、小数点以下を切り捨てると30169になってしまいます。 簡単な対処方法は、 int(［43,100］*［70％］+0.00000001） と、微小な数を足してから切り捨てする。 ただしこの方法は、小数点以下も高い精度が必要な計算には適しませんが。
No.3で回答したものです。 補足を読みました。 要するに、パッケージ化された商品（たとえば、筆箱セット）を出荷した際に、その筆箱セットを構成する各々の商品（たとえば、鉛筆、キャップ、ケースなど）も自動的に在庫から引き落としたいという意味ですかね？ だとするならば、まず、商品テーブルに商品区分（単品商品かパッケージ商品かを区別する区分）を追加して、さらに、新たにパッケージ構成テーブルを追加すれば良いのでは？ たとえば、No.3から修正したテーブルのイメージはこんな感じになります。 ・仕入テーブル（発注日、仕入日、商品コード、業者コード、数量） ・出荷テーブル（受注日、出荷日、商品コード、お客様コード、数量） ・在庫テーブル（商品コード、仕入日、数量） ・商品テーブル（商品コード、商品区分、商品名、単価）　←　変更 ・パッケージ構成テーブル（商品コード、構成番号、構成商品コード、構成数量）　←　追加 ・業者テーブル（業者コード、業者名、住所、電話番号） ・お客様テーブル（お客様コード、お客様名、住所、電話番号） この場合、出荷の際に商品テーブルの商品区分を参照して、パッケージ商品の場合はパッケージ構成テーブルから商品コードに紐付く全ての構成商品コードを取得して、構成商品コード毎に在庫から構成数量を引き当てる形になると思います。
VB6の新しいプロジェクト MSCOMCTLをツールボックスに追加 フォームにStatusBarを貼り付け プロジェクトを保存 vbpファイルをメモ帳で開いて、元のvbpファイルと比べてみる
初めまして。 MultImact 700JANは、コマンド体系が、「201PL」と書いてありますので、 201PLのリファレンスマニュアルを参照することで良いのではないでしょうか。 参考URLにPDFファイルがありました。
> ボリュームの(1)番と(3)番の抵抗値は、「1.85Ω」を示しました。 > 配線の先（(1)番と(3)番に接続されている先）においても、 > 同じく「1.85Ω」を示しました。 <1>動作不良の原因 この抵抗値のボリュームは使用できません。 使用可能の抵抗値の範囲が全く違っています。 (1)番と(3)番の間の抵抗値が[5kΩ]のボリュームを新たに購入して 使用して下さい。 なお、1kΩでも使用可能です。 なお、ボリュームには特性(回転角度と抵抗値の変化度合)がありま す。[B特性]のボリュームを購入します。 ただし、インバータの修理が必要と思います。修理完成後、再テスト することになります。 抵抗値「1.85Ω」の確認 (1)測定方法の間違い(1)番と(3)番の間の抵抗値 インバータから取り外した状態でボリューム単体[(1)番と(3)番の 間の抵抗値]での測定結果ですネ 銅線(配線)は半田付けしたままで、接続部分が互いに接触しない ようにしてあれば、測定手順としては問題ありません。 (2)単位の読み違いはないでしょうか? メーカのカタログを見ますと、この抵抗値のボリュームは製作範囲 外のようです。 <2>インバータ故障の原因 ボリュームの抵抗値「1.85Ω」ですと、インバータの[13]番からの 直流出力電流が過大となります。 現品を分解して点検しませんと、明確なことは言えませんが、これ が原因でインバータの[13]番--[11]番間の直流出力回路と関連 回路の電子部品が故障(焼損)していると考えられます。 <3>対応策 上記の内容通りですと現地では部品交換等は不可能と思います。 インバータを購入した販売店経由にてインバータメーカへ修理を 依頼して下さい。 なお、販売店にて取り扱わなような場合は、次の会社にて今まで の経過を説明してインバータの修理を依頼したいと相談すると 良いでしょう。 富士電機FAサービス(株) 北海道サービスステーション(札幌) http://www.fujielectric.co.jp/ffa/contact/network.html
どちらの仕事も下流の仕事です。 上流というのは一般的には、提案から要件定義、概要設計までです。 私の認識では、概要設計（または基本設計）までがSEの仕事であり、詳細設計以降の下流工程はプログラマの仕事です。 一般的なプロジェクトでは、SEがフロントに立ち、クライアントと調整しながらシステムの全体像や概要をまとめていきます。 そしてそれをもとに、設計部門（プログラマも含む）が詳細部分を設計し、実際にプログラムを開発していきます。 そして、開発が終わると、運用・保守のフェーズに入ります。 というのがまあ、アプリケーション・エンジニアの仕事ですね。 ネットワーク・エンジニアの場合はこれとは少し違って、開発のフェーズがなくて、代わりに構築のフェーズが入ってきます。 構築のフェーズでは、主に、サーバやネットワーク、ミドルウェアなどの設定作業を行います。 さて、上流と下流の仕事では、どちらが技術力を磨けるのでしょうか？という質問についてですが、技術力という点においては、実際に作業を行う下流の方が磨けるかもしれません。 ただし、現場目線での発想となりやすく、考え方も近視眼的になりやすいです。 上流に行くほど、技術力だけでなく、高いコミュニケーションスキルや業務分析能力が要求されてきます。 当然、上流に行くほど付加価値が高くなりますので、給料も高くなる傾向にあります。 あと、ヘルプデスクはエンジニアとはまた別の職種と考えた方がよいかと思います。
頭が混乱しているということなので、とりあえず、一番手っ取り早い方法だけ。 マイクロソフトのエクセルかアクセスをインストールして、そこからVisual Basic Editorを起動してください。 そこにＹＥＳ・ＮＯのロジックを書いて、コンパイルして、後は実行するだけです。 初心者が簡単にプログラムを組む方法はこれ以外にありません。 それができるようになったら次のステップを教えますので、また来てください。
レンタル自体はありますけど、必ずしも安いわけではありません。縛りが無い程度。 http://www.e-ca.jp/index.html http://mobile-rental.jp/ 40店の意味が分かりませんが、もし、多数の端末で接続しようというなら全然無理。 スペック上の同時接続数もほぼ10台以下だし、10台接続したら速度は1/10という事です。
ＪＡＶＡのスキルといってもピンからキリまでなので、人材を募集される場合は具体的に期待する技術水準をもう少し明確にした方が良いと思います。 たとえば、フレームワークの使用経験とか、オブジェクト指向とかデザインパターンを使った設計経験とか。 単純にＪＡＶＡでコードを書くだけなら、今どきの大学生でも理工系で特に情報系の学部を出ていれば、十分に務まります。 あと、ここ最近の不景気で技術者の単価も下がっているとはいえ、まだＪＡＶＡで開発ができる優秀な技術者はどちらかというと売り手市場なところがありますので、将来のリーダクラスとして優秀な技術者を集める場合はそれなりの差別化をアピールしないと優秀な技術者は来てくれないと思います。 繰り返しになりますが、とりあえずＪＡＶＡでコードを書くだけなら（長い目で御社で育てていくというなら）集められると思います。 また、ＳＮＳなんかを利用すれば、フリーで活動されているバリバリの技術者なんかも見つかるかもしれません。 ただ、そういうタイプのエンジニアというのは得てして組織の中でリーダとしてやっていくというより、スペシャリストとして自分の技術一本で食って行きたいってタイプが多いですので、はたしてマッチするかどうか。 一番無難な方法はメジャーな人材紹介会社（リクルートとか）に広告を出すことだと思います。
要件次第ですが、クラウドベースのポイントシステムを自社開発して運用している会社なら比較的安価に製品の拡張ができるところがあると思います。 ここはどうでしょう。イメージと合うでしょうか。 コンポーネントデザイン カードフィール
PHPではなく、javaベースにこだわる理由は何でしょうか？ ・プラットフォームを意識せずに動かしたい？ ・PHP特有の脆弱性の問題？ PHPも基本的にはクロスプラットフォームですので、プラットフォームは特に意識する必要はないかとは思いますが。 あるいはEC-CUBEのようなオープンソースでjavaベースで自由にカスタマイズしていきたいということでしょうか？ 残念ですが、それでしたら今のところ、オープンソースでjavaベースのECサイト構築パッケージは存在しないようです。 ただ、EC-CUBEでjavaバージョンの対応が検討はされてるみたいですので、今後どうなるかは分かりません。
機械物ですからメンテナンスをすればもっと持ちます。 メンテナンスをしても決められた次回点検時期まで持たない場合もあります。 メンテナンスなしの場合やはり使用頻度によりますね。 特にブレーキ　ワイヤー　の傷み具合でしょう。 貨物専門　レストラン等の小型のエレベーターはかなり使えます。 人が載るエレベーターの場合それこそ20年そのまま同じ条件でメンテナンスをしながら使用しても乗り心地などが違い客商売の場合嫌われるでしょう。
やる気さえあれば、十分に可能だと思いますよ。 少なくとも、中卒が１年間で東大合格レベルまで学力を上げるよりかは、はるかに簡単だと思います。 ただ、質問者様が１年間でどれだけ開発に時間がとれるかでしょうね。 仕事が忙しくて合間に１日１から２時間しか時間がとれないというのでは難しいかもしれません。 でも、今はインターネットも普及して、Web系の技術情報は調べればいくらでも出てきますので、やる気さえあれば、初心者でも十分に可能だと思います。 あとは、やはりサーバとデータベース周りの知識は必須です。 維持費についてはどれだけ性能や安定性、信頼性などを求めるかによってピンからキリまでです。 必要最小限の構成であれば、個人のお小遣いでも十分に運用できるレベルだと思います。
Access97でサブクエリを使うと、特定の条件下で、メモリぶっ壊して変なエラー吐いて止まる事があるので、サブクエリは使わないように。 つまり「メモリぶっ壊して暴走して、変なエラーで止まってる」のですよ。 なので ＞SELECT DISTINCT NO FROM 指示書"というクエリを作成し 作成したクエリに対してクエリをかけるとか、色々と小細工が必要になります。 例えば、 SELECT DISTINCT IIF(NO="0",9999999,NO) AS NNO,NO FROM 指示書 を「クエリ１」として保存しておいて SELECT NO FROM クエリ１ ORDER BY NNO と言うクエリを発行するとか。 ともかく「select * from [ SELECT ～～ ]は使っちゃいけない」ので注意すべし。 あと、VBコードを書く時も、ある特定の条件下で「VBのコンパイラが実行時エラーを吐いて、何も出来なくなる」ので注意。
質問先としては、ここよりも、[技術者向] コンピューター >プログラミング >PHP の方がよかったでしょうね。 PHP で同じ結果を得るには下記の php_crypt のような関数を作ればよいです。 <?php function php_crypt($pass, $salt_id) { $now = time(); $ciphset = array_merge( range('a', 'z'), range('A', 'Z'), range('0', '9'), array('.', '/') ); $p = array_merge(unpack( "C2", $now )); $wk = $now / ( 60 * 60 * 24 * 7 ) + $p[0] + $p[1] - 8; $salt = $ciphset[ $wk % 64 ] . $ciphset[ $now % 64 ]; if ( $salt_id == 2 ) { $salt = '$1$' . $salt; } $crypted_pass = crypt( $pass, $salt ); return $crypted_pass; } print php_crypt( "hello", 2 )."\n"; # ここは php_crypt のテスト print php_crypt( "hello", 3 )."\n"; # ここは php_crypt のテスト ?>
公開されているならば、オンラインマニュアルとかあるのでは？ 何もなしでも、やろうと思えばできますが、ある時よりよっぽど時間 かかるでしょうね。 引数の数や型すら分からない、ネットで調べても何も出てこないなら、 お話にならないです。 オンラインマニュアルやサンプルなどがあった方がサクサク できます。
[「１００ｖのモーター」にするか「２００ｖ（動力）モーター（１００ｖからインバーターによる変換）」にするかの選択] モーターの特性を無視すれば　得られる力は同じ 使うエネルギー（電気代）はインバーターを使う後者がその変換効率の分だけ損するだけ 保守性は　当然後者の場合インバーター故障のリスクがあります たかだか100w程度ですし　電源が100Vしかないのなら200V化のメリットは全くありません
SQLが長くなりすぎること自体を解消できたほうがいいのでしょうが、 詳細な内容が分からないので、プログラム的な解決方法です。 Oracle11gから動的SQLで実行するSQLにCLOB型を使用することができるようになっています。 http://docs.oracle.com/cd/E16338_01/appdev.112/b56260/whatsnew.htm#CHDGIGFJ ですので、hensu_unionをVARCHAR2ではなくCLOBにすれば文字列長の制限を回避できるのではないかと思います。
コミュニケーション能力。 最悪営業も出来ます。 客が人間である限り普遍的な能力です。
基本的に会社次第では？ システムの運用管理や要件の取りまとめ、ベンダへの窓口や検収などをメインの業務とする場合が比較的に多いとは思いますが、システムをバリバリに内製している会社も在る事はありますから、その様な会社ではソフトハウスのSEと同様な業務も多いかと。 その知人さんに業務内容を聞いてみるのが一番だと思いますよ。
食べログみたいなホームページを作るには、大きくわけると、 ・ホームページのデザインを考える作業 ・ホームページの振る舞いを作り込む作業（プログラミング） が必要です。 単純なホームページなら（静的なページだけなら）ホームページビルダーなどを使えば１日でも出来ますが、データベースアクセスや動的ページを作り込むにはそれなりのスキルが必要です。 新規で食べログみたいなのを作るなら、プロでも設計から実装、テストで３～６ヶ月はかかると思います。 加えて、ホームページをインターネットで公開するためには、グローバルIPアドレスを取得して、自宅にサーバを構築するなり、アプリケーションサービスプロバイダ等と契約する必要がありますので、インフラ系の知識も必要です。 個人でも出来るかという点については、十分に可能です。 趣味であれば、最初は機能を絞り込んで無理のない範囲で少しずつチャレンジするのがよろしいかと思います。 最初は戸惑うと思いますが、慣れればサクサク作れるようになると思います。
Windows3.1までのDOS+Windowsという16bitOSにミドルウェアとしてのWindowsがのっているという図式から Windows95はWindows内にDOSを内包した16bitと32bitの混合OSで部分的には16bitも残ったが 基本は32bitOSとなった。 また、 ・DOS時代の8.3というファイル名制限が緩和して長い名前のファイル名を付けることができる ・Win3.1の頃のプログラムマネージャとファイルマネージャを使い分けるめんどくささの解放 ・UIの改善 ・メモリ保護がされるようになったおかげで今までのアプリが落ちるとOSも落ちると言う事が無くなるはずだった(まぁここら辺は16bitコードが残ってたりして完璧に制御できてなかったけど) ・Plug and Playの導入によりハードウェアの追加が楽になった。 ・コンベンショナルメモリにイライラすることが無くなった。 などいろいろ改善された。 OS/2は元々、マイクロソフトとIBMの共同開発だった。 途中でマイクロソフトが離脱してそのときのノウハウをベースにWindowsNT系のOSを作り上げた。 OS/2はWindowsのアプリも互換があり動いたけど個人向けの本来の性能を発揮させれる 32bitの専用のアプリが皆無だった。 MacOSはハードそのものを買う必要があった。 今でこそMacもx86アーキテクチャーだけど当時は68000/68030やPowerPCを採用していて x86アーキテクチャーと互換がなかった。
バーコードに必要な文字情報の抜き出し法 http://www.post.japanpost.jp/zipcode/zipmanual/p17.html 住所B(町域名以降の住所)のデータから、カスタマバーコードとして必要な文字情報を抜き出します。 http://www.post.japanpost.jp/zipcode/zipmanual/p19.html
変化しません。 PVと維持費に因果関係はありません。 アルファブロガーが多額の維持費を掛けているわけではありません。
そんなわけ無いでしょう。 確かに新しい技術(技法)とうは勉強しますが、人並みに余暇を楽しんだりしますよ。 家に帰ったら仕事の事はＯＦＦ、プライベートの時間も十分とれます。 私は退職して３年経ちましたが、その時の知識でボケ防止にフリーウェアをリリースしたりしています。 ＰＧとＳＥを経験してＣＥも経験しましたが、時間には余裕がありました。 様は経験年数です。 コンピュータの世界は一度仕組みをしれば、上位バージョンは下位との互換がありますのでそれほど難しいものではありません。 頑張って下さい。
>単体テストのブラックボックステスト版 >のやり方を知りたいのです。説明が不足しましてすみません。 単体テストのブラックボックスにしてもクラス単位/メソッドで 入出力の値をリストアップするところから始める作業からだと思うよ。 >WEBシステム このシステムがどの言語で開発されているかは知らないけど その言語には >PCL（プログラムチェックリスト、デシジョンテーブル） の書き方がわかりません。 まずは引数として渡していい許容値と違反値があるよね? それを洗い出す。 それが終わったら書く言語で用意されている単体テストのツールとなる JavaならJUnit。PHPならPHPUnit。などを書く言語に用入れた物を使ってテストする。
>「コマンド」＋「スペース」で切り替え そういえば昔はそうだったような・・・キーボードが古いんでしょうか。スペースの両ワキに「英数」「かな」があるハズなんですが。 あとは画面一番右上あたり、変換ソフトの所をプルダウンすれば、ショートカットがわかると思います。
以前、務めていた会社にいた時に常駐で大手の電機メーカーさんで作業してました。 その時、うちの会社経由で入ったパートナーの社員さんが入館証なくしたことがあります。 その時は、失くした本人は即退場（会社に戻される）でした。 また、監督責任でうちの社長と上司が先方のの偉い方にこっぴどく怒られてました。 後日見つかったので損害賠償等にはなリませんでしたが、心象はとっても悪くなりました。 もちろん悪用されたりしたら損害賠償に発展する可能性は高いですが、なくした後しっかり対応して悪用されないようにすれば損害賠償までは行かないと思います。 ちなみに大きい会社さんになるとブラックリストのようなものが存在するらしいです。 うちの会社も今回の事件？を受けてブラックリストの格付けが悪い方に上がってしまいました。 以前にも個人でUSB持ち込んでセキュリティーに引っかかったりした社員がいたらしくもともとブラックリストには乗ってたんですが、初犯ではないことも有りブラックリストのかなり上位の方に乗ってしまったみたいです。 一回乗ってしまうとなかなか信用が取り戻せないみたいで場合によってはおたくの社員は使いませんって言われちゃうみたいですよ。
ボリュームは近所に電子/電気など売っているパーツ屋はないですか？ 1Ｋオームが指定ですが　1～5ＫΩならば使えます。 容量は使いやすい大きさ（取り付け孔及びツマミ　銘板に合わせて小型の物で十分です 確かインバーターはＭｉｎｉですよね、ここに付いているボリュームを見ると分かりますがかなり小型でも使えます ただし機械的強度を考慮して選択してください。 弊社ではΦ30位の物を通常使用しています。 通販では沢山の会社が販売しています。　「可変抵抗器」で検索すれば沢山出てきます。 モノタロ＞ＦＡメカニカル部品＞可変抵抗器＞東京コスモス電機ＲＶ-30シリーズ　1ＫΩ　Ｂ型 （ボリュームの廻し具合で抵抗値の変化の曲線があります　Ａ型はラジオなどの音の変化の場合最初は同じ速度で回した場合少しづつ大きくなる　Ｂ型は回転角度に比例して大きくなる　Ｃ型は最初は急に大きくなり回すにしたがって変化が少なくなる） よって機械の場合Ｂ型がほとんどですので購入時に指定しないとＢ型が来る場合がほとんどです 接続は半田着けです　ボリューム側は　1　2　3　と書いてあります　2　番がインバーターに行く電圧ですから　ツマミの回転が左一杯で0ｖ　右一杯10ｖなので反対の場合は1と3を入れ替えるか　インバーターの11と13を入れ替えれば反対になります ちなみに　フリーダイヤル0120-128-220　で装置の前で電話をすれば設定方法など一緒に操作をすれば親切に教えてくれます。 時間帯によってはなかなかつながりませんが・・・・・・・
次の内容にて試して下さい。 <1>接続方法 (1)ボリューム 接続方法はFRENIC-Miniの取扱説明書の8-8頁を参照します。 端子記号[11、12、13]にボリュームの端子[1、2、3]を接続します。 (2)トルグスイッチ 端子記号[FWD、REV、CM]にトルグスイッチの端子[正転、逆転、COM] を接続します。 トルグスイッチは市販品の手動にて3点切換えのスイッチを購入します。 接点の仕様(性能)は弱電回路用とします。 (1)把手(上)[正転]----->スイッチ端子/正転--COM間ON (2)把手(中央)[停止]--->スイッチ端子/正転--COM間OFF、 〃〃〃〃〃〃〃〃---->スイッチ端子/逆転--COM間OFF (3)把手(下)[逆転]----->スイッチ端子/逆転--COM間ON <2>インバータの設定変更箇所 設定方法はFRENIC-Miniの取扱説明書の5-2頁を参照します。 (1)機能コードF01----[1:アナログ電圧]に設定します。 (2)機能コードF02----[1:外部信号]に設定します。 <3>取扱説明書と会員登録 会員登録が必要ですが、取扱説明書は、次のURLをクリックしますと ダウンロードできます。 上段にある[FRENIC-Mini]の・カタログ・取扱説明書の部分をクリック します。 画面が替りますので、中段にあるタイトルFRENIC-Mini取扱説明書を クリックします。 [取扱説明書/FRENIC-Mini] http://www.fujielectric.co.jp/products/inverter/download/#mini <4>技術相談窓口 更に詳しく知りたい場合は下のURLをクリックして下さい。 インバータの技術相談窓口の電話番号が表示されますので、鈴鹿工場 へ電話して直接相談すると良いでしょう。 [技術相談窓口 http://www.fujielectric.co.jp/products/provide_data/drive/contact/index.html <5>部品類 部品類の仕様や購入先はインバータ本体を購入した販売店に相談する と良いでしょう。
おはようございます。 仕事だけでなく、日常生活でも焦りは禁物ですよね。 私も、どちらかというと、常に焦ってしまい、自分で 自分を追い込んでしまい、ついつちミスを犯してしまいます。 そんな時にすることは、自分自身に暗示をかけ、一呼吸深呼吸を して、取り掛かるように心がけています。 まぁ暗示と言うのは、自分の心の中で「ゆっくり、ゆっくり」っと 呟くようにしています。 まぁこれをすることで、少し冷静になることができます。 また、リラックスするのも良いかと思います。 緊張状態で仕事をすると、効率が悪くなりますから、少し冷静に ゆっくり物事を判断、行動するのが良いかと思います。 まぁこういうことは、性格的なことが大きな問題ですが、少し 何事にもゆっくりすることを心がけてみてください。
検索条件となる表が例えばA1セルからE５０セルまでにあるとして、下部のフィールドら６０行から下方にあるとしたらF６０セルには次の式を入力して下方にドラッグコピーします。 =IF(D60="","",IF(COUNTIF(D$1:$50,D60),"○",""))
さきほどは誤った回答をして申し訳ございません。 私もAccess2007は持っていますので動作確認をしてみました。 レポートフッターのテキストボックスのコントロールソースにPublicな変数名を記述しても認識しませんでした。（変数名に[]が付加されレポートの項目の様に取り扱われる。） ちなみに関数名は認識しました。 もともと私はこういう記述は使いませんので「Access2003とAccess2007で記述が変更になっているのでしょうか？ 」については回答できません。 対処方法としては関数であればコントロールソースとして認識するようですので、関数を使った形に書き換えるか、レポートフッターのフォーマット時イベントにて項目に直接値をセットするかでしょう。（私はこの記法を使います。） 具体的には以下のような感じになります。 ME![設定する項目の名前]=設定する値（今回の場合には IIf(IsNull([明細金額]), 0, [明細金額]) でしょうか？）
社会人一年目なら理解できなくても当然でしょう。 って、いうくらいに考えていれば良いと思います。 もちろん、だからといって勉強を怠っても良いというわけではありませんが。 文章を読んでいると、あなたは非常に真面目で、社会人として最低限必要な一般常識や論理思考力も十分に身につけているように思います。 先輩には理解できるのに、あなたには理解できないのは、頭の良し悪しではなくて、単純に経験の違いです。緊張やプレッシャーから普段なら簡単に理解できるようなことでも頭に入りづらくなっているのかもしれません。特にこの業界は（この業界だけではないかもしれませんが）、自己中心的で面倒見の悪い人は一杯いますので。 地頭の良さとか、飲み込みの早い遅いとかも多少はあるかもしれませんが、ほとんどが経験でカバーできるようになります。 すみません。自分の社会人一年目の頃を思い出して懐かしくなってついコメントしてしまいました。 もう少し気楽に考えてみてください。 自分も一年目の頃は似たような、というか、もっとひどかったです。 でも、今は普通に開発リーダをやっていますよ。 ただ、忘れて欲しくないのは、あなたが先輩になって今度は教える側になったときに、今の経験を忘れないでください、ということです。 あとは、これだけは絶対に誰にも負けない何かを見つけると良いですよ。 それでは頑張ってください。
＞　地域ローカルテレビ局でインターネットをつないでいるのですが、その環境条件においてもwifiは接続できるのでしょうか？？ 固定のインタネット回線が、ＣＡＴＶ（有線テレビ会社、ケーブルテレビ会社）と言うことですね。 普通は、何でも何処のインタネット回線会社の回線でも、無線ＬＡＮルータを接続・設定すればＯＫです。 しかし、ＣＡＴＶのインタネット回線会社の回線だけは、ＣＡＴＶによってはルータの接続が出来ない場合が有りますので、契約のＣＡＴＶへ「ルータの接続はＯＫか？」と聞いてみましょう。 無線ＬＡＮルータの接続がＯＫなら、どんな古い無線ＬＡＮルータでも、何処のメーカの無線ＬＡＮルータでも、ＷｉＦｉ無線の機能が有りますので、接続が可能です。 無線子機（パソコン、スマフォ、ゲーム機）にＷｉＦｉ無線機能が有れば，固定のインタネット回線に接続が可能です。 もし、無線子機が接続出来ない場合は、ＷｉＦｉ無線設定が出来ていないのです。 無線子機が接続出来ない場合の確認方法。 ●　親機では 子機のＭＡＣアドレスフィルタが正しく投入されているか確認（無線ＬＡＮに、タダ乗り防止の設定） ●　子機では 親機のＥＳＳＩＤ（無線区間のＩＤ）の受信確認と、無線セキュリティ（暗号化モード、暗号化方式、暗号キー／暗号化パスワード）の設定確認
お得かどうかは１０年後２０年後の自分を考え、今は福利厚生、税金などを差し引いた額で収入を考えるべきでしょう、 たとえばサラリーマンの額面収入は新卒で２０万強。ボーナスで平均すると３０万弱。でもその上に載っている会社が払っている分を含めると４０万以上なんです。でも手取りは１８万ぐらいになる。つまり４０万なんてのはサラリーマンでは３０前にクリアしているという事です。 逆にフリーは３０超えても同じかそれ以下。もし同じ仕事をしているならですが。大体のひとはそこで派遣社員などになりこき使われ終了です。 つまりいろいろな面でフリーは損です。ローンも出来ない、アパートも借りれないとかそういうリスクは常にあります。 会社組織にするならそれなりの資本が必要。結局は大手から下請け仕事を請け負うだけの会社になりかねない。 他のかたも書かれているように、ITと言うのはプログラミングなんてのは１０％ほどの仕事。こんなのはインドや中国で十分、求められているのは上流の業界を知り尽くした人間。つまり設計やマネジメント能力なんで、これは大企業に入らないと学べない。 知り合いの殆どは大企業のITを渡り歩いてます。つまりフリーで出来る人というのはビジネスマンであるという事です。
IF(B8=0,NA(),C8*3600/B8)　数字が入力されてないセルのグラフ線が表示されなくなったが#N/Aが表示される。 上の条件で#N/Aが表示されることはやむを得ないでしょう。 そこでD列を選択して「ホーム」タブの「条件付き書式」から「新しいルール」で「指定の値を含むセルだけを書式設定」を選択します。 下方の窓の「セルの値」では「エラー」を選択し、その後に「書式」の「フォント」のタブで白色を設定してOKします。 この操作によってエラー表示のセルの#N/Aの文字は白色となって見かけ上の表示がなくなり空白セルのようになりますね。
1)渦巻きポンプは「定流量吐き出すポンプ」ではありません 従って吐出側で絞れば「流量が減って　揚程が上がる（圧力が上がる）電流値が下がる　」となります ただし完全に締め切ると過熱してしまいますので　ポンプとは別に逃し弁を設けたりすることがあります。 2)サクション管を絞ってはいけません キャビテーションが発生し羽根車が粉々になることもあります 3)ポンプより下の位置にある開放型水槽から水を吸い込む際　水が落ちてしまっては「呼び水がない」ので吸い込めません そこで吸い込み口に逆止機能を持たせ、サクション管を常に充水させるものがそれです
ONUとルータの間にFWを入れて何をさせたいのでしょうか。 図が添付されてない上、具体的にどの機種のFWを検討されているか書かれていないので一般論ですが、ルータがISPとの間でPPPoEを使って通信している所にFWを入れてもPPPoEでカプセル化されているTCP/IP通信の中身までチェックしない（できない）場合が多いのでFWとして機能しない可能性があります。 またPPPoEパススルー機能と書かれている通り、PPPoEのパケットはスルーさせてしまうので中身までチェックしていない可能性が考えられます。 TCP/IPのレベルでパケットの中身が見えて、ちゃんとチェックができる所にFWを入れる方がいいのではないでしょうか。
実際定年にならないためにはどの程度のスキル・資格・仕事力が必要でしょうか ＞職種（アプリ系、インフラ系）で違うと思いますが。。。 質問者様は実際に現場で働いているのでしょうか？ 私が回ってきた現場は（インフラ系、保守系）５０代はほんの数人でした。しかもその数人もおそらく プロパーの肩書のある人でしょう。 私はなぜこの業界に入ってこようと思うのか逆に不思議に思います。 ２０代の人（知識が少なくても）は入りやすいけど短命の業界ということはネット等で調べれば わかると思うのですがね。
ものすごい工数になりますね。 VB6からドットネットVBにするのは、ほとんど作り直しだと覚悟してください。 VB6のべたの組み方ではなく、クラス設計をしなければなりません。 DLLが違うだけではないのです。 フォームやBASが残っていても、そのまま使えない以上に構造が違っているので1から作るのと同じだと思うべきです。 ですから、見積にはそこが大きな要因になります。 移行ではなく、再開発です。 こういう事情があるため、いままでVB6の開発物が生き残ってこれたのです。 次バージョンがあらわれてから10年以上たっているのに廃止できなかったのは、そのソースはVB6でしか通用しなかったからです。 お客様にこのあたりをよくご理解いただいて、工期もある程度必要である説得をしてください。
3人程度でITにそれほど詳しくないのであればNASをお勧めです。 NASというのはルータに取り付けてLANの皆さんで使用する外付けのHDDです。 NASが取り付けられるルータとNASを設置し、そのルータにPCがアクセスできるようにしたらいいです。 若干ITに詳しい人がいたら、デスクトップPCをファイルサーバとして設置したいところです。 やはりビジネスで重要なデータとかは2重化にして持ったりし、少々のトラブルでは失わないようにしたいでしょう。 それにはやはりPCでのセッテイングが自由度がありやり易いように思います。 ルータ http://www.amazon.co.jp/s/ref=nb_sb_ss_i_0_7?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&url=search-alias%3Dcomputers&field-keywords=nas+%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC&sprefix=nas+%E3%83%AB%E3%83%BC%E3%82%BF%2Ccomputers%2C417&rh=n%3A2127209051%2Ck%3Anas+%E3%83%AB%E3%83%BC%E3%82%BF%E3%83%BC NAS http://www.amazon.co.jp/s/ref=nb_sb_ss_i_0_3?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&url=search-alias%3Dcomputers&field-keywords=nas&sprefix=nas%2Ccomputers%2C417&rh=n%3A2127209051%2Ck%3Anas
回答がつかないようですね。私の回答もご質問に対する直接の回答ではないですが。 元システムエンジニアでERPも少し触っているものです。 まず１番に検討すべき事項は工数（費用）削減の効果を考えてグロービアに今の仕事を合わせられないかという点ですね。合わせられるならそれが一番素直な方法でしょう。 次に、グロービアに合わせられないとなるとシステム開発が必要になると思いますが、御社の規模かつホストやグロービアをお使いという点で出入りの業者があると思います。そちらに相談はされましたでしょうか？この内容でのシステム開発となりますと御社ホストやグロービアに関する知識は必要ですのでまずは今の業者さんに相談されるべきかと思います。 （いずれの会社さんが開発を請け負うにしても御社の現状（ホスト、グロービア）に化する知識は必要となります） ここまでが回答です。 ところで本当に「工数ベースで試算したら入金伝票起票で年間1億円使っているみたいです」なのでしょうか？「100名程度の全国にいる事務員」として一人当たり100万円の工数になりますが、これは毎日100人の事務員が１~２時間程度作業しているくらいではないかと思います。（このあたりは業種に非常に依存する部分ではありますが）
スクリプトがどこに書いてあろうが、イベントと処理を結び付ける必要があります。 質問の処理は「特定のURL以外で、該当の要素に要素を追加する」ですよね。 で、イベントはロード時なので以下となります。 <script> (function(){ if(document.location != 'http://特定のURL.html'){ function aaa(){ document.getElementById('aaa').innerHTML = '<p>表示した</p>'; } if(window.addEventListener){ window.addEventListener('load', aaa, false); }else if(window.attachEvent){ window.attachEvent('onload', aaa); } } })(); </script> </head> <body> <div class="aaa" id="aaa"></div> </body> イベント追加はブラウザによって書き方違います。 jquery使うともっとすんなりかけます。
会社により、「契約社員」の定義は違うと思います。以前の会社の契約社員の場合、質問者さんのあげたような相違は無く、契約社員でも、次の現場が決まらないでも給与支払いはありましたし、希望する職種につけるとは限らなかったと思います。 そこでの正社員との違いは、 ・１年ごとに契約更新がある。更新が無ければ、そこで終わり。 ・交通費等の経費支払いが全くない。（その分、給与が正社員より高め） でしたね。 「更新してもらえるだろうか？」という身分の不安定さが嫌で、さらに正社員にしてもらえる可能性も無いってことで、その会社から離れた契約社員の方もいらっしゃいました。 なので質問者さんの判断基準に合わせたとしても、「契約社員のほうがメリットがある」と常に言えないようです。
余裕があれば、市販ソフトを購入されては如何でしょうか？ 宛名の鉄人というソフトを使うと、選択行だけの宛名印刷や、その他さまざまな条件で抽出して宛名印刷ができます。 http://www.civil-design.net/soft/xl/atena/
射出成形をやっている者です。 設計的な疑問は置いといて、ご質問の情報のみで脳内シミュレーションしてみました。 仮に投影面積の大きい方を幅20cm流動長45cm、小さい方を幅20*流動長30cmとして考えてみた。 両方の厚みは同じで、ゲートサイズやランナー長なども同じとして考える。 成形品自体が大版なので、装置もそれに見合う型締トン数で、また高速度射出も可能とする。 １、射出開始後、ゲートサイズやランナーは同じなので、両方同等に樹脂進入していく。 ２、まず右側の体積（小）側が流動末端に到達するが、（大）側はまだ注入中なので、（小）に十分な圧力がかからない。 ３、（大）が流動末端に到達し、（大）（小）共に圧力がかかり始める。 ４、しかし、（小）側は金型と樹脂が接触している時間が結構経っている為、低温になり粘度が高くなって保圧がかかりにくくなっている ５、結果、（小）側は充填不良となる。 というのがサラッと予測してみた感じです。 バリは・・・ん～出ないと思いますね。 上記の問題点として じゃあ、（小）側の温度が下がらない内に（大）側も充填させて保圧をかけてやろうと、高速で射出したとします。 すると今度は型のエア排気性が係わってきます。排気性が悪いと型内の空気が樹脂圧で圧縮されて高温になり、 流動末端部の樹脂が茶色く焦げます。型にも焼け焦げた跡が付きます。 どのような樹脂使うかで結果は大きく変わると思いますが、一般的にはこんなプロセスが考えられます。 今回は仮なので、互いの流動長が１．５倍も異なる形状を考えてみましたが、 一言で言えば、左右の体積があまりに違うと“保圧がかかるまでの時間差”が問題になります。 ではこの時間差対策はと言うと、 ・両方が同等の充填時間になるようゲート断面積を左右で変える方法もありますが、根本的対策ではない気がします。 ・高速度射出は排気性が改善されれば良いですが、今度は（小）側が超高速注入になりジェッティング等が出ると思います 　（ゲート断面積による） ・（小）側に捨てタブをつける。（小）＋捨てタブ体積 ＝ （大）体積　となるようなかんじで。でも無駄樹脂が出ます。 成形品質が最も良いのは捨てタブ式だと思います。コスト上がるけど。 エア排気性改良＋左右ゲートサイズ変更の合わせ技を行なうと無駄樹脂を作ることなく、それなりの品質になると思います。 ただ条件出しと何回かのゲートに作り変えに時間がかかると思います。 長文ですが参考になれば。
SEが食いっぱぐれがないってのは、必ずしも正しくはありませんね。 ただ、プログラミングができないというところに、将来性(と言っては失礼な年齢かも)を見出せます。 え？逆じゃね？と思われるかも知れませんが、間違いじゃないですよ。 それと、英語力、おそらくビジネス英語、SEとしての専門用語が判って、ビジネス交渉までできるレベルって考えてもいいように思います。 ちょっとこれは、勝手に買いかぶりをしてしまってる部分もあるかも知れませんが。 話を戻して、プログラミングができないところが、なぜ利点と考えられるかですが…。 SEの職種の重要なところって、プログラミング能力じゃないからなんです。そんなのは、プログラマに任せればいい。 一般的には、SEという名前ながらも、ディレクター、プロジェクトマネージャ、あるいは営業職のような能力が求められます。 プログラマ上がりのSEは、往々にしてそういう能力が欠けている事がある。 プログラマ至上主義のような考え方で、求められている事が判ってない。 そういう私自身がプログラマ上がりのSEなんで、ま、たぶんSE能力は彼氏の方が上じゃないかって気がしますね。 ※その分、プログラマの知識で設計力などをカバーして、互角には持っていける…と思いたいところですが。 まあ、なんだかんだでプログラム能力がないのにSEとして勤まってるって事は、そういった能力が備わっていると判断したわけです。 その上で、その能力はプログラム能力のように年々変わる技術依存ではないので、プログラマ上がりのSEよりも将来性はある。 そう判断したわけです。 と、褒めるだけ褒めて、次は落とす。 呑気だという危惧は、確かにその通り。 今はとりあえず安定しているとして、それに満足しているところに、なんだかな…と感じますね。 中庸の道、可もなく不可もなくという道だと感じます。 まあ、可もなく不可もなくというのは、もちろん悪くはない。 でも、もったいないという気持ちは捨てきれない。 正社員なら安定しているというのは過去のものです。 どうせ不安定なら、年収の高い契約社員の方が賢い選択だ。 そういう考え方もあっていいと思います。 正社員になったら、単純に7掛け前後の年収になるんじゃないかと思いますよ。 へたすりゃ半額という場合も。 もったいないって思うのは、『今から私の為に頑張って正社員の仕事を探す』と言わざるを得ないような仕事をしているというところですね。 能力はあるのに、今の勤め先に「社員にしてください」と言えないってのは、ただ仕事をしているだけかも知れないと。 なんというか、自分の実績として積み上がるような仕事をしてこなかったんだなと。 腰掛け仕事なら、収入優先ってのもアリですけど、長期的に見ると、自分の実績として積み上がる仕事をしないと、もったいないし仕事が面白くない。 積み上がるのは人脈かも知れないし、クライアントからの信用かも知れない、社内での信用かも知れない。 そんな風に積み上がる仕事をしていれば、「社員にしてください」というお願いはすんなり通るかもしれないし、そうでなくても安定は見込めるからわざわざ社員になることにこだわる必要もないかもしれない。なんなら、顧客を引き連れて独立という道もあるかもしれない。 そういう積み上がる仕事をしてこなかったというのは、非常に呑気だ、もったいないと感じる。 言いたい事をまとめると 彼氏の能力は高い可能性が充分にある、『大した実績もない』なんて決めつけは違うかもしれないという事。 たぶん質問者様を通じて彼氏に伝わると思ったので、『能力があるのに、積み上がる仕事のやり方をしてないんじゃない？会社に実績を持って行かれるだけってのは、もったいないぜ』という事。 この2つですね。 長々と書きましたが、ハズしていたらごめんなさい。
>>裁量労働制度 きちんと残業代が時間単位に出る会社は この業界では希少なのでしょうか・・？。 ちょっと裁量労働制度に対して、誤解があると思います。裁量労働制度は、残業ゼロでいいという制度ではありませんよ。 この制度が適用されていても、「深夜業」「休日労働」を行ったときには、割増賃金が必要です。また、みなし労働時間以上に働いた場合も割増賃金が必要です。 （みなし労働時間が法廷労働時間を超えている場合、その越えた分の割増賃金が必要。「残業代は給与に含まれているものとする」として残業代が全く発生しなくなることはない） さらに、時間配分を従業員に対してゆだねる制度ですから、遅刻や早退があっても、賃金カットできませんし、上司は具体的な指示命令もできません。 なお、仕事のやり方への裁量があるだけなので、出勤日に休んでいいわけではありません。出勤日に休めば、通常は欠勤扱いとなります。 転職先の会社は、これらの条件をきちんと認識されて、裁量労働制度を伝えてきているのでしょうか？ これらの条件や、さらに健康や福祉への問題が起こらないような配慮も必要で、それらを満たさない場合、裁量労働性は採用できません。 なので、これらの条件が必要ってことを承知で裁量労働制を適用して、質問者さんを採用しようとしているなら、その会社は転職先としては、良い会社かもしれませんよ。
findを使ってみてはいかがでしょう。ご質問の例なら下のような感じで。 find . -name '[12][0-9][0-9][0-9]0[1-5][0-3][0-9]' -exec cat {} \;
>>ところで、会社に正社員または契約社員として雇用されて取引先の会社（常駐先）で働く場合も派遣となるのでしょうか？ 実態として、そういう働き方は、「派遣」でしょう？ 法律的には、派遣会社に正社員として採用されていれば「特定派遣」という分類の働き方になります。 会社は、「特定労働者派遣事業」として届け出をしているはずですので、ハローワーク等の求人票や会社紹介のホームページには、「(特)12-34567」などの表示があると思います。 仕事が無くなると、すぐに切られるというか、仕事があるときだけ働くのは、一般労働者派遣事業となり、こっちは、厚生労働省に許可をもらわないと派遣事業はできません。そして「(般)12-34567」という表示がされているはずです。こちらは、会社の資産額や現金・預金額が基準以上にあるか？派遣元責任者の経験年数とか派遣責任者講習を受けているか？過去に禁錮以上の刑をうけていないか、労働法の違反をやっていないか？などイロイロと厳しい許可条件になっています。 これらの表示がないのに派遣事業をやっている会社があれば、それは、違法業者なので、厚生労働省に報告してやってください。
(1)作成したプロジェクトファイルを移動していませんか、絶対パスなので、場所を移動すると開けない。 (2)GPUのドライバが古くありませんか、Windows updateの後、ドライバだけ古いと動かない場合が多い。 (3)使用した素材ファイルは全部そろってますか、一個でも抜けると、xmlのファイルが壊れ、ぐちゃぐちゃになります。 解答にならなかったらごめんなさい。
tpppppさんはそれでもこの業界に居たいからこのカテでの質問なのでしょうか？ 営業もプレゼンも出来ないんじゃ、別の仕事じゃないの？ JAVAはともかく、コボラーは社内SEに向かないし営業SEも無理だし・・・。 製造業とかなら話さなくていいから。 ただ正社員であるかどうか微妙です。
「新入りがでしゃばったことをするな！」と言われてないようですから、あなたのやり方を通しましょう。 このプロジェクトが終われば、いずれはプロジェクトリーダーを任されるでしょうから、試してみたいことは何でもやってみましょう。 他のメンバーを変えるのは、ちょっと難しそうですけど、あなたのやっていることを評価している人も必ずいます。
文章の感じからしても、別に気にしなくても大丈夫なんじゃないかと思います。 もちろん勉強することは有意義ですが。 機器の操作方法は実機を触るのが一番手っ取り早いと思うので 別にやらなくてもいいと思います。 現場に決まった手順書があるでしょうし、触りながら覚えればOKです。 ・知識的には 　　MACアドレス、IPアドレス、TCP、UDP、ゲートウェイ、ルーティング、ssh、telnet 　について簡単に答えられる（web検索すればOK） ・コマンドとしては(windowsを例にすると) 　　ping、arp、tracert、ipconfig 　を実行したことがある（手元の端末でOK） ・teratermとかputtyとかのターミナルソフトウェアの存在を知っている（手元の端末でOK） ・超メジャーなポート番号を知っている 　23:telnet, 22:ssh, 80:http, 443:https, 25:smtp とか（web検索すればOK） ができれば大丈夫と思います。 あとは現場によっての報告方法やフォーマットなど、ローカルルールが あると思いますが、それは行ってからでないと無理ですね。 ※実はこの辺が一番やっかいです。
No.1のsean9です。 ちゃんと読んでいればWebコントロールだとわかりますね・・・早とちりしてすみません。 では本題に。 以下のjavascriptでどうでしょう。 TreeView1_TreeNodeCheckChanged内で子ノードのチェック処理します。 <script type="text/javascript"> function fire() { var element = window.event.srcElement; var id = event.srcElement.id; id = id.replace("TreeView1t", "TreeView1n"); id = id.replace("CheckBox", ""); var ch = document.getElementById(id); if (ch != null && element.tagName == "INPUT" && element.type == "checkbox") { __doPostBack("", ""); } } </script> <html xmlns="http://www.w3.org/1999/xhtml"> <head runat="server"> <title></title> </head> <body> <form id="form1" runat="server"> <div> <asp:TreeView ID="TreeView1" runat="server" ShowCheckBoxes="All"> <Nodes> <asp:TreeNode Text="node1" > <asp:TreeNode Text="childNode1" /> <asp:TreeNode Text="childNode2" /> </asp:TreeNode> </Nodes> </asp:TreeView> </div> </form> <script type="text/javascript"> if (document.all) { document.getElementById('TreeView1').onclick = fire; } </script> </body> </html>
main関数の定義部が{}で囲まれてないようですが、ここに書き込むときの編集ミスですか?
失礼しました。 >この式を「10日」以外が選択された場合に適用されるようにしたいのです。 を見落としていました。 >上記の(2)の動きを11日～15日を選択した場合にのみ適用させたいのです。 つまりは、8日、9日、10日を選んだ場合は土日関係なく プルダウンで選択した日数(8日～15日)を加え、更にそこから－２日引いた日付 を表示し、 11日～15日を選んだ場合は、 プルダウンで選択した日数(8日～15日)を加え、更にそこから－２日引いた日付 が土日なら、直前の金曜日を、さもなくば、その日付を表示する。 という理解でいいですか？ もしそうならば、 K6 = I6+F6-2-IF(AND(F6>10,WEEKDAY(I6+F6-2,2)>5),1,0) -IF(AND(F6>10,WEEKDAY(I6+F6-2,2)>6),1,0) で、10日より大きい場合のみ直前の金曜日が表示されます。 K6 = I6+F6-2-IF(AND(F6>10,F6<16,WEEKDAY(I6+F6-2,2)>5),1,0) -IF(AND(F6>10,F6<16,WEEKDAY(I6+F6-2,2)>6),1,0) で、11日～15日の場合のみ直前の金曜日が表示されます。 M6も同様にすることを考えたら、 K6 = I6+$F6-2-IF(AND($F6>10,$F6<16,WEEKDAY(I6+$F6-2,2)>5),1,0) -IF(AND($F6>10,$F6<16,WEEKDAY(I6+$F6-2,2)>6),1,0) として、K6をコピーしてM6に貼り付けすると、 M6 = K6+$F6-2-IF(AND($F6>10,$F6<16,WEEKDAY(K6+$F6-2,2)>5),1,0) -IF(AND($F6>10,$F6<16,WEEKDAY(K6+$F6-2,2)>6),1,0) となってくれますので、そのほうがいいかもしれません。
>・セルI6が 1/11 だとして、セルF6は 10日 が選択された場合、 >セルK6には 1/19 が自動的に 　それでしたら、次の様な関数にされると良いと思います。 =IF(ISNUMBER(1/DAY(I6)/DAY(I6+F6-2)),I6+F6-2-AND(F6>=11,F6<16)*((WEEKDAY(I6+F6-2,2)>5)+(WEEKDAY(I6+F6-2,2)>6)),"")
■自社サービス メリット 　- 仕事、現場に勢いとスピード感がある 　　（というかそれが無いとやっていけない） 　- 周りの社員のスキルが高い（と思う） 　- 達成感、責任感のある仕事 　- 小さい企業だと色々な仕事を任せられるかも 　　（アプリのみならずサーバとか運用監視とか） 　- お客さんが社内の人間（企画部とか）だったりするので色々と融通が聞くかも デメリット 　- 飽きる 　- 小さい企業だとやりたくない仕事でもやらされるかも 　- ローカルルールがあるかも 　　（世間から見ると異質でも社内では常識、とか） ■受託 メリット 　- 色々なお客さん、システムに関われる 　- 自社サービス企業に比べて経営的に安定していることが多い（気がする） デメリット 　- 仕事は大体単調 　- 社員のスキルは低い、意識も低い 　　（お客さんに言われたことをこなすだけなので段々と人間が腐ります） 　　（というかレベルが高かったら自社サービスを展開します） 　- 人は使い捨て 　- 大体激務、激務の割にはスキルは上がらない 　- お客さんに振り回される 　- 大体営業の頭が悪い 思いつきでずらずらと書きましたが、大体合っているかと。 > 私はエンジニアとして他人と差別化できるスキルを身につけられる、 > 企業のエンジニアリングが高いという軸を主軸にして企業を選んでいます であればオススメは自社サービス企業ですね。 冒険できるのは若いうちだけです。 とはいえやはり重要なのはその企業とフィーリングが合うかどうかだと思います。 技術力が高くても会社自体がつまらなければ、色々と効率が悪いですから。 自社サービス、受託にかかわらず色々と説明会なり面接をしてから決めてください。 就職活動頑張ってください。
　Ｋ6セルには次の様な関数を入力されると良いと思います。 =IF(ISNUMBER(1/DAY(I6)/DAY(I6+F6-2)),I6+F6-2-(WEEKDAY(I6+F6-2,2)>5)-(WEEKDAY(I6+F6-2,2)>6),"") 　処で、 >結果的にＫ6には「1/18」を自動的に表示させたいのですが、 との事ですが、I6セルには「1/1」と入力されていて、その10日後の日の更に2日前の日付を、Ｋ6セルに表示させるのですから、「1/18」ではなく、「1/8」ではないでしょうか？
どちらでも施工できます 前者の場合　分流型三方弁を 後者の場合　混合型三方弁を使用します 施工図や納入仕様書、なければ現物見れば　わかるでしょ？
資本集約産業
無料講座の対象ではありませんか？ ジャストシステム　ホームページ絶対成功キャンペーン http://www.justsystems.com/jp/camp/hpb17/winter2012/
フリーランスのシステムエンジニアーです。 > 転職の求人票で、勤務地：プロジェクト先による（＝顧客常駐）となっている求人が多く、 > これは特定派遣なのでしょうか。 必ずしも特定派遣ではないと思うが、この業界は、機密を遵守しないとだめなので、仕事を切り出して自社に持ってこれないから、（派遣ではなく）まとまった仕事は請け負っているが、勤務場所は顧客の会社になるというケースが多い。プログラムはともかくとして、上流工程（仕様をつめる段階）は、顧客と一緒に仕事していたほうが効率がよいでしょう？ > システムエンジニアとしてのキャリアの積み方を教えてください。 > 将来性を考えてとんな転職先にしたら良いと思いますか？ ほかの回答にもありますが、27歳上昇志向だが未経験、はたぶん選り好みしている場合じゃないな。そして、会社に入って技術を吸収したい、というのも気になる。なんで、あまりよい回答じゃないかもしれないが、3～5年はどこでもよいので業界について知る。そして、その期間で、技術を学び、自分の目指す方向というのがわかってくると思うので、また、次の身の振り方を考える、というのがよいだろう。 こういったことを考えれば、1社目はおのずと、母体が大きい、大きな顧客を主要取引先としてもっている、取引先の職種が自分の作りたいものと近い、などで選べば、特定派遣が嫌などということとはまったく別の次元の、新しい人脈が形成されると思います。 あなたのがんばり次第です。業界を知るために、まず、飛び込んでください。 　 　
> 休日中の急な障害呼び出しや電話対応は厄介 その通りではありますが、この業界にいる限り、それを０にするのは難しいでしょうね。 ただ、保守部隊を別に持っているとか、会社として保守メニューをきちんと決めているとかしていれば、ある程度は抑制できると思います。 一番やっかいなのは明確なメニューや体制を持っておらず、保守が現場に丸投げされている環境。この場合は質問者さんが経験されたような、「残業休出あたりまえ」な世界になってしまうと思います。 転職する際、そのあたりを確認してみてはどうでしょうか？
＞if (!(PINB &&　BV(PB0)) BV()は、すべて_BV()の間違い。前にアンダーバーが付く。 あと、あちこちにある「(PINB &&　BV(PB0)」と言う式は「(PINB & _BV(PB0)」が正しいのか「(PINB && _BV(PB0)」が正しいのか、判断が付かない。 なぜなら「ビット演算なら&は１つだけど、ワザと論理積として&&と書いても、意味が通じる」ので、どっちが正しいのか判断できない。 ＞AVRISP mkllとAVR　Studio　４で始めるAVRマイコン開発にかいてあることが間違っている場合はどの本を買えばいいんですか 本を買っても無駄。本にはネット上に書いてあるレベルの事しか書かれてないし、間違ってても直されずにそのままだから。 ネット上の情報なら、間違いを指摘すれば修正され、常に「最新」になっている。 しかし、こういう解説本だと、間違いを指摘しても、在庫が出版社に残っている間は、修正版は出版されない。 在庫が切れて無くなったとしても、書店から重版可能な数量の発注が集まらないなら、そのまま絶版になり、修正版は永久に出版されない。 なので、今の時代は「ネットよりも、本の方が、間違いや嘘が多い」のだ。 今の時代「本よりもネットの方が正確」なんで、ネットに書いてある事が信じられない場合、信じる事が出来るモノは残っていない。ネットを信じない場合、信じられるのは自分だけしか残っていない（何を見ても、何を読んでも無駄）
一般論として... > #include <avr\io.h> ヘッダ名に逆斜線（\は逆斜線の意味ですよね？）が含まれる場合の動作は未定義です。 あとは、どう動いてほしいのか、現在どうなのか、（想像はつきますが）処理系は何なのかを明確にしないと何ともいえません。
(1) 特定労働派遣会社の正社員として、他社へ派遣社員として業務するという意味ですね。 (2) この場合派遣先が無くなった場合は、特定労働派遣会社にて待機や名目上の研修になります。 ですが、ご自身のスキルが低すぎる等により派遣先がない場合には、 事実上、退職勧奨の状態になることが多いです。 (3)特定労働派遣は社内の人間から勤務先を紹介されて案件が合えば、というよりも、 案件に合わせて勤務先が決まると思っておいたほうがいいですね。 仕事を取ってくるのは特定労働派遣会社ですから、ご自身の希望通りの仕事があるとは限りません。 また、仕事の指揮命令権は、派遣先会社になりますね。 つまり派遣先会社からみれば、一般派遣とほとんど変わりません。 (4) 派遣会社（特定派遣も）は登録後、派遣先で面接を行う、というのは、グレーゾーンなので、 面接が行われるかどうかは、会社次第でしょう。事前に面接があるかどうかわかりません。
OS1100 は UNIVAC（現UNISYS）の 汎用機のOSですね。 現在でもユニシスからは上記後継の OS2200 が稼働する汎用機がラインアップされています。
回答No１です。追加のご質問に気が付くのが遅れてしまいましてすみません。 過去の日付での商品の表示ですがシート２のA１セルに例えば2012/12/2のように入力するとして、その時点での商品の在庫表示をするのでしたらシート２のC２セルには次の式を入力してその後は回答１と同じようにドラッグコピーすればよいでしょう。 =IF(COUNTIF(Sheet1!$E$1:INDIRECT("Sheet1!E"&IF($A$1<MIN(Sheet1!$A:$A),1,MATCH($A$1,Sheet1!$A:$A,1))),ADDRESS(ROW(),COLUMN(),4))=0,"",INDEX(Sheet1!$B:$B,MATCH(ADDRESS(ROW(),COLUMN(),4),Sheet1!$E:$E,0)))
221,500,000が数値(221500000)として項目に格納されているならば iif(項目>=100000000,trim(cstr(int(項目/100000000))) & "億","") & iif((項目 mod 100000000)>=10000,trim(cstr(int((項目 mod 100000000)/10000))) & "万","") & iif((項目 mod 10000)>=1,trim(cstr(int(項目 mod 10000))) といったところ。 221,500,000として格納されているなら、 項目をreplace(項目,",","")に置き換えたらいいかと。 ※書式変換みたいなことができたらいいのですが、ないようです。 (確認したのはEXCEL2003)
　一概に言えませんが、発注元が支払う単価は平均的にはプログラマ単価よりＳＥ単価の方が高いです。但しプログラマ単価もＳＥ単価もそれぞれランク分けされているので、上級プログラマは下級ＳＥより単価は高いです。また実勢売値は地域によって異なります。当然首都圏が一番高く地方都市は安くなります。 　個人事業主のように独立しているのであれば、上記のようなベースで年収が変わってきます。年齢でどうのと言えるものではありません。 　もしサラリーマンであれば、日本では年功賃金の傾向がまだまだ強いですから、ＳＥ／プログラマの区分より経験年数や社内での評価（考課）による賃金の差のほうが大きいでしょう。
アプリケーションサーバーが1台ならインスタンスの中でもいいかもしれませんが、スケールアウトさせて複数台のサーバで運用するならDBなどサーバー間でデータの共有ができる場所に入れて管理します。
いろいろありますが、個人さがありますので、書店で自分に理解しやすい、書籍で勉強されたらと思います。
すいころ軸受けってのはこれですかね。テーパーローラーベアリングと言われるものです。 http://www.dendouki.com/588_4420.html ＪＩＳ規格のものはＪＩＳの本に載っていると思いますよ。 あとはメーカーカタログとか。
<head> <script type="text/javascript"> <!-- var w; function foo() { w=window.open('http://www.yah**.co.jp', '_blank'); setTimeout("w.close();document.location='http://www.goog**.co.jp/'", 5000); return false; } // --> </script> </head> <body> <a href="http://www.yah**.co.jp" target="_blank" onclick="return foo();">クリック</a> </body> こんな感じでしょうか？
<a href="http://www.ya*" target="_blank" onclick="return foo();">click</a> <script type="text/javascript"> <!-- var w; function foo() { w=window.open('http://www.ya*', '_blank'); setTimeout("w.close()", 5000); return false; } // --> </script>
○1つ目 　- "Hello World!"の表示 　- 入力値の値チェック（空でないか、半角数値以外が入力されていないか、など） 　- 画面上の表示の切り替え（ボタンを押すと画像が入れ替わるとか） 　- サーバ間との非同期通信（見た目上submitせずにサーバ側にデータを反映、または持ってくる） 　ができれば、「私はjavascriptの経験があります」といっても大丈夫だと思います。 ○2つ目 　何系のアプリ関係のSEになりたいかによります。 　- 企業が会社の中で使うような業務アプリ系(Windowsアプリ) 　　　java、.net(C#かVB.net) 　- Webアプリケーション 　　　HTML、javascript、CSS、PHP、Perl、ruby、java、.net 　- コンシューマゲーム 　　　C、C++、アセンブラ 　- スマフォアプリ開発 　　　objectiveC、java 　- 組み込み系 　　　C、C++ 　- 銀行の汎用機とか触りたい 　　　COBOLとか 　ITシステム開発関係者の皆さんは、最低限HTML、CSS、javascriptの3つは 　触った経験があると思います。（共通認識できるレベル） 　あと業務アプリとWebアプリ開発でほぼ必須なのはSQLです。 　フリーならPostgreSQLやMySQL、SQLite何かがありますので簡単に自宅で勉強可能です。 　何をすればよいかと言われると… 　　今すぐ時代の流行りを知りたい→java 　　いや、俺はじっくりプログラムを極めるぜ→C言語 　ですかね。両極端ですが、どちらの言語もIT世界では最重要な言語です。 　この2つの内のどちらかの経験があれば、他のメジャーな言語の半数以上は 　それほど苦もなく習得出来ると思います。 ○3つ目 　学校でSEになるための教養を学ぶ、というのは知識面ではほとんど期待できません。 　部活でも入って体育会系の気概を叩きこまれるか、友人を作るぐらいでしょうか？ 　偏差値の高い方、という回答は駄目でしょうか(笑) 　日本のIT業界は、アメリカなどとは全く違い、所詮学歴社会です。 　で、大きい会社の方が仕事も大きいです。その分、経験値が大きく入ります。 ○4つ目 　高校生が持っていたとして 　国家試験なら 　　基本情報処理をもっている→おお、頑張ったな 　　応用情報処理をもっている→すごいな 　　高度試験をもっている→すごすぎてちょっと気持ち悪いかも 　ですかね。 　あとは.Comマスターとかでしょうか。 ○5つ目 　- 知人友人を増やす 　- IT系のニュースを定期的にチェックしとく 　　　用語だけを目にしておくだけでも、後々役に立ちます。 　- サーバ、ネットワーク周りの知識も少しづつ増やしていってください。 　　　Linux、Windows試用版などを触ったり、市販のルータを触ってみたりとか。 余談ですが、別途開発環境を必要としないjavascriptを選択されたことは非常に素晴らしいと思います。 学生さんだとお金もないでしょうが、アカデミックパックとかだと１万以下ぐらいでちゃんとした.netの開発環境も買えたりするので、余裕があったら購入をオススメします。eclipseでもいいですけどね。
システムエンジニアというのは担当する工程は全体が対象になります（勿論全システムエンジニアが全体をやるとは限りません）が、プランナーというのはその名称ズバリで上流工程を主とする人になるでしょう。 システムエンジニアの中には他にも、プロジェクトマネジメントをやる人や、品質マネジメント（ISO9001ではありません）を専門で担当する人等もいます。 全て括ってシステムエンジニアと言う人が多いと思います。
＞部長や人事には、配属された当初からやっていることが難しい部署だからついていけなさそうなら相談して欲しいと言われているのです 　相談しましょう。 　あなたはこの仕事が好きですか。好きであれば、続けましょう。 　でも、質問内容からは、その様に思えませんね。 　三十五年前、私は機械設計の仕事からコンピュータへ移りました。 　三ヶ月、夢中で勉強して分かったことは”出来る様になっているんだ”と言うことです。 　この時の感動は、今でも忘れません。 　この事が認識できてからは、鬼に金棒でした。 　要は何処かで情報がつながっている。問題があれば、その内容や繋がり若しくは内部の問題と切り分けができるようなったのです。 　この話があなたのヒントになれば良いのですが、私はこの仕事が好きでした。 　好きだから疲れを知りませんでした。 　好きこそものの上手なれ。 　好きなことをやるのが一番ですよ。 　好きなことがなければ、色々なことをやって見つけましょう。 　やってみなければ、好きにもなれません。 　笑顔で朗らかに楽天的積極的で元気にいきましょう。 老婆心： 　質問のタイトルは重要です。 　SEは、物事を十文字以内で明確に表す能力が必要です。 　システム、データ、画面、帳票などなど、名前の付け方如何が開発に影響するのですよね。 　統計で分かったことを包括的に表現する事と同じじゃないかな。
　例えば、C1セルに「A列に入力されている項目名」と同じ項目名を入力した際に、C2セルに「A列において、『C1セルに入力されている値と同じ項目名が入力されているセル』と、同じ行にあるB列のセル」に入力されている値を、表示させる場合には、C2セルに次の様な関数を入力して下さい。 =IF(COUNTIF($A:$A,C1),VLOOKUP(C1,$A:$B,2,FALSE),"")
＞どうしたら給料が上がるんでしょうか？ 　これを目的としている限り、上がることはないでしょう。 　他人はお金は対価として払われるものです。 　価値あることに多くのお金を払います。 　当然ですね。 　ですから、人の為に働くことです。自分のことを第一に考えていては、良い結果は得られません。 　とは言え、他人の考えていることは中々わかりませんね。 　故に自分が良いと思ったことをやるしか無いのです。 　それは自分の好きなことが一番良いのです。 　だから、好きなことを見つけましょう。 　 　私はトム・デマルコが提唱する構造化分析データ・フロー図が好きで、20年間はこれで働くことが出来ました。 　そこには、このことを理解してくれる信頼の人がいたお陰が大きいのです。 　好きなことをやっていると、信頼の人が見つけてくれると思います。
望みの回答ではありませんが，”ハッシュで暗号化したものはもとに戻せません”。 （パスワード解決に利用しているのは，”入力されたパスワードを同じハッシュで暗号化した値が， データベースのある値と同じかどうか”で判断しているものと思います） と，ここまでは一般的なこと。 そもそも暗号化が解ける様ではセキュリティに問題があります。 なので，この質問の回答はなかなかつけられないのでは？ （ハッシュでなくても，”暗号の複合方法”の質問は答えてくれないだろうなぁ，と） 課題が「一回のログインで複数のシステムを使いたい」のであれば，SSO（シングルサインオン）を 構築するのが一般的です。 追加コストがあったとしてもセキュリティの確保としては，そんなに法外なコストとは思えません。 （オープンソースもあるらしいし） 追加コストが難しく，かつ仕組みも今のままなのであれば，素直にもう一回パスワードの入力を ユーザに要求すべきです。 （または，最初のログイン時にいったん利用するすべてのシステムを裏でログイン しておく，乱暴な方法もあるかと・・・・） 明確な回答になっておらず申し訳ありませんが，参考まで。
コマンドプロンプトやバッチファイルから、コマンドだけでやろうとすると難しいでしょうね sedには、sedのスクリプトを外部ファイルから読み込む -f オプションがありますから、 s/"""/"~/g と書いたテキストファイル(仮にscript.sedとする)を用意して sed -f script.sed 変換元ファイル > 変換先ファイル などとしてはどうでしょう
一般的には社内交換網を通さない（内線ではなく直通の）電話回線のことです。 余剰の回線が無ければ、NTTに依頼して新たに電話番号を取得のうえ電話工事業者に配線を依頼して下さい。 尚、念のため間違いの無いように以下の点を相手の方に再度確認して下さい。 ・普通の公衆回線（アナログ回線）の電話回線でいいか？ ・光回線のＩＰ電話回線でもいいか？ 一時的な短時間で業務に支障が出ないのであれば、FAX用の電話回線を使用して急場をしのぐ事も可能だと思いますよ。
マクロの自動記録って知ってますか？ http://www.eurus.dti.ne.jp/yoneyama/Excel/vba/vba_01.html この自動記録を、例えば「セルに色を付ける」作業だけ やってみるんです。そうすると、メチャ長いコードが記録 されますが、そのコードの英文を読んで「セル色のコード っぽいな」ってトコ以外、'を付けてコメントアウトしてみる んです。 まあ、Webで検索しても良いですが（VBAはヘルプで検索 するより、直接Googleなどで検索した方が分かりやすい 解説がヒットします）、私はそうやって自動記録でVBAを 学びました。 自動記録、下手なヘルプを探すより、ずっと判り易いです。 試してみて下さい。 ちなみにセルに色を塗るのは、色のコード番号をXXXとして Selection.Interior.Color = XXX ってコードになるはず（記憶を頼りなので、間違ってるかも）
そもそも、動力線に用いられるＶＶＲケーブル線は、２芯は黒・白の２本、３芯は黒・白・赤の３本、４芯は黒・白・赤・緑の４本、５芯は黒・白・赤・緑・黄の５本になりますから、青線は６芯以上のＶＶＲケーブル線にしか存在しないはずです。 (※三相３線での４芯ケーブル緑線はアース線になる) そして、三相３線の動力回路には単相３線のような「中性線」の存在はありませんから、単相３線の中性線である白線と三相３線の白線とは全く性質が違います。 従って、三相３線の動力線では、黒・白間だろうが白・赤間だろうと単相の溶接機なら全く異常なく作動します。 これは、実際に溶接機を動力線に接続して使ったことがある私の「経験上からも明らか」です。
自称社内ＳＥです、企業規模は小さいですが。 自社での管理対象の範囲（責任範囲）が異なると思います。 （細かいことはあなたの検討しているサービス次第ですが）大まかに言えばASPはアプリを借りるのに対し、専用サーバはハードを借りるわけです。 アプリを借りる場合にはサーバを借りるほどの自由度はないが、アプリが動くというところまでは業者の責任となります。これに対し専用サーバを借りた場合にはハードの故障への対応は業者の責任でしょうが、その上で動かすアプリケーションに関しては借りている側の責任となると思います。
「表示」のなかに「ソース」というのがあるのでそれを選択するとサイトのソースコードが見えます。そのなかに作成した会社名があることが多いので見てみましょう。 因みに、フリーダムはadvertising.comが、無印はW3Cという組織（慶応大学のようです）が作成したようですね。
自分も同業種ですが、プレゼンに限らず人に説明するのは難しいですね。 よくセミナーや自社への提案でプレゼンを聞く機会が多いですが、プレゼンを聞いていて「声の高さ」があまり気になったことはありません。特に声の高低で好感度がかわることはありませんのでそんなに意識しなくても大丈夫だと思います。 もし、苦手意識があるのであれば、以下を意識するといいと思います。（自分もできていませんが・・・。） ・資料の棒読みはダメ （できるだけ自分の言葉で説明すること） ・ポイントは、できるだけゆっくり話す。 ・専門用語でごまかそうとしない。 ・説明前に説明したい箇所の概要を話し手おく。 　（今日は、３つのポイントについて説明したいと思います。１つは、～、２目は～、３目は～と行ってから１つ目の詳細を説明する。 　　聞いている方がダラダラ説明が続く感覚がなくなるのと、自分が興味がある箇所が事前にわかりますので・・・・。） オラクル社CEOラリーエリソンのプレゼンを聞いたことがありますが、上記が全てできていていました。 あとは、経験と練習でなんとかなると思います。 （ジョブズは、何日も前から会場を借切って練習していたみたいです。）
＃１です。 >ちなみにC#とありますが、言語によって総合環境ソフトも変わってくるんでしょうか。私が勉強しているのはCです。 C#だと、また話は別ですが（言語が違いすぎるので） Cとなりますと、業務用のフレームワークを使用したことがあり （名前も覚えていないのですが）Visual C++ にかぶせて 使うものでしたが、これは、GUIが完全にテキストで表記されて いました。 証券のシステム開発で使用するものでしたので、高価なものでは あると感じられましたが、これはまた、VC等のリソースファイルのような 複雑さは全くなく、今あるHTML+CSSより難しい程度のような そのような感覚でUIデザインが出来た記憶です。 当初、面接したとき、確かに・・・ 「UIできません」とはっきり言って、「OK」で内定しましたので。
ヘッダー画像のサイズは使っているテーマによっても異なります。 Twenty Elevenのヘッダー画像のサイズ変更ならばここに出てました。 http://ja.forums.wordpress.org/topic/8132 個人的には、Twenty Elevenなどを直接いじるよりも、子テーマを作る方が好きですが。 Wordpress　子テーマ　作り方　などで検索すれば色々出てきますんで、そこを読めば、必ずヘッダー画像のサイズ変更関連にも行き着きます。 もし、興味があれば子テーマにも挑戦してみてはどうですか？
http://okwave.jp/answer/new?qid=7786253 階層違い？ フォルダー指定する 分割フォームにして　子ウインドーにｃｇｉページを指定するとか・・・http://www.tagindex.com/html_tag/form/form_target.html
自社開発や派遣で顧客常駐での開発プログラマとしての経験からです。 >>・バグの修正をお願いすると、別の箇所で不具合が出る。 →バグ修正後、回帰テストをやっていないのでしょうね。まあ、テストの手間が増えるから省略したくなるのは判りますが、そうすると痛い目を見ます。 >>・インターフェイスがいつの間にか前のデザインになっている。 →ソースコード版数管理にバージョン管理システムを使っていないのでしょう。それで、修正するソースを間違えて１つか２つ前の版を使っていたのでしょう。 >>・進捗状況の報告をお願いしても、いつの間にかしなくなる（人的問題だけか？）。 →進捗管理システムを使っていないのでしょう。そして、手作業で報告書を作る時間がとれない。 手作業でやると、その報告書の元データとなる進捗データをＰＧから集めるのが大変だし、報告書にするのも手間かかりますからね。 >>・まったく動作確認をせずに渡してきたのでは？　というぐらい単純な間違いをしてくる。 →推察どおり、まったく動作確認をしなかったんでしょう。 >>そこで浮かんだ疑問なのですがWeb系のシステム開発の場合、川の水が 上から下に流れるように淀みなく（ほぼ）完璧にできるというのは、どのぐらいの割合なのでしょうか。 そういう、ウォーターフォール式の開発手法を、Ｗｅｂ系の開発では使わないことが多いようです。 Ｗｅｂ系の業界は、開発予算の削減要求、短期開発、流動的な要求仕様への対応ってことで、アジャイル開発手法と称して、きっちりと仕様書を作らないで、製造工程に入る開発をやったりします。まあ、新しいツールを使う場合、「作ってみないとわからん！」っていうことが多いので、「うだうだ設計しないで、まず作ってみろ！」ってことになったりします。 まあ、そこで作ったものをプロトタイプとして捨て去って、設計からやり直せばいいのですが、予算と期間の問題で、そのまま突き進むと、いろいろと問題が発生することになります。 ちなみに、開発を請け負った会社が、自社でソフト開発を行っている場合、上記のトラブルは、自社の信用問題になりますし、開発コストは全体としてみれば増大することになります。なので、そういった問題は、自社の開発体制をサポートするソフトウエアの導入や体制の見直しにより改善されていく可能性が大ですが、下請けを使っていると、改善されないでしょうね。 また、「利益を生むのはＳＥが担当する上流工程だぜ！ＰＧ作成という下流工程なんて、旨みが少ないし、奴隷階級の下請け会社に任せるべきである！」という思想の会社だったり、開発工程を改善するような考えの社員がいないと、いつまでも、旧来の開発方法を取り続けるってことになると思えます。 ちなみに、私が、会社で「バージョン管理システム」の導入をやったとき、使い方になれてなくて、メンバーの開発中のソースコードが全て消えてしまったことがありました。それでも、工夫しながら使っていたら、それまでに時々あった「昔のソースを使って修正してしまった！」というトラブルは消えました。 まあ、「トラブルがあってもいい、導入しちゃえ！！失敗したら自分が責任とればいいだけ」って「思い切り」をする人が社内にいないと、開発工程の改善はできないでしょうね。
http://oshiete.goo.ne.jp/qa/5677546.html
あきれた気持ちを感じますが、無くもない状態だとは思います。 実質の管理者が居ない状態ですね。 上司が結果だけを求める組織化がなされていない会社のようです。 これは個々のプログラムの開発のあり方、などというレベルでは収まりが付きません。 まずはシステム部門に管理できる管理者を置くことが大前提でしょう。 そのためには人事権を持っている人に働きかける必要があります。 働きかけるには提案書の作成ですね。 まずは現状の把握と分析。 理想形のとの比較、といったところでしょうか。 要点としては、社内の個々のプログラムをシステムとして捉える切り口を見つけることが出来るかどうか、でしょう。 システムとは組織です。 プログラムをシステム化するということは、開発もメインテナンスも組織化することになります。 このような提案書を作成するには相当の時間が必要です。 そのためには、日々の勉強も必要ですが、上司に働きかけて一日に少しでも提案書を作成する時間を貰うことです。 ただ、今まで放置していた事柄に問題意識を持ってくれるかどうかが分からないですけど。 それらが出来ないようであれば静観するしか無いでしょう。 私は機能の実現に言語がバラバラでも構わないという考えです。 １つのプログラムの実現に複数の言語で作られても構わないとさえ考えています。 ただ、適材適所である必要があります。 つまり、機能実現に最も適した言語であること、です。 現在のサーバ/クライアントシステムでは、html,Javascript,PHP,データベースなどの組合せは最低限必要でしょう。 ただ、データベースだけは統一する必要があるでしょう。 私は、プログラムよりもデータベースの設計の方がはるかに重要でシステム全体への影響度が大きいと考えます。 それから全員で月に１回でもいいから何かテーマを持って勉強会が必要と思います。 切れる人でも、一人では何も思い浮かべられないことは多いです。 自分にはない発想の意見を聞くことにより刺激されて、その人の能力が開花したりするものです。 私はお客様にも同業者にも教える立場になったことは多々ありますが、アホのような質問で自分でもびっくりするような発案が生まれたりすることもあり、教えることとは教わることでもあると思っています。
本件は電力線通信PLC（Power Line Communication）ではなくて 産業用のPLC（Programmable Logic Controller）の事ですよね と、わざわざ断り書きを入れないといけない時代になってしまった 三菱Q http://www.mitsubishielectric.co.jp/fa/products/cnt/plcq/items/cpu/index.html オムロンCJ2 http://www.fa.omron.co.jp/products/category/automation-systems/programmable-controllers/cj2/index.html 上記ＱシリーズとＣＪシリーズはパスワード設定せずともネットワーク接続可能 必ずしもデフォルトパスワードが存在するわけでもない タダ単にMlesecNetやSYSMACNETと接続するのと変わりは無い 専用ケーブルがイーサネットになっただけ（単なるメディア変換） 問題はネットワークが外部のインターネット回線に接続してるかどうかだけ 日本国内では外部インターネットに接続してる工場内のPLCネットワークは少ない 中東か何処かの国のシーメンスPLCが外部からハッキングされたらしいが http://www.itmedia.co.jp/enterprise/articles/1105/25/news023.html 現時点では三菱やオムロンのPLCが外部からハッキングされたと言うニュースは見当たりません
ちょっと認識が間違っていると思います。 mppe-128は、RC4暗号化の鍵長を128Bitにする設定です。 MS-CHAP-v2は、認証方式です。 いくら暗号化強度を高めても、MS-CHAP-v2の脆弱性により認証情報が解読されてしまえば関係なくなってしまいます。 そのためPPTPは使用しないようにすることが推奨されています。 http://www.computerworld.jp/topics/563/204623 https://www.jpcert.or.jp/at/2012/at120027.html PEAPと共に利用などの回避方法もありますが、PPTPサーバとPPTPクライアント側がサポートしていないといけません。 書かれている設定はLinuxだと思いますが、LinuxでPEAPをサポートしたPPTPサーバが構築できるかはちょっとわからないです。 ルータがPPTPサーバの場合は、PEAPをサポートしているものはほとんど無いでしょう。 MS-CHAP-v2の脆弱性に対する対策がとれないのであれば、L2TP+IPsecなどの方法を使用するように検討するほうがセキュリティ的には安心です。
社員50人程度の企業の社内SEです。 (1) その企業の導入しているシステムによります。以前からログを取っていれば「調べれば」わかると思います。当社でもファイヤーウォール（社内とインターネットの境の部分）で記録は取っています。 ただ、いちいちそれを見てはいませんけれど。（なにかあった時に見るために過去分は私が毎月保存しています） (2) 基本的に無理。どこにアクセス履歴が保存されているか知っていて、それを削除する権限がある場合のみ可能です。 (3) 導入しているシステム次第かな？ 当社のファイヤーウォールでの監視ではそこまでできませんが。 (4) 今度そういうソフトを当社でも導入しますが、普通なら、いつ誰が、何のファイルを移したかくらいまでだと思います。ファイルの内容まですべておさえるとハードディスクの容量を食いすぎますし。 とはいえ、どこの何のファイルをコピーしたかわかれば、おのずと内容も相手に伝わると思います。 （※私が評価使用したソフトではメールに関しては添付ファイルのコピーを控える機能があるソフトもありました） 社内の重要情報を持ち出すのをけん制するためにセキュリティソフトを入れるので、いつ誰が何のファイルを持ち出したかがわかる記録を取るのは必須です。 まぁ、USBの制限を付けるなら、私なら書き込み不可にしますが。（これは私が使用した多くの製品で実装されています） (5) なんらかのソフトが入っていないとわからないと思います。 あなたがそのソフトが入っていることを認識しているかはわかりませんが。 (6) これも導入しているセキュリティソフト次第ですが、どのファイルかまでは普通にわかって当然で（これわからないと監視する意味ないですし）、内容がわかるかは導入しているソフト次第です。 (7) クライアントＰＣでのファイル操作等は当社でも記録を取る予定です。当社の導入予定のソフトウェアではフォルダ作成は記録されます。同期はわかりません。そこまで試用中に検証していないので。 (8) いつから記録を取っているか次第です。 (9) ソフト導入前にはわかりませんよ。 ただ、あなたに連絡せずにすでに類似のソフトが入っているかは私にはわかりません。 あなたの場合にはとりあえず今のうちにそういうのは整理しておいた方がいいと思います。 (10) 別段すべてを監視できるとは限らないのですが（各会社のポリシーや導入しているソフト次第です）会社のＰＣを私用に利用するのは避けた方がいいでしょうね。 ＞打ち込んだパスワードや ワードの方はわかりません。ふつうそこまでやらないだろうとは個人的に思いますが。 （理論上は可能です。というか悪意のある人によってずっと前から実用化されています。） ＷＥＢに送信するパスワードは記録されているんじゃないでしょうか？ そこまで検証していないけれど、当社の入れるソフトもＷＥＢに送信した情報の記録は取れると聞いています。（そうでないとネットの掲示板への投稿内容とかを記録できませんし） ＞このタイミングで、一旦これまでの過去ログを取られる可能性があるのでは、と ＞夜も眠れません。 根本的なところとして、これまでに記録を取っていなければ過去のものについてまでは調べることはできません。その点で今はまじめにやっているならまず大丈夫。 ただ、これまでも記録していたけれどそれを社員に伝えていない可能性もあるので、絶対大丈夫とまでは言えないという感じです。
でこの質問が「システムエンジニアリング」とどう関係しているのでしょうか?
base64が暗号化を意味するものです。 通信時に生データを流すと危険なので、暗号化していると思います。 pKaj8qPspKik86SzpKmkyQ== よりも、暗号化プログラムがどこにあるかを調査してください。
http://hogehoge.tk/tool/ にWebアクセスして， 左側の「変換元(入力)データ」欄にその文字列を貼付。 入力データ形式(デコード)：BASE64 文字コード：SJIS 文字コード変換：変換不要 ダイジェスト：未指定 出力データ形式(エンコード)：プレーンTEXT で「変換実行」ボタンを押す。 追伸． http://okwave.jp/profile/u2246295.html でご自身のプロフィールを見ていただくと分かるのですが，お礼率が０％なんですね。寄せられた回答に対して「お礼」ではなく「補足」で返答しているとお礼率がカウントされず，回答に対してダンマリを決め込んでいるようなマイナスのイメージをまとってしまいます。この点，留意なさるとよろしいかと。
>No.2です。 今度はソースをじっくりみてみたのですが、スタイルシートのセレクタがダブっているのはなにか理由があるのでしょうか。 #front_center div.contents02 このセレクタが3つのスタイルシート全てに含まれています。 div.cont01 このセレクタが下2つのスタイルシートに含まれています。 書かれていたソースを使用して試してみたところ、私の環境ではimgの画像のみ表示され、背景は表示されませんでした。 1つ目のスタイルシートのセレクタを「div.contents02」2つ目を「div.cont01」3つ目を「div.cont_top」だけにしたところ、背景、imgの画像ともに表示されました。 スタイルシートの作りを確認してみてください。
中途半端にしかこなしていない一人ですが・・ リーダー、または、マネージャー等は、大抵 実は技術職をしないものであることが多いようです。 例えば、質問者さんの場合、今の仕事は、 現場で、プログラムを書いたり、設計されたものに対して 施工（設置とか？配線とか？設定とか）するもので あるかとは思われますが、 リーダークラスになりますと、今度は特に日本語としての やりとりが中心となります。（特に営業スキル） 今までの職でもそうであったかもしれませんが、 通常、このような工程でプログラムを組む時には （日本であれば）日本語の仕様書を見ながら、または 仕様書に対して、追記をしながら、または追記後に プログラムを書いていくかと思われます。 その最も最初の部分を、または、途中経過を 顧客側と打ち合わせたり、 内部で調整して、人員を割り振ったりするのが、 この業界でのリーダー職であるかもしれません。 例としては・・・ そのために、今まで、がんばって、例とてＣ言語で int main(void) {} と書いていたことが、 書く必要がなくなり、必要になるのは、Ｃ言語は どういう特徴があるものかというのを捉えてないと いけないというのがあります。 ＃資格とかスキルがあるわけではないので、本当に体感的なことになり 申し訳ありません
失礼、質問をよくみていませんでした。 項目１,名称で人数を集計していたんですね。 集計するにはGROUP BY句が必要です。 SELECT テーブルＡ.項目１, テーブルＢ.名称, SUM(テーブルＡ.人数) FROM テーブルＡ LEFT JOIN テーブルＢ ON テーブルＡ.項目２=テーブルＢ.項目１ GROUP BY テーブルＡ.項目１, テーブルＢ.名称
バグ票は残していますか。 テストケースは管理していますか。 テストケースの消化状況とバグ発生状況を日次で管理し、グラフ化しておくとよいです。 どのくらい、バグがありそうか目安をつけて、テストしましょう。 そのうち、バグの発生が収束してきます。
一番手っ取り早いのは $st = $pdo->query("SELECT * FROM shohin WHERE bunrui='?' "); を $st = $pdo->query("SELECT * FROM shohin WHERE bunrui='" . $_POST["bunrui"] . "' "); にすれば動きませんか？ （入力フォームに何かしら文字を入れないと、何も出力されないでしょうけど…） あとは ・SQL実行前に入力値（POST値）のチェックを行う ・SQL実行時はプレースホルダを使う ・DB接続時、SQL実行時のエラーチェックを行う を実装すれば、とりあえず大丈夫かと。 ※全然的外れなことを言ってましたらスミマセン。
結論から言いますと、難しいと思います。 何らかの形で、雇用されて働くことになるでしょうから、自分がやりたい（好きな）仕事と、会社が要求する仕事は異なる、 しかも、面倒なのは上に立っている人の独断と偏見（好き嫌いも含め）で、サラリーマン生活は大きく左右されるのです。 （嫌だったら、独立して一人で、或いは創業することです） １．システム保守運用は、一生涯、勉強することがなくならないような職業でしょうか。 　　そうです。今後とも言語をはじめネトワーク技術、ひいてはコンピュータの仕組みも根底から異なるシステムが出てきます。 　　そして、大半はブラックボックス化され、誰もが見て触れるような状況（今でもそうですが）ではなくなります。 ２．システム保守運用を生涯の職として極める、というのは現実的に可能でしょうか。 それとも、経験を積むと開発の方に回ることになるのでしょうか。 　　前述のとおり、難しいでしょう。貴方の考えも、今はそうであっても、将来、変わります。 　　しかるべき教育を受けて入社してきた新人の会話に、５０歳過ぎても同等のスキルをもって入れますか？ 　　指導者であるべき立場（ポスト・年齢）になった貴方が、彼らの話す内容が殆ど分からなくなるのは、目に見えています。 　　そのような状況下で、「システム保守運用」が可能でしょうか？ ３．もし現実的であれば、学生のうちに勉強しておくべきことは、 コンピュータの仕組み、プログラミング言語などの技術知識のほかに、 何があるでしょうか。 　　否定的なことばかり書きましたが、いずれも重要な知識です。他の人から一目置かれるぐらい、がんばって見てください。 　　おのずから、自分が進むべき道も見えてくるかと思います。 　　健闘を祈ります。
PSDで保存して無いでしょ。　インデックス表記なのはGIFやPNGです。 これはレイヤーを残しません。 レイヤーを残して編集できる状態で保存するのはPSDかPDF以外ありません もう上書きしてしまって残ってないならやり直しです。
会社では、システムの都合上Outlookを使用（強要され）し、家ではBecky!を使っています。 一番の違いですが、Becky!はメール機能に特化しているので、動作がキビキビしていて使っていても疲れない事ですかね。 Outlookは、メールやらスケジュールやらタスクやら、いろいろ出来るのはいいのですが、全体的にもっさりと重いので使っていて少しムカつきます（笑） あとBecky!のほうが、文字列等の検索が早い、新着メールが確認しやすい、不具合が発見されても早期に対応してくれる、バージョンアップしても互換性を保つよう設計されていると思われるので今後も安心感が高い、等々ですかね・・。 私の会社の周りの人も、ほとんどがBecky!を使っていたのですが、システムが変わってOutlookになってから文句ばかり言ってますよ(^_^;) ちなみにですが、「Becky!だからウィルスに感染しにくい」というのは嘘ですから。 感染するか否かは、使用しているセキュリティソフトによって異なります。
Duddlay と申します。 ＞Ｗｉｎｄｐｗｓ７から、ＷｉｎｄｏｕｓＸＰ等へコピー コピー先の Excel のバージョンは合っていますでしょうか。 また、コピーする際、VBA を組み込んだ Excel シートもコピー していますでしょうか。 VBA だけコピーすると、Form の名前や Sheet／Cell の名前が 一致せず、また、Excel のバージョンが異なれば、VBA の命令 自体が存在せず、エラーとなってしまうことがあります。 そのあたり、一度確認してもらえませんでしょうか。
ゲーム業界なら単純に給料が安い。サービス残業多い。うつになりやすいなど。 よほどやる気がなければついていけないでしょう。
> (1)Ｍａｃ用のＥＸＣELとの互換設定とはどういうものでしょうか？ > (2)セルの書式設定で、種類として[１３：３０：５５]型を指定しているのですがどうしても どちらも、シルアル値に関する項目です。 参考URL（MicrosoftさんのWebページ） Excel の 1900 年を基準とした日付方式と 1904 年を基準とした日付方式の違いについて を参照してください。 時刻に関する部分ですが、「日付のシルアル値が１増えると一日増える」とは、 「24時間を1とする」ということです。 0:00:00は0ですが23:59:59は限りなく１に近い小数です。 正午（12時）を設定すると、小数部が0.5となることで確認できると思います。 ※6時は0.25、18時は0.75 (2)ですが、表示したい値は年月日時分秒ですよね？ yyyy/mm/dd hh:mm:ssを設定してください。 [１３：３０：５５]型では書式を時刻と解釈できずに、値がそのまま表示されてしまいます。
これはデータシートからはいるのではなくて、クエリーで目的のデータを集計することから始めます。 集計のキーを〈男or女〉〈転入or転出〉としてその分類で、（男性人口数）（女性人口数）（総人口数）を集計するクエリーを作ります。 そのクエリーの結果をデータシートに呼び込むようなイメージで作ればできると思います。 まず集計クエリーの作り方を勉強することですね。 これが出来れば下のデータが変更される都度直ちにクエリーの結果が変わります。 Accsessはある程度データと最後の結果の論理的関係を考えることが必要です。簡易ソフトとはいえやることはシステム設計とあまり変わりません。少なくとも頭の中でその関係が思い浮かぶことが必要です。 そのあたりもある程度勉強されたほうが良いですよ。
scanfの二番目以降の引数には，変数のポインタを指定します． 単に変数名を書くとその変数の値を渡してしまうので，変数名の前に＆記号を付ける必要があります． 具体的には，警告の出ている8行目，11行目を次のように直せばOKです． scanf("%d,%d", &go, &hachi) ; scanf("%d 円", &azukari) ;
私は６０代後半ですが、時々これを使っています。ただそれ（BASIC)を覚えたのは３０年前のパソコンの初期の時代です。 その立場から言うと、今のEXCELでVBAを知らないと出来ないことが現実にどれほどあるのかというのが疑問です。 殆どは関数で出来ますし、マクロも「マクロの記録」の機能で、人の手の通りに自動実行するマクロを作れば良いと思います。 それでも無理な処理はVBAの知識というよりは、システム的な発想があるかどうかということに絡んできます。 果たして実務でそこまで必要でしょうか。 私の例で言えば、VBAを使うのは実務というよりは、たとえばゲームのようなものを作ってみたり、非常に面倒な関数の使い方の場合にこれをVBAで自分だけの関数にするなどの目的で、あまり重要なことには使わないですね。 それと実務でVBAを使うとそのデータは本人以外には中身がわからないという問題が生じます。会社の仕事ということを考えるとこれは一寸考えたほうが良いですね。 という事で、あまり必要とは思いませんし、本当に理解しようと思えばシステムの基礎（アルゴリズムなど）もあわせて勉強することをお勧めします。 これは単語と文法だけを知っていても小説は書けないということと同じです。 良い小説を書くには豊かな人生経験が必要です。VBAも単純な文法だけの問題ではありません。
http://www.fujitaka.com/products/vendor/hanyo_vendor/index.html http://www.jidouhanbaiki.co.jp/
ANo.2です。 B社→C社が準委任なら問題ありません。 契約書上は請負です。 請負、委託、委任、準委任と色々言いますがアレは契約書作成時の言い回しと世間一般的の契約内容の詳細部分を指しているだけなので。 極端な話、派遣契約か請負契約（派遣以外）かで考えて問題ありません。 …が、B社の社員が居ない…だと…？ 完全に黒ですねw 二重派遣です。 B社とC社の請負の考え方が間違っています。 よく「ウチは準委任だからいいんだ！」とか訳のわからない事言う人いますけど（笑） まぁ、貴方が待遇に不満が無いなら先に書いたように自社の営業に軽く是正するよう交渉を促すくらいで良いと思います。（何も変わらないと思いますが。） プログラム書きなら今でもよくある話ですし。 一番怖いのは監査が入って事が大きくなって、C社上層部から「一旦、請負も派遣も全部整理しろ！」とか命令が下り契約終了…とかですね。 B社とC社の契約が部署で内々で結ぶようないい加減な管理方法のところならよくある話です。 まぁ、貴方に責任は無いし罰則もないですしどうしようも有りませんので気にする必要すらないと思います。
Ｓｕｂ　作業台1作業開始（） With　ThisWorkBook.Sheets("Sheet1") ．Ｒａｎｇｅ（”Ｋ１６”）＝．Ｒａｎｇｅ（”Ｋ１６”）＋１ End　With Sub やりたいこと（） 　Ｔｏｔａｌ１＝ＨＨ１＆”：”＆ＭＭ１＆”：”＆ＳＳ１ With　ThisWorkBook.Sheets("Sheet1") ．Ｒａｎｇｅ（”Ｅ６”）＝Ｔｏｔａｌ１ End　With ブックまで指定すれば 同じSheet1を持っていても 同じK16セルを持っていても 目的の場所を更新できます http://www.excellenceweb.net/vba/object/active_this_book.html
貴方が書いたURLの下部に注意事項があり、そこのメモとして以下の事が記載してありますが、見落としでしょうか？ それとも読んでもよくわからないという質問なのでしょうか？ メモ: Microsoft® SQL Server® 2012 Express には、32 ビット版と 64 ビット版があります。 SQLEXPR32_x86 は、32 ビット オペレーティング システム用の SQL Server Express のインストールだけに使用できる小型のパッケージです。 SQLEXPR_x86 は、同じ製品ですが、32 ビットと 64 ビット (WoW) の両方のオペレーティング システムへのインストールをサポートしています。 SQLEXPR_x64 は、ネイティブの 64 ビット SQL Server Express であり、64 ビットのオペレーティング システムへのインストールだけをサポートしています。 これらのパッケージに、それ以外の違いはありません。 Microsoft® SQL Server® 2012 Express は IA64 システムではサポートされません
まずその怪我が勤務中のものであれば労災の可能性はあります。ただしその怪我をしたときに誰か第三者はいたでしょうか。会社が否定した場合、勤務中の怪我であることを立証することが必要です。 これができないと後の保証云々も難しくなります。 次に事務だから重量物を運ぶことはおかしいかですが、「通常事務職と聞か されていた仕事でなぜ」と言いますが、入社時にその事務の具体的内容を会社から言われて入ったのであればそのとおりかもしれませんが、格別具体的内容が言われていなかったのであれば、その会社ではそれは事務職の仕事なのでしょう。 今後事務職以外の仕事は、対応できない事を相談しようと思っています。」と言うのは自由ですが、会社がそれでは使うことはできないと言った場合、退職を覚悟しないといけないかもしれません。 本当に面接で言われた仕事と全く違うと言うことであればそれに苦情を言うのは構いませんが、それに対する会社の反応は言ってみないと判らないですね。 もしそれで退職となった場合は、労災の問題はもっと難しくなりそうです。 ということで、退職を避ける現実的な方法は、その怪我の診断書を持参して、その理由で重量物の運搬は無理と言うことを会社に言って、軽作業にしてもらうことかなと思います。けが人に重作業はさせないでしょう。 ただあまり事務職にこだわるとそこでは続けられないのではないでしょうか。
元プログラマです。 >業務系webアプリ製作の仕事をしており、 >SQLのテーブルがどうこうといった >「机上の空論」の話についていけず、 >今も四苦八苦しています。 向いていないのではなく、DBの知識がないのが原因では？ >企業のホームページ（htmlやCSSのwebサイト）を作る仕事 この仕事はデザイナーの仕事です。文系向きというより、絵とかが好きな人向きです。 >webを通じて人を惹きつける文章を考えたりする >webマーケティングとかの方が >向いてるんじゃないかあなんて思ってます。 このサイト(↓)をながめると、forworkさんが「向いてるんじゃないかな」と感じている仕事がどのようなものなのかちょっとだけわかるとおもいます。 http://www.lancers.jp/ もしほんとに向いているようなら転職を検討してみればいいのでは？
20年くらい前の話ですが，バブル絶頂期に工学部からメーカーに就職し，とあることがきっかけで高校数学の教員を目指すことになりました． 会社は完全にやめ，工学部在学時に取った単位で教科の単位に読み替えることができるものを使い，足りない分は通信教育で単位を揃えました．ただし，それは他教科免というもので，高校の免許を何か持っていなくてはなりません．私の場合，工学部出身だったため「附則13項の規定」だったと思いますが，工業の免許はほぼ自動的に取得できました．それで，上記のように他教科免で高校数学一種の免許状を取りました． 教員免許のことについてはいろんなところに聞きましたが，結局免許を発行しているところ，すなわち県庁の学事免許係のようなところに聞くのが確実です．受験雑誌や各大学の教務課はあまり知りませんでした．ただ，現在はどうなのか知りません． その後は教員採用試験です．これが当時難関で教育大が伝統的に強く，ある人から「せめて理学部ならいいのに，工学部なんて無理」と言われました．私は学力には相当自信があったのですが，1回目試験に臨んだところ，1次試験で落ちました．実は，落ちる前，教育委員会から工業なら空きがあるみたいなことを言われ，断ったら落ちました．得点は合格域に達していたのに，コネがないから落ちたんだと思いました．本当のところはわかりませんが，2回目はすんなり通りました． あともう一つ．あなたは教員としてほんとうにやっていきたいですか．かなりきついですよ．部活で土日なし，成績処理などができると無限に時間がいる，これらを同時に押しつけられることもあります．私は30代から40代初めまで忙しい時で週70から100働いていました．月残業にすると200以上ですかね．しかも，残業手当はほとんど0です．最近はいじめやモンペアなど大変ですし，割に合わないと思います．ただ，生徒とふれあうのは楽しいです．
ＧＸＷ２はどのタイプでしょうか？ http://www.mitsubishielectric.co.jp/fa/products/cnt/plceng/lineup/index.html ＧＸＷ２単体 ＧＸＷ２＋その他色々なオマケ付きのｉＱＷｏｒｋｓ 初心者ならＧＸ８でも十分ではあるのだが 基本的機能には大差は無い 大差が有るのは概ね以下の通り １　ＧＸＷ２はラベルプログラムが使い易い ２　ＧＸ８でもラベルプログラムが使える（使いにくいだけで使えないわけではない） ３　ＧＸＷ２はパソコンの性能に拠る　＜Ｘｐでは重たい、Ｗｉｎ７ＰＣなら概ね問題無し ４　ラベル無しモードならどちらでも大差は無い（見た目が違うだけ） 　 現代の日本国内でラベルプログラムしてるのは少数民族である しかし、地球規模で考えるならラベルプログラムが主流である 日本の常識＝世界の非常識ではある なので日本国内でラベルプログラムを教えてくれる人はほとんど居ない （メーカ講習会以外の選択肢はほぼ無い） https://www.mitsubishielectric.co.jp/fa/ssl/wap/eln/index.do# 無料ｅラーニング ただ、ラベルを使わない従来プログラムではライバルは無限に居る 逆に言えばラベルプログラムを使える人は希少価値が出てくる なので、どーせイチから覚えるならラベルプログラムのほうが良かろう 現在はラベル無しが主流ではあるが数年後には逆転する可能性は否定できない 蛇足ながらＧＸ８は１０年前に発売された過去のソフト（初版は２００２年） 但し、現在の日本国内では未だに主流ではある ラダー屋でＧＸ８を使えない人はほぼ居ない
カウントがアップしてしまう件ですが、今ひとつよくわかりません。 こちらで再現できたところでは、Private によるモジュール変数の宣言（４つ）がない場合に問題文中のコードでタイマーがすぐに0:0:-1になってそのあとフラグカウンターが１秒ごとにに１ずつカウントアップしてしまうという現象がありました。 しかし、No.1の補足のコードにPrivateによるモジュール変数の宣言がないのは、質問者様が補足を書かれた際に単に省略されただけなのではないでしょうか。 Privateによる変数宣言がある場合は、No.1の補足のコードではフラグカウンターがタイマー停止後に予想外にカウントアップしてしまう現象は見られませんでした。（質問文中のコードではセルK16のカウントアップをする部分の記述が不適切でカウントアップしてしまうことがありましたが、補足のコードではその点が改善していました） ワークシートのスクロールも問題ありませんでした。 それ以外で期待通りの動作をしなかった点としては、タイマーのカウントダウン中に誤って「指定時刻にマクロを実行する」を実行してしまうと、実行した回数分だけタイマーのカウントダウンが速くなるという現象がありました。何もしなければ通常通りのカウントダウンなのですが、１回の実行で２倍、２回の実行で３倍になってしまうのです。 今のところわかったのはこのくらいです。あまり力になれないようでやや残念です。 なお、検証はWindows XP SP3上のExcel 2003で、下記のコードを標準モジュールにて実行しました。 Private TB As Integer Private MacroStop As Boolean Private ZAN As Integer Private C As Integer Sub タイマー起動() 　　TB = 8 　　ZAN = TB 　　C = 0 　　MacroStop = False 　　Call 指定時刻にマクロを実行する End Sub Sub 指定時刻にマクロを実行する() 　　mywait = 1　　　　　　'１秒 　　指定時刻 = Now + TimeSerial(0, 0, mywait) 　　If ZAN >= 0 Then 　　　　If MacroStop = False Then 　　　　　　Application.OnTime 指定時刻, "指定時刻にマクロを実行する" 　　　　　　Call やりたいこと 　　　　Else 　　　　End If 　　　　MacroStop = False 　　End If 　　If ZAN = 0 Then 　　　　Range("K１６") = Range("K１６") + 1 　　End If End Sub Sub やりたいこと() 　　C = C + 1 　　ZAN = TB - C 　　'・・・・ 　　HH = ZAN \ 3600 　　MM = (ZAN - HH * 3600) \ 60 　　SS = ZAN - HH * 3600 - MM * 60 　　Total = HH & "：" & MM & "：" & SS 　　Range("E8") = TB 　　Range("Ｄ１２") = Total End Sub Sub タイマー停止() 　　MacroStop = True 　　Range("Ｅ８").ClearContents 　　Range("Ｄ１２").ClearContents End Sub
作ろうとしてる実行ファイルは64bit win用ですか？多分使ってるライブラリが32bit win用のやつだから、梨花が怒ってるんだと思います。 OpenCVのlibが浮気してるんじゃないかなぁ。lib自体を再度コンパイルしてみてはどうかなぁ、オープンソースだし。
No2です。 ＞だからこのごろ携帯メールに耽る社員が増えたのですね。 それはわからないです。私の知人間では飲み会のメールなどはプライベートのアドレスである携帯アドレスにしか送らない習慣ですし、電車の中で携帯をいじっている人も多いですから、世間の大勢としてはプライベートなメールは会社の資源は使わずに個人所有の携帯でやり取りしている気がします。 ＞いくら会社のネットワークだからといっても私的アカウントのメールまで読むのは、 ＞心情的には盗聴と同等の行為だと思います。 システム管理者として言いますと、会社の資源を私的利用する方が間違っていると思いますが。（建前論だけなら業務に関係ないデータは社内ネットワークには存在しないはずですので。） 情報漏えいの可能性も考えると内容の確認は業務上必要だと思います。法律的にはどうなるかわからないですが。 ここまでは私の感想ですので、補足でいただいたご質問に回答いたします。 ＞ところで(2)のWEBメールで書き込んだ内容まで管理者は覗き見できるのでしょうか？ これまでにも回答しているように各会社の設備次第です。 セキュリティソフトには２ｃｈのような掲示板への書き込みを監視できるものもあります。ＷＥＢメールも掲示板への投稿もどちらもブラウザ上で入力したデータをインターネットに送るという点で同じ仕組みです。（これを受け取ったサーバ側が掲示板への投稿として処理するか、メールとして処理するかが異なりますが、それは社外での出来事です。） このような監視設備は当然ですがどのような内容を投稿したか（インターネットに送ったか）が記録できないことには意味がありません。それから考えますとWEBメールで書き込んだ内容の監視は可能だと考えます。（私がセキュリティソフトを試用した際にはそこまで動作確認はしませんでしたが）
office2007がアンインストールされているか、 office2003がきちんとインストールされたか、確認してください。 ファイルを右クリック→プログラムから開く→既定のプログラムから開く→参照 で、MicroSoft Officeフォルダを選択して、 ExcelまたはWordを探して選択してみてください。
大変ですね。 >>以前からこの職場では私に対して、「この部署は新人が来るような部署ではない」「SEに向いていない」 たしかに、転職組の経験者ならまだしも、新人がいきなり一人でやるのは無理でしょうね。 また、ＳＥてのは、３～５年ほどＰＧを経験し、そして先輩ＳＥの下で数年くらいＳＥとしての修行を積んで、やっとＳＥらしくなるもんだと思いますから、質問者さんはＳＥどころかＰＧにさえもなれてもないかもしれない段階です。その段階で「ＳＥに向いていない」っていう判断は早すぎでしょうね。 >>分からないことを調べて聞いても「もっと自分で調べて答えを出せ」とかいわれまして、正直ついていけてない状況が続いています。 昔の日本の会社なら、「後輩を育てるのが当たり前」でした。でも、しばらく前に、企業がトータルの人件費を減らそうとして、いいかげんな「成果主義」を導入しました。 これにより、「新人、後輩を手間と時間をかけて育てても、それはきちんと評価されない。」「下手すると、新人が自分のライバルとなり、自分の評価が下がって収入が減る」っていう風潮が広がりました。場合によっては、後輩、同僚を陥れるとか、成果を奪うってことさえありえるようになりました。 この傾向は、非正規労働者（派遣社員）が増えることで、さらに加速されたと思います。他社の人間に教える義務なんてないですからね。教えても、しばらくしたら、その人間が居なくなるのは確実ですからね。 また、開発期間の過剰な短縮要求と、開発人員の削減によって、開発チーム自体に、新人を育てる時間、心の余裕が無くなってきたと思います。 その結果、先輩は教える手間と時間を惜しみ、「自分で調べろ！」と突き放すだけになってしまったのでは？と思えます。 ただし、現実問題として、情報システム系の学部を卒業しているならまだしも、経営工学など、情報系とは無縁の方がＩＴ系の企業で仕事を始めたら、「判らないことだらけ」となるのが普通でしょうし、先輩に質問の嵐となりかねません。まともに教えていたら、先輩は自分の仕事効率が半分以下になるでしょう。 また、「自分で調べる」ということは大切なのですが、ネットで調べてもダメで、専門書を入手しないと判らないこともありますのでね。その書籍が無いと先に進まないってこともあったりします。社内にそういう書籍が無いと、（自腹で？）購入しない限りどうしようもなくなります。 ちなみに、この「後輩を育てない」という風潮は、「自分の経済的メリットが無いから、子供を作らない」「将来、この会社の構成員の能力がどうなろうと、知ったことではない」さらに「将来の日本がどうなろうと知ったことではない」となり、国家として重要な外交や防衛問題を無視する風潮にもつながっていると思っています。 >>このような職場というのは当たり前なのでしょうか？ まあ、派遣の経験からすれば、割とあるかもしれないかも？と感じます。
建築のゼネコン会社を見たことありますけど、ゼネコンはやはり、相応の技術力があったりしますし、教育・研究に投資をしていました（昔のことで、現在はどうか知りませんが）。 なので、その下請けの会社や社員との差はあるし、建築現場はＩＴと違って、目に見えますし、建築計画も細部にいたるまでキッチリと行われるのが普通でしょう。 工事も、鉄筋の溶接など「１箇所について○○円だから全体で○○円」なんて細部まで積算されています。 それに比較すれば、ＩＴの現場は目に見えないし、細部は把握していなかったり・・・ なので、建築のゼネコンは >>ゼネコン親分は、技術者のよさがわからないので人海戦術でなんとか対応 ってことはないと思います。でも、 >>　結局、金を持っている人間に翻弄されるだけの業種のように思えます... まあ、これはどこの業界でも、いえるのではないでしょうか？
ANo.1 です。 ＞Privarte TB1 As Integer ＞Privarte MacroStop As Boolean これがグローバル変数宣言になります。各関数で共用で使用できる宣言です。 初期値は TB1 が 0 、MacroStop が False になります。 共用で使用できるということになりますので、関数 やりたいこと1()、やりたいこと2() マクロ停止1()、マクロ停止2() 、それぞれで管理する変数を宣言して上げて下さい。 Privarte TB1 As Integer 'やりたいこと1() で使用するタイマー Privarte TB2 As Integer 'やりたいこと2() で使用するタイマー Privarte MacroStop1 As Boolean 'タイマー1の制御用変数 Privarte MacroStop2 As Boolean 'タイマー2の制御用変数 それと、必ず、各グローバル変数には初期値を入れてください。 例えば Sub Init() TB1 = 28800 'タイマー１初期値 TB2 = 28800 'タイマー２初期値 '上の２つは直値を入れていますが、テキストボックス/セル等の初期値がある場合は 'そちらを代入する様にして下さい。 MacroStop1 = False 'マクロ停止1()用のフラグ MacroStop2 = False 'マクロ停止2()用のフラグ ZAN1 = 0 'タイマー1 の残り時間 ZAN2 = 0 'タイマー2 の残り時間 C1 = 0 'Variant 型変数の初期値は不明なので、カウントに使うのであれば C2 = 0 '必ず初期値を設定してください。 END Sub という関数を１つ作って、Form が開くイベントで CALL して上げて下さい。 とりあえず、中間報告まで。
＞ちなみに上司の皆様はあまりに忙しいせいか、仕事中に質問すると怒られてしまうので 質問はできません。。 →最初に質問したとき、怒られましたか？？ 　たぶん、それなりに時間を割いて教えてくれたと思います。 　でも、あなたの顔を見て、「こいつ、分かっていないな・・・」と判断されたのでしょう。 　そして２度目の質問内容が、最初に質問したときに教えた内容をまったく理解してないような質問だったのではないでしょうか。 　そうなると、「こいつに教えても時間の無駄だ・・・」となるわけです。 　 　私は、質問するとき一から十まで教えてもらうのではなく、一から三くらいは自分で調べてから質問します。 　そうしないと、相手の言っていることが理解できないし、ただ聞きっぱなしになってしまうからです。 　質問したからには、相手にちゃんと理解しましたと分かるような反応をしてあげないと失礼です。
客先より突風等により飛んで行く事のないように杭を打ち、ワイヤー等で固定しなさい！と指示されました。 > このような支持があった場合　あなたの立場が強い状況でない限り指示に従わないと次から仕事が貰えません。 工事現場では日常茶飯事です。 原発のにのまえにならない様客先の指示に従うべきです。 プレハブ業者がいらないと言っている、ではこの.業界も通用しません。 客先.現場監督の指示が最優先です。 逆に支持する面積が少なく不安定のような気がするのですが？　＞ 不安定ではだめですが強度は平らに置くよりはるかに強いです、両端指示で中心に荷重がかかった場合平らだとすぐ中央部から二つに折れます。 仮設プレハブなのでブロックは複数使うと思います、何トンとある建屋のようですからさらに偏荷重はかかるでしょう。 不安定を心配なら縦長　横長　方向に交互に配置すれば解消されます。
ご回答します。 まず、現在の選択（診断、上司への報告、休職などの一連の流れ）は間違って いないと思います。 いくつかの文章に分けて、端的にご回答していきます。 ＞上司に泣きながら電話で休職の相談をしたときは、「一体何をしてあげればよいのかわかりません ＞よ・・・」と、困った感じでした。確かに、せっかく安定した職場を与えてくださったのに、 ＞数週間で倒れるなんて本当に失礼だと思います。 ここの文章は、いくつか違和感を感じています。 上司の対応として、「困った感じ」を見せるのは、誤りだと思います。 ですので、その流れで「失礼だと感じています」というのも、自分を追い込みすぎです。 精神の病気の場合、自分を追い詰める気持ちになると、なかなか直りません。 あと、数週間で倒れた　ってありますが、仕事のストレスとかが急に増加したのでしょうか？ 一概には言えませんが、精神の病気になるには、少々短期間過ぎる気がします。 業務が変わるもっと前から、知らず知らずのうちにストレスがかかっていたと推測しています。 ＞何もやる気が起きないことなどで、本当に一日中寝てばかりいます。 ＞時々、散らかりすぎていた自分の部屋を憂い、部屋の掃除などもしてみるのですが ＞やはり、心は晴れません。孤独な感じがします。 ＞今日を含め、３日間外に出ていません。 精神の病気の時はこんな感じです。あせってもいいことはありません。 部屋の掃除などは良いことです。 できる事から少しずつ、前向きに考えていく事が必要です。 例えば、いきなり　全世界を驚かせるような壮大な計画を立てても疲れ、破綻するだけです。 部屋の掃除、近所の散歩、自転車でサイクリングなど、簡単なところから社会復帰が必要です。 ＞もしかしたら、私は本当は病気ではなく、甘えているだけではないか、 ＞だから休んでいても何も変わった感じがせず、孤独感が出てくるのではないか・・・ ＞いろいろと自分が休職を選んだことを後悔し始めました。 ここはコメントが難しいです。 まず、単に甘えて、病気を主張するやからも世の中にはいると思います。 しかし、精神の病気は、目に見えず、体温にも現れず、の病気なのです。 気持ちだけがすさんだり、やる気が出なかったりするのです。 私も、うつ病で１４ヶ月の間薬を飲み続けましたが、何時病気になったのか、 何時直ったのか？　症状が本当に消えたか？　など、あいまいで分からなかったです。　 ひとつ、自分の胸に手を当てて、考えてみてください。 仕事がいやで、病気と偽って休職したのですか？ 文面からは、たぶん「NO」だと思います。 文面からは、精神の病気であることが伝わってきています。 ・ここからは病気に対するアドバイスです。 ご質問者様の場合、精神の病気としては、短期間で開放に向かっているようです。 この病気は再発するそうです。 あせらず、のんびり治すことが必要です。 ・復帰後のアドバイスです。 まず、上司の方は、精神の病気に対し、理解が少ないようです。 復帰後、前と同じ業務量ですと、再発の可能性があります。 仕事の選択を慎重にお願いします。 ストレスを少しでも感じたら、休息が必要です。 部下がいるならば、仕事の采配を考え、自分がつらくなる業務は避けるのが良いと 思います。 同じ仕事をするにしても、簡単な仕事から順次重くしていくことが必要だと思います。 又、休息もよくとるようにしましょう。 以上です。よろしくお願いします。
４５歳です。
再度のお礼へのコメントです。 ＞オープン化検討にあし掛け3年になるのですが、イニシャルコストに8千万程かかる見通しで、社長の理解が得られなく、現オフコンの更新時期を迎えてしまったので、しかたなくオフコンを更新するしかない状態です。 　更新時期はベンダーさんの都合ですよね。オープン化と合わせれば更新時期を延ばすことも可能かも知れませんね。 ＞電算室の人間は従来通りの業務を波風立てずに過ごそうと考えているので安堵しているはずです。 　オープン化でも役立つ人は、より良くすることを提案しますね。オープン化を越えて、いっそのことクラウド化すれば、電算室はオフコンとともに不要となりますよ。 ＞私の上司や他の部署の人間は、専門的は論議になると電算室に言い負かされている有様です。 　議論を専門的にして、本題をすり替えているのではありませんか。としたら、エンジニアとして姑息です。共通のものさしで作成した資料を提示して、議論がブレないようにするのがプロです。この様に指摘してわかるものを提供するように要求したら如何でしょうか。 ＞思惑は違えど、社長も電算室もオープン化に高額費用を投資する気が無いのです。 マイグレーションのオープン化でのメリットは、ハード費用の差額だけですからね。 ＞ですがNECがオフコンの製造を5年後に中止すると発表してますので、それまでには道筋をつけなけらばならなく、ビジネスモデルの検討も不可避であると考えております。 　まずは現状の把握が必要です。それがなければ、新しいモデルと比較ができませんからね。ビジネスモデルの作成に現状維持派は無用です。 では、御社のご発展を祈念いたします。
就職、おめでとうございます。 さて、必要なスキルは、物事の本質を捉えることです。 その為には、モデル図が描けると良いでしょう。そして、適切な名称を選択ないし命名できること。 モデル図はトム・デマルコ著「構造化分析とシステム仕様」で提唱しているデーターフロー図が良いと思います。 そのモデル図は、プロセス名やデータ名を記載しますので、名称に関する整理法を学ぶことをおすすめします。 次のサイトにデータ項目名名体系として図示されています。 http://www.kensc.co.jp/k/advantage/solution/dataitem/ これに、異音同義語を無くする工夫として５W2Hを付加すれば、充分に使えます。（下記の補足を参照下さい） とは言え一朝一夕には学べませんが、 世の中は構造的になっていること、 言葉は人それぞれで違うこと を認識することが大切です。 実際にお客様の業務を調査すると同じ名称のもの（異音同義語）が沢山あります。無論、チョットだけ違うものはもっとあります。そして、業務のやり方にいたっては千差万別です。此の様な状況ですから、あなたが入社した会社のビジネスが存在するわけですね。要は、お客様が対象とする業務の現状を明確にすることが第一です。コンサルは口先だけに思われがちですので、見える化が必要です。 因みにITスキルはコンサルに必要ありません。ソリューションでは要求されますが、細かな知識は無用です。大切なことは機能を知ることではなく、入出力が認識できることです。但し、モデル図を描いたり名称を整理するための道具は充分に使いこなせなくてはなりません。もし、就職先で使うソフトを調べて、練習をしておくのが良いでしょう。 そして、実務についてから、自分の考えていることがモデル図で表現できるようになったら、ワインバーグ著「コンサルタントの道具箱」ですね。これも先の著書と併せて、おすすめします。 私はこの２つの本のお陰で、３５～５８歳まで契約社員で働けました。もっとポイントをより絞ると、構造化分析とトレードオフです。（トレードオフは「コンサルタントの道具箱」に載っています。） では、笑顔で朗らかに働きましょう。 補足：データ項目名名体系 　名称を主要語／修飾語／分類語の語に分解します。分解した語に5W2Hの属性を付加します。次に分解した語別属性別に語を昇順に並べて、異音同義語を見つけます。異音同義語があったら、どちらかに統一するか、新たに標準とする語を設定します。異音同義語でなくとも不適切な表現の語は標準とする語に変えます。この作業を一通り終えたら、名称を標準とした語で置換えます。この結果、標準とした語が不適切な場合は調整をします。 　因みに属性として付加するのは、異音同義語を見つけやすくするためです。必ずしも5W2Hで無くともよいですが、時／所／人／物／方／由／量（／価）の切り口がわかりやすいと思います。
フリーランスのシステムエンジニアーです。 こんばんは。 > ○技術的なことが分からない。要望を出して「技術的に難しい」「その開発期間では難しい」とか言われたとき、それ以上突っ込んで交渉するのが困難ではないか。 納得できる理由を求めてください。 技術的なことがわからなくても、たとえ話であったりとか、パソコンが世の中に浸透している昨今で、ホームコンピューティング（自宅でLANにつなぐとか、年賀状を作るとかいったたぐいの話）やホームページからのネットショッピングなどの知識でわかるように説明してくれます。もし、相手からの返答が「どうしても」とか「こういうもんです」という返答であるならば、交渉以前に、議論が成立していない。 あるべき論で恐縮ですが、システムは顧客とベンダーが一体となって作るものだと思いますよ。 > ○価格が、どの程度なら適正なのか、どの程度なら安いのかなど、基準が分からない。 コンペできないのであれば、これまでのシステムの金額との比較が有効ではないですか？これを作るのにこれだけだったのに、今回はこんなにかかるの？といった聞き方で。システム、ないしはソフトウェアーの見積もりには根拠があります。それをちゃんと説明してもらいましょう。 あと、いわゆる、原価管理を勉強なさってみてください。 > など、立場の弱い面が多い気がします。ひいてはそれは、SEの言い分ばかり飲まされることにもつながるのではないかと思うのですが、SEにただ従順になってばかりでなく渡り合って行くコツなど、何かないでしょうか？ お金を出すほうが立場は強いですよ。^_^; 顧客が納得しないなら、その見積もりは了承してもらえないということですから。 意固地になってはいけないですが、納得できる理由を説明してもらうこと。 ただし、他の方もおっしゃっているように、無理な値下げや、無理な工期は、空中分解したり、だれか、うつ病になったりして、品質の低下、ひいては、会社の不利益にもつながります。ここらへんのトレードオフを考えて、システムエンジニアーとの普通の議論をしてみてください。 がんばってください。 　 　
ＳＥというのはその意味するところの範囲が広すぎて一般的には理解されていません。業務設計をするのはＳＥなのか、要件定義からなのか、あるいは開発に入ってからか？ 通常業務設計をするのはビジネス側の人間。でもその人間でもある程度システムに詳しくないとできません。これはコンサルの仕事になります。 要件定義の基本はヒアリング、つまり業務に係る人から話を聞いてシステムに仕上げる仕事。通常の日本のＳＥはここからですね。ただここも業務側に人間がする事もあります。 つまりここからやる場合でも業務に精通している必要があるわけでそれは業種によってさまざまです。 上流になればなるほどシステムから離れていくというのは今までの手法。でも最近はクラウドの登場で、どこまでを社内で処理し、どこからを外で処理させるかなど、システムを業務に取り込むことが勝つ為の条件になっています。 業務を知るには直接その業界の知識を身に着けるしかありません。それは金融であったり製造業であったりその道のトレンドを把握します。 つまりこれが出来る人はコンサルとして独立出来るわけでコンサル系の勉強の仕方をするしかありません。 でも日本ではこの分野は非常に遅れてます。こういうのが得意なのは欧米です。つまり訴訟が多い国ではプロセスの作成が第一だから。 一番いい例がＳＡＰの導入コンサル。導入コンサルだけで食って行けるのです。システムは一から作らない。既に確実に動くものを間違いなく導入し余計な感情を入れない。 試しにＳＡＰの導入コンサルのやり方を勉強してみたらどうでしょう。 http://www.sap.com/japan/index.epx
>>私が聞きたいのはそこです。つまり、エンジニアとして独立するためにはどのような企業からキャリアをスタートさせればよいのかということです。 「人生は博打だよ」って言葉があるように、大手SIerを選んでも、小規模なソフトウエア会社やSIerを選んでも、その選択によってプラスになる未来予想もできるし、マイナスになる未来予想もできます。同じ選択でも、どこの企業を選ぶか、上司がどんな人になるか、そのときの経済状況、自分に割り当てられたプロジェクトなど、多変量なパラメータによって結果は変化すると思います。まあ、伴侶を選ぶときと同じですよね。 ただ、No.5さんが書かれているように、ある程度の体力がある組織でないと、スキルを磨く機会が無い、例えば企業内研修が無いとか、社外への研修、セミナーへの参加機会が無いので、そういう企業は避けられたほうがいいと思います。 弱小の派遣企業で働いていると、派遣先の職場の正社員の方が「来週、ＭＳのサーバ研修があるんだ」「オラクルのバックアップのセミナーに行ってくるよ！」なんて話を目にしたので、さびしく思うことが多かったです。 ちなみに、上場の大手某社で上流の設計を長年担当している方に対して、「え！実装上のそんな基礎的なことも知らないで、このシステムの基本設計、概要設計をしていたのですか！！それでこのシステム全体が酷い状況になっているんですね」って思ったこともありました。上流ばかりやっていると、ＰＧのことは判らなくなる方もいるみたいです。まあＰＧのことを判ろうとすると時間がかかって大変だから、上流の作業をやる時間が無くなるのかな？なんて思いましたけどね。（たぶん、その某社・全社システムは、しばらくしたらチャラにしてゼロからやり直しになるハズ） それから、企業によっては「スキルアップ？必要な専門書は自腹で買ってくれ。資格取得？なにも補助するものは無い。取得しても給料アップなんて無いよ！」ってこともあります。（あ、自分のいた会社のことか） いずれにしても、ご自身で、自分の理想的な人生ストーリを構想して、それに最適なキャリアのスタートをさせればいいのではないでしょうか？
今購入だとバージョンが違うので、そのほうが使いにくさを感じると思います。 MacでCS2～6まで、winでCS2と3入れてますが、同じバージョン同士ならそれほどは使いにくさは感じません。が、Mac版でもバージョン変わると戸惑うことが多いです。 また、MacはOSもだいぶ変わってるので、操作に慣れるまで全体的に戸惑うと思います。 タイガーからマウンテンライオンになったら、ええ？と思うことがたくさん…。winももちろんOS変わってますので、進化についていくしかないでしょうけど。
> SQLConnect”でエラーとなる。 これはソースとＯＤＢＣ設定内容を提示して、解決を図る方が良い思います。 質問文中の登場するキーワード「C odbc oracle サンプル　ソース」で検索すれば、いくつもヒットするように思います。
こんにちは。 当方、フリーランスのシステムエンジニアーです。 私はプログラムもやるひとです。 うーん。不安な現状、お察しします。。。 ここはシステムエンジニアリングカテゴリなので、IT業界の側面からの回答をすると、 > ・必要な作業と必要でない作業を切り分けられていない。（そのため作業が増える） > ・上流工程のミスを追求できず、テストなど後のフェーズでグダグダになっている（それが原因でデ　スマーチが起こったこともある） > ・時期にもよるが、繁忙期はデスマーチが起こる。しかし、その割には委員会活動などについては「適当でいいよ、何か作って適当にしとけばいいよ」という姿勢。 これらは業界では特別なことではありません。いろんな理由があるとは思いますが、一番の理由は、社会情勢的に企業のIT予算が減ってきたことと、ソフトウェアの生産性は上がってきていると言われていることから、短納期・低予算のプロジェクトが求められるようになってきているからです。そのため、上流工程に時間をかけられないことが多かったり、十分なレビューが行えなかったりして、下流工程にしわ寄せがくることはよくあります。 そういった現場であったとき、メンバーがガンガン自己主張するのは、当然のことであって、そこでは、普通の仕事のやり方ということでしょう。であるならば、これは受け入れるしかない。 では、受け入れざるを得ないのであれば、なぜ自分を偽っていると思うのか、というところに論点を切り替えると、 ・自分の性格を決めてしまっている ・自分の本当の性格を会社のみんなにわかってもらえていない というところかと思うんですが、前者についてはおいといて、その、職場での心休まる場所というのがないからですかね。少なくとも数人は話が聞いてもらえそうな人はいないでしょうか。そういった人にお話を聞いてもらったらどうでしょうかね。前者にも関連しますが「自分を偽る」という表現から、自分が間違っていると思うことは頑として受け入れず、意地になって、自分をさらけ出さない、というところがあるように見受けます。自分の話を聞いてもらう、相手の話を理解する、どちらからでもいいので、変化を受け入れられるようにくふうしてみて、自分は変わっていっていると思うようにしていくと「偽る」という表現ではなくなるような気がします。 たとえば、一日の終わりに風呂にでも浸かりながら、なぜ、もの静かな私が今日もあんなふうにエキサイトしてしまったのだろうと客観的に考えてみて、仕事だからという割り切り以外に、こういうことが我慢できなかったから、真面目な私にはこういうところが納得できなかったからといった具合に、自分なりに整理するようにするとよいんじゃないでしょうかね。(僕はビールのみながらいつもやる。) あと、若干きびしい言い方になりますが、 > ・責任転嫁が甚だしい。（上流工程が適当な状態、調査段階の状態で、別の人に説明もなしに引き継ぐ）まさに今私がやっている作業がこれです。教育担当に教えてもらわないと、全くわかりません。 これもふつうです。全くわかりません、とありますが、ちゃんとわかるように努力をしているのかなあ。 わかりません、できません、というのは簡単。自分のスコープ（作業範囲）を主張するのは、ひとつの方法。しかし、どんなに困難なことであっても、限られたリソース（時間や資源）のなかで、どうすれば、最大限の成果が出せるのかを考えるのが、システムエンジニアーの仕事。プログラムはわからないけれど、と自己限定していますが、ソリューションないしソフトウェアーができるまでの適切な知識がないままで、自分を守るための、自己主張になっていませんか。適切な知識があれば、会話の内容も変わってくるだろうし、振る舞い方も変わってくるでしょう。デスマーチが起きる要因を、事前に摘み取ることもできるかもしれない。筋違いでなければ、秋の情報処理試験はまだ出願できるので、ぜひ取得を目指してください。（もう持っているかな?） いずれにしても、会社と家での二面性は別に結構だけれども、ぼろが出るくらいはべつによいんじゃないですかね。僕も入社当時こそ、よそ行きモードだったけど、いまはぼろが出るどころかボロボロですよ(笑)。弱い自分を見せてこそ分かり合えることもあるんじゃないですか。 　 　 　
>X0をX000にしたいのですが 意味不明？ Ｘ０、Ｘ０００、どっちでも同じなのだが？ ただ単に操作方法が分からないなら http://www.mitsubishielectric.co.jp/fa/products/cnt/plc/index.html マニュアルをダウンロードして全ページ暗誦出来るようになるまで読み返しなさい GX Developer Version 8 オペレーティングマニュアル（スタートアップ編）SH-080355 (2.59MB) GX Developer Version 8 オペレーティングマニュアル　SH-080356 (17.2MB) ＦＡトップ 学ぶ・知る FA eラーニング https://www.mitsubishielectric.co.jp/fa/ssl/wap/eln/index.do# はじめてのシーケンサ
著作権的に問題ありそうな気がするのですが、キャッシュファイルを拾ってみては？
サーバーではないPCに置いて共有化しては如何でしょうか。 但し、根本的なことですが複数ユーザでの利用は、排他やレスポンスが問題になリますね。 マイクロソフトのサイトではないですが、参考までに http://ja.wikipedia.org/wiki/Microsoft_Access
今はなかなか就職が決まりにくい時代だと思います。 なので、１つでも多くの会社を受けてみることをお勧めします。 短期間で辞めてしまったことは、少なからず影響はあるでしょう。 退職理由を聞かれた際、なるべく愚痴にならないように、 客観的に判断してやむを得ない事情だな、と思ってもらえるように 言葉を選んで伝えることが必要になるかと思います。 例えば、 ・9月いっぱいまでは正社員の求人に申込み続ける ・50社落ちたら次の策を考える などあらかじめ自分で目標を立てておいて、 それまでは、正社員としての就職活動に 全力を注いでみてはいかがでしょうか。 数社で同じような落ち方をしたからと言って、 他の会社も同じような判断を下すとは限りませんし、 もしかしたら伝え方一つで面接官の受ける印象は変わるかもしれません。 キャリアの強みを持っていらっしゃるということなので、 それぞれの面接での反省点を整理し、対策を立て、 別の会社の面接を受けるということを繰り返して行けば、内定は出ると思いますよ。 頑張ってみて下さい！
>>保守契約の内容で、脆弱性への対応策について定期的に取り組むという作業を明文化する場合、どのような条文を追加すればよいのでしょうか？ご教授いただければと思います。 脆弱性評価に対する報告書及び対策実施案の提出義務、対策実施義務 （提出・実施サイクルは協議が必要） ※他の回答者の方々がおっしゃる通り、機能追加のみと脆弱性対策を明確に分けて判断する必要があると思います。 極端な話、契約内容にどんな無理があったとしても締結した以上はお互いに順守しなければならないので、どんな内容でも構わないと思います。 某大手メーカーは社内においても評価チームがおり、適用すべきかどうかの判断をして、社内の機器すべてに対策を求めていました^^; 対策されていない機器については所属長経由で順守するよう指導が通達されます。 一担当者レベルでなく会社としてのポリシーの問題としてベンダーと協議すべき内容だと思います。 会社のポリシーがあいまいだと説得力が欠けてくると思います。
送る人のミスです。 ショートカットは画像ではありません。 画像を送ってもらえば開けますよ。
>なので、プログラムのソース、というものになりますね。 だったらすべて保管でしょう。 >ソフトを使って世代管理をする場合において、 これってバージョン管理システムを利用するって事だよね? (CVS,Subversion,Gitなど) だったら更新履歴と共にすべて保管しておく。削除なんてしては駄目。
>>彼が転職して数ヶ月で、また、プロジェクトの最中 転職して数ヶ月であれば、新しい職場にやっと慣れたか、慣れないか？っていう段階だと思います。 なので、現時点で結婚について考えられないってのはわかりますけど、プロジェクト完了まで、結婚話ができないってことはないでしょうね。 まして、残業・休日出勤が無いなら、あと数ヶ月待てば、十分に結婚について話すことは可能だと思います。 なので、 >>仕事のことを理由に、結婚を保留にされているのでは、 ということは十分にありうると思います。
ソケットは、"ブロッキング モード" と "非ブロッキング モード" があったと思います。 現在、非ブロッキング モードになっていないのではないでしょうか？ それから、詳しく覚えてはいませんが、Windowsのソケット関数の仕様は、Unixx等のソケット関数と違っていたと思います。 「ソケットの一般的な仕様はこうである。そしてスレッドの仕様はこうである。だから、動作するはずである。」 と思ってプログラムを作ると、Windowsの場合、まともに動作しない可能性があります。 なので、私は、Unix上では、ソケットのプログラムをマルチスレッドで作成しても、相手となるプログラムがWindows上で作成する場合、マルチスレッドでは、作りませんでした。 まあ、マルチスレッドにすれば、プログラムが簡単になる面はありますが、動作しなかった場合の原因究明とうまく修正する自信が無かっただけなんですが・・・。
シート1のA1セルから下方にデータが入力されているとしたらシート2のA1セルには次の式を入力しH1セルまでドラッグコピーしたのちに下方にもドラッグコピーします。 =IF(INDEX(Sheet1!$A:$A,INT((ROW(A1)-1)/50)*200+ROW(A1)*4-3+COLUMN(A1)-IF(COLUMN(A1)<=4,1,5)+INT((COLUMN(A1)-1)/4)*200)=0,"",INDEX(Sheet1!$A:$A,INT((ROW(A1)-1)/50)*200+ROW(A1)*4-3+COLUMN(A1)-IF(COLUMN(A1)<=4,1,5)+INT((COLUMN(A1)-1)/4)*200))
中部電力は電力の事実上独占企業ですので、潰れるようなことはないです。 中部電力へ直接入る場合は、たいてい管理する側につくのが多いです。 おそらく原子力関係の職に配属される確率は低いですが、中部電力系工事会社になると、工事時あちこち工事しに行く中で原発へ行く可能性はあります。
ウチの会社には専門卒で入社してきて、組み込みソフトの開発を担当している者が多数居ますよ。
>>なにか、よい学習方法はありますでしょうか。 実際に本とかネットのサンプルを見ながら、手を使って打ち込んでみる、ちょっと一部を変えてみるとか、手を動かして実習しながら学習すればいいと思います。 もちろん、学習時間はかかると思いますけど、人間の脳の処理能力を考えると、マンガや小説を読むようなスピードで一気に習得することはできないと思います。 テニスで、スピンサーブをある程度マスターするのに、毎日練習して、数ヶ月かかるってことあります。鉄棒の逆上がりができるようになるにも時間がかかったりします。（ずーとできない方もいたり・・・） まあ、地道に１つずつ時間かけてマスタしていくしかないと思います。
30代、会社経営している者です。 色んなノウハウ本がありますが実は、就職の際、会社が必要な情報は2つだけです。 ■「今まで何をしてきたか」、（中途の場合は「現在、何が出来るか」） ■「これから何をしたいか」 この２つの情報が知りたいばかりに、あれやこれやと複雑な試験にしたり、色んな質問をします。 大企業はこれにプラス基礎学力を求めるだけです。 最も大事なのは、みんなの真似ではなく、「あなたの受ける会社に絞って」対策することです。 間違っても同じ履歴書をリクナビで一括で送信などしないでください。 先輩が居るなら内部の情報を徹底的に集めてください。 居ないなら、ツイッターやフェイスブックをやっている社員を見つけだしたら、求める人材の情報が発掘できるかもしれません。 浅い対策なんか要りません。受ける会社のことを調べ尽くしてください。 もっとシンプルに集中して考えると企業が求める人材が見えてきます。 ＴＯＥＩＣの点数を上げたりＳＰＩの勉強はその後です。 もしかしたら必要ないかもしれませんよ。
こんにちは。 お仕事が、身体を使う仕事から、動きの少ない事務職に変わったということですか？ 人には、動きが伴う業務に適性があったり、動かずに思考する仕事に適性があったり、まちまちなタイプがあるようです。 どの仕事も頭を使うのですが、身体を動かしていた時の方が楽だったなら、運動不足を解消されたら今の辛さが改善されると思います。 回答されている元SEさんのように、運動されると結構熟睡できたりします。 私はもともとコンサル営業をしていて、今は事務職です。 転職してしばらくは身体の楽さに喜んでいたのですが、身体の訛りに疲れを感じるようになり、ジムに通い出しました。今は快調ですよ。 目の酷使は、目の運動を適度にしたり遠くに目をやったりしてリラックスを。 あとはサプリや、眠る前なホットアイマスも効きますよ。 身体に気をつけて頑張ってくださいね。
随分、漠としたご質問ですね。 手元に環境が無いけど、思い出したいと言う事でしょうか？ 思いつくままに挙げていきます。 MS Accessクラスの小～中規模の物と言う事なら ・SQLite ・InterBase ・Firebird ・Sybase SQL Anywhere 一応、中～大規模も。 ・Oracle ・IBM DB2 ・Sybase Adaptive Server ・Microsoft SQL Server ・PostgreSQL ・MySQL もっとAccessのような感じのルック＆フィールと規模感だとしたら、OpenOfficeのデータベース(Base)とか。 （中身は標準では、HSQLDBです） 他にも、沢山あると思いますが、とりあえずこの辺で。
制御ソフトウェアを担当する開発職という場合、ＳＥというよりも、ややＰＧ寄りの仕事を担当するイメージになると思います。 そして、ハードウエアの回路図や現物パーツに詳しいとか、場合によっては半田ごてとかアナライザーなども使うかもしれません。 バグが発生した場合、原因がソフトウエアかハードウエアか？という切り分けから入ることもあると思えます。 もちろん文系の方でも、入社してから勉強するってことも可能でしょうけど、小学生のころから半田ゴテを使い、プログラム作っていたというような理系の方と競争するのは厳しい面がある気がします。 つまり、必要な知識が、ＩＴ関連だけではなく、電子、電気回路など、さらに違う分野の知識・経験が要求されるってことだと思います。
　#1です。 　わからなかった＊＊法を、インターネットで少しだけ調べてみました。分子限定法は「分枝」限定法の事ですよね？。それに、 ＞プリム、KT法、クラスカル法、BM法 の4つの情報を足すと、全部最適化問題になります。そうなると、#2さんの仰る事にも一理あります。前回言った、 　　カテゴリ→　[技術者向]コンピューター　→　プログラミング　→　該当する言語（なければその他） に同じ質問を投げれば、案外あっさり回答が付くかもしれません。使用する言語のカテを選ぶのが一番便利かも知れませんが、それでは回答者が限られる恐れもあります。 　全部最適化アルゴリズムの話となると、確かにコンピューターのアルゴリズムの書籍が適当でしょうが、やはり一般書籍ではないので、けっこう探す必要はあると思います。指導教官か先輩に聞くのが、適当な気がします（餅は餅屋にです）。 　気になったのは、アルゴリズムの書籍は確かに（実用的に）プログラムの書き方は教えてくれるのですが、数学的証明の詳しさという点では、個人的にいつも不足を感じていました。そこが気になるなら、少なくとも、 　　動的計画法　→　古典的な最適化問題なので、数学カテで大丈夫。 　　プリム，クラスカル法　→　グラフ理論の話なので、数学カテで大丈夫。 と思います。KT法については、調べてもどうすれば良いかわかりませんでした。分枝限定法とBM法は恐らく、コンピューターのアルゴリズムの本でOKです。 　ダイクストラ法については、自分でプログラムを書いた事があります。その経験で言うと、やはり土木分野の参考書が最もわかりやすかったのですが、残念ながらそのコピーを散逸させ、現在具体的な書籍名をあげられません。もちろんこれも本当は、数学カテで聞ける話です。 　なので我田引水になるのですが、 　　http://www.junko-k.com/collo/collo263.htm をあげておきます。
もう定年退職した元ＳＥです。 ■技術面での苦労について 　システム開発のプロジェクトで新技術や新開発技法を導入すると苦労します。 　文系でもなれるＳＥとは、最初はプログラマだからできるのであって、システム構築に使うハードウェアやソフトウェアの技術的な知識を修得していかないと、一人前のＳＥになれません。 ■納期のプレッシャーについて 　最初の見積もりが甘くて、開発規模が膨らみ、納期、コスト、品質が守れないというプロジェクトは確かに多いです。 　大変なのはお客様、プロジェクトマネジャ、プロジェクトリーダーで、ストレスは半端ではないです。 　それに比べれば、ヒラのＳＥやプログラマは深夜残業、徹夜、休日出勤と長時間労働になりがちですけど、血を吐くほどのストレスはないですから慣れますよ。 ■人間関係のストレスについて 　他社リプレースのお客様のシステム開発は、信頼関係を築くまでが大変ですね。 　同じ業界でも会社ごとに微妙にカルチャー（企業文化）が違うので、それを敏感にキャッチしないと、お客様がＳＥとして認めてくれません。 　システムは本番稼働すると修正変更しながらも１０年くらいは動いていることが多いいですから、システム開発のときにお客様と信頼関係を作っておくと、本番稼働後もメンテナンス関係の仕事がきたりして、飯のタネになります。
>はは～～～これはガス漏れだと判断しました。 レシーバータンクかレシーバーパイプ付近にある確認用ののぞき窓からガスの状態を確認したのでしょうか？ ガスが動いている状態がほんの少ししか確認できない。（泡というよりも偶に液体の流れが見える程度） ガスが動いている状態は、はっきりと確認できるが、やたらと気泡が多くてグツグツと煮立ったみたいに見える。 上記の場合はガスが不足しています。 一見、何も流れていないように見えるが、ずっーと見ていると時々小さな気泡が通過する時がある。 上記の場合はガスは不足していません。 エアコンの修理代金は、故障している場所（部品）によって大きく変わります。 経年変化によってガスが少しずつ抜けていて、ガスを補充すればよいだけの場合は、ディーラーなら1万円前後で一般的な大手の修理工場なら8千円前後だと思います。（ガスを何本補充するかによっても変わりますが） ガス漏れ検査をする必要があればプラス５～６千円くらい掛かります。 実際にガスが漏れていて部品を交換する必要が有る場合は、交換する部品によって値段が変わります。 パイプ類が駄目なら数千円と工賃、タンクが駄目なら１．５万円くらいかな？（部品を交換するとガス重点費用も同時に掛かります） コンプレッサーやエパポレーターが故障している場合は工賃を入れると、それぞれが５～６万円くらい掛かるかもしれません。 エアコンが完全にオシャカになっていた場合は１６～２０万円くらい掛かると思います。 ガスの充填のみとか、一般的な程度の軽い故障なら８千円くらい～３万円くらいで修理できると思います。 どの道、エアコンの修理は自分では出来ないので、夏本番になる前に早めに修理工場に行って診てもらうしかないと思います。 質問のカテゴリーが違っていると怒られちゃうので、次回からは注意して下さい。
当方は残念ながら入力のCOMは+電位でしか使ったことがありませんが・・・。 COMがGNDということならば・・・ 1.PNP出力の電空レギュレータを使う 　直接接続できるのでパーツは少なく済みます。 2.フォトカプラなどで中継する 　ご想像の通り、何らかの機器を介して信号変換を行う。 　この場合、電空レギュレータの出力端子に留意してください。 　問題なければリレーでもOKです（盤内ならば選択の余地はありませんが） 個人的な趣味かもしれませんが 電空レギュレータからの信号を取り込むにとどめ、 電球の点灯制御はシーケンサ自身が行った方がすっきりすると思います。 あくまで制御の中心はシーケンサなので。 是非最適な解をみつけてくださいね。
当然、WIN7用の最新ドライバを入手して、インストール していますよね。 あとは、ワードやエクセルから取り込むとできなくても、 スキャナソフト、この場合は付属でついている ScanGear Tool を起動し、保存先を設定してから、 こちらからスキャンすると取り込めるのではないでしょうか。 デスクトップに、ショートカットアイコンを作っておくと 便利です。 その代わり、保存先からエクセルなどに取り込みや コピーなどする必要があり、一手間増えて面倒ですが。 こちらの方法は、やってみましたか？ 最終手段、新しくWIN7用の最新のスキャナを購入した方が 早いですよ。スキャナは安価です。
マイナスドライバーをサンダーで削って自作するのが早いかと。
浮動小数点演算は、実数の演算の近似です。浮動小数点そのものが実数の近似で、加減乗除を1回行うごとに丸め誤差が入ります。 （今はあまり使われませんが）固定小数は、整数の適当な位置に小数点を入れて位取りする数値です。素直な表現方法ですが、大きい数や小さい数ほど桁がたくさん必要になってしまい、しかも0の桁が多くなるので効率が悪いです。 これに対して浮動小数は、M進法L桁の固定小数に、Mのn乗をかけて表す数値です。つまり10進数で6桁だと、#2さんのように「a.bbbbb x 10^n」になります。数の表現には便利ですが前述のような誤差があり、有効桁数の範囲内で本来表すべき実数と一致します。
自然流下のようなのでマニングの平均流速公式で解くとすると、抵抗(粗度係数)を無視することはできません。 V=1/n*R^(2/3)*I^(1/2) Q=A*V V 流速(m/sec) n 粗度係数 R 径深(m) R=A/P A 断面積 P 潤辺 I 勾配 ホースの粗度係数を0.01とすると V=1/0.01*(0.075/4)^(2/3)*(72/600)^(1/2) = 2.445m/sec Q=1/4*π*0.075^2*2.445 = 0.0108m3/sec つまり10.8リットル/秒 よって10.8*60=648リットル/分ということです。
http://www.fujisawa-office.com/kisoku4.html ご参考に。 ご自身でできますよ。
